name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  size-report:
    name: Component Size Report (PR Comment)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: cd frontend && npm ci
      
      - name: Generate Size Report
        id: size-report
        run: |
          cd frontend
          echo "### ðŸ“Š Component Size Report" > report.md
          echo "" >> report.md
          echo "\`\`\`" >> report.md
          npm run check:sizes:report >> report.md 2>&1 || true
          echo "\`\`\`" >> report.md
          echo "" >> report.md
          echo "**Note:** Files over 500 lines may benefit from refactoring." >> report.md
          cat report.md
        continue-on-error: true
      
      - name: Comment on PR (if enabled)
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('frontend/report.md', 'utf8');
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Component Size Report')
            );
            
            const commentBody = report;
            
            // Update or create comment
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
        continue-on-error: true

  boundary-check:
    name: Import Boundaries
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: cd frontend && npm ci
      
      - name: Check import boundaries
        run: cd frontend && npm run lint:boundaries

