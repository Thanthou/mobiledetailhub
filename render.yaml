services:
  - name: thatsmartsite
    type: web
    runtime: node
    plan: starter
    region: oregon
    repo: https://github.com/Thanthou/thatsmartsite
    branch: main
    rootDir: .
    autoDeployTrigger: commit

    buildCommand: |
      echo "==> Installing backend dependencies..."
      cd backend
      npm install --omit=dev
      echo "==> Installing critical runtime dependencies..."
      npm install bcryptjs express pg cors dotenv jsonwebtoken

      echo "==> Installing frontend dependencies..."
      cd ../frontend
      npm install --include=dev
      echo "==> Building frontend with dual entry points..."
      npm run build
      echo "==> Copying frontend builds to backend public directory..."
      mkdir -p ../backend/public/admin
      mkdir -p ../backend/public/tenant
      cp -r dist/admin/* ../backend/public/admin/
      cp -r dist/tenant/* ../backend/public/tenant/
      echo "==> Copying shared assets..."
      cp -r dist/assets ../backend/public/
      echo "==> Final verification..."
      ls -la ../backend/public/admin/ || echo "ERROR: Admin build not copied!"
      ls -la ../backend/public/tenant/ || echo "ERROR: Tenant build not copied!"
      ls -la ../backend/public/assets/ || echo "ERROR: Assets not copied!"

    startCommand: |
      cd backend
      echo "==> Waiting for database to become ready..."
      for i in {1..10}; do
        node -e "const { Client } = require('pg'); const c = new Client({ connectionString: process.env.DATABASE_URL }); c.connect().then(()=>{console.log('âœ… DB ready'); process.exit(0)}).catch(()=>{console.log('DB not ready, retry...'); process.exit(1)});" && break || sleep 5
      done
      echo "==> Running migrations at startup..."
      npm run migrate
      echo "==> Creating production admin user..."
      node create-production-admin.js
      echo "==> Starting app..."
      npm start

    healthCheckPath: /api/health

    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromDatabase:
          name: thatsmartsite-db
          property: connectionString
      - key: JWT_SECRET
        sync: false
      - key: JWT_REFRESH_SECRET
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_PUBLISHABLE_KEY
        sync: false
      - key: SENDGRID_API_KEY
        sync: false
      - key: GOOGLE_PAGESPEED_API_KEY
        sync: false
      - key: ADMIN_EMAILS
        value: admin@thatsmartsite.com
      - key: ADMIN_EMAIL
        value: admin@thatsmartsite.com
      - key: ADMIN_PASSWORD
        value: ThatsSmartSite2024!SecureAdmin
      - key: ADMIN_NAME
        value: Brandan Coleman
      - key: ALLOWED_ORIGINS
        value: https://thatsmartsite.com,https://www.thatsmartsite.com

databases:
  - name: thatsmartsite-db
    plan: basic-256mb
    region: oregon
    ipAllowList: []  # internal access only
