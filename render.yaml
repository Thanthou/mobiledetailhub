# Render.com Monolithic Full-Stack Service
# This serves both frontend and backend from one service

type: web
name: thatsmartsite
env: node
plan: starter
buildCommand: |
  # Clean install backend dependencies (stay in backend context)
  cd backend
  rm -rf node_modules package-lock.json
  npm cache clean --force
  npm install --omit=dev
  # Verify critical dependencies are installed
  echo "Checking critical dependencies:"
  ls -la node_modules/bcryptjs/ || echo "bcryptjs missing!"
  ls -la node_modules/express/lib/router/ || echo "Express router missing!"
  # Run migrations
  npm run migrate
  # Install frontend dependencies and build (separate context)
  cd ../frontend
  rm -rf node_modules package-lock.json
  npm cache clean --force
  npm install --include=dev
  npm run build
  # Copy frontend build to backend public directory
  mkdir -p ../backend/public
  cp -r dist/* ../backend/public/
  # Final verification
  echo "Backend public contents:"
  ls -la ../backend/public/
  echo "Backend dependencies verification:"
  ls -la ../backend/node_modules/bcryptjs/ || echo "bcryptjs missing in final check!"
  ls -la ../backend/node_modules/express/lib/router/ || echo "Express router missing in final check!"
startCommand: |
  cd backend
  echo "Verifying Express installation before start:"
  ls -la node_modules/express/lib/router/ || echo "ERROR: Express router missing!"
  node -e "console.log('Testing Express import...'); import('express').then(e => console.log('Express version:', e.default.version)).catch(err => console.error('Express import failed:', err))"
  npm start
envVars:
  - key: NODE_ENV
    value: production
  - key: PORT
    value: 10000
  - key: DATABASE_URL
    fromDatabase:
      name: thatsmartsite-db
      property: connectionString
  - key: JWT_SECRET
    generateValue: true
  - key: JWT_REFRESH_SECRET
    generateValue: true
  - key: ADMIN_EMAILS
    value: admin@thatsmartsite.com
  - key: ALLOWED_ORIGINS
    value: https://thatsmartsite.com,https://www.thatsmartsite.com
healthCheckPath: /api/health
autoDeploy: true
