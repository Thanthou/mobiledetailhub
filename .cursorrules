# Cursor Rules for Mobile Detail Hub Project

## Environment Context
- OS: Windows 10/11 (PowerShell environment)
- Package manager: npm
- Database: PostgreSQL with pgAdmin
- Use node scripts for database operations, not psql CLI
- Shell: PowerShell (C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe)
- **ENVIRONMENT FILES**: .env files exist and are properly configured but are hidden by .gitignore - DO NOT suggest creating them or act like they don't exist

## Code Style & Preferences
- Keep responses concise and to the point
- Respect existing codebase modularity
- Use ✅ for success, ❌ for errors in console output
- Maintain separate login logic folder structure
- Centralize social media links and phone numbers in config
- Phone numbers: Pull from config.js, not hard-coded
- Location input: Use modal/center approach across header, contact, and footer

## Terminal Commands
- Use PowerShell syntax (; not &&)
- Don't auto-run commands - user prefers to run them
- Append | cat to pager commands (git, less, head, tail, more)
- Prefer node scripts over direct database CLI
- **NEVER use curl** - user cannot use curl for HTTP requests, suggest alternatives like HTTPie or Postman
- **Database Script Execution**: Always run database scripts from the backend directory where dependencies are available
- **Shell Navigation**: Use proper PowerShell commands and ensure correct working directory before running scripts

## Project Structure
- Backend: Node.js + Express + PostgreSQL
- Frontend: React + TypeScript + Vite + Tailwind
- Scripts: backend/scripts/ for database operations
- Keep documentation in .md files
- Backend: `backend/` directory
- Frontend: `frontend/` directory
- Documentation: Various `.md` files documenting fixes and improvements

## Recent Improvements Made
- ✅ **TypeScript strict mode**: Enhanced with additional strict checks
- ✅ **Database retry logic**: Simplified using established retry library
- ✅ **Environment validation**: Already properly implemented
- ✅ **Logging system**: Upgraded to Winston for production logging

## Common Commands
```powershell
# Install dependencies
npm install

# Run backend
cd backend; npm start

# Run database scripts
cd backend; node scripts/script-name.js

# Frontend development
cd frontend; npm run dev
```

## AI Assistant Behavior
- Check this file for full context before making recommendations
- Provide concise code solutions
- Respect user's preference for concise explanations
- Maintain backward compatibility when possible
- Use established libraries over custom implementations
- Always respect the user's preference for concise responses

## System Context & Database Understanding
- **AUTOMATIC CONTEXT**: Read `cursor-context.json` at the start of every new conversation to understand current system state
- This JSON file provides: system info, service status, database schema, tables, foreign keys, row counts, project structure, and environment status
- The file is generated by running `node scripts/cursor-context.js` from the scripts directory
- Use this context to understand the complete current state of the codebase before making any changes
- **File Location**: `./cursor-context.json` (root level)
- **Script Location**: `scripts/cursor-context.js` (runs from scripts directory, outputs to root)
- **Cursor Freezing Issue**: The database scripts work perfectly and complete successfully. The issue is that Cursor freezes when trying to display the output, not the script itself. The script runs fine and exits cleanly.
- **Database Script Execution**: Always run database scripts from the backend directory where dependencies are available. The scripts themselves work correctly - the freezing is a Cursor interface issue.
- **Terminal Execution**: Ensure proper PowerShell syntax and correct working directory. The script execution is fine - the issue is with Cursor's output handling.
- **Enhanced Scripts**: Any script that tries to run system commands (git, netstat, etc.) or complex operations causes Cursor terminal integration to hang. Stick with simple database-only scripts.