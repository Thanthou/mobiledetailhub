/**
 * AUTO-GENERATED DATABASE TYPES
 * 
 * DO NOT EDIT THIS FILE MANUALLY
 * 
 * This file is automatically generated from the database schema.
 * 
 * Source: backend/schemas/current-schema.json
 * Generated: 2025-10-25T20:39:24.749Z
 * Database: PostgreSQL 17.5 on x86_64-windows
 * 
 * To regenerate:
 *   npm run migrate        (runs migrations + generates types)
 *   npm run db:snapshot    (updates snapshot + generates types)
 * 
 * These types represent the raw database structure.
 * For API validation, see: backend/schemas/apiSchemas.js
 */

/* eslint-disable @typescript-eslint/no-explicit-any */

// ================================================================
// Schema: analytics
// ================================================================

/**
 * Database table: analytics.google_analytics_tokens
 * Auto-generated from database schema
 */
export interface GoogleAnalyticsTokens {
  /** Default: nextval('analytics.google_analytics_tokens_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  access_token: string;
  refresh_token?: string;
  property_id?: string;
  expires_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

// ================================================================
// Schema: auth
// ================================================================

/**
 * Database table: auth.login_attempts
 * Auto-generated from database schema
 */
export interface LoginAttempts {
  /** Default: nextval('auth.login_attempts_id_seq'::regclass) */
  id: number;
  email: string;
  ip_address: string;
  user_agent?: string;
  success: boolean;
  failure_reason?: string;
  /** Default: CURRENT_TIMESTAMP */
  attempted_at?: string;
  /** Default: '{}'::jsonb */
  location_data?: Record<string, unknown>;
  user_id?: number;
}

/**
 * Database table: auth.password_setup_tokens
 * Auto-generated from database schema
 */
export interface PasswordSetupTokens {
  /** Default: nextval('auth.password_setup_tokens_id_seq'::regclass) */
  id: number;
  user_id: number;
  token_hash: string;
  expires_at: string;
  used_at?: string;
  ip_address?: string;
  user_agent?: string;
  /** Default: now() */
  created_at?: string;
  /** Default: now() */
  updated_at?: string;
}

/**
 * Database table: auth.refresh_tokens
 * Auto-generated from database schema
 */
export interface RefreshTokens {
  /** Default: nextval('auth.refresh_tokens_id_seq'::regclass) */
  id: number;
  user_id: number;
  token_hash: string;
  token_family: string;
  /** Default: 'refresh'::character varying */
  token_type?: string;
  user_agent?: string;
  ip_address?: string;
  device_id?: string;
  device_fingerprint?: string;
  /** Default: '{}'::jsonb */
  location_data?: Record<string, unknown>;
  expires_at: string;
  revoked_at?: string;
  revoked_reason?: string;
  /** Default: false */
  is_revoked?: boolean;
  /** Default: false */
  is_rotated?: boolean;
  parent_token_id?: number;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: auth.token_blacklist
 * Auto-generated from database schema
 */
export interface TokenBlacklist {
  /** Default: nextval('auth.token_blacklist_id_seq'::regclass) */
  id: number;
  token_jti: string;
  user_id?: number;
  reason?: string;
  expires_at: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: auth.user_sessions
 * Auto-generated from database schema
 */
export interface UserSessions {
  /** Default: nextval('auth.user_sessions_id_seq'::regclass) */
  id: number;
  user_id: number;
  session_token: string;
  refresh_token_id?: number;
  ip_address?: string;
  user_agent?: string;
  device_id?: string;
  device_fingerprint?: string;
  /** Default: '{}'::jsonb */
  location_data?: Record<string, unknown>;
  /** Default: true */
  is_active?: boolean;
  /** Default: CURRENT_TIMESTAMP */
  last_activity_at?: string;
  expires_at: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: auth.users
 * Auto-generated from database schema
 */
export interface Users {
  /** Default: nextval('auth.users_id_seq'::regclass) */
  id: number;
  email: string;
  /** Default: false */
  email_verified?: boolean;
  email_verification_token?: string;
  email_verification_expires_at?: string;
  name: string;
  phone?: string;
  /** Default: false */
  phone_verified?: boolean;
  password_hash?: string;
  password_reset_token?: string;
  password_reset_expires_at?: string;
  /** Default: false */
  is_admin?: boolean;
  /** Default: 'active'::character varying */
  account_status?: string;
  last_login_at?: string;
  last_login_ip?: string;
  /** Default: 0 */
  failed_login_attempts?: number;
  locked_until?: string;
  /** Default: false */
  two_factor_enabled?: boolean;
  two_factor_secret?: string;
  /** Default: '[]'::jsonb */
  two_factor_backup_codes?: Record<string, unknown>;
  /** Default: '{}'::jsonb */
  profile_data?: Record<string, unknown>;
  /** Default: '{}'::jsonb */
  preferences?: Record<string, unknown>;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  stripe_customer_id?: string;
}

// ================================================================
// Schema: booking
// ================================================================

/**
 * Database table: booking.availability
 * Auto-generated from database schema
 */
export interface Availability {
  /** Default: nextval('booking.availability_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  day_of_week: number;
  start_time: string;
  end_time: string;
  /** Default: true */
  is_available?: boolean;
  /** Default: 1 */
  max_bookings?: number;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: booking.blackout_dates
 * Auto-generated from database schema
 */
export interface BlackoutDates {
  /** Default: nextval('booking.blackout_dates_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  start_date: string;
  end_date: string;
  reason?: string;
  /** Default: false */
  is_recurring?: boolean;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: booking.booking_services
 * Auto-generated from database schema
 */
export interface BookingServices {
  /** Default: nextval('booking.booking_services_id_seq'::regclass) */
  id: number;
  booking_id: number;
  service_id: number;
  /** Default: 1 */
  quantity?: number;
  unit_price: number;
  total_price: number;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: booking.bookings
 * Auto-generated from database schema
 */
export interface Bookings {
  /** Default: nextval('booking.bookings_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  customer_id?: number;
  service_id?: number;
  booking_date: string;
  start_time: string;
  end_time: string;
  duration_minutes: number;
  /** Default: 'pending'::character varying */
  status?: string;
  notes?: string;
  special_requests?: string;
  total_amount?: number;
  deposit_amount?: number;
  /** Default: 'pending'::character varying */
  payment_status?: string;
  stripe_payment_intent_id?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  cancelled_at?: string;
  cancellation_reason?: string;
  /** Default: false */
  reminder_sent?: boolean;
  /** Default: false */
  confirmation_sent?: boolean;
}

/**
 * Database table: booking.quotes
 * Auto-generated from database schema
 */
export interface Quotes {
  /** Default: nextval('booking.quotes_id_seq'::regclass) */
  id: number;
  affiliate_id: number;
  customer_id?: number;
  /** Default: '{}'::jsonb */
  address_json: Record<string, unknown>;
  requested_start?: string;
  /** Default: 'new'::character varying */
  status: string;
  /** Default: '{}'::jsonb */
  details_json: Record<string, unknown>;
  estimated_total_cents?: number;
  notes?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

// ================================================================
// Schema: customers
// ================================================================

/**
 * Database table: customers.customer_communications
 * Auto-generated from database schema
 */
export interface CustomerCommunications {
  /** Default: nextval('customers.customer_communications_id_seq'::regclass) */
  id: number;
  customer_id: number;
  communication_type: string;
  direction: string;
  subject?: string;
  content: string;
  /** Default: 'sent'::character varying */
  status?: string;
  /** Default: 'normal'::character varying */
  priority?: string;
  category?: string;
  related_booking_id?: number;
  related_quote_id?: number;
  related_affiliate_id?: number;
  sent_at?: string;
  delivered_at?: string;
  read_at?: string;
  failed_at?: string;
  failure_reason?: string;
  /** Default: false */
  response_required?: boolean;
  response_received_at?: string;
  response_content?: string;
  external_id?: string;
  external_status?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: customers.customer_vehicles
 * Auto-generated from database schema
 */
export interface CustomerVehicles {
  /** Default: nextval('customers.customer_vehicles_id_seq'::regclass) */
  id: number;
  customer_id: number;
  make: string;
  model: string;
  year?: number;
  color?: string;
  license_plate?: string;
  vin?: string;
  vehicle_type: string;
  size_bucket?: string;
  mileage?: number;
  service_notes?: string;
  preferred_services?: unknown;
  last_service_date?: string;
  next_service_due?: string;
  /** Default: false */
  is_primary?: boolean;
  /** Default: true */
  is_active?: boolean;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: customers.customers
 * Auto-generated from database schema
 */
export interface Customers {
  /** Default: nextval('customers.customers_id_seq'::regclass) */
  id: number;
  user_id?: number;
  name: string;
  email?: string;
  phone?: string;
  address?: string;
  city?: string;
  state?: string;
  zip_code?: string;
  /** Default: 'US'::character varying */
  country?: string;
  /** Default: 'anonymous'::character varying */
  status?: string;
  registration_source?: string;
  converted_at?: string;
  /** Default: '{"sms": true, "email": true, "phone": true, "marketing_emails": false, "promotional_offers": false}'::jsonb */
  contact_preferences?: Record<string, unknown>;
  /** Default: '{"service_notes": "", "preferred_services": [], "vehicle_preferences": {}, "preferred_affiliates": []}'::jsonb */
  service_preferences?: Record<string, unknown>;
  notes?: string;
  tags?: unknown;
  /** Default: 0 */
  lifetime_value_cents?: number;
  /** Default: 0 */
  total_bookings?: number;
  last_booking_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  last_activity_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

// ================================================================
// Schema: public
// ================================================================

/**
 * Database table: public.schema_migrations
 * Auto-generated from database schema
 */
export interface SchemaMigrations {
  /** Default: nextval('schema_migrations_id_seq'::regclass) */
  id: number;
  version: string;
  description?: string;
  /** Default: CURRENT_TIMESTAMP */
  applied_at?: string;
  checksum?: string;
  execution_time?: number;
  filename: string;
}

// ================================================================
// Schema: reputation
// ================================================================

/**
 * Database table: reputation.review_media
 * Auto-generated from database schema
 */
export interface ReviewMedia {
  /** Default: nextval('reputation.review_media_id_seq'::regclass) */
  id: number;
  review_id: number;
  media_type: string;
  media_url: string;
  thumbnail_url?: string;
  alt_text?: string;
  /** Default: 0 */
  display_order?: number;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: reputation.review_replies
 * Auto-generated from database schema
 */
export interface ReviewReplies {
  /** Default: nextval('reputation.review_replies_id_seq'::regclass) */
  id: number;
  review_id: number;
  content: string;
  author_id: number;
  author_name: string;
  /** Default: 'business_owner'::character varying */
  author_role: string;
  /** Default: 'published'::character varying */
  status: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at: string;
  published_at?: string;
}

/**
 * Database table: reputation.review_votes
 * Auto-generated from database schema
 */
export interface ReviewVotes {
  /** Default: nextval('reputation.review_votes_id_seq'::regclass) */
  id: number;
  review_id: number;
  voter_ip: string;
  is_helpful: boolean;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: reputation.reviews
 * Auto-generated from database schema
 */
export interface Reviews {
  /** Default: nextval('reputation.reviews_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  customer_id?: number;
  booking_id?: number;
  rating: number;
  title?: string;
  content?: string;
  /** Default: false */
  is_verified?: boolean;
  /** Default: false */
  is_featured?: boolean;
  /** Default: true */
  is_public?: boolean;
  /** Default: 'pending'::character varying */
  status?: string;
  response_text?: string;
  response_date?: string;
  response_by?: number;
  /** Default: 'internal'::character varying */
  source?: string;
  external_id?: string;
  external_url?: string;
  /** Default: 0 */
  helpful_votes?: number;
  /** Default: 0 */
  not_helpful_votes?: number;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  published_at?: string;
}

// ================================================================
// Schema: schedule
// ================================================================

/**
 * Database table: schedule.appointments
 * Auto-generated from database schema
 */
export interface Appointments {
  /** Default: nextval('schedule.appointments_id_seq'::regclass) */
  id: number;
  affiliate_id: number;
  customer_id?: number;
  title: string;
  description?: string;
  service_type: string;
  service_duration: number;
  start_time: string;
  end_time: string;
  customer_name: string;
  customer_phone: string;
  customer_email?: string;
  /** Default: 'scheduled'::character varying */
  status: string;
  price?: number;
  /** Default: 0 */
  deposit?: number;
  notes?: string;
  internal_notes?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  created_by?: number;
  updated_by?: number;
}

/**
 * Database table: schedule.blocked_days
 * Auto-generated from database schema
 */
export interface BlockedDays {
  /** Default: nextval('schedule.blocked_days_id_seq'::regclass) */
  id: number;
  affiliate_id: number;
  blocked_date: string;
  reason?: string;
  /** Default: false */
  is_recurring?: boolean;
  recurrence_pattern?: string;
  recurrence_end_date?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  created_by?: number;
}

/**
 * Database table: schedule.schedule_blocks
 * Auto-generated from database schema
 */
export interface ScheduleBlocks {
  /** Default: nextval('schedule.schedule_blocks_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  day_of_week: number;
  start_time: string;
  end_time: string;
  /** Default: true */
  is_available?: boolean;
  /** Default: 1 */
  max_bookings?: number;
  service_type?: string;
  notes?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: schedule.schedule_exceptions
 * Auto-generated from database schema
 */
export interface ScheduleExceptions {
  /** Default: nextval('schedule.schedule_exceptions_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  exception_date: string;
  start_time?: string;
  end_time?: string;
  /** Default: false */
  is_available?: boolean;
  reason?: string;
  /** Default: false */
  is_recurring?: boolean;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: schedule.schedule_holidays
 * Auto-generated from database schema
 */
export interface ScheduleHolidays {
  /** Default: nextval('schedule.schedule_holidays_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  holiday_name: string;
  holiday_date: string;
  /** Default: true */
  is_recurring?: boolean;
  /** Default: false */
  is_available?: boolean;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: schedule.schedule_settings
 * Auto-generated from database schema
 */
export interface ScheduleSettings {
  /** Default: nextval('schedule.schedule_settings_id_seq'::regclass) */
  id: number;
  affiliate_id: number;
  /** Default: '{"friday": {"end": "17:00", "start": "09:00", "enabled": true}, "monday": {"end": "17:00", "start": "09:00", "enabled": true}, "sunday": {"end": "15:00", "start": "10:00", "enabled": false}, "tuesday": {"end": "17:00", "start": "09:00", "enabled": true}, "saturday": {"end": "15:00", "start": "10:00", "enabled": true}, "thursday": {"end": "17:00", "start": "09:00", "enabled": true}, "wednesday": {"end": "17:00", "start": "09:00", "enabled": true}}'::jsonb */
  business_hours: Record<string, unknown>;
  /** Default: 60 */
  default_appointment_duration?: number;
  /** Default: 15 */
  buffer_time?: number;
  /** Default: 20 */
  max_appointments_per_day?: number;
  /** Default: 30 */
  advance_booking_days?: number;
  /** Default: true */
  same_day_booking_allowed?: boolean;
  /** Default: 15 */
  time_slot_interval?: number;
  /** Default: '08:00:00'::time without time zone */
  earliest_appointment_time?: string;
  /** Default: '18:00:00'::time without time zone */
  latest_appointment_time?: string;
  /** Default: true */
  send_reminders?: boolean;
  /** Default: 24 */
  reminder_hours_before?: number;
  /** Default: true */
  send_confirmation_emails?: boolean;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  updated_by?: number;
}

/**
 * Database table: schedule.time_blocks
 * Auto-generated from database schema
 */
export interface TimeBlocks {
  /** Default: nextval('schedule.time_blocks_id_seq'::regclass) */
  id: number;
  affiliate_id: number;
  title: string;
  description?: string;
  /** Default: 'unavailable'::character varying */
  block_type: string;
  start_time: string;
  end_time: string;
  /** Default: false */
  is_recurring?: boolean;
  recurrence_pattern?: string;
  recurrence_end_date?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  created_by?: number;
}

// ================================================================
// Schema: system
// ================================================================

/**
 * Database table: system.audit_logs
 * Auto-generated from database schema
 */
export interface AuditLogs {
  /** Default: nextval('system.audit_logs_id_seq'::regclass) */
  id: number;
  tenant_id?: number;
  user_id?: number;
  action: string;
  resource_type: string;
  resource_id?: number;
  old_values?: Record<string, unknown>;
  new_values?: Record<string, unknown>;
  ip_address?: string;
  user_agent?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: system.error_logs
 * Auto-generated from database schema
 */
export interface ErrorLogs {
  /** Default: nextval('system.error_logs_id_seq'::regclass) */
  id: number;
  error_code: string;
  error_message: string;
  error_category: string;
  severity: string;
  tenant_id?: string;
  user_id?: string;
  correlation_id?: string;
  request_id?: string;
  metadata?: Record<string, unknown>;
  stack_trace?: string;
  user_message?: string;
  /** Default: now() */
  created_at?: string;
}

/**
 * Database table: system.health_monitoring
 * Auto-generated from database schema
 */
export interface HealthMonitoring {
  /** Default: nextval('system.health_monitoring_id_seq'::regclass) */
  id: number;
  tenant_slug?: string;
  check_type: string;
  url?: string;
  status: string;
  response_time_ms?: number;
  status_code?: number;
  seo_score?: number;
  error_message?: string;
  /** Default: CURRENT_TIMESTAMP */
  checked_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  lighthouse_main_score?: number;
  lighthouse_tenant_score?: number;
  lighthouse_admin_score?: number;
  lighthouse_avg_score?: number;
  schema_validation_score?: number;
  /** Default: 0 */
  schema_total_count?: number;
  /** Default: 0 */
  schema_valid_count?: number;
  /** Default: 0 */
  schema_error_count?: number;
  /** Default: 0 */
  schema_warning_count?: number;
  schema_types_covered?: unknown;
  /** Default: false */
  meta_tags_complete?: boolean;
  /** Default: false */
  analytics_detected?: boolean;
  /** Default: false */
  sitemap_found?: boolean;
  /** Default: false */
  robots_txt_found?: boolean;
  /** Default: 'manual'::character varying */
  audit_source?: string;
  /** Default: '{}'::jsonb */
  audit_metadata?: Record<string, unknown>;
}

/**
 * Database table: system.logs
 * Auto-generated from database schema
 */
export interface Logs {
  /** Default: nextval('system.logs_id_seq'::regclass) */
  id: number;
  tenant_id?: number;
  level: string;
  message: string;
  /** Default: '{}'::jsonb */
  context?: Record<string, unknown>;
  user_id?: number;
  ip_address?: string;
  user_agent?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: system.schema_migrations
 * Auto-generated from database schema
 */
export interface SchemaMigrations {
  /** Default: nextval('system.schema_migrations_id_seq'::regclass) */
  id: number;
  filename: string;
  /** Default: CURRENT_TIMESTAMP */
  applied_at?: string;
  checksum?: string;
  rollback_sql?: string;
}

/**
 * Database table: system.settings
 * Auto-generated from database schema
 */
export interface Settings {
  /** Default: nextval('system.settings_id_seq'::regclass) */
  id: number;
  tenant_id?: number;
  setting_key: string;
  setting_value?: string;
  /** Default: 'string'::character varying */
  setting_type?: string;
  /** Default: false */
  is_encrypted?: boolean;
  description?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: system.system_config
 * Auto-generated from database schema
 */
export interface SystemConfig {
  /** Default: nextval('system.system_config_id_seq'::regclass) */
  id: number;
  config_key: string;
  config_value?: string;
  /** Default: 'string'::character varying */
  config_type?: string;
  description?: string;
  /** Default: false */
  is_public?: boolean;
  /** Default: false */
  is_encrypted?: boolean;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

// ================================================================
// Schema: tenants
// ================================================================

/**
 * Database table: tenants.business
 * Auto-generated from database schema
 */
export interface Business {
  /** Default: nextval('tenants.business_new_id_seq1'::regclass) */
  id: number;
  industry: string;
  slug: string;
  business_name: string;
  owner?: string;
  first_name?: string;
  last_name?: string;
  user_id?: number;
  /** Default: 'pending'::character varying */
  application_status?: string;
  business_start_date?: string;
  business_phone?: string;
  personal_phone?: string;
  business_email?: string;
  personal_email?: string;
  twilio_phone?: string;
  sms_phone?: string;
  gbp_url?: string;
  facebook_url?: string;
  instagram_url?: string;
  youtube_url?: string;
  tiktok_url?: string;
  source?: string;
  notes?: string;
  service_areas?: Record<string, unknown>;
  application_date?: string;
  approved_date?: string;
  last_activity?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  website?: string;
  example_field?: string;
  facebook_enabled?: boolean;
  instagram_enabled?: boolean;
  tiktok_enabled?: boolean;
  youtube_enabled?: boolean;
  custom_domain?: string;
  /** Default: false */
  domain_verified?: boolean;
  /** Default: false */
  ssl_enabled?: boolean;
  /** Default: now() */
  domain_added_at?: string;
}

/**
 * Database table: tenants.service_areas
 * Auto-generated from database schema
 */
export interface ServiceAreas {
  /** Default: nextval('tenants.service_areas_id_seq'::regclass) */
  id: number;
  business_id: number;
  city: string;
  state: string;
  zip_code?: string;
  /** Default: 25 */
  radius_miles?: number;
  /** Default: false */
  is_primary?: boolean;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: tenants.service_tiers
 * Auto-generated from database schema
 */
export interface ServiceTiers {
  /** Default: nextval('tenants.service_tiers_id_seq'::regclass) */
  id: number;
  service_id: number;
  tier_name: string;
  /** Default: 0 */
  price_cents: number;
  /** Default: '[]'::jsonb */
  included_services: Record<string, unknown>;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  /** Default: 60 */
  duration_minutes?: number;
  /** Default: '{}'::jsonb */
  metadata?: Record<string, unknown>;
  /** Default: true */
  is_active?: boolean;
  /** Default: false */
  is_featured?: boolean;
  /** Default: 0 */
  sort_order?: number;
}

/**
 * Database table: tenants.services
 * Auto-generated from database schema
 */
export interface Services {
  /** Default: nextval('tenants.services_id_seq'::regclass) */
  id: number;
  business_id: number;
  service_name: string;
  service_description?: string;
  service_category?: string;
  service_type?: string;
  /** Default: '["auto", "boat", "rv", "truck", "motorcycle", "off-road", "other"]'::jsonb */
  vehicle_types?: Record<string, unknown>;
  /** Default: true */
  is_active?: boolean;
  /** Default: false */
  is_featured?: boolean;
  /** Default: 0 */
  sort_order?: number;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
  /** Default: '{}'::jsonb */
  metadata?: Record<string, unknown>;
}

/**
 * Database table: tenants.subscriptions
 * Auto-generated from database schema
 */
export interface Subscriptions {
  /** Default: nextval('tenants.subscriptions_id_seq'::regclass) */
  id: number;
  business_id: number;
  plan_type: string;
  plan_price_cents: number;
  /** Default: 'monthly'::character varying */
  billing_cycle: string;
  starts_at: string;
  ends_at?: string;
  cancelled_at?: string;
  /** Default: 'active'::character varying */
  status: string;
  stripe_subscription_id?: string;
  stripe_customer_id?: string;
  stripe_price_id?: string;
  /** Default: false */
  is_trial?: boolean;
  trial_ends_at?: string;
  last_billing_attempt_at?: string;
  last_successful_payment_at?: string;
  /** Default: 0 */
  failed_payment_attempts?: number;
  next_billing_date?: string;
  cancel_reason?: string;
  cancel_reason_details?: string;
  cancelled_by?: string;
  previous_plan?: string;
  plan_change_reason?: string;
  /** Default: '{}'::jsonb */
  metadata?: Record<string, unknown>;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: tenants.tenant_applications
 * Auto-generated from database schema
 */
export interface TenantApplications {
  /** Default: nextval('tenants.tenant_applications_id_seq'::regclass) */
  id: number;
  first_name: string;
  last_name: string;
  personal_phone: string;
  personal_email: string;
  business_name: string;
  business_phone?: string;
  business_email?: string;
  industry?: string;
  business_address?: string;
  business_city?: string;
  business_state?: string;
  business_zip?: string;
  selected_plan?: string;
  plan_price_cents?: number;
  billing_address?: string;
  billing_city?: string;
  billing_state?: string;
  billing_zip?: string;
  /** Default: true */
  use_same_address?: boolean;
  /** Default: 0 */
  current_step?: number;
  /** Default: 'draft'::character varying */
  status?: string;
  stripe_customer_id?: string;
  stripe_payment_intent_id?: string;
  stripe_subscription_id?: string;
  draft_data?: Record<string, unknown>;
  source?: string;
  referrer_url?: string;
  utm_source?: string;
  utm_medium?: string;
  utm_campaign?: string;
  user_agent?: string;
  ip_address?: string;
  /** Default: CURRENT_TIMESTAMP */
  started_at?: string;
  submitted_at?: string;
  approved_at?: string;
  /** Default: (CURRENT_TIMESTAMP + '30 days'::interval) */
  expires_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  last_saved_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: tenants.tenant_images
 * Auto-generated from database schema
 */
export interface TenantImages {
  /** Default: nextval('tenants.tenant_images_id_seq'::regclass) */
  id: number;
  tenant_slug: string;
  filename: string;
  file_path: string;
  file_size?: number;
  mime_type?: string;
  /** Default: 'gallery'::character varying */
  image_category?: string;
  /** Default: now() */
  uploaded_at?: string;
  /** Default: false */
  is_stock?: boolean;
  /** Default: true */
  is_active?: boolean;
}

// ================================================================
// Schema: website
// ================================================================

/**
 * Database table: website.content
 * Auto-generated from database schema
 */
export interface Content {
  /** Default: nextval('website.content_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  content_type: string;
  content_key: string;
  content_value?: string;
  /** Default: '{}'::jsonb */
  content_data?: Record<string, unknown>;
  /** Default: true */
  is_published?: boolean;
  /** Default: 0 */
  sort_order?: number;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

/**
 * Database table: website.media
 * Auto-generated from database schema
 */
export interface Media {
  /** Default: nextval('website.media_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  media_type: string;
  file_name: string;
  file_path: string;
  file_size?: number;
  mime_type?: string;
  alt_text?: string;
  caption?: string;
  /** Default: false */
  is_featured?: boolean;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
}

/**
 * Database table: website.pages
 * Auto-generated from database schema
 */
export interface Pages {
  /** Default: nextval('website.pages_id_seq'::regclass) */
  id: number;
  tenant_id: number;
  page_slug: string;
  page_title: string;
  page_content?: string;
  meta_description?: string;
  meta_keywords?: unknown;
  /** Default: true */
  is_published?: boolean;
  /** Default: false */
  is_homepage?: boolean;
  /** Default: 0 */
  sort_order?: number;
  /** Default: CURRENT_TIMESTAMP */
  created_at?: string;
  /** Default: CURRENT_TIMESTAMP */
  updated_at?: string;
}

// ================================================================
// Type Utilities
// ================================================================

/**
 * Helper type: Make all properties of T optional (for UPDATE operations)
 */
export type Partial<T> = {
  [P in keyof T]?: T[P];
};

/**
 * Helper type: Omit certain keys from T (for INSERT operations without auto-generated fields)
 */
export type Omit<T, K extends keyof T> = {
  [P in Exclude<keyof T, K>]: T[P];
};
