{"version":3,"mappings":"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","names":["useState","useEffect","jsx","jsxs","Fragment","useMemo","getFeatureName","total","Tabs","useCallback","useRef"],"ignoreList":[],"sources":["../../src/shared/ui/carousel/Carousel.tsx","../../src/features/booking/state/bookingStore.ts","../../src/features/booking/api/booking.api.ts","../../src/features/booking/hooks/useBookingGallery.ts","../../src/shared/constants/vehicleMapping.ts","../../src/features/booking/utils/displayUtils.ts","../../src/features/booking/hooks/useAddons.ts","../../src/features/booking/hooks/useFeaturesData.ts","../../src/features/booking/hooks/usePaymentData.ts","../../src/features/booking/hooks/usePaymentForm.ts","../../src/features/booking/hooks/useScheduleOptions.ts","../../src/features/booking/hooks/useServiceTiers.ts","../../src/features/booking/components/shared/DetailsModal.tsx","../../src/features/booking/components/shared/Footer.tsx","../../src/features/booking/components/BookingLayout.tsx","../../src/features/booking/components/steps/StepAddons/AddonDetailsModal.tsx","../../src/features/booking/components/steps/StepAddons/Tabs.tsx","../../src/features/booking/components/steps/StepAddons/Addons.tsx","../../src/features/booking/components/steps/StepAddons/StepAddons.tsx","../../src/features/booking/components/steps/StepLocation/StepLocation.tsx","../../src/shared/ui/icons/PaymentIcons.tsx","../../src/features/booking/components/payment/PaymentOption.tsx","../../src/features/booking/components/steps/StepPayment/components/PaymentSummary.tsx","../../src/features/booking/components/steps/StepPayment/components/PaymentTabs.tsx","../../src/features/booking/components/steps/StepPayment/components/SummarySection.tsx","../../src/features/booking/components/steps/StepPayment/components/VehicleSection.tsx","../../src/features/booking/components/steps/StepPayment/StepPayment.tsx","../../src/features/booking/components/steps/StepSchedule/StepSchedule.tsx","../../src/features/booking/components/steps/StepService/ServiceCard.tsx","../../src/features/booking/components/steps/StepService/ServiceDetailsModal.tsx","../../src/features/booking/components/steps/StepService/ServiceCarousel.tsx","../../src/features/booking/components/steps/StepService/StepService.tsx","../../src/features/booking/components/steps/StepVehicleSelection/Tabs.tsx","../../src/features/booking/components/steps/StepVehicleSelection/VehicleType.tsx","../../src/features/booking/components/steps/StepVehicleSelection/StepVehicleSelection.tsx","../../src/features/booking/components/BookingFlowController.tsx","../../src/features/booking/components/BookingSteps.tsx","../../src/features/booking/components/BookingPage.tsx","../../src/features/booking/BookingApp.tsx"],"sourcesContent":["import React, { useEffect,useState } from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\n\r\ninterface CarouselItem {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n  features: string[];\r\n  featureIds: string[];\r\n  popular?: boolean;\r\n}\r\n\r\ninterface CarouselProps<T extends CarouselItem> {\r\n  items: T[];\r\n  selectedItem?: string;\r\n  renderItem: (item: T & { position: 'center' | 'left' | 'right' }, isSelected: boolean) => React.ReactNode;\r\n  onItemClick?: (item: T) => void;\r\n  emptyMessage?: string;\r\n  containerHeight?: string;\r\n  containerTop?: string;\r\n}\r\n\r\nconst Carousel = <T extends CarouselItem>({\r\n  items,\r\n  selectedItem,\r\n  renderItem,\r\n  onItemClick,\r\n  emptyMessage = \"No items available\",\r\n  containerHeight = \"h-[70vh]\",\r\n  containerTop = \"top-[36.5%]\"\r\n}: CarouselProps<T>) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  \r\n\r\n  // Update index when items load to show most popular item in center\r\n  useEffect(() => {\r\n    if (items.length > 0) {\r\n      const popularIndex = items.findIndex(item => item.popular);\r\n      const initialIndex = popularIndex !== -1 ? popularIndex : 0;\r\n      setCurrentIndex(initialIndex);\r\n    }\r\n  }, [items]);\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentIndex((prev) => (prev > 0 ? prev - 1 : items.length - 1));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentIndex((prev) => (prev < items.length - 1 ? prev + 1 : 0));\r\n  };\r\n\r\n  const getVisibleItems = () => {\r\n    const visible: (T & { position: 'center' | 'left' | 'right' })[] = [];\r\n    for (let i = -1; i <= 1; i++) {\r\n      const index = (currentIndex + i + items.length) % items.length;\r\n      const item = items[index];\r\n      if (item) {\r\n        visible.push({\r\n          ...item,\r\n          popular: item.popular || false, // Ensure boolean type\r\n          position: i === 0 ? 'center' : i === -1 ? 'left' : 'right'\r\n        });\r\n      }\r\n    }\r\n    return visible;\r\n  };\r\n\r\n  if (items.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <p className=\"text-gray-300 text-lg\">{emptyMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`relative w-full max-w-5xl mx-auto ${containerHeight}`}>\r\n      {/* Items Container */}\r\n      <div className={`absolute ${containerTop} left-1/2 transform -translate-x-1/2 w-full`}>\r\n        {/* Navigation Arrows */}\r\n        {items.length > 1 && (\r\n          <>\r\n            <button\r\n              onClick={handlePrevious}\r\n              className=\"absolute -left-8 sm:-left-16 md:-left-32 lg:-left-64 top-1/2 -translate-y-1/2 z-20 bg-orange-500 hover:bg-orange-600 text-white p-4 rounded-full transition-colors shadow-lg\"\r\n              aria-label=\"Previous item\"\r\n            >\r\n              <ChevronLeft className=\"h-6 w-6\" />\r\n            </button>\r\n\r\n            <button\r\n              onClick={handleNext}\r\n              className=\"absolute -right-8 sm:-right-16 md:-right-32 lg:-right-64 top-1/2 -translate-y-1/2 z-20 bg-orange-500 hover:bg-orange-600 text-white p-4 rounded-full transition-colors shadow-lg\"\r\n              aria-label=\"Next item\"\r\n            >\r\n              <ChevronRight className=\"h-6 w-6\" />\r\n            </button>\r\n          </>\r\n        )}\r\n        \r\n        <div className=\"flex items-center justify-center gap-4 w-full max-w-5xl\">\r\n          {getVisibleItems().map((item) => {\r\n            const isSelected = selectedItem === item.id;\r\n            return (\r\n              <button\r\n                key={item.id}\r\n                type=\"button\"\r\n                onClick={() => onItemClick?.(item)}\r\n                className=\"bg-transparent border-none p-0 cursor-pointer\"\r\n              >\r\n                {renderItem(item, isSelected)}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import { useMemo } from 'react';\r\nimport { create } from 'zustand';\r\nimport { devtools, subscribeWithSelector } from 'zustand/middleware';\r\n\r\nimport { BookingActions, BookingData, BookingState, BookingStep } from './types';\r\n\r\nconst initialBookingData: BookingData = {\r\n  vehicle: '',\r\n  vehicleDetails: {\r\n    make: '',\r\n    model: '',\r\n    year: '',\r\n    color: '',\r\n    length: ''\r\n  },\r\n  location: {\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    zip: '',\r\n    notes: '',\r\n    locationType: ''\r\n  },\r\n  serviceTier: '',\r\n  addons: [],\r\n  schedule: { dates: [], time: '' },\r\n  paymentMethod: ''\r\n};\r\n\r\nconst stepOrder: BookingStep[] = ['vehicle-selection', 'location', 'service-tier', 'addons', 'schedule', 'payment'];\r\n\r\nexport const useBookingStore = create<BookingState & BookingActions>()(\r\n  subscribeWithSelector(\r\n    devtools(\r\n      (set, get) => ({\r\n      // Initial state\r\n      currentStep: 'vehicle-selection',\r\n      bookingData: initialBookingData,\r\n      completedSteps: [],\r\n      isLoading: false,\r\n      errors: [],\r\n\r\n      // Actions\r\n      setCurrentStep: (step) => {\r\n        const currentIndex = stepOrder.indexOf(step);\r\n        const completedSteps = stepOrder.slice(0, currentIndex);\r\n        \r\n            set({\r\n              currentStep: step,\r\n              completedSteps,\r\n              errors: [] // Clear errors when changing steps\r\n            });\r\n      },\r\n\r\n      updateBookingData: (data) => {\r\n        set((state) => ({\r\n          bookingData: { ...state.bookingData, ...data }\r\n        }));\r\n      },\r\n\r\n      setVehicle: (vehicle) => {\r\n        set((state) => ({\r\n          bookingData: { ...state.bookingData, vehicle }\r\n        }));\r\n      },\r\n\r\n      setVehicleDetails: (details) => {\r\n        set((state) => ({\r\n          bookingData: {\r\n            ...state.bookingData,\r\n            vehicleDetails: { ...state.bookingData.vehicleDetails, ...details }\r\n          }\r\n        }));\r\n      },\r\n\r\n      setLocation: (location) => {\r\n        set((state) => ({\r\n          bookingData: {\r\n            ...state.bookingData,\r\n            location: { ...state.bookingData.location, ...location }\r\n          }\r\n        }));\r\n      },\r\n\r\n      setServiceTier: (tier) => {\r\n        set((state) => ({\r\n          bookingData: { ...state.bookingData, serviceTier: tier }\r\n        }));\r\n      },\r\n\r\n      setAddons: (addons) => {\r\n        set((state) => ({\r\n          bookingData: { ...state.bookingData, addons }\r\n        }));\r\n      },\r\n\r\n      setSchedule: (schedule) => {\r\n        set((state) => ({\r\n          bookingData: { ...state.bookingData, schedule }\r\n        }));\r\n      },\r\n\r\n      setPaymentMethod: (method) => {\r\n        set((state) => ({\r\n          bookingData: { ...state.bookingData, paymentMethod: method }\r\n        }));\r\n      },\r\n\r\n      nextStep: () => {\r\n        const { currentStep } = get();\r\n        const currentIndex = stepOrder.indexOf(currentStep);\r\n        \r\n        if (currentIndex < stepOrder.length - 1) {\r\n          const nextStep = stepOrder[currentIndex + 1];\r\n          if (nextStep) {\r\n            // Direct state update instead of calling setCurrentStep to avoid circular dependency\r\n                  set(() => {\r\n                    const newIndex = stepOrder.indexOf(nextStep);\r\n                    const completedSteps = stepOrder.slice(0, newIndex);\r\n                    return {\r\n                      currentStep: nextStep,\r\n                      completedSteps,\r\n                      errors: [] // Clear errors when changing steps\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n      },\r\n\r\n      previousStep: () => {\r\n        const { currentStep } = get();\r\n        const currentIndex = stepOrder.indexOf(currentStep);\r\n        \r\n        if (currentIndex > 0) {\r\n          const prevStep = stepOrder[currentIndex - 1];\r\n          if (prevStep) {\r\n            // Direct state update instead of calling setCurrentStep to avoid circular dependency\r\n                  set(() => {\r\n                    const newIndex = stepOrder.indexOf(prevStep);\r\n                    const completedSteps = stepOrder.slice(0, newIndex);\r\n                    return {\r\n                      currentStep: prevStep,\r\n                      completedSteps,\r\n                      errors: [] // Clear errors when changing steps\r\n                    };\r\n                  });\r\n                }\r\n        }\r\n      },\r\n\r\n      resetBooking: () => {\r\n        set({\r\n          currentStep: 'vehicle-selection',\r\n          bookingData: initialBookingData,\r\n          completedSteps: [],\r\n          isLoading: false,\r\n          errors: []\r\n        });\r\n      },\r\n\r\n      setLoading: (loading) => {\r\n        set({ isLoading: loading });\r\n      },\r\n\r\n      setErrors: (errors) => {\r\n        set({ errors });\r\n      },\r\n\r\n      addError: (error) => {\r\n        set((state) => ({\r\n          errors: [...state.errors, error]\r\n        }));\r\n      },\r\n\r\n      clearErrors: () => {\r\n        set({ errors: [] });\r\n      }\r\n      }),\r\n      {\r\n        name: 'booking-store', // Unique name for devtools\r\n      }\r\n    )\r\n  )\r\n);\r\n\r\n// Narrow selectors for better performance\r\nexport const useBookingStep = () => {\r\n  const currentStep = useBookingStore((state) => state.currentStep);\r\n  const completedSteps = useBookingStore((state) => state.completedSteps);\r\n  const nextStep = useBookingStore((state) => state.nextStep);\r\n  const previousStep = useBookingStore((state) => state.previousStep);\r\n  const setCurrentStep = useBookingStore((state) => state.setCurrentStep);\r\n  \r\n  return useMemo(() => ({\r\n    currentStep,\r\n    completedSteps,\r\n    nextStep,\r\n    previousStep,\r\n    setCurrentStep\r\n  }), [currentStep, completedSteps, nextStep, previousStep, setCurrentStep]);\r\n};\r\n\r\nexport const useBookingData = () => {\r\n  const bookingData = useBookingStore((state) => state.bookingData);\r\n  const setVehicle = useBookingStore((state) => state.setVehicle);\r\n  const setVehicleDetails = useBookingStore((state) => state.setVehicleDetails);\r\n  const setLocation = useBookingStore((state) => state.setLocation);\r\n  const setServiceTier = useBookingStore((state) => state.setServiceTier);\r\n  const setAddons = useBookingStore((state) => state.setAddons);\r\n  const setSchedule = useBookingStore((state) => state.setSchedule);\r\n  const setPaymentMethod = useBookingStore((state) => state.setPaymentMethod);\r\n  \r\n  return useMemo(() => ({\r\n    bookingData,\r\n    setVehicle,\r\n    setVehicleDetails,\r\n    setLocation,\r\n    setServiceTier,\r\n    setAddons,\r\n    setSchedule,\r\n    setPaymentMethod\r\n  }), [bookingData, setVehicle, setVehicleDetails, setLocation, setServiceTier, setAddons, setSchedule, setPaymentMethod]);\r\n};\r\n\r\nexport const useBookingVehicle = () => {\r\n  const vehicle = useBookingStore((state) => state.bookingData.vehicle);\r\n  const vehicleDetails = useBookingStore((state) => state.bookingData.vehicleDetails);\r\n  const setVehicle = useBookingStore((state) => state.setVehicle);\r\n  const setVehicleDetails = useBookingStore((state) => state.setVehicleDetails);\r\n  \r\n  return useMemo(() => ({\r\n    vehicle,\r\n    vehicleDetails,\r\n    setVehicle,\r\n    setVehicleDetails\r\n  }), [vehicle, vehicleDetails, setVehicle, setVehicleDetails]);\r\n};\r\n\r\nexport const useBookingService = () => {\r\n  const serviceTier = useBookingStore((state) => state.bookingData.serviceTier);\r\n  const setServiceTier = useBookingStore((state) => state.setServiceTier);\r\n  \r\n  return useMemo(() => ({\r\n    serviceTier,\r\n    setServiceTier\r\n  }), [serviceTier, setServiceTier]);\r\n};\r\n\r\nexport const useBookingAddons = () => {\r\n  const addons = useBookingStore((state) => state.bookingData.addons);\r\n  const setAddons = useBookingStore((state) => state.setAddons);\r\n  \r\n  return useMemo(() => ({\r\n    addons,\r\n    setAddons\r\n  }), [addons, setAddons]);\r\n};\r\n\r\nexport const useBookingSchedule = () => {\r\n  const schedule = useBookingStore((state) => state.bookingData.schedule);\r\n  const setSchedule = useBookingStore((state) => state.setSchedule);\r\n  \r\n  return useMemo(() => ({\r\n    schedule,\r\n    setSchedule\r\n  }), [schedule, setSchedule]);\r\n};\r\n\r\nexport const useBookingPayment = () => {\r\n  const paymentMethod = useBookingStore((state) => state.bookingData.paymentMethod);\r\n  const setPaymentMethod = useBookingStore((state) => state.setPaymentMethod);\r\n  \r\n  return useMemo(() => ({\r\n    paymentMethod,\r\n    setPaymentMethod\r\n  }), [paymentMethod, setPaymentMethod]);\r\n};\r\n\r\nexport const useBookingErrors = () => {\r\n  const errors = useBookingStore((state) => state.errors);\r\n  const isLoading = useBookingStore((state) => state.isLoading);\r\n  const setErrors = useBookingStore((state) => state.setErrors);\r\n  const addError = useBookingStore((state) => state.addError);\r\n  const clearErrors = useBookingStore((state) => state.clearErrors);\r\n  const setLoading = useBookingStore((state) => state.setLoading);\r\n  \r\n  return useMemo(() => ({\r\n    errors,\r\n    isLoading,\r\n    setErrors,\r\n    addError,\r\n    clearErrors,\r\n    setLoading\r\n  }), [errors, isLoading, setErrors, addError, clearErrors, setLoading]);\r\n};\r\n","import type { GalleryImage } from '@/shared/types';\r\n\r\n/**\r\n * API client for booking-related data\r\n */\r\n\r\nexport async function getBookingGalleryImages(): Promise<GalleryImage[]> {\r\n  try {\r\n    const res = await fetch('/mobile-detailing/data/gallery.json');\r\n    if (!res.ok) {\r\n      throw new Error(`Failed to fetch gallery data: ${res.status}`);\r\n    }\r\n    const data: unknown = await res.json();\r\n    \r\n    if (!Array.isArray(data)) {\r\n      throw new Error('Gallery data is not an array');\r\n    }\r\n    \r\n    return data as GalleryImage[];\r\n  } catch (error: unknown) {\r\n    const message = error instanceof Error ? error.message : String(error);\r\n    console.error('Failed to load gallery images:', message);\r\n    throw error;\r\n  }\r\n}\r\n\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport type { GalleryImage } from '@/shared/types';\r\n\r\nimport { getBookingGalleryImages } from '../api/booking.api';\r\n\r\ninterface UseBookingGalleryReturn {\r\n  images: GalleryImage[];\r\n  isLoading: boolean;\r\n  error: Error | null;\r\n}\r\n\r\n/**\r\n * Hook to load gallery images for booking background\r\n */\r\nexport function useBookingGallery(): UseBookingGalleryReturn {\r\n  const [images, setImages] = useState<GalleryImage[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n\r\n    const loadImages = async (): Promise<void> => {\r\n      try {\r\n        setIsLoading(true);\r\n        const data = await getBookingGalleryImages();\r\n        \r\n        if (!cancelled) {\r\n          setImages(data);\r\n          setError(null);\r\n        }\r\n      } catch (err: unknown) {\r\n        if (!cancelled) {\r\n          setError(err instanceof Error ? err : new Error(String(err)));\r\n        }\r\n      } finally {\r\n        if (!cancelled) {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    void loadImages();\r\n\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  return { images, isLoading, error };\r\n}\r\n\r\n","/**\r\n * Vehicle mapping constants and utilities\r\n * Centralized mapping between vehicle types and folder names\r\n */\r\n\r\nexport const VEHICLE_FOLDER_MAP: Record<string, string> = {\r\n  'car': 'cars',\r\n  'truck': 'trucks',\r\n  'suv': 'suvs',\r\n  'boat': 'boats',\r\n  'rv': 'rvs'\r\n} as const;\r\n\r\nexport type VehicleType = keyof typeof VEHICLE_FOLDER_MAP;\r\n\r\n/**\r\n * Convert vehicle type to folder name\r\n */\r\nexport const toFolderName = (vehicleType: string): string | null => {\r\n  return VEHICLE_FOLDER_MAP[vehicleType] || null;\r\n};\r\n\r\n/**\r\n * Check if vehicle type is valid\r\n */\r\nexport const isValidVehicleType = (vehicleType: string): vehicleType is VehicleType => {\r\n  return vehicleType in VEHICLE_FOLDER_MAP;\r\n};\r\n\r\n/**\r\n * Get all available vehicle types\r\n */\r\nexport const getAvailableVehicleTypes = (): VehicleType[] => {\r\n  return Object.keys(VEHICLE_FOLDER_MAP);\r\n};\r\n\r\n/**\r\n * Get all available folder names\r\n */\r\nexport const getAvailableFolderNames = (): string[] => {\r\n  return Object.values(VEHICLE_FOLDER_MAP);\r\n};\r\n","/**\r\n * Utility functions for generating display content for services and addons\r\n */\r\n\r\ninterface FeatureData {\r\n  [key: string]: {\r\n    name: string;\r\n    description: string;\r\n    explanation: string;\r\n    image: string;\r\n    duration: number;\r\n    features: string[];\r\n  };\r\n}\r\n\r\ninterface ServiceData {\r\n  description?: string;\r\n  [key: string]: unknown;\r\n}\r\n\r\n/**\r\n * Get description from service/addon data, with fallback to feature names\r\n */\r\nexport const getCardDescription = (\r\n  serviceData: ServiceData,\r\n  featureKeys: string[], \r\n  featuresData: FeatureData,\r\n  maxFeatures: number = 3\r\n): string => {\r\n  // First priority: use description field from service/addon data\r\n  if (serviceData.description) {\r\n    return serviceData.description;\r\n  }\r\n\r\n  // Fallback: generate from feature names\r\n  if (featureKeys.length === 0) {\r\n    return 'No features available';\r\n  }\r\n\r\n  // Look up feature names from features.json using the keywords\r\n  const featureNames = featureKeys.map(featureKey => {\r\n    const feature = featuresData[featureKey];\r\n    return feature ? feature.name : featureKey; // Fallback to key if not found\r\n  });\r\n  \r\n  // If we have too many features, show only the first few and add \"...\"\r\n  if (featureNames.length > maxFeatures) {\r\n    return featureNames.slice(0, maxFeatures).join(', ') + '...';\r\n  }\r\n  \r\n  return featureNames.join(', ');\r\n};\r\n\r\n/**\r\n * Generate feature details for modal display\r\n */\r\nexport const generateFeatureDetails = (\r\n  featureKey: string,\r\n  featuresData: FeatureData\r\n) => {\r\n  return featuresData[featureKey] || null;\r\n};\r\n\r\n/**\r\n * Get all feature details for a list of feature keys\r\n */\r\nexport const getAllFeatureDetails = (\r\n  featureKeys: string[],\r\n  featuresData: FeatureData\r\n) => {\r\n  return featureKeys.map(key => ({\r\n    key,\r\n    details: generateFeatureDetails(key, featuresData)\r\n  }));\r\n};\r\n\r\n/**\r\n * Format price for display\r\n * @deprecated Use formatPrice from @/shared/utils instead\r\n */\r\nexport { formatPrice } from '@/shared/utils';\r\n","import { useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { toFolderName } from '@/shared/constants';\r\n\r\nimport { getCardDescription } from '../utils/displayUtils';\r\n\r\nexport interface AddonItem {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n  features: string[];\r\n  featureIds: string[];\r\n  popular?: boolean;\r\n}\r\n\r\ninterface AddonItemData {\r\n  cost?: number;\r\n  features?: string[];\r\n  popular?: boolean;\r\n  description?: string;\r\n  name?: string;\r\n}\r\n\r\ninterface AddonDataRecord {\r\n  [key: string]: AddonItemData;\r\n}\r\n\r\ninterface FeatureData {\r\n  [key: string]: {\r\n    name: string;\r\n    description: string;\r\n    explanation: string;\r\n    image: string;\r\n    duration: number;\r\n    features: string[];\r\n  };\r\n}\r\n\r\ninterface ImportedModule {\r\n  default: AddonDataRecord;\r\n}\r\n\r\ninterface QueryResultService {\r\n  addons: AddonDataRecord;\r\n  features: FeatureData;\r\n  type: 'service';\r\n}\r\n\r\ninterface QueryResultCategory {\r\n  addons: AddonDataRecord;\r\n  features: Record<string, never>;\r\n  type: 'category';\r\n}\r\n\r\ntype QueryResult = QueryResultService | QueryResultCategory;\r\n\r\n/**\r\n * Hook to load addons for a specific vehicle type and category\r\n */\r\nexport const useAddons = (vehicleType: string, category: string) => {\r\n  const [availableAddons, setAvailableAddons] = useState<AddonItem[]>([]);\r\n\r\n  const { data, isLoading, error } = useQuery<QueryResult>({\r\n    queryKey: ['addons', vehicleType, category],\r\n    queryFn: async (): Promise<QueryResult> => {\r\n      const folderName = toFolderName(vehicleType);\r\n      \r\n      if (!folderName) {\r\n        throw new Error(`No addons available for vehicle type: ${vehicleType}`);\r\n      }\r\n\r\n      try {\r\n        // Try to load service.json first (for windows), then fall back to category-specific files\r\n        try {\r\n          const [addonsData, featuresData] = await Promise.all([\r\n            import(`@/data/mobile-detailing/pricing/${folderName}/addons/${category}/service.json`) as Promise<ImportedModule>,\r\n            import(`@/data/mobile-detailing/pricing/${folderName}/addons/${category}/features.json`) as Promise<{ default: FeatureData }>\r\n          ]);\r\n          \r\n          return {\r\n            addons: addonsData.default,\r\n            features: featuresData.default,\r\n            type: 'service' as const\r\n          };\r\n        } catch {\r\n          // Try to load category-specific file (wheels.json, trim.json, etc.)\r\n          const categoryData = await import(`@/data/mobile-detailing/pricing/${folderName}/addons/${category}/${category}.json`) as Promise<ImportedModule>;\r\n          \r\n          return {\r\n            addons: categoryData.default as AddonDataRecord,\r\n            features: {},\r\n            type: 'category' as const\r\n          };\r\n        }\r\n      } catch {\r\n        throw new Error(`No addons available for ${category} in ${vehicleType}`);\r\n      }\r\n    },\r\n    enabled: (() => {\r\n      const folderName = toFolderName(vehicleType);\r\n      const enabled = !!vehicleType && !!category && !!folderName;\r\n      return enabled;\r\n    })(),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    cacheTime: 10 * 60 * 1000, // 10 minutes\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      let processedAddons: AddonItem[] = [];\r\n\r\n      if (data.type === 'service') {\r\n        // Process addons object (windows data structure)\r\n        const serviceData = data as QueryResultService;\r\n        processedAddons = Object.entries(serviceData.addons).map(([name, addon]) => {\r\n          const features = addon.features ?? [];\r\n          const featureNames = features.map((featureId) => getFeatureName(featureId, serviceData.features));\r\n          const description = getCardDescription(addon, features, serviceData.features);\r\n          \r\n          return {\r\n            id: name.toLowerCase().replace(/\\s+/g, '-'),\r\n            name: name,\r\n            price: typeof addon.cost === 'number' ? addon.cost : 0,\r\n            description: description,\r\n            features: featureNames,\r\n            featureIds: features,\r\n            popular: addon.popular ?? false\r\n          };\r\n        });\r\n      } else {\r\n        // Convert features object to addon array format\r\n        const categoryData = data as QueryResultCategory;\r\n        const features = Object.keys(categoryData.addons);\r\n        processedAddons = features.map((featureKey, index) => {\r\n          const feature = categoryData.addons[featureKey];\r\n          if (!feature) {\r\n            return {\r\n              id: featureKey,\r\n              name: featureKey,\r\n              price: 0,\r\n              description: '',\r\n              features: [],\r\n              featureIds: [featureKey],\r\n              popular: false\r\n            };\r\n          }\r\n          return {\r\n            id: featureKey,\r\n            name: feature.name ?? featureKey,\r\n            price: 0, // No pricing in features-only files\r\n            description: feature.description ?? getCardDescription(feature, [featureKey], {}),\r\n            features: feature.name ? [feature.name] : [], // Use the feature name as the single feature\r\n            featureIds: [featureKey],\r\n            popular: index === 0 // Make first item popular\r\n          };\r\n        });\r\n      }\r\n      \r\n      setAvailableAddons(processedAddons);\r\n    }\r\n  }, [data]);\r\n\r\n  return {\r\n    availableAddons,\r\n    isLoading,\r\n    error: error?.message || null\r\n  };\r\n};\r\n\r\n/**\r\n * Helper function to get feature name from feature ID\r\n */\r\nconst getFeatureName = (featureId: string, featuresData: FeatureData): string => {\r\n  return featuresData[featureId]?.name || featureId;\r\n};\r\n","import { useQuery } from '@tanstack/react-query';\r\n\r\ninterface UseFeaturesDataProps {\r\n  isOpen: boolean;\r\n  vehicleType: string;\r\n  category?: string | undefined;\r\n  itemType: 'service' | 'addon';\r\n}\r\n\r\ninterface FeatureDataItem {\r\n  name: string;\r\n  description: string;\r\n  explanation: string;\r\n  image: string;\r\n  duration: number;\r\n  features: string[];\r\n}\r\n\r\ninterface FeaturesDataRecord {\r\n  [key: string]: FeatureDataItem;\r\n}\r\n\r\ninterface ImportedFeaturesModule {\r\n  default: FeaturesDataRecord;\r\n}\r\n\r\n/**\r\n * Async function to load features data\r\n */\r\nconst loadFeaturesData = async (vehicleType: string, category?: string, itemType: 'service' | 'addon' = 'service'): Promise<FeaturesDataRecord> => {\r\n  const vehicleFolderMap: Record<string, string> = {\r\n    'car': 'cars',\r\n    'truck': 'trucks',\r\n    'suv': 'suvs',\r\n    'boat': 'boats',\r\n    'rv': 'rvs'\r\n  };\r\n\r\n  const folderName = vehicleFolderMap[vehicleType];\r\n  if (!folderName) {\r\n    throw new Error(`No features available for vehicle type: ${vehicleType}`);\r\n  }\r\n\r\n  let featuresModule: ImportedFeaturesModule | undefined;\r\n        \r\n  if (itemType === 'service') {\r\n    // Service features - static imports to avoid Vite warnings\r\n    // TODO: Make this industry-agnostic by using DataContext to get industry\r\n    switch (folderName) {\r\n      case 'cars':\r\n        featuresModule = await import('@/data/mobile-detailing/pricing/cars/service/features.json') as ImportedFeaturesModule;\r\n        break;\r\n      case 'trucks':\r\n        featuresModule = await import('@/data/mobile-detailing/pricing/trucks/service/features.json') as ImportedFeaturesModule;\r\n        break;\r\n      case 'suvs':\r\n        featuresModule = await import('@/data/mobile-detailing/pricing/suvs/service/features.json') as ImportedFeaturesModule;\r\n        break;\r\n      case 'rvs':\r\n        featuresModule = await import('@/data/mobile-detailing/pricing/rvs/service/features.json') as ImportedFeaturesModule;\r\n        break;\r\n      case 'boats':\r\n        featuresModule = await import('@/data/mobile-detailing/pricing/boats/service/features.json') as ImportedFeaturesModule;\r\n        break;\r\n    }\r\n  } else {\r\n    // Addon features - only import files that exist\r\n    // TODO: Make this industry-agnostic by using DataContext to get industry\r\n    switch (folderName) {\r\n      case 'cars':\r\n        switch (category) {\r\n          case 'windows':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/cars/addons/windows/features.json') as ImportedFeaturesModule;\r\n            break;\r\n          case 'wheels':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/cars/addons/wheels/features.json') as ImportedFeaturesModule;\r\n            break;\r\n          case 'trim':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/cars/addons/trim/features.json') as ImportedFeaturesModule;\r\n            break;\r\n          case 'engine':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/cars/addons/engine/features.json') as ImportedFeaturesModule;\r\n            break;\r\n        }\r\n        break;\r\n      case 'trucks':\r\n        switch (category) {\r\n          case 'windows':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/trucks/addons/windows/features.json') as ImportedFeaturesModule;\r\n            break;\r\n          case 'wheels':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/trucks/addons/wheels/features.json') as ImportedFeaturesModule;\r\n            break;\r\n          case 'trim':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/trucks/addons/trim/features.json') as ImportedFeaturesModule;\r\n            break;\r\n          case 'engine':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/trucks/addons/engine/features.json') as ImportedFeaturesModule;\r\n            break;\r\n        }\r\n        break;\r\n      case 'suvs':\r\n        switch (category) {\r\n          case 'windows':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/suvs/addons/windows/features.json') as ImportedFeaturesModule;\r\n            break;\r\n          case 'wheels':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/suvs/addons/wheels/features.json') as ImportedFeaturesModule;\r\n            break;\r\n          case 'trim':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/suvs/addons/trim/features.json') as ImportedFeaturesModule;\r\n            break;\r\n          case 'engine':\r\n            featuresModule = await import('@/data/mobile-detailing/pricing/suvs/addons/engine/features.json') as ImportedFeaturesModule;\r\n            break;\r\n        }\r\n        break;\r\n      // boats and rvs don't have addon features yet\r\n    }\r\n  }\r\n  \r\n  if (!featuresModule) {\r\n    throw new Error(`No features data available for ${itemType} ${vehicleType}${category ? ` ${category}` : ''}`);\r\n  }\r\n  \r\n  return featuresModule.default;\r\n};\r\n\r\n/**\r\n * Hook to load features data with React Query\r\n */\r\nexport const useFeaturesData = ({ isOpen, vehicleType, category, itemType }: UseFeaturesDataProps) => {\r\n  return useQuery({\r\n    queryKey: ['booking','featuresData', vehicleType, category, itemType],\r\n    queryFn: () => loadFeaturesData(vehicleType, category, itemType),\r\n    enabled: isOpen && !!vehicleType,\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    cacheTime: 10 * 60 * 1000, // 10 minutes\r\n  });\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nimport { useAddons, useServiceTiers } from '@/features/booking/hooks';\r\nimport { useBookingAddons, useBookingData, useBookingService } from '@/features/booking/state';\r\n\r\n/**\r\n * Hook to manage payment step data and calculations\r\n * Separates data logic from UI components\r\n */\r\nexport const usePaymentData = () => {\r\n  // Get booking data from store\r\n  const { bookingData } = useBookingData();\r\n  const { serviceTier } = useBookingService();\r\n  const { addons } = useBookingAddons();\r\n  \r\n  // Load service tiers to get actual service data\r\n  const { serviceTiers, isLoading: serviceTiersLoading } = useServiceTiers(bookingData.vehicle || '');\r\n  \r\n  // Load addon data from all categories\r\n  const { availableAddons: windowsAddons } = useAddons(bookingData.vehicle || '', 'windows');\r\n  const { availableAddons: wheelsAddons } = useAddons(bookingData.vehicle || '', 'wheels');\r\n  const { availableAddons: trimAddons } = useAddons(bookingData.vehicle || '', 'trim');\r\n  const { availableAddons: engineAddons } = useAddons(bookingData.vehicle || '', 'engine');\r\n  \r\n  // Combine all addons from different categories\r\n  const allAvailableAddons = useMemo(() => \r\n    [...windowsAddons, ...wheelsAddons, ...trimAddons, ...engineAddons],\r\n    [windowsAddons, wheelsAddons, trimAddons, engineAddons]\r\n  );\r\n  \r\n  // Find selected service tier\r\n  const selectedService = useMemo(() => \r\n    serviceTiers.find(service => service.id === serviceTier),\r\n    [serviceTiers, serviceTier]\r\n  );\r\n  \r\n  // Find selected addons\r\n  const selectedAddons = useMemo(() => \r\n    allAvailableAddons.filter(addon => addons.includes(addon.id)),\r\n    [allAvailableAddons, addons]\r\n  );\r\n  \r\n  // Calculate totals\r\n  const servicePrice = selectedService?.price || 0;\r\n  const addonsPrice = selectedAddons.reduce((total, addon) => total + addon.price, 0);\r\n  const subtotal = servicePrice + addonsPrice;\r\n  const tax = subtotal * 0.08; // 8% tax\r\n  const total = subtotal + tax;\r\n  \r\n  return {\r\n    // Data\r\n    bookingData,\r\n    serviceTiers,\r\n    allAvailableAddons,\r\n    selectedService,\r\n    selectedAddons,\r\n    \r\n    // Loading states\r\n    serviceTiersLoading,\r\n    \r\n    // Calculations\r\n    servicePrice,\r\n    addonsPrice,\r\n    subtotal,\r\n    tax,\r\n    total\r\n  };\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport interface PaymentFormData {\r\n  paymentMethod: string;\r\n  cardDetails: {\r\n    cardNumber: string;\r\n    expiryDate: string;\r\n    cvv: string;\r\n    name: string;\r\n    email: string;\r\n    phone: string;\r\n    address: string;\r\n    city: string;\r\n    state: string;\r\n    zip: string;\r\n  };\r\n  activeTab: 'vehicle' | 'location' | 'summary' | 'payment';\r\n  expandedSections: {\r\n    cardInfo: boolean;\r\n    contactInfo: boolean;\r\n    billingAddress: boolean;\r\n  };\r\n}\r\n\r\n/**\r\n * Hook to manage payment form state\r\n * Separates form state from UI components\r\n */\r\nexport const usePaymentForm = () => {\r\n  const [paymentMethod, setPaymentMethod] = useState<string>('');\r\n  const [cardDetails, setCardDetails] = useState({\r\n    cardNumber: '',\r\n    expiryDate: '',\r\n    cvv: '',\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    zip: ''\r\n  });\r\n  const [activeTab, setActiveTab] = useState<'vehicle' | 'location' | 'summary' | 'payment'>('vehicle');\r\n  const [expandedSections, setExpandedSections] = useState({\r\n    cardInfo: false,\r\n    contactInfo: false,\r\n    billingAddress: false\r\n  });\r\n\r\n  const updateCardDetails = (field: keyof typeof cardDetails, value: string) => {\r\n    setCardDetails(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const toggleSection = (section: keyof typeof expandedSections) => {\r\n    setExpandedSections(prev => ({ \r\n      ...prev, \r\n      [section]: !prev[section] \r\n    }));\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setPaymentMethod('');\r\n    setCardDetails({\r\n      cardNumber: '',\r\n      expiryDate: '',\r\n      cvv: '',\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      address: '',\r\n      city: '',\r\n      state: '',\r\n      zip: ''\r\n    });\r\n    setActiveTab('vehicle');\r\n    setExpandedSections({\r\n      cardInfo: false,\r\n      contactInfo: false,\r\n      billingAddress: false\r\n    });\r\n  };\r\n\r\n  return {\r\n    // State\r\n    paymentMethod,\r\n    cardDetails,\r\n    activeTab,\r\n    expandedSections,\r\n    \r\n    // Actions\r\n    setPaymentMethod,\r\n    updateCardDetails,\r\n    setActiveTab,\r\n    toggleSection,\r\n    resetForm\r\n  };\r\n};\r\n","import type { UseQueryResult } from '@tanstack/react-query';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nexport interface TimeSlot {\r\n  id: string;\r\n  time: string;\r\n  available: boolean;\r\n  price?: number;\r\n}\r\n\r\nexport interface ScheduleOption {\r\n  date: string;\r\n  timeSlots: TimeSlot[];\r\n  available: boolean;\r\n}\r\n\r\n/**\r\n * Hook to load schedule options for a specific location and service\r\n */\r\nexport const useScheduleOptions = (locationId?: string, serviceId?: string, dateRange?: { start: string; end: string }): UseQueryResult<ScheduleOption[]> => {\r\n  return useQuery<ScheduleOption[]>({\r\n    queryKey: ['scheduleOptions', locationId, serviceId, dateRange],\r\n    queryFn: async (): Promise<ScheduleOption[]> => {\r\n      // TODO: Replace with actual API call\r\n      // For now, return mock data with current dates\r\n      const today = new Date();\r\n      const mockScheduleOptions: ScheduleOption[] = [];\r\n      \r\n      // Generate available dates for the next 30 days (calendar will default future dates to available)\r\n      for (let i = 0; i < 30; i++) {\r\n        const date = new Date(today);\r\n        date.setDate(today.getDate() + i);\r\n        const dateStr = date.toISOString().split('T')[0];\r\n        \r\n        // Make all future dates available (past dates are handled by calendar component)\r\n        const isAvailable = true;\r\n        \r\n        mockScheduleOptions.push({\r\n          date: dateStr,\r\n          available: isAvailable,\r\n          timeSlots: [\r\n            { id: `${String(i)}-1`, time: '9:00 AM', available: true },\r\n            { id: `${String(i)}-2`, time: '10:00 AM', available: true },\r\n            { id: `${String(i)}-3`, time: '11:00 AM', available: i % 4 !== 0 }, // Some unavailable\r\n            { id: `${String(i)}-4`, time: '1:00 PM', available: true },\r\n            { id: `${String(i)}-5`, time: '2:00 PM', available: true },\r\n            { id: `${String(i)}-6`, time: '3:00 PM', available: i % 5 !== 0 } // Some unavailable\r\n          ]\r\n        });\r\n      }\r\n\r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      return mockScheduleOptions;\r\n    },\r\n    enabled: !!locationId && !!serviceId,\r\n    staleTime: 2 * 60 * 1000, // 2 minutes\r\n    cacheTime: 5 * 60 * 1000, // 5 minutes\r\n  });\r\n};\r\n\r\n/**\r\n * Hook to get available time slots for a specific date\r\n */\r\nexport const useTimeSlots = (date: string, locationId?: string, serviceId?: string) => {\r\n  const { data: scheduleOptions, ...rest } = useScheduleOptions(locationId, serviceId);\r\n  \r\n  const foundOption = scheduleOptions?.find((option: ScheduleOption) => option.date === date);\r\n  const timeSlots: TimeSlot[] = foundOption?.timeSlots ?? [];\r\n  \r\n  return {\r\n    timeSlots,\r\n    ...rest\r\n  };\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { toFolderName } from '@/shared/constants';\r\n\r\nimport { getCardDescription } from '../utils/displayUtils';\r\n\r\n/**\r\n * Service tier for booking flow (price in dollars for compatibility)\r\n * Note: The centralized type uses priceCents\r\n */\r\nexport interface ServiceTier {\r\n  id: string;\r\n  name: string;\r\n  price: number;                   // Price in dollars (legacy format)\r\n  description: string;\r\n  features: string[];\r\n  featureIds: string[];\r\n  popular?: boolean;\r\n}\r\n\r\ninterface ServiceEntry {\r\n  cost: number;\r\n  features: string[];\r\n  popular?: boolean;\r\n  description?: string;\r\n}\r\n\r\ninterface FeatureData {\r\n  [key: string]: {\r\n    name: string;\r\n    description: string;\r\n    explanation: string;\r\n    image: string;\r\n    duration: number;\r\n    features: string[];\r\n  };\r\n}\r\n\r\n/**\r\n * Hook to load service tiers for a specific vehicle type\r\n */\r\nexport const useServiceTiers = (vehicleType: string): {\r\n  serviceTiers: ServiceTier[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n} => {\r\n  const [serviceTiers, setServiceTiers] = useState<ServiceTier[]>([]);\r\n\r\n\r\n  const { data, isLoading, error } = useQuery({\r\n    queryKey: ['booking','serviceTiers', vehicleType],\r\n    queryFn: async () => {\r\n      const folderName = toFolderName(vehicleType);\r\n      \r\n      if (!folderName) {\r\n        throw new Error(`No services available for vehicle type: ${vehicleType}`);\r\n      }\r\n\r\n      // Dynamically import the services data for the specific vehicle type\r\n      const [servicesModule, featuresModule] = await Promise.all([\r\n        import(`@/data/mobile-detailing/pricing/${folderName}/service/services.json`),\r\n        import(`@/data/mobile-detailing/pricing/${folderName}/service/features.json`)\r\n      ]) as [{ default: Record<string, ServiceEntry> }, { default: FeatureData }];\r\n\r\n      \r\n      return { \r\n        services: servicesModule.default, \r\n        features: featuresModule.default \r\n      };\r\n    },\r\n    enabled: !!vehicleType && !!toFolderName(vehicleType),\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    cacheTime: 10 * 60 * 1000, // 10 minutes\r\n  });\r\n\r\n\r\n  // Reset serviceTiers when vehicleType is empty or invalid\r\n  useEffect(() => {\r\n    if (!vehicleType || !toFolderName(vehicleType)) {\r\n      setServiceTiers([]);\r\n    }\r\n  }, [vehicleType]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      try {\r\n        const services = data.services as Record<string, ServiceEntry>;\r\n        const features = data.features as FeatureData;\r\n        \r\n        const processedServices = Object.entries(services).map(([name, service]) => {\r\n          return {\r\n            id: name.toLowerCase().replace(/\\s+/g, '-'),\r\n            name: name,\r\n            price: service.cost,\r\n            description: getCardDescription(service, service.features, features),\r\n            features: service.features.map((featureId: string) => getFeatureName(featureId, features)),\r\n            featureIds: service.features,\r\n            popular: service.popular || false\r\n          };\r\n        });\r\n        \r\n        setServiceTiers(processedServices);\r\n      } catch {\r\n        setServiceTiers([]);\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  return {\r\n    serviceTiers,\r\n    isLoading,\r\n    error: error?.message || null\r\n  };\r\n};\r\n\r\n/**\r\n * Helper function to get feature name from feature ID\r\n */\r\nconst getFeatureName = (featureId: string, featuresData: FeatureData): string => {\r\n  return featuresData[featureId]?.name || featureId;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { ChevronDown, ChevronUp,X } from 'lucide-react';\r\n\r\nimport { useFeaturesData } from '../../hooks';\r\nimport { generateFeatureDetails } from '../../utils/displayUtils';\r\n\r\ninterface DetailsItem {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n  featureIds: string[];\r\n  popular?: boolean;\r\n}\r\n\r\ninterface DetailsModalProps {\r\n  item: DetailsItem;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  vehicleType: string;\r\n  category?: string; // Optional for service modals\r\n  itemType: 'service' | 'addon';\r\n}\r\n\r\nconst DetailsModal: React.FC<DetailsModalProps> = ({\r\n  item,\r\n  isOpen,\r\n  onClose,\r\n  vehicleType,\r\n  category,\r\n  itemType\r\n}) => {\r\n  const [expandedFeatures, setExpandedFeatures] = useState<Set<string>>(new Set());\r\n  const featuresData = useFeaturesData({ isOpen, vehicleType, category, itemType });\r\n\r\n  const toggleFeature = (featureId: string) => {\r\n    setExpandedFeatures(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(featureId)) {\r\n        newSet.delete(featureId);\r\n      } else {\r\n        newSet.add(featureId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const getFeatureDetails = (featureId: string) => {\r\n    return generateFeatureDetails(featureId, featuresData);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-stone-900 rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"sticky top-0 bg-stone-900 border-b border-stone-700 p-6 rounded-t-xl\">\r\n          <div className=\"flex justify-between items-start\">\r\n            <div className=\"text-center flex-1\">\r\n              <h2 className=\"text-3xl font-bold text-white mb-2\">{item.name}</h2>\r\n              <p className=\"text-4xl font-bold text-orange-500\">\r\n                ${item.price.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-stone-400 hover:text-white transition-colors p-2\"\r\n              aria-label=\"Close modal\"\r\n            >\r\n              <X className=\"h-6 w-6\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6\">\r\n          {/* Description */}\r\n          <div className=\"mb-6\">\r\n            <p className=\"text-stone-300 text-lg\">{item.description}</p>\r\n          </div>\r\n\r\n          {/* Features */}\r\n          <div className=\"space-y-4\">\r\n            <h3 className=\"text-xl font-semibold text-white mb-4\">What&apos;s Included:</h3>\r\n            {item.featureIds.map((featureId) => {\r\n              const featureDetails = getFeatureDetails(featureId);\r\n              const isExpanded = expandedFeatures.has(featureId);\r\n              \r\n              return (\r\n                <div key={featureId} className=\"border border-stone-700 rounded-lg overflow-hidden\">\r\n                  <button\r\n                    onClick={() => {\r\n                      toggleFeature(featureId);\r\n                    }}\r\n                    className=\"w-full p-4 text-left bg-stone-800 hover:bg-stone-700 transition-colors flex justify-between items-center\"\r\n                  >\r\n                    <span className=\"text-white font-medium\">\r\n                      {featureDetails?.name || featureId}\r\n                    </span>\r\n                    {isExpanded ? (\r\n                      <ChevronUp className=\"h-5 w-5 text-stone-400\" />\r\n                    ) : (\r\n                      <ChevronDown className=\"h-5 w-5 text-stone-400\" />\r\n                    )}\r\n                  </button>\r\n                  \r\n                  {isExpanded && featureDetails && (\r\n                    <div className=\"p-4 bg-stone-850 border-t border-stone-700 space-y-4\">\r\n                      {/* Description */}\r\n                      {featureDetails.description && (\r\n                        <div>\r\n                          <h4 className=\"text-sm font-semibold text-orange-400 uppercase tracking-wide mb-2\">\r\n                            Description:\r\n                          </h4>\r\n                          <p className=\"text-stone-300 text-sm\">\r\n                            {featureDetails.description}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Process/Explanation */}\r\n                      {featureDetails.explanation && (\r\n                        <div>\r\n                          <h4 className=\"text-sm font-semibold text-orange-400 uppercase tracking-wide mb-2\">\r\n                            Process:\r\n                          </h4>\r\n                          <p className=\"text-stone-300 text-sm\">\r\n                            {featureDetails.explanation}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Features */}\r\n                      {featureDetails.features.length > 0 && (\r\n                        <div>\r\n                          <h4 className=\"text-sm font-semibold text-orange-400 uppercase tracking-wide mb-2\">\r\n                            Features:\r\n                          </h4>\r\n                          <ul className=\"space-y-1\">\r\n                            {featureDetails.features.map((feature: string, index: number) => (\r\n                              <li key={index} className=\"text-sm text-stone-300 flex items-start\">\r\n                                <span className=\"text-orange-500 mr-2\">•</span>\r\n                                {feature}\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Duration (if available) */}\r\n                      {featureDetails.duration && (\r\n                        <div className=\"pt-3 border-t border-stone-700\">\r\n                          <span className=\"text-sm text-orange-400 font-medium\">\r\n                            Estimated Duration: {featureDetails.duration} minutes\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailsModal;\r\n","// Footer component for booking flow\r\nimport React from 'react';\r\nimport { Lock,Star } from 'lucide-react';\r\n\r\ninterface FooterProps {\r\n  // Step progress props\r\n  currentStep?: string;\r\n  completedSteps?: string[];\r\n  showStepProgress?: boolean;\r\n  \r\n  // Trust strip props\r\n  averageRating?: number;\r\n  totalReviews?: number;\r\n  showTrustStrip?: boolean;\r\n  \r\n  // Navigation props\r\n  onNext?: () => void;\r\n  onBack?: () => void;\r\n  onCancel?: () => void;\r\n  onSkip?: () => void;\r\n  canGoNext?: boolean;\r\n  canGoBack?: boolean;\r\n  canSkip?: boolean;\r\n  isLoading?: boolean;\r\n  nextLabel?: string;\r\n  backLabel?: string;\r\n  skipLabel?: string;\r\n  showNavigation?: boolean;\r\n  \r\n  // Styling\r\n  className?: string;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({\r\n  // Step progress\r\n  currentStep,\r\n  completedSteps = [],\r\n  showStepProgress = true,\r\n  \r\n  // Trust strip\r\n  averageRating = 4.9,\r\n  totalReviews = 0,\r\n  showTrustStrip = true,\r\n  \r\n  // Navigation\r\n  onNext,\r\n  onBack,\r\n  onCancel,\r\n  onSkip,\r\n  canGoNext = true,\r\n  canGoBack = false,\r\n  canSkip = false,\r\n  isLoading = false,\r\n  nextLabel = 'Continue',\r\n  skipLabel = 'Skip',\r\n  showNavigation = true,\r\n  \r\n  className = '',\r\n}) => {\r\n  const stepOrder = ['vehicle-selection', 'location', 'service-tier', 'addons', 'schedule', 'payment'];\r\n  const stepLabels = {\r\n    'vehicle-selection': 'Vehicle',\r\n    'location': 'Location',\r\n    'service-tier': 'Service',\r\n    'addons': 'Addons',\r\n    'schedule': 'Schedule',\r\n    'payment': 'Payment',\r\n  };\r\n\r\n  const getStepStatus = (step: string) => {\r\n    if (completedSteps.includes(step)) return 'completed';\r\n    if (step === currentStep) return 'current';\r\n    if (stepOrder.indexOf(step) < stepOrder.indexOf(currentStep || '')) return 'completed';\r\n    return 'upcoming';\r\n  };\r\n\r\n  return (\r\n    <div className={`w-full ${className}`}>\r\n      {/* Step Progress */}\r\n      {showStepProgress && (\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center justify-center space-x-4\">\r\n            {stepOrder.map((step) => {\r\n              const status = getStepStatus(step);\r\n\r\n              return (\r\n                <div key={step} className=\"flex items-center\">\r\n                  {/* Step Label with Focus Ring */}\r\n                  <div\r\n                    className={`\r\n                      px-4 py-2 rounded-lg transition-all duration-200\r\n                      ${\r\n                        status === 'current'\r\n                          ? 'ring-2 ring-orange-500 ring-offset-2 ring-offset-stone-900 bg-orange-500/10'\r\n                          : status === 'completed'\r\n                          ? 'bg-orange-500/5'\r\n                          : 'hover:bg-gray-800/30'\r\n                      }\r\n                    `}\r\n                  >\r\n                    <p\r\n                      className={`\r\n                        text-lg font-medium\r\n                        ${\r\n                          status === 'completed' || status === 'current'\r\n                            ? 'text-orange-500'\r\n                            : 'text-gray-400'\r\n                        }\r\n                      `}\r\n                    >\r\n                      {stepLabels[step as keyof typeof stepLabels]}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Navigation Buttons */}\r\n      {showNavigation && (\r\n        <div className=\"flex justify-center items-center gap-4 mb-8\">\r\n          <button\r\n            onClick={onCancel}\r\n            disabled={isLoading}\r\n            className=\"px-6 py-3 border border-gray-600 hover:border-gray-500 text-white rounded-lg transition-colors disabled:opacity-50\"\r\n          >\r\n            Exit\r\n          </button>\r\n          \r\n          {canGoBack && onBack && (\r\n            <button\r\n              onClick={onBack}\r\n              disabled={isLoading}\r\n              className=\"px-6 py-3 border border-gray-600 hover:border-gray-500 text-white rounded-lg transition-colors disabled:opacity-50\"\r\n            >\r\n              Back\r\n            </button>\r\n          )}\r\n          \r\n          {canSkip && onSkip && (\r\n            <button\r\n              onClick={onSkip}\r\n              disabled={isLoading}\r\n              className=\"px-6 py-3 text-gray-300 hover:text-white transition-colors disabled:opacity-50\"\r\n            >\r\n              {skipLabel}\r\n            </button>\r\n          )}\r\n          \r\n          <button\r\n            onClick={onNext}\r\n            disabled={!canGoNext || isLoading}\r\n            className=\"px-8 py-3 bg-orange-500 hover:bg-orange-600 text-white rounded-lg transition-colors disabled:opacity-50\"\r\n          >\r\n            {isLoading ? 'Loading...' : nextLabel}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Trust Strip */}\r\n      {showTrustStrip && (\r\n        <div className=\"mt-8 mb-16\">\r\n          <div className=\"flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 text-center\">\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8 sm:gap-12 place-items-center\">\r\n              <div className=\"flex items-center text-white\">\r\n                <Star className=\"h-5 w-5 text-orange-500 mr-2\" />\r\n                <a \r\n                  href=\"https://share.google/dAerqNUgo3WpYeJwP\" \r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\" \r\n                  className=\"font-semibold hover:text-orange-400 transition-colors duration-200\"\r\n                >\r\n                  {averageRating}/5 ({totalReviews} reviews)\r\n                </a>\r\n              </div>\r\n              <div className=\"flex items-center text-white\">\r\n                <Lock className=\"h-5 w-5 text-orange-500 mr-2\" />\r\n                <span>Secure checkout via <a href=\"https://stripe.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:text-blue-400 transition-colors duration-200\">Stripe</a></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport { useImageRotation } from '@/shared/hooks';\r\nimport { getImageOpacityClasses, getTransitionStyles } from '@/shared/utils';\r\n\r\nimport { useBookingGallery } from '../hooks/useBookingGallery';\r\nimport { Footer } from './shared';\r\n\r\ninterface BookingLayoutProps {\r\n  children: React.ReactNode;\r\n  currentStep: string;\r\n  completedSteps: string[];\r\n  onNext: () => void;\r\n  onBack: () => void;\r\n  onCancel: () => void;\r\n  canGoNext: boolean;\r\n  canGoBack: boolean;\r\n  canSkip: boolean;\r\n  isLoading: boolean;\r\n  nextLabel: string;\r\n  backLabel: string;\r\n  showNavigation: boolean;\r\n  averageRating?: number;\r\n  totalReviews?: number;\r\n  showTrustStrip?: boolean;\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * BookingLayout - Provides consistent layout structure for booking steps\r\n * Fixes absolute positioning issues by using proper grid layout\r\n */\r\nconst BookingLayout: React.FC<BookingLayoutProps> = ({\r\n  children,\r\n  currentStep,\r\n  completedSteps,\r\n  onNext,\r\n  onBack,\r\n  onCancel,\r\n  canGoNext,\r\n  canGoBack,\r\n  canSkip,\r\n  isLoading,\r\n  nextLabel,\r\n  backLabel,\r\n  showNavigation,\r\n  averageRating = 4.9,\r\n  totalReviews = 112,\r\n  showTrustStrip = true,\r\n  className = ''\r\n}) => {\r\n  // Load gallery images for background carousel\r\n  const { images: galleryImages, isLoading: loading } = useBookingGallery();\r\n\r\n  // Extract image URLs for the rotation utility\r\n  const imageUrls = galleryImages.map(img => img.src).filter(Boolean);\r\n\r\n  // Use the image rotation utility\r\n  const rotation = useImageRotation({\r\n    images: imageUrls,\r\n    autoRotate: true,\r\n    interval: 7000, // 7 seconds to match original\r\n    fadeDuration: 2000, // 2 seconds fade duration\r\n    preloadNext: true,\r\n    pauseOnHover: false // Background doesn't need hover pause\r\n  });\r\n\r\n  const { currentIndex } = rotation;\r\n\r\n  const getStepTitle = (step: string) => {\r\n    const titles = {\r\n      'vehicle-selection': 'Vehicle Details',\r\n      'location': 'Service Location',\r\n      'service-tier': 'Service Selection',\r\n      'addons': 'Add-ons',\r\n      'schedule': 'Schedule',\r\n      'payment': 'Payment'\r\n    };\r\n    return titles[step as keyof typeof titles] || 'Booking Step';\r\n  };\r\n\r\n\r\n  return (\r\n    <section className={`relative w-full min-h-screen bg-stone-900 overflow-hidden ${className}`}>\r\n      {/* Hero Background with Image Rotation */}\r\n      <div className=\"absolute inset-0 z-0\">\r\n        {/* Render all images with opacity transitions */}\r\n        {galleryImages.map((image, index) => (\r\n          <img\r\n            key={image.id}\r\n            src={image.src}\r\n            alt={image.alt || `Booking background image ${String(index + 1)}`}\r\n            className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n            style={getTransitionStyles(2000)}\r\n            decoding={index === 0 ? 'sync' : 'async'}\r\n            loading={index === 0 ? 'eager' : 'lazy'}\r\n          />\r\n        ))}\r\n        \r\n        {/* Fallback background if no images loaded */}\r\n        {!galleryImages.length && !loading && (\r\n          <div className=\"w-full h-full bg-gradient-to-br from-stone-800 to-stone-900\" />\r\n        )}\r\n      </div>\r\n      \r\n      {/* Dark Overlay */}\r\n      <div className=\"absolute inset-0 bg-black/40 z-10\" />\r\n      \r\n      {/* Step Header - Absolutely positioned to not affect layout */}\r\n      <div className=\"absolute top-20 left-0 right-0 z-20\">\r\n        <div className=\"text-center px-4 sm:px-6 lg:px-8\">\r\n          <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-bold text-white\">\r\n            {getStepTitle(currentStep)}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content Container with Proper Grid Layout */}\r\n      <div className=\"relative z-20 h-screen grid grid-rows-[1fr_auto]\">\r\n\r\n        {/* Main Content Area */}\r\n        <div className=\"flex items-center justify-center px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"w-full max-w-2xl\">\r\n            <div className=\"space-y-8\">\r\n              {children}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Footer with Step Navigation */}\r\n        <div className=\"px-4 sm:px-6 lg:px-8 py-4 pb-8\">\r\n          <Footer\r\n            currentStep={currentStep}\r\n            completedSteps={completedSteps}\r\n            showStepProgress={true}\r\n            averageRating={averageRating}\r\n            totalReviews={totalReviews}\r\n            showTrustStrip={showTrustStrip}\r\n            onNext={onNext}\r\n            onBack={onBack}\r\n            onCancel={onCancel}\r\n            canGoNext={canGoNext}\r\n            canGoBack={canGoBack}\r\n            canSkip={canSkip}\r\n            isLoading={isLoading}\r\n            nextLabel={nextLabel}\r\n            backLabel={backLabel}\r\n            showNavigation={showNavigation}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BookingLayout;\r\n","import React from 'react';\r\n\r\nimport DetailsModal from '../../shared/DetailsModal';\r\n\r\ninterface AddonItem {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n  featureIds: string[];\r\n  popular?: boolean;\r\n}\r\n\r\ninterface AddonDetailsModalProps {\r\n  addon: AddonItem;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  vehicleType: string;\r\n  category: string;\r\n}\r\n\r\nconst AddonDetailsModal: React.FC<AddonDetailsModalProps> = ({\r\n  addon,\r\n  isOpen,\r\n  onClose,\r\n  vehicleType,\r\n  category\r\n}) => {\r\n  return (\r\n    <DetailsModal\r\n      item={addon}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      vehicleType={vehicleType}\r\n      category={category}\r\n      itemType=\"addon\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddonDetailsModal;\r\n","import React from 'react';\r\nimport { Droplets, Shield, Sparkles, Wrench } from 'lucide-react';\r\n\r\ninterface TabsProps {\r\n  selectedCategory: string;\r\n  onCategorySelect: (categoryId: string) => void;\r\n}\r\n\r\nconst Tabs: React.FC<TabsProps> = ({ selectedCategory, onCategorySelect }) => {\r\n  // Addon categories\r\n  const addonCategories = [\r\n    { id: 'windows', name: 'Windows', icon: Sparkles },\r\n    { id: 'wheels', name: 'Wheels', icon: Wrench },\r\n    { id: 'trim', name: 'Interior', icon: Droplets },\r\n    { id: 'engine', name: 'Engine', icon: Shield },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"absolute left-0 right-0 z-20 py-8\" style={{ top: '150px' }}>\r\n      <div className=\"text-center px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex flex-wrap justify-center gap-3 max-w-4xl mx-auto\">\r\n          {addonCategories.map((category) => {\r\n            const IconComponent = category.icon;\r\n            return (\r\n              <button\r\n                key={category.id}\r\n                onClick={() => {\r\n                  onCategorySelect(category.id);\r\n                }}\r\n                className={`p-2 rounded-lg border-2 transition-all w-24 h-24 ${\r\n                  selectedCategory === category.id\r\n                    ? 'border-orange-500 bg-orange-500/20'\r\n                    : 'border-gray-600 hover:border-gray-500'\r\n                }`}\r\n              >\r\n                <IconComponent className=\"w-8 h-8 text-white mb-2 mx-auto\" />\r\n                <div className=\"text-white font-medium\">{category.name}</div>\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { CheckCircle } from 'lucide-react';\r\n\r\nimport type { AddonItem } from '@/features/booking/hooks';\r\nimport { useAddons } from '@/features/booking/hooks';\r\nimport { useBookingAddons, useBookingVehicle } from '@/features/booking/state';\r\nimport { Carousel } from '@/shared/ui';\r\n\r\nimport AddonDetailsModal from './AddonDetailsModal';\r\nimport Tabs from './Tabs';\r\n\r\ninterface AddonsProps {\r\n  onAddonsSelected?: (addons: string[]) => void;\r\n}\r\n\r\ninterface CarouselAddonItem extends AddonItem {\r\n  position: 'center' | 'left' | 'right';\r\n}\r\n\r\nconst Addons: React.FC<AddonsProps> = ({ onAddonsSelected }) => {\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('windows');\r\n  const [modalAddon, setModalAddon] = useState<AddonItem | null>(null);\r\n  // Get data from narrow selectors\r\n  const { vehicle } = useBookingVehicle();\r\n  const { addons, setAddons } = useBookingAddons();\r\n\r\n  // Use the data hook for addons\r\n  const { availableAddons, isLoading: _isLoading, error } = useAddons(\r\n    vehicle || '', \r\n    selectedCategory\r\n  );\r\n\r\n  // Define handlers before any conditional returns to follow hooks rules\r\n  const handleAddonToggle = useCallback((addonId: string) => {\r\n    // Enforce single selection: selecting a new addon replaces any existing selection.\r\n    const newSelection = addons.includes(addonId) ? [] : [addonId];\r\n\r\n    setAddons(newSelection);\r\n    onAddonsSelected?.(newSelection);\r\n  }, [addons, setAddons, onAddonsSelected]);\r\n\r\n  const handleCategorySelect = (categoryId: string) => {\r\n    setSelectedCategory(categoryId);\r\n  };\r\n\r\n  const handleCardClick = (addon: AddonItem) => {\r\n    setModalAddon(addon);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalAddon(null);\r\n  };\r\n\r\n  const renderAddonCard = (addon: CarouselAddonItem) => {\r\n    const isAddonSelected = addons.includes(addon.id);\r\n    \r\n    return (\r\n      <div\r\n        className={`bg-stone-800/80 backdrop-blur-sm rounded-xl p-8 text-center transition-all duration-300 transform cursor-pointer w-[416px] flex-shrink-0 relative ${\r\n          addon.position === 'center'\r\n            ? `scale-100 z-10 ring-2 ${isAddonSelected ? 'ring-green-500' : 'ring-orange-500'}`\r\n            : addon.position === 'left'\r\n            ? 'scale-90 -translate-x-4 opacity-70'\r\n            : 'scale-90 translate-x-4 opacity-70'\r\n        }`}\r\n        onClick={() => {\r\n          handleCardClick(addon);\r\n        }}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter' || e.key === ' ') {\r\n            e.preventDefault();\r\n            handleCardClick(addon);\r\n          }\r\n        }}\r\n      >\r\n        {/* Popular Badge */}\r\n        {addon.popular && (\r\n          <div className=\"absolute -top-4 left-1/2 -translate-x-1/2\">\r\n            <span className=\"bg-orange-500 text-white px-4 py-1.5 rounded-full text-base font-medium\">\r\n              Most Popular\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        {/* Addon Header */}\r\n        <div className=\"mb-5\">\r\n          <h3 className=\"text-3xl font-bold text-white mb-3\">{addon.name}</h3>\r\n          <p className=\"text-4xl font-bold text-orange-500\">\r\n            ${Number(addon.price).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Description and Features */}\r\n        <div className=\"mb-5\">\r\n          <p className=\"text-stone-300 text-base mb-5\">{addon.description}</p>\r\n          \r\n          {/* Features List */}\r\n          {addon.features.length > 0 && (\r\n            <div className=\"space-y-3\">\r\n              {addon.features.map((feature: string, index: number) => (\r\n                <div key={index} className=\"flex items-center text-base text-stone-300\">\r\n                  <CheckCircle className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\r\n                  <span className=\"truncate\">{feature}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Selection Button */}\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleAddonToggle(addon.id);\r\n          }}\r\n          className={`mt-8 w-full py-4 px-8 rounded-lg font-semibold text-lg transition-colors flex items-center justify-center gap-3 ${\r\n            isAddonSelected\r\n              ? 'bg-green-600 hover:bg-green-700 text-white'\r\n              : 'bg-orange-500 hover:bg-orange-600 text-white'\r\n          }`}\r\n        >\r\n          {isAddonSelected && <CheckCircle size={20} />}\r\n          {isAddonSelected ? 'Selected' : 'Select Addon'}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Guard against missing vehicle selection\r\n  if (!vehicle) {\r\n    return (\r\n      <div className=\"w-full max-w-4xl mx-auto\">\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-white text-lg\">Please select a vehicle first.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"w-full max-w-4xl mx-auto\">\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-red-500\">Error loading addons: {error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto relative\">\r\n      {/* Category Tabs - Positioned between header and cards */}\r\n      <Tabs \r\n        selectedCategory={selectedCategory}\r\n        onCategorySelect={handleCategorySelect}\r\n      />\r\n      \r\n      {/* Addon Carousel */}\r\n      <Carousel\r\n        items={availableAddons}\r\n        selectedItem=\"\"\r\n        onItemSelect={() => {}} // Not used for addons\r\n        renderItem={renderAddonCard}\r\n        onItemClick={handleCardClick}\r\n        emptyMessage={`No add-ons available for ${selectedCategory}`}\r\n      />\r\n\r\n      {/* Addon Details Modal */}\r\n      {modalAddon && (\r\n        <AddonDetailsModal\r\n          addon={modalAddon}\r\n          isOpen={!!modalAddon}\r\n          onClose={handleCloseModal}\r\n          vehicleType={vehicle}\r\n          category={selectedCategory}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addons;\r\n","import React from 'react';\r\n\r\nimport Addons from './Addons';\r\n\r\ninterface StepAddonsProps {\r\n  onAddonsSelected?: (addons: string[]) => void;\r\n}\r\n\r\n/**\r\n * StepAddons - Complete addons step with addon selection\r\n * The main step header is handled by BookingLayout\r\n * The Addons component handles tabs and addon selection\r\n */\r\nconst StepAddons: React.FC<StepAddonsProps> = ({ onAddonsSelected }) => {\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto\">\r\n      {/* Addon Selection with integrated tabs */}\r\n      <Addons onAddonsSelected={onAddonsSelected} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepAddons;","import React, { useState } from 'react';\r\n\r\nimport { useBookingData } from '@/features/booking/state';\r\n\r\nconst StepLocation: React.FC = () => {\r\n  const { bookingData, setLocation } = useBookingData();\r\n  const [address, setAddress] = useState(bookingData.location.address || '');\r\n  const [city, setCity] = useState(bookingData.location.city || '');\r\n  const [state, setState] = useState(bookingData.location.state || '');\r\n  const [zip, setZip] = useState(bookingData.location.zip || '');\r\n  const [notes, setNotes] = useState(bookingData.location.notes || '');\r\n  const [locationTypes, setLocationTypes] = useState<string[]>(bookingData.location.locationType ? bookingData.location.locationType.split(',') : []);\r\n\r\n  const handleAddressChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAddress(e.target.value);\r\n    setLocation({ ...bookingData.location, address: e.target.value });\r\n  };\r\n\r\n  const handleCityChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCity(e.target.value);\r\n    setLocation({ ...bookingData.location, city: e.target.value });\r\n  };\r\n\r\n  const handleStateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState(e.target.value);\r\n    setLocation({ ...bookingData.location, state: e.target.value });\r\n  };\r\n\r\n  const handleZipChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setZip(e.target.value);\r\n    setLocation({ ...bookingData.location, zip: e.target.value });\r\n  };\r\n\r\n  const handleNotesChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setNotes(e.target.value);\r\n    setLocation({ ...bookingData.location, notes: e.target.value });\r\n  };\r\n\r\n  const handleLocationTypeChange = (type: string) => {\r\n    const updatedTypes = locationTypes.includes(type)\r\n      ? locationTypes.filter(t => t !== type) // Remove if already selected\r\n      : [...locationTypes, type]; // Add if not selected\r\n    \r\n    setLocationTypes(updatedTypes);\r\n    setLocation({ ...bookingData.location, locationType: updatedTypes.join(',') });\r\n  };\r\n\r\n  const availableLocationTypes = ['Garage', 'Driveway', 'Business', 'Hangar', 'Street', 'Other'];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Location Type Checkboxes */}\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-white font-medium text-lg\">Please tell us where your vehicle will be serviced</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\r\n          {availableLocationTypes.map((type) => (\r\n            <label\r\n              key={type}\r\n              className={`flex items-center space-x-3 p-3 rounded-lg border-2 cursor-pointer transition-all ${\r\n                locationTypes.includes(type)\r\n                  ? 'border-orange-500 bg-orange-500/20'\r\n                  : 'border-gray-600 hover:border-gray-500 bg-gray-700'\r\n              }`}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                value={type}\r\n                checked={locationTypes.includes(type)}\r\n                onChange={() => {\r\n                  handleLocationTypeChange(type);\r\n                }}\r\n                className=\"w-4 h-4 text-orange-500 bg-gray-700 border-gray-600 focus:ring-orange-500 focus:ring-2\"\r\n              />\r\n              <span className=\"text-white font-medium\">{type}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Address Fields */}\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            value={address}\r\n            onChange={handleAddressChange}\r\n            className=\"w-full p-3 rounded-lg bg-gray-700 border border-gray-600 text-white placeholder-gray-400 focus:border-orange-500 focus:outline-none\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"City\"\r\n              value={city}\r\n              onChange={handleCityChange}\r\n              className=\"w-full p-3 rounded-lg bg-gray-700 border border-gray-600 text-white placeholder-gray-400 focus:border-orange-500 focus:outline-none\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"State\"\r\n              value={state}\r\n              onChange={handleStateChange}\r\n              className=\"w-full p-3 rounded-lg bg-gray-700 border border-gray-600 text-white placeholder-gray-400 focus:border-orange-500 focus:outline-none\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ZIP Code\"\r\n              value={zip}\r\n              onChange={handleZipChange}\r\n              className=\"w-full p-3 rounded-lg bg-gray-700 border border-gray-600 text-white placeholder-gray-400 focus:border-orange-500 focus:outline-none\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <textarea\r\n            placeholder=\"Special notes (optional)\"\r\n            value={notes}\r\n            onChange={handleNotesChange}\r\n            rows={5}\r\n            className=\"w-full p-3 rounded-lg bg-gray-700 border border-gray-600 text-white placeholder-gray-400 focus:border-orange-500 focus:outline-none resize-none\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepLocation;\r\n","import React from 'react';\r\n\r\nexport const CardIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\r\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\r\n    <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2zm0 2v2h16V6H4zm0 4v6h16v-6H4z\"/>\r\n  </svg>\r\n);\r\n\r\nexport const ApplePayIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\r\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\r\n    <path d=\"M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z\"/>\r\n  </svg>\r\n);\r\n\r\nexport const GooglePayIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\r\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\r\n    <path d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" fill=\"#4285F4\"/>\r\n    <path d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" fill=\"#34A853\"/>\r\n    <path d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" fill=\"#FBBC05\"/>\r\n    <path d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" fill=\"#EA4335\"/>\r\n  </svg>\r\n);\r\n\r\nexport const PaymentIcons = {\r\n  card: CardIcon,\r\n  'apple-pay': ApplePayIcon,\r\n  'google-pay': GooglePayIcon,\r\n} as const;\r\n","import React from 'react';\r\n\r\nimport { PaymentIcons } from '@/shared/ui/icons/PaymentIcons';\r\n\r\ntype PaymentOptionProps = {\r\n  id: 'card' | 'apple-pay' | 'google-pay' | 'paypal';\r\n  label: string;\r\n  selected: boolean;\r\n  onSelect: (id: PaymentOptionProps['id']) => void;\r\n  icon: string;\r\n};\r\n\r\nexport const PaymentOption: React.FC<PaymentOptionProps> = ({ \r\n  id, \r\n  label, \r\n  selected, \r\n  onSelect, \r\n  icon \r\n}) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onSelect(id);\r\n      }}\r\n      className={[\r\n        'px-4 py-3 rounded-lg border-2 transition-all flex items-center justify-center gap-3 min-h-[48px] w-full',\r\n        selected \r\n          ? 'border-orange-500 bg-orange-500/20' \r\n          : 'border-stone-600 hover:border-stone-500'\r\n      ].join(' ')}\r\n      aria-pressed={selected}\r\n      aria-label={label}\r\n    >\r\n      <div className={`${icon.startsWith('/') ? 'h-6 w-6' : 'h-5 w-5'} flex items-center justify-center flex-shrink-0`}>\r\n        {icon.startsWith('/') ? (\r\n          <img \r\n            src={icon} \r\n            alt={label} \r\n            className=\"h-6 w-auto max-w-full\"\r\n          />\r\n        ) : icon in PaymentIcons ? (\r\n          React.createElement(PaymentIcons[icon as keyof typeof PaymentIcons], { \r\n            className: \"h-5 w-5\" \r\n          })\r\n        ) : (\r\n          <span className=\"text-lg\">{icon}</span>\r\n        )}\r\n      </div>\r\n      <span className=\"text-white text-sm font-medium truncate\">{label}</span>\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\ninterface PaymentSummaryProps {\r\n  servicePrice: number;\r\n  addonsPrice: number;\r\n  subtotal: number;\r\n  tax: number;\r\n  total: number;\r\n  selectedService?: {\r\n    name: string;\r\n    price: number;\r\n  };\r\n  selectedAddons: Array<{\r\n    name: string;\r\n    price: number;\r\n  }>;\r\n}\r\n\r\nconst PaymentSummary: React.FC<PaymentSummaryProps> = ({\r\n  servicePrice,\r\n  subtotal,\r\n  tax,\r\n  total,\r\n  selectedService,\r\n  selectedAddons\r\n}) => {\r\n  return (\r\n    <div className=\"bg-gray-800 rounded-lg p-6\">\r\n      <h3 className=\"text-xl font-semibold text-white mb-4\">Order Summary</h3>\r\n      \r\n      <div className=\"space-y-3\">\r\n        {/* Service */}\r\n        {selectedService && (\r\n          <div className=\"flex justify-between text-gray-300\">\r\n            <span>{selectedService.name}</span>\r\n            <span>${servicePrice.toFixed(2)}</span>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Addons */}\r\n        {selectedAddons.map((addon) => (\r\n          <div key={addon.name} className=\"flex justify-between text-gray-300\">\r\n            <span className=\"text-sm\">+ {addon.name}</span>\r\n            <span>${addon.price.toFixed(2)}</span>\r\n          </div>\r\n        ))}\r\n        \r\n        {/* Subtotal */}\r\n        <div className=\"border-t border-gray-600 pt-3\">\r\n          <div className=\"flex justify-between text-gray-300\">\r\n            <span>Subtotal</span>\r\n            <span>${subtotal.toFixed(2)}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Tax */}\r\n        <div className=\"flex justify-between text-gray-300\">\r\n          <span>Tax (8%)</span>\r\n          <span>${tax.toFixed(2)}</span>\r\n        </div>\r\n        \r\n        {/* Total */}\r\n        <div className=\"border-t border-gray-600 pt-3\">\r\n          <div className=\"flex justify-between text-white font-semibold text-lg\">\r\n            <span>Total</span>\r\n            <span>${total.toFixed(2)}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSummary;\r\n","import React from 'react';\r\nimport { Car, CreditCard, FileText, MapPin } from 'lucide-react';\r\n\r\ninterface PaymentTabsProps {\r\n  activeTab: 'vehicle' | 'location' | 'summary' | 'payment';\r\n  onTabChange: (tab: 'vehicle' | 'location' | 'summary' | 'payment') => void;\r\n}\r\n\r\nconst PaymentTabs: React.FC<PaymentTabsProps> = ({ activeTab, onTabChange }) => {\r\n  const tabs = [\r\n    { id: 'vehicle' as const, label: 'Vehicle', icon: Car },\r\n    { id: 'location' as const, label: 'Location', icon: MapPin },\r\n    { id: 'summary' as const, label: 'Summary', icon: FileText },\r\n    { id: 'payment' as const, label: 'Payment', icon: CreditCard }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex space-x-1 bg-gray-800 p-1 rounded-lg mb-6\">\r\n      {tabs.map(({ id, label, icon: Icon }) => (\r\n        <button\r\n          key={id}\r\n          onClick={() => { \r\n            onTabChange(id); \r\n          }}\r\n          className={`flex items-center space-x-2 px-4 py-2 rounded-md transition-colors ${\r\n            activeTab === id\r\n              ? 'bg-blue-600 text-white'\r\n              : 'text-gray-300 hover:text-white hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          <Icon className=\"w-4 h-4\" />\r\n          <span>{label}</span>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentTabs;\r\n","import React from 'react';\r\nimport { Plus } from 'lucide-react';\r\n\r\nimport type { BookingData } from '@/features/booking/state';\r\n\r\ninterface Addon {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n}\r\n\r\ninterface ServiceTier {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n}\r\n\r\ninterface SummarySectionProps {\r\n  bookingData: BookingData;\r\n  serviceTiers: ServiceTier[];\r\n  allAvailableAddons: Addon[];\r\n  totals: {\r\n    servicePrice: number;\r\n    addonPrice: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\nexport const SummarySection: React.FC<SummarySectionProps> = ({\r\n  bookingData,\r\n  serviceTiers,\r\n  allAvailableAddons,\r\n  totals\r\n}) => {\r\n  const { serviceTier, addons, schedule } = bookingData;\r\n  const { servicePrice, total } = totals;\r\n  \r\n  // Find the selected service for display name\r\n  const selectedService = Array.isArray(serviceTiers) ? serviceTiers.find(service => service.id === serviceTier) : null;\r\n  const serviceInfo = selectedService || { name: 'No Service Selected', price: 0 };\r\n  \r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Service */}\r\n      {serviceTier && (\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-white mb-3\">Service</h3>\r\n          <div className=\"bg-stone-700/50 rounded-2xl p-4 border border-stone-600/50\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <span className=\"text-white font-medium\">{serviceInfo.name}</span>\r\n              <span className=\"text-2xl font-bold text-orange-400\">${servicePrice}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add-ons */}\r\n      {addons.length > 0 && (\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-white mb-3\">Add-ons</h3>\r\n          <div className=\"space-y-3\">\r\n            {addons.map((addonId, index) => {\r\n              const addon = allAvailableAddons.find(a => a.id === addonId);\r\n              return (\r\n                <div key={index} className=\"bg-stone-700/50 rounded-2xl p-4 border border-stone-600/50\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Plus className=\"w-4 h-4 text-orange-400\" />\r\n                      <span className=\"text-white/90 text-sm font-medium\">{addon ? addon.name : addonId}</span>\r\n                    </div>\r\n                    <span className=\"text-orange-400 font-semibold\">${addon ? addon.price : 0}</span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Schedule */}\r\n      {schedule.dates.length > 0 && (\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-white mb-3\">Schedule</h3>\r\n          <div className=\"bg-stone-700/50 rounded-2xl p-4 border border-stone-600/50\">\r\n            <div className=\"space-y-2\">\r\n              {schedule.dates.map((date, index) => (\r\n                <div key={index} className=\"text-white font-medium\">\r\n                  {new Date(date).toLocaleDateString('en-US', { \r\n                    weekday: 'long', \r\n                    month: 'long', \r\n                    day: 'numeric' \r\n                  })}\r\n                </div>\r\n              ))}\r\n              {schedule.time && <div className=\"text-sm text-gray-400\">Time: {schedule.time}</div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Total */}\r\n      <div className=\"pt-6 border-t border-stone-600/50\">\r\n        <div className=\"bg-orange-500/20 rounded-3xl p-6 border border-orange-400/30\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <span className=\"text-xl font-semibold text-white\">Total</span>\r\n            <div className=\"text-right\">\r\n              <div className=\"text-3xl font-bold text-orange-400\">${total}</div>\r\n              <div className=\"text-xs text-gray-400 mt-1\">Estimated Total</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\n\r\nimport type { BookingData } from '@/features/booking/state';\r\n\r\ninterface VehicleSectionProps {\r\n  bookingData: BookingData;\r\n}\r\n\r\nexport const VehicleSection: React.FC<VehicleSectionProps> = ({ bookingData }) => {\r\n  const { vehicle, vehicleDetails } = bookingData;\r\n  \r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"text-center\">\r\n        <h3 className=\"text-2xl font-bold text-white mb-6\">Vehicle Information</h3>\r\n      </div>\r\n      \r\n      {/* Vehicle Details */}\r\n      {(vehicleDetails.make || vehicle) && (\r\n        <div className=\"bg-gray-800/50 rounded-lg p-6\">\r\n          <h4 className=\"text-xl font-semibold text-white mb-4\">Selected Vehicle</h4>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-base\">\r\n            <div>\r\n              <span className=\"text-gray-400\">Make:</span>\r\n              <div className=\"text-white text-lg font-semibold\">{vehicleDetails.make || 'N/A'}</div>\r\n            </div>\r\n            <div>\r\n              <span className=\"text-gray-400\">Model:</span>\r\n              <div className=\"text-white text-lg font-semibold\">{vehicleDetails.model || 'N/A'}</div>\r\n            </div>\r\n            <div>\r\n              <span className=\"text-gray-400\">Year:</span>\r\n              <div className=\"text-white text-lg font-semibold\">{vehicleDetails.year || 'N/A'}</div>\r\n            </div>\r\n            <div>\r\n              <span className=\"text-gray-400\">\r\n                {vehicleDetails.color ? 'Color:' : 'Length:'}\r\n              </span>\r\n              <div className=\"text-white text-lg font-semibold\">\r\n                {vehicleDetails.color ? \r\n                  vehicleDetails.color.charAt(0).toUpperCase() + vehicleDetails.color.slice(1) : \r\n                  vehicleDetails.length || 'N/A'\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {!vehicleDetails.make && !vehicle && (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-gray-400\">No vehicle information available</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\n\r\nimport { usePaymentData, usePaymentForm } from '@/features/booking/hooks';\r\nimport { useBookingPayment } from '@/features/booking/state';\r\n\r\nimport { PaymentOption } from '../../payment/PaymentOption';\r\nimport { PaymentSummary, PaymentTabs, SummarySection, VehicleSection } from './components';\r\n\r\ninterface StepPaymentProps {\r\n  onPaymentComplete?: () => void;\r\n}\r\n\r\nconst StepPayment: React.FC<StepPaymentProps> = ({ onPaymentComplete }) => {\r\n  // Use custom hooks for data and form state\r\n  const paymentData = usePaymentData();\r\n  const paymentForm = usePaymentForm();\r\n  const { setPaymentMethod: setStorePaymentMethod } = useBookingPayment();\r\n\r\n  const handlePaymentMethodSelect = (method: string) => {\r\n    paymentForm.setPaymentMethod(method);\r\n    setStorePaymentMethod(method);\r\n  };\r\n\r\n  const handleCompleteBooking = () => {\r\n    onPaymentComplete?.();\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (paymentForm.paymentMethod === 'card') {\r\n      const { cardDetails } = paymentForm;\r\n      return cardDetails.cardNumber && cardDetails.expiryDate && cardDetails.cvv && \r\n             cardDetails.name && cardDetails.email && cardDetails.phone && \r\n             cardDetails.address && cardDetails.city && cardDetails.state && cardDetails.zip;\r\n    }\r\n    return paymentForm.paymentMethod !== '';\r\n  };\r\n\r\n  if (paymentData.serviceTiersLoading) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p className=\"text-xl text-gray-300 mb-8\">Loading payment options...</p>\r\n        <div className=\"animate-pulse bg-gray-700 h-32 rounded-lg max-w-2xl mx-auto\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto\">\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-3xl font-bold text-white mb-2\">Complete Your Booking</h2>\r\n        <p className=\"text-gray-300\">Review your order and choose your payment method</p>\r\n      </div>\r\n\r\n      {/* Payment Tabs */}\r\n      <PaymentTabs \r\n        activeTab={paymentForm.activeTab} \r\n        onTabChange={paymentForm.setActiveTab} \r\n      />\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        {/* Main Content */}\r\n        <div className=\"lg:col-span-2\">\r\n          {paymentForm.activeTab === 'vehicle' && (\r\n            <VehicleSection bookingData={paymentData.bookingData} />\r\n          )}\r\n          \r\n          {paymentForm.activeTab === 'location' && (\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n              <h3 className=\"text-xl font-semibold text-white mb-4\">Service Location</h3>\r\n              <p className=\"text-gray-300\">\r\n                {paymentData.bookingData.location}\r\n              </p>\r\n            </div>\r\n          )}\r\n          \r\n          {paymentForm.activeTab === 'summary' && (\r\n            <SummarySection \r\n              selectedService={paymentData.selectedService}\r\n              selectedAddons={paymentData.selectedAddons}\r\n            />\r\n          )}\r\n          \r\n          {paymentForm.activeTab === 'payment' && (\r\n            <div className=\"space-y-6\">\r\n              <PaymentOption\r\n                selectedMethod={paymentForm.paymentMethod}\r\n                onMethodSelect={handlePaymentMethodSelect}\r\n                cardDetails={paymentForm.cardDetails}\r\n                onCardInputChange={paymentForm.updateCardDetails}\r\n                expandedSections={paymentForm.expandedSections}\r\n                onToggleSection={paymentForm.toggleSection}\r\n              />\r\n              \r\n              <div className=\"flex justify-end\">\r\n                <button\r\n                  onClick={handleCompleteBooking}\r\n                  disabled={!isFormValid()}\r\n                  className={`px-8 py-3 rounded-lg font-semibold transition-colors ${\r\n                    isFormValid()\r\n                      ? 'bg-blue-600 text-white hover:bg-blue-700'\r\n                      : 'bg-gray-600 text-gray-400 cursor-not-allowed'\r\n                  }`}\r\n                >\r\n                  Complete Booking - ${paymentData.total.toFixed(2)}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Sidebar */}\r\n        <div className=\"lg:col-span-1\">\r\n          <PaymentSummary\r\n            servicePrice={paymentData.servicePrice}\r\n            addonsPrice={paymentData.addonsPrice}\r\n            subtotal={paymentData.subtotal}\r\n            tax={paymentData.tax}\r\n            total={paymentData.total}\r\n            selectedService={paymentData.selectedService}\r\n            selectedAddons={paymentData.selectedAddons}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepPayment;\r\n","import React, { useState } from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\n\r\nimport { useScheduleOptions } from '@/features/booking/hooks';\r\nimport type { ScheduleOption } from '@/features/booking/hooks/useScheduleOptions';\r\nimport { useBookingSchedule } from '@/features/booking/state';\r\n\r\nconst StepSchedule: React.FC = () => {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  \r\n  const { schedule, setSchedule } = useBookingSchedule();\r\n  \r\n  // Extract dates and time from schedule\r\n  const selectedDates = schedule.dates;\r\n  const selectedTime = schedule.time;\r\n  \r\n  // Load schedule options (using mock location/service IDs for now)\r\n  const { data: scheduleOptions, isPending, error } = useScheduleOptions('mock-location', 'mock-service');\r\n\r\n  const handleDateSelect = (date: string) => {\r\n    // Toggle selection - if already selected, remove it; if not selected, add it\r\n    const newDates = selectedDates.includes(date)\r\n      ? selectedDates.filter((d: string) => d !== date) // Remove date from selection\r\n      : [...selectedDates, date].sort(); // Add date to selection\r\n    \r\n    // Update store immediately\r\n    setSchedule({ dates: newDates, time: selectedTime });\r\n  };\r\n\r\n  const navigateMonth = (direction: 'prev' | 'next') => {\r\n    setCurrentMonth(prev => {\r\n      const newMonth = new Date(prev);\r\n      if (direction === 'prev') {\r\n        newMonth.setMonth(prev.getMonth() - 1);\r\n      } else {\r\n        newMonth.setMonth(prev.getMonth() + 1);\r\n      }\r\n      return newMonth;\r\n    });\r\n  };\r\n\r\n  // Check if we can navigate to previous month\r\n  const canNavigatePrev = () => {\r\n    const today = new Date();\r\n    const currentMonthYear = currentMonth.getFullYear() * 12 + currentMonth.getMonth();\r\n    const todayMonthYear = today.getFullYear() * 12 + today.getMonth();\r\n    return currentMonthYear > todayMonthYear;\r\n  };\r\n\r\n  if (isPending) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p className=\"text-xl text-gray-300 mb-8\">Loading available times...</p>\r\n        <div className=\"animate-pulse bg-gray-700 h-32 rounded-lg max-w-4xl mx-auto\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error !== null) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p className=\"text-xl text-red-400 mb-8\">Error loading schedule options</p>\r\n        <div className=\"bg-red-900/20 border border-red-500 rounded-lg p-6 max-w-2xl mx-auto\">\r\n          <p className=\"text-red-300\">Please try again later or contact support.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      \r\n      <div className=\"max-w-4xl mx-auto\">\r\n        {/* Date Selection - Calendar */}\r\n        <div className=\"mb-8 mt-36\">\r\n          <div className=\"bg-gray-800/90 backdrop-blur-sm rounded-lg p-6 max-w-2xl mx-auto border border-gray-600/50\">\r\n            {/* Month Navigation */}\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <button\r\n                onClick={() => {\r\n                  navigateMonth('prev');\r\n                }}\r\n                disabled={!canNavigatePrev()}\r\n                className={`p-2 rounded-lg border transition-all ${\r\n                  canNavigatePrev()\r\n                    ? 'border-gray-600 hover:border-gray-500 text-white'\r\n                    : 'border-gray-700 bg-gray-800/50 text-gray-500 cursor-not-allowed'\r\n                }`}\r\n              >\r\n                <ChevronLeft className=\"h-5 w-5\" />\r\n              </button>\r\n              \r\n              <h2 className=\"text-xl font-semibold text-white\">\r\n                {currentMonth.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\r\n              </h2>\r\n              \r\n              <button\r\n                onClick={() => {\r\n                  navigateMonth('next');\r\n                }}\r\n                className=\"p-2 rounded-lg border border-gray-600 hover:border-gray-500 text-white transition-all\"\r\n              >\r\n                <ChevronRight className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-7 gap-2 mb-4\">\r\n              {/* Calendar Header */}\r\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day) => (\r\n                <div key={day} className=\"text-center text-sm font-semibold text-gray-300 py-2\">\r\n                  {day}\r\n                </div>\r\n              ))}\r\n              \r\n              {/* Calendar Days */}\r\n              {(() => {\r\n                const today = new Date();\r\n                const month = currentMonth.getMonth();\r\n                const year = currentMonth.getFullYear();\r\n                const firstDay = new Date(year, month, 1);\r\n                const startDate = new Date(firstDay);\r\n                startDate.setDate(startDate.getDate() - firstDay.getDay());\r\n                \r\n                const calendarDays: React.JSX.Element[] = [];\r\n                const currentDate = new Date(startDate);\r\n                \r\n                // Generate 6 weeks of calendar\r\n                for (let week = 0; week < 6; week++) {\r\n                  for (let day = 0; day < 7; day++) {\r\n                    const dateStr = currentDate.toISOString().split('T')[0];\r\n                    const isCurrentMonth = currentDate.getMonth() === month;\r\n                    // Compare dates only (ignore time) to properly handle same-day availability\r\n                    const todayDateOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n                    const currentDateOnly = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n                    const isPast = currentDateOnly < todayDateOnly;\r\n                    // A date is available if it's in the future (not past) and either:\r\n                    // 1. Has schedule options with availability, OR\r\n                    // 2. Is a future date without specific schedule data (default to available)\r\n                    const options = scheduleOptions as ScheduleOption[] | undefined;\r\n                    const hasScheduleData = options?.some((option: ScheduleOption) => option.date === dateStr);\r\n                    const isAvailableFromSchedule = hasScheduleData \r\n                        ? options?.some((option: ScheduleOption) => option.date === dateStr && option.available) ?? false\r\n                        : true; // Default to available for future dates without schedule data\r\n                    const isAvailable = isAvailableFromSchedule;\r\n                    const isSelected = selectedDates.includes(dateStr);\r\n                    \r\n                    calendarDays.push(\r\n                      <button\r\n                        key={dateStr}\r\n                        onClick={() => {\r\n                          if (isAvailable && !isPast) {\r\n                            handleDateSelect(dateStr);\r\n                          }\r\n                        }}\r\n                        disabled={!isAvailable || isPast}\r\n                        className={`p-3 rounded-lg border-2 transition-all text-sm ${\r\n                          isSelected\r\n                            ? 'border-green-500 bg-green-500/20 text-white'\r\n                            : isAvailable && !isPast\r\n                            ? 'border-gray-600 hover:border-gray-500 text-white'\r\n                            : 'border-gray-700 bg-gray-800/50 text-gray-500 cursor-not-allowed'\r\n                        } ${!isCurrentMonth ? 'opacity-50' : ''}`}\r\n                      >\r\n                        {currentDate.getDate()}\r\n                      </button>\r\n                    );\r\n                    \r\n                    currentDate.setDate(currentDate.getDate() + 1);\r\n                  }\r\n                }\r\n                \r\n                return calendarDays;\r\n              })()}\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n          {/* Arrival Time Information */}\r\n          <div className=\"bg-gray-800/90 backdrop-blur-sm rounded-lg p-6 max-w-2xl mx-auto border border-gray-600/50 mt-6\">\r\n            <h3 className=\"text-lg font-semibold text-white mb-4 text-center\">Service Information</h3>\r\n            <ul className=\"text-gray-300 space-y-2 text-base md:text-lg\">\r\n              <li className=\"flex items-start\">\r\n                <span className=\"text-orange-400 mr-2\">•</span>\r\n                <span>Arrival times are typically between 6am - 9am.</span>\r\n              </li>\r\n              <li className=\"flex items-start\">\r\n                <span className=\"text-orange-400 mr-2\">•</span>\r\n                <span>You do not need to be present for vehicle service.</span>\r\n              </li>\r\n              <li className=\"flex items-start\">\r\n                <span className=\"text-orange-400 mr-2\">•</span>\r\n                <span>We will contact you to discuss the specifics about your service.</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepSchedule;\r\n","import React from 'react';\r\nimport { CheckCircle } from 'lucide-react';\r\n\r\ninterface ServiceTier {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n  features: string[];\r\n  popular?: boolean;\r\n}\r\n\r\ninterface ServiceCardProps {\r\n  service: ServiceTier;\r\n  position: 'center' | 'left' | 'right';\r\n  isSelected: boolean;\r\n  onSelect: () => void;\r\n  onCardClick: () => void;\r\n}\r\n\r\nconst ServiceCard: React.FC<ServiceCardProps> = ({\r\n  service,\r\n  position,\r\n  isSelected,\r\n  onSelect,\r\n  onCardClick\r\n  }) => {\r\n  const getPositionClasses = () => {\r\n    const baseClasses = \"bg-stone-800/80 backdrop-blur-sm rounded-xl p-8 text-center transition-all duration-300 transform cursor-pointer w-[416px] flex-shrink-0\";\r\n    \r\n    switch (position) {\r\n      case 'center':\r\n        return `${baseClasses} scale-100 z-10 ring-2 ${isSelected ? 'ring-green-500 bg-green-800/80' : 'ring-orange-500'}`;\r\n      case 'left':\r\n        return `${baseClasses} scale-90 -translate-x-4 opacity-70`;\r\n      case 'right':\r\n        return `${baseClasses} scale-90 translate-x-4 opacity-70`;\r\n      default:\r\n        return baseClasses;\r\n    }\r\n  };\r\n\r\n  const getButtonClasses = () => {\r\n    const baseClasses = \"w-full py-4 px-8 rounded-lg font-semibold text-lg transition-colors\";\r\n    if (isSelected) {\r\n      return `${baseClasses} bg-green-600 hover:bg-green-700 text-white flex items-center justify-center gap-3`;\r\n    }\r\n    return `${baseClasses} bg-orange-500 hover:bg-orange-600 text-white`;\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={getPositionClasses()} \r\n      onClick={onCardClick}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          e.preventDefault();\r\n          onCardClick();\r\n        }\r\n      }}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      {/* Popular Badge */}\r\n      {service.popular && (\r\n        <div className=\"absolute -top-4 left-1/2 -translate-x-1/2\">\r\n          <span className=\"bg-orange-500 text-white px-4 py-1.5 rounded-full text-base font-medium\">\r\n            Most Popular\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {/* Service Header */}\r\n      <div className=\"mb-5\">\r\n        <h3 className=\"text-3xl font-bold text-white mb-3\">{service.name}</h3>\r\n        <p className=\"text-4xl font-bold text-orange-500\">\r\n          ${service.price.toLocaleString('en-US', { \r\n            minimumFractionDigits: 2, \r\n            maximumFractionDigits: 2 \r\n          })}\r\n        </p>\r\n      </div>\r\n\r\n      {/* Service Description */}\r\n      <div className=\"mb-5\">\r\n        <p className=\"text-stone-300 text-base mb-5\">{service.description}</p>\r\n        \r\n        {/* Features List */}\r\n        {service.features.length > 0 && (\r\n          <div className=\"space-y-3\">\r\n            {service.features.map((feature, index) => (\r\n              <div key={index} className=\"flex items-center text-base text-stone-300\">\r\n                <CheckCircle className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\r\n                <span className=\"truncate\">{feature}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Action Button */}\r\n      <button\r\n        onClick={(e) => {\r\n          e.stopPropagation(); // Prevent card click when clicking the button\r\n          onSelect();\r\n        }}\r\n        className={getButtonClasses()}\r\n      >\r\n        {isSelected && <CheckCircle size={20} />}\r\n        {isSelected ? 'Selected' : 'Choose'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceCard;\r\n","import React from 'react';\r\n\r\nimport { useBookingVehicle } from '@/features/booking/state';\r\n\r\nimport DetailsModal from '../../shared/DetailsModal';\r\n\r\ninterface ServiceTier {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n  features: string[];\r\n  featureIds: string[];\r\n  popular?: boolean;\r\n}\r\n\r\ninterface ServiceDetailsModalProps {\r\n  service: ServiceTier;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ServiceDetailsModal: React.FC<ServiceDetailsModalProps> = ({\r\n  service,\r\n  isOpen,\r\n  onClose\r\n}) => {\r\n  const { vehicle } = useBookingVehicle();\r\n\r\n  return (\r\n    <DetailsModal\r\n      item={service}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      vehicleType={vehicle}\r\n      itemType=\"service\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ServiceDetailsModal;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Carousel } from '@/shared/ui';\r\n\r\nimport ServiceCard from './ServiceCard';\r\nimport ServiceDetailsModal from './ServiceDetailsModal';\r\n\r\ninterface ServiceTier {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n  features: string[];\r\n  featureIds: string[];\r\n  popular?: boolean;\r\n}\r\n\r\ninterface ServiceCarouselProps {\r\n  services: ServiceTier[];\r\n  selectedService?: string;\r\n  onServiceSelect: (serviceId: string) => void;\r\n}\r\n\r\nconst ServiceCarousel: React.FC<ServiceCarouselProps> = ({\r\n  services,\r\n  selectedService,\r\n  onServiceSelect\r\n}) => {\r\n  const [modalService, setModalService] = useState<ServiceTier | null>(null);\r\n\r\n  const handleCardClick = (service: ServiceTier) => {\r\n    setModalService(service);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalService(null);\r\n  };\r\n\r\n  const renderServiceCard = (service: ServiceTier & { position: 'center' | 'left' | 'right' }, isSelected: boolean) => (\r\n    <ServiceCard\r\n      service={service}\r\n      position={service.position}\r\n      isSelected={isSelected}\r\n      onSelect={() => {\r\n        // Toggle selection: if already selected, deselect; otherwise select\r\n        if (selectedService === service.id) {\r\n          onServiceSelect(''); // Deselect\r\n        } else {\r\n          onServiceSelect(service.id); // Select\r\n        }\r\n      }}\r\n      onCardClick={() => {\r\n        handleCardClick(service);\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Carousel\r\n        items={services}\r\n        selectedItem={selectedService ?? ''}\r\n        onItemSelect={onServiceSelect}\r\n        renderItem={renderServiceCard}\r\n        onItemClick={handleCardClick}\r\n        emptyMessage=\"No services available\"\r\n      />\r\n      \r\n      {/* Service Details Modal */}\r\n      {modalService && (\r\n        <ServiceDetailsModal\r\n          service={modalService}\r\n          isOpen={!!modalService}\r\n          onClose={handleCloseModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceCarousel;\r\n","import React from 'react';\r\n\r\nimport { useServiceTiers } from '@/features/booking/hooks';\r\nimport { useBookingService, useBookingVehicle } from '@/features/booking/state';\r\n\r\nimport ServiceCarousel from './ServiceCarousel';\r\n\r\n/**\r\n * Component that loads and displays service tiers for a confirmed vehicle\r\n */\r\nconst ServiceLoader: React.FC<{ vehicle: string }> = ({ vehicle }) => {\r\n  const { serviceTier, setServiceTier } = useBookingService();\r\n  const { serviceTiers, isLoading, error } = useServiceTiers(vehicle);\r\n\r\n  const handleServiceSelect = (serviceId: string) => {\r\n    setServiceTier(serviceId);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"w-full max-w-4xl mx-auto\">\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-white\">Loading services...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"w-full max-w-4xl mx-auto\">\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-red-500\">Error loading services: {error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-4xl mx-auto\">\r\n      <ServiceCarousel\r\n        services={serviceTiers}\r\n        selectedService={serviceTier}\r\n        onServiceSelect={handleServiceSelect}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StepService: React.FC = () => {\r\n  const { vehicle } = useBookingVehicle();\r\n\r\n  // Guard against missing vehicle selection\r\n  if (!vehicle) {\r\n    return (\r\n      <div className=\"w-full max-w-4xl mx-auto\">\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-white text-lg\">Please select a vehicle first.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <ServiceLoader vehicle={vehicle} />;\r\n};\r\n\r\nexport default StepService;","import React from 'react';\r\nimport { Bike, Car, CarFront, MoreHorizontal, Plane, Ship, Truck } from 'lucide-react';\r\n\r\ninterface TabsProps {\r\n  selectedVehicle: string;\r\n  onVehicleSelect: (vehicleId: string) => void;\r\n}\r\n\r\nconst Tabs: React.FC<TabsProps> = ({ selectedVehicle, onVehicleSelect }) => {\r\n  // Static vehicle types - no backend dependency\r\n  const vehicleTypes = [\r\n    { id: 'car', name: 'Car', icon: CarFront },\r\n    { id: 'truck', name: 'Truck', icon: Truck },\r\n    { id: 'suv', name: 'SUV', icon: Car }, // SUV keeps Car icon\r\n    { id: 'boat', name: 'Boat', icon: Ship },\r\n    { id: 'rv', name: 'RV', icon: 'custom-rv' }, // Custom RV icon\r\n    { id: 'airplane', name: 'Airplane', icon: Plane },\r\n    { id: 'motorcycle', name: 'Motorcycle', icon: Bike },\r\n    { id: 'other', name: 'Other', icon: MoreHorizontal },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"mb-8 absolute top-[20%] left-1/2 transform -translate-x-1/2 w-full\">\r\n      <div className=\"grid grid-cols-4 grid-rows-2 gap-0 w-fit mx-auto\">\r\n        {vehicleTypes.map((vehicle) => {\r\n          return (\r\n            <button\r\n              key={vehicle.id}\r\n              onClick={() => {\r\n                onVehicleSelect(vehicle.id);\r\n              }}\r\n              className={`p-2 rounded-lg border-2 transition-all w-24 h-24 ${\r\n                selectedVehicle === vehicle.id\r\n                  ? 'border-orange-500 bg-orange-500/20'\r\n                  : 'border-gray-600 hover:border-gray-500 bg-stone-800/20'\r\n              }`}\r\n            >\r\n              {vehicle.icon === 'custom-rv' ? (\r\n                <img \r\n                  src=\"/icons/rv.png\" \r\n                  alt=\"RV\" \r\n                  className=\"w-8 h-8 mb-2 mx-auto object-contain filter brightness-0 invert\" \r\n                />\r\n              ) : (\r\n                React.createElement(vehicle.icon, { className: \"w-8 h-8 text-white mb-2 mx-auto\" })\r\n              )}\r\n              <div className=\"text-white font-medium\">{vehicle.name}</div>\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { getMakesForType, getModelsForMake, getVehicleYears } from '@/data/mobile-detailing/vehicle_data';\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\n\r\ninterface VehicleSelectionProps {\r\n  selectedVehicle: string;\r\n  vehicleDetails: { make: string; model: string; year: string; color: string; length: string };\r\n  onVehicleDetailsSelect?: (details: { make: string; model: string; year: string; color: string; length: string }) => void;\r\n}\r\n\r\nconst VehicleSelection: React.FC<VehicleSelectionProps> = ({ selectedVehicle, vehicleDetails, onVehicleDetailsSelect }) => {\r\n  // Get phone number from tenant data context\r\n  const data = useDataOptional();\r\n  const phoneNumber = data?.phone ?? '(555) 123-4567';\r\n\r\n  const [make, setMake] = useState(vehicleDetails.make || '');\r\n  const [model, setModel] = useState(vehicleDetails.model || '');\r\n  const [year, setYear] = useState(vehicleDetails.year || '');\r\n  const [color, setColor] = useState(vehicleDetails.color || '');\r\n  const [length, setLength] = useState(vehicleDetails.length || '');\r\n  const lastDetailsRef = useRef<string>('');\r\n\r\n  // Vehicle ID is now already the correct vehicle type name (no mapping needed)\r\n  const vehicleTypeName = selectedVehicle;\r\n\r\n  // Get available makes based on selected vehicle type\r\n  const availableMakes = getMakesForType(vehicleTypeName);\r\n  \r\n  // Get available models based on selected make and vehicle type\r\n  const availableModels = make ? getModelsForMake(vehicleTypeName, make) : [];\r\n  \r\n  // Get available years\r\n  const availableYears = getVehicleYears();\r\n\r\n  // Update local state when vehicleDetails prop changes\r\n  useEffect(() => {\r\n    setMake(vehicleDetails.make || '');\r\n    setModel(vehicleDetails.model || '');\r\n    setYear(vehicleDetails.year || '');\r\n    setColor(vehicleDetails.color || '');\r\n    setLength(vehicleDetails.length || '');\r\n  }, [vehicleDetails]);\r\n\r\n\r\n\r\n  // Helper function to update vehicle details\r\n  const updateVehicleDetails = (newMake?: string, newModel?: string, newYear?: string, newColor?: string, newLength?: string) => {\r\n    const currentMake = newMake !== undefined ? newMake : make;\r\n    const currentModel = newModel !== undefined ? newModel : model;\r\n    const currentYear = newYear !== undefined ? newYear : year;\r\n    const currentColor = newColor !== undefined ? newColor : color;\r\n    const currentLength = newLength !== undefined ? newLength : length;\r\n    \r\n    if (currentMake && currentModel && currentYear) {\r\n      const currentDetails = JSON.stringify({ \r\n        make: currentMake, \r\n        model: currentModel, \r\n        year: currentYear, \r\n        color: currentColor || '', \r\n        length: currentLength || '' \r\n      });\r\n      \r\n      if (currentDetails !== lastDetailsRef.current) {\r\n        lastDetailsRef.current = currentDetails;\r\n        onVehicleDetailsSelect?.({\r\n          make: currentMake,\r\n          model: currentModel,\r\n          year: currentYear,\r\n          color: currentColor || '',\r\n          length: currentLength || ''\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Show phone message for airplane selection\r\n  if (selectedVehicle === 'airplane') {\r\n    return (\r\n      <div className=\"mb-8 absolute top-[45%] left-1/2 transform -translate-x-1/2 w-full max-w-xl\">\r\n        <div className=\"px-4\">\r\n          <div className=\"bg-gray-800 border border-gray-600 rounded-lg p-6 text-center\">\r\n            <p className=\"text-white text-lg font-medium mb-2\">\r\n              Please call us at <span className=\"text-orange-500\">{phoneNumber}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show additional details field for \"Other\" vehicle type\r\n  if (selectedVehicle === 'other') {\r\n    return (\r\n      <div className=\"mb-8 absolute top-[45%] left-1/2 transform -translate-x-1/2 w-full max-w-xl\">\r\n        <div className=\"px-4\">\r\n          <div className=\"space-y-2\">\r\n            <label htmlFor=\"additional-details\" className=\"block text-white font-medium text-sm\">Additional Details</label>\r\n            <textarea \r\n              id=\"additional-details\"\r\n              value={make} // Using make field to store the additional details\r\n              onChange={(e) => {\r\n                setMake(e.target.value);\r\n                // For \"other\" vehicles, we'll store the details in the make field\r\n                // and call updateVehicleDetails with the details as make\r\n                updateVehicleDetails(e.target.value);\r\n              }}\r\n              placeholder=\"Please describe your vehicle (e.g., 'Custom motorcycle - Harley Davidson 2020, Black')\"\r\n              className=\"w-full py-3 px-1.5 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-orange-500 resize-none\"\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-8 absolute top-[45%] left-1/2 transform -translate-x-1/2 w-full max-w-xl\">\r\n      <div className=\"grid grid-cols-2 gap-4 px-4\">\r\n        {/* Make Dropdown */}\r\n        <div className=\"space-y-2\">\r\n          <label htmlFor=\"vehicle-make\" className=\"block text-white font-medium text-sm\">Make</label>\r\n          <select \r\n            id=\"vehicle-make\"\r\n            value={make}\r\n            onChange={(e) => {\r\n              setMake(e.target.value);\r\n              updateVehicleDetails(e.target.value);\r\n            }}\r\n            className=\"w-full py-3 px-1.5 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-orange-500\"\r\n            disabled={!selectedVehicle}\r\n          >\r\n            <option value=\"\">Select Make</option>\r\n            {availableMakes.map((makeOption) => (\r\n              <option key={makeOption} value={makeOption}>\r\n                {makeOption}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Model Dropdown */}\r\n        <div className=\"space-y-2\">\r\n          <label htmlFor=\"vehicle-model\" className=\"block text-white font-medium text-sm\">Model</label>\r\n          <select \r\n            id=\"vehicle-model\"\r\n            value={model}\r\n            onChange={(e) => {\r\n              setModel(e.target.value);\r\n              updateVehicleDetails(undefined, e.target.value);\r\n            }}\r\n            className=\"w-full py-3 px-1.5 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-orange-500\"\r\n            disabled={!make}\r\n          >\r\n            <option value=\"\">Select Model</option>\r\n            {availableModels.map((modelOption) => (\r\n              <option key={modelOption} value={modelOption}>\r\n                {modelOption}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Year Dropdown */}\r\n        <div className=\"space-y-2\">\r\n          <label htmlFor=\"vehicle-year\" className=\"block text-white font-medium text-sm\">Year</label>\r\n          <select \r\n            id=\"vehicle-year\"\r\n            value={year}\r\n            onChange={(e) => {\r\n              setYear(e.target.value);\r\n              updateVehicleDetails(undefined, undefined, e.target.value);\r\n            }}\r\n            className=\"w-full py-3 px-1.5 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-orange-500\"\r\n          >\r\n            <option value=\"\">Select Year</option>\r\n            {availableYears.map((yearOption) => (\r\n              <option key={yearOption} value={yearOption}>\r\n                {yearOption}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Color Dropdown or Length Input */}\r\n        {selectedVehicle === 'boat' || selectedVehicle === 'rv' ? (\r\n          /* Length Input for Boat/RV */\r\n          <div className=\"space-y-2\">\r\n            <label htmlFor=\"vehicle-length\" className=\"block text-white font-medium text-sm\">Length (ft)</label>\r\n            <input \r\n              id=\"vehicle-length\"\r\n              type=\"number\"\r\n              value={length}\r\n              onChange={(e) => {\r\n                setLength(e.target.value);\r\n                updateVehicleDetails(undefined, undefined, undefined, undefined, e.target.value);\r\n              }}\r\n              placeholder=\"Enter length in feet\"\r\n              className=\"w-full py-3 px-1.5 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-orange-500\"\r\n              min=\"1\"\r\n              max=\"999\"\r\n            />\r\n          </div>\r\n        ) : (\r\n          /* Color Dropdown for other vehicles */\r\n          <div className=\"space-y-2\">\r\n            <label htmlFor=\"vehicle-color\" className=\"block text-white font-medium text-sm\">Color</label>\r\n            <select \r\n              id=\"vehicle-color\"\r\n              value={color}\r\n              onChange={(e) => {\r\n                setColor(e.target.value);\r\n                updateVehicleDetails(undefined, undefined, undefined, e.target.value);\r\n              }}\r\n              className=\"w-full py-3 px-1.5 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-orange-500\"\r\n            >\r\n              <option value=\"\">Select Color</option>\r\n              <option value=\"black\">Black</option>\r\n              <option value=\"white\">White</option>\r\n              <option value=\"silver\">Silver</option>\r\n              <option value=\"gray\">Gray</option>\r\n              <option value=\"red\">Red</option>\r\n              <option value=\"blue\">Blue</option>\r\n              <option value=\"green\">Green</option>\r\n              <option value=\"other\">Other</option>\r\n            </select>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VehicleSelection;\r\n","import React from 'react';\r\n\r\nimport { useBookingVehicle } from '@/features/booking/state';\r\n\r\nimport Tabs from './Tabs';\r\nimport VehicleSelection from './VehicleType';\r\n\r\ninterface StepVehicleSelectionProps {\r\n  onVehicleSelected?: (vehicle: string) => void;\r\n  onVehicleDetailsSelected?: (details: { make: string; model: string; year: string; color: string; length: string }) => void;\r\n}\r\n\r\nconst StepVehicleSelection: React.FC<StepVehicleSelectionProps> = ({ onVehicleSelected, onVehicleDetailsSelected }) => {\r\n  // Get vehicle data from narrow selector\r\n  const { vehicle, vehicleDetails, setVehicle, setVehicleDetails } = useBookingVehicle();\r\n  const selectedVehicle = vehicle;\r\n\r\n  const handleVehicleSelect = (vehicleId: string) => {\r\n    setVehicle(vehicleId);\r\n    onVehicleSelected?.(vehicleId);\r\n  };\r\n\r\n  const handleVehicleDetailsSelect = (details: { make: string; model: string; year: string; color: string; length: string }) => {\r\n    setVehicleDetails(details);\r\n    onVehicleDetailsSelected?.(details);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-4xl mx-auto\">\r\n      <Tabs \r\n        selectedVehicle={selectedVehicle}\r\n        onVehicleSelect={handleVehicleSelect}\r\n      />\r\n      <VehicleSelection\r\n        selectedVehicle={selectedVehicle}\r\n        vehicleDetails={vehicleDetails}\r\n        onVehicleDetailsSelect={handleVehicleDetailsSelect}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepVehicleSelection;","import React, { useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useBookingStep } from '@/features/booking/state';\r\n\r\nimport BookingLayout from './BookingLayout';\r\nimport { StepAddons, StepLocation, StepPayment,StepSchedule, StepService, StepVehicleSelection } from './steps';\r\n\r\n/**\r\n * BookingFlowController - Handles step logic, navigation, and state management\r\n * Uses Zustand store as single source of truth for step state\r\n */\r\nconst BookingFlowController: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  // Get step management from narrow selector\r\n  const { \r\n    currentStep,\r\n    nextStep,\r\n    previousStep\r\n  } = useBookingStep();\r\n  \r\n  const stepOrder = ['vehicle-selection', 'location', 'service-tier', 'addons', 'schedule', 'payment'];\r\n  const currentStepIndex = stepOrder.indexOf(currentStep);\r\n  \r\n  const handleNext = useCallback(() => {\r\n    nextStep();\r\n  }, [nextStep]);\r\n  \r\n  const handleBack = useCallback(() => {\r\n    previousStep();\r\n  }, [previousStep]);\r\n  \r\n  const handleCancel = useCallback(() => {\r\n    void navigate('/');\r\n  }, [navigate]);\r\n\r\n  const renderStepContent = useCallback(() => {\r\n    switch (currentStep) {\r\n      case 'vehicle-selection':\r\n        return <StepVehicleSelection />;\r\n      \r\n      case 'location':\r\n        return <StepLocation />;\r\n      \r\n      case 'service-tier':\r\n        return <StepService />;\r\n      \r\n      case 'addons':\r\n        return <StepAddons />;\r\n      \r\n      case 'schedule':\r\n        return <StepSchedule />;\r\n      \r\n      case 'payment':\r\n        return (\r\n          <StepPayment \r\n            onPaymentComplete={() => {\r\n              // TODO: Handle payment completion and navigation\r\n              // For now, just navigate back to home\r\n              void navigate('/');\r\n            }}\r\n          />\r\n        );\r\n      \r\n      default:\r\n        return (\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-4xl font-bold text-white mb-4\">\r\n              Unknown Step\r\n            </h2>\r\n            <p className=\"text-gray-300\">Step not found</p>\r\n          </div>\r\n        );\r\n    }\r\n  }, [currentStep, navigate]);\r\n\r\n  return (\r\n    <BookingLayout\r\n        currentStep={currentStep}\r\n        completedSteps={stepOrder.slice(0, currentStepIndex)}\r\n        onNext={handleNext}\r\n        onBack={handleBack}\r\n        onCancel={handleCancel}\r\n        canGoNext={currentStepIndex < stepOrder.length - 1}\r\n        canGoBack={currentStepIndex > 0}\r\n        canSkip={false}\r\n        isLoading={false}\r\n        nextLabel={currentStepIndex === stepOrder.length - 1 ? \"Complete\" : \"Continue\"}\r\n        backLabel=\"Exit\"\r\n        showNavigation={true}\r\n        averageRating={4.9}\r\n        totalReviews={112}\r\n        showTrustStrip={true}\r\n      >\r\n        {renderStepContent()}\r\n      </BookingLayout>\r\n  );\r\n};\r\n\r\nexport default BookingFlowController;\r\n","// Legacy BookingSteps component - now just exports BookingFlowController\r\n// This maintains backward compatibility while using the new architecture\r\nimport React from 'react';\r\n\r\nimport BookingFlowController from './BookingFlowController';\r\n\r\nconst BookingSteps: React.FC = () => {\r\n  return <BookingFlowController />;\r\n};\r\n\r\nexport default BookingSteps;\r\n","// Simple booking page component\r\nimport React from 'react';\r\n\r\nimport BookingSteps from './BookingSteps';\r\n\r\nconst BookingPage: React.FC = () => {\r\n  return <BookingSteps />;\r\n};\r\n\r\nexport default BookingPage;\r\n","import React from 'react';\r\n\r\nimport BookingPage from './components/BookingPage';\r\n\r\n/**\r\n * BookingApp - Main booking application component\r\n * Purely declarative - error boundaries should be handled higher up in the component tree\r\n */\r\nconst BookingApp: React.FC = () => {\r\n  return <BookingPage />;\r\n};\r\n\r\nexport default BookingApp;\r\n"],"file":"assets/BookingApp-BmjYVDtP.js"}