{"version":3,"mappings":"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","names":["API_BASE_URL","createContext","useState","useEffect","jsx","useContext","z.object","z.enum","z.boolean","z.string","area","useCallback","jsxs","z.union","z.number","z.array","z.record","z.unknown","ServiceAreaSchema","z.ZodError","useRef","response","Component","z.email","z.url","z.any","shuffleArray","useMemo","createPortal","Fragment","Suspense"],"ignoreList":[],"sources":["../../src/shared/config/api.ts","../../src/shared/contexts/AuthContext.tsx","../../src/shared/api/industryConfigApi.ts","../../src/shared/env.ts","../../src/shared/api/tenantApi.ts","../../src/shared/hooks/useTenantData.ts","../../src/shared/utils/domainUtils.ts","../../src/shared/hooks/useTenantSlug.ts","../../src/shared/utils/tenantDataTransform.ts","../../src/shared/contexts/DataContext.tsx","../../src/shared/contexts/SiteContext.tsx","../../src/shared/utils/assetLocator.ts","../../src/shared/utils/tenantConfigMigration.ts","../../src/shared/contexts/TenantConfigContext.tsx","../../src/shared/utils/cn.ts","../../src/shared/ui/buttons/Button.tsx","../../src/shared/ui/forms/Badge.tsx","../../src/shared/ui/forms/FilterChip.tsx","../../src/shared/ui/forms/Input.tsx","../../src/shared/ui/layout/Card.tsx","../../src/shared/utils/phoneFormatter.ts","../../src/shared/utils/imageRotation.ts","../../src/shared/utils/logger.ts","../../src/shared/ui/utility/toast.tsx","../../src/shared/hooks/useData.ts","../../src/shared/hooks/useBrowserTab.ts","../../src/shared/hooks/useIndustrySiteData.ts","../../src/shared/schemas/tenant.schema.ts","../../src/shared/schemas/booking.ts","../../src/shared/api/client.ts","../../src/shared/api/tenantConfig.api.ts","../../src/shared/hooks/useTenantConfigLoader.ts","../../src/shared/hooks/useMediaQuery.ts","../../src/shared/state/sectionStore.ts","../../src/shared/hooks/useScrollSpy.ts","../../src/shared/hooks/useImageRotation.ts","../../src/features/reviews/api/reviewsApi.ts","../../src/features/reviews/hooks/useReviews.ts","../../src/shared/hooks/useReviewsAvailability.ts","../../src/shared/ui/buttons/BookNow.tsx","../../src/shared/ui/buttons/GetQuote.tsx","../../src/shared/ui/buttons/CTAButtons.tsx","../../src/shared/utils/errorMonitoring.ts","../../src/shared/ui/layout/ErrorBoundary.tsx","../../src/shared/ui/layout/LoginPage.tsx","../../src/shared/ui/layout/ProtectedRoute.tsx","../../src/shared/validation/locationSchema.ts","../../src/shared/api/websiteContent.api.ts","../../src/shared/contexts/WebsiteContentContext.tsx","../../src/features/reviews/hooks/useReviewsContent.ts","../../src/features/reviews/hooks/useReviewsRating.ts","../../src/features/reviews/hooks/useRotatingReviews.ts","../../src/shared/ui/ReviewsSummary.tsx","../../src/shared/utils/errorHandling.ts","../../src/features/preview/types/preview.types.ts","../../src/features/preview/api/preview.api.ts","../../src/features/preview/components/PreviewCTAButton.tsx","../../src/shared/utils/industryRegistry.ts","../../src/features/preview/components/PreviewDataProvider.tsx","../../src/shared/utils/faqLoader.ts","../../src/features/faq/hooks/useFAQData.ts","../../src/features/faq/hooks/useFAQContent.ts","../../src/features/faq/hooks/useRotatingBackground.ts","../../src/features/faq/components/FAQCategoryFilter.tsx","../../src/features/faq/components/FAQEmptyState.tsx","../../src/shared/ui/modals/ServiceAreasModal.tsx","../../src/features/faq/components/ServiceAreasLink.tsx","../../src/features/faq/components/FAQItem.tsx","../../src/features/faq/components/FAQList.tsx","../../src/features/faq/components/FAQSearchBar.tsx","../../src/features/faq/components/FAQ.tsx","../../src/features/footer/components/Disclaimer.tsx","../../src/features/footer/components/FollowUs.tsx","../../src/features/header/components/BusinessInfo.tsx","../../src/features/header/contexts/TenantContext.tsx","../../src/features/header/utils/constants.ts","../../src/features/header/utils/navigation.ts","../../src/features/header/components/Logo.tsx","../../src/features/header/components/Navigation.tsx","../../src/features/header/components/SocialMediaIcons.tsx","../../src/features/header/components/Header.tsx","../../src/features/hero/components/CTA.tsx","../../src/features/hero/components/TextDisplay.tsx","../../src/features/hero/components/ContentContainer.tsx","../../src/features/hero/hooks/useHeroContent.ts","../../src/features/hero/components/ImageCarousel.tsx","../../src/features/hero/components/Hero.tsx","../../src/features/reviews/components/ReviewCard.tsx","../../src/features/reviews/components/ReviewModal.tsx","../../src/features/reviews/components/ReviewsCarousel.tsx","../../src/features/reviews/components/ReviewsHeader.tsx","../../src/features/reviews/components/Reviews.tsx","../../src/features/services/components/ServiceCard.tsx","../../src/shared/utils/schemaUtils.ts","../../src/features/services/hooks/useServices.ts","../../src/features/services/components/ServicesGrid.tsx","../../src/features/quotes/components/LazyRequestQuoteModal.tsx","../../src/data/mobile-detailing/vehicle_data/years-dropdown.ts","../../src/features/quotes/types/quotes.types.ts","../../src/shared/ui/navigation/FooterLocations.tsx","../../src/features/footer/components/GetInTouch.tsx","../../src/features/footer/components/Footer.tsx","../../src/features/gallery/api/gallery.api.ts","../../src/features/gallery/hooks/useGallery.ts","../../src/features/gallery/hooks/useRotatingGallery.ts","../../src/features/gallery/components/GalleryItem.tsx","../../src/features/gallery/components/RotatingGalleryItem.tsx","../../src/features/gallery/components/Gallery.tsx","../../src/features/preview/state/previewStore.ts","../../src/features/preview/hooks/usePreviewParams.ts"],"sourcesContent":["// API configuration based on environment\r\nconst getApiBaseUrl = () => {\r\n  // In production, use relative URLs (same domain)\r\n  if (import.meta.env.PROD) {\r\n    return '';\r\n  }\r\n  \r\n  // In development, use localhost\r\n  return 'http://localhost:3001';\r\n};\r\n\r\nexport const API_BASE_URL = getApiBaseUrl();\r\n\r\nexport const API_ENDPOINTS = {\r\n  AUTH: {\r\n    LOGIN: `${API_BASE_URL}/api/auth/login`,\r\n    ME: `${API_BASE_URL}/api/auth/me`,\r\n    LOGOUT: `${API_BASE_URL}/api/auth/logout`,\r\n  },\r\n  HEALTH: `${API_BASE_URL}/api/health`,\r\n} as const;\r\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { API_ENDPOINTS } from '../config/api';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  name: string;\r\n  is_admin: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface LoginCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface AuthResponse {\r\n  success: boolean;\r\n  user: User;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  expiresIn: string;\r\n  refreshExpiresIn: string;\r\n}\r\n\r\nexport interface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (credentials: LoginCredentials) => Promise<boolean>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  isAdmin: boolean;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Check if user is logged in on mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      // Verify token with backend\r\n      fetch(API_ENDPOINTS.AUTH.ME, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          setUser(data);\r\n        } else {\r\n          localStorage.removeItem('accessToken');\r\n          localStorage.removeItem('refreshToken');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginCredentials): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(API_ENDPOINTS.AUTH.LOGIN, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n\r\n      const data: AuthResponse = await response.json();\r\n\r\n      if (data.success) {\r\n        // Store tokens\r\n        localStorage.setItem('accessToken', data.accessToken);\r\n        localStorage.setItem('refreshToken', data.refreshToken);\r\n        \r\n        // Set user\r\n        setUser(data.user);\r\n        \r\n        return true;\r\n      } else {\r\n        setError(data.error || 'Login failed');\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      setError('Network error. Please try again.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    setUser(null);\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.is_admin || false,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};","/**\r\n * Industry Configuration API\r\n * \r\n * Single responsibility: Load industry-specific site configurations\r\n * All industries now use modular config approach via index.ts loaders\r\n */\r\n\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\n\r\n/**\r\n * Fetch site configuration for a given industry\r\n * Uses modular config loaders for all industries\r\n * \r\n * @param industry - Industry identifier (e.g., 'mobile-detailing', 'pet-grooming')\r\n * @returns MainSiteConfig object or null if not found\r\n * \r\n * @example\r\n * ```ts\r\n * const config = await fetchIndustryConfig('mobile-detailing');\r\n * console.log(config.hero.h1);\r\n * ```\r\n */\r\nexport async function fetchIndustryConfig(industry: string): Promise<MainSiteConfig | null> {\r\n  try {\r\n    // All industries now use modular config files with index.ts loaders\r\n    switch (industry) {\r\n      case 'mobile-detailing': {\r\n        const { loadMobileDetailingConfig } = await import('@/data/mobile-detailing');\r\n        return loadMobileDetailingConfig();\r\n      }\r\n      \r\n      case 'pet-grooming': {\r\n        const { loadPetGroomingConfig } = await import('@/data/pet-grooming');\r\n        return await loadPetGroomingConfig();\r\n      }\r\n      \r\n      case 'maid-service': {\r\n        const { loadMaidServiceConfig } = await import('@/data/maid-service');\r\n        return await loadMaidServiceConfig();\r\n      }\r\n      \r\n      case 'lawncare': {\r\n        const { loadLawncareConfig } = await import('@/data/lawncare');\r\n        return await loadLawncareConfig();\r\n      }\r\n      \r\n      default:\r\n        console.warn(`Unknown industry: ${industry}`);\r\n        return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(`Failed to load config for industry: ${industry}`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\n","/**\r\n * Centralized Environment Configuration\r\n * \r\n * This module validates and exports all environment variables used in the application.\r\n * Always import from this module instead of using import.meta.env directly.\r\n * \r\n * @example\r\n * ```ts\r\n * import { env, config } from '@/shared/env';\r\n * \r\n * // Use env for raw values\r\n * if (env.DEV) { ... }\r\n * \r\n * // Use config for computed/derived values\r\n * const apiUrl = config.apiBaseUrl;\r\n * ```\r\n */\r\n\r\nimport { z } from \"zod\";\r\n\r\nconst EnvSchema = z.object({\r\n  // Vite built-in variables\r\n  MODE: z.enum([\"development\", \"production\", \"test\"]),\r\n  DEV: z.boolean(),\r\n  PROD: z.boolean(),\r\n  \r\n  // API Configuration\r\n  VITE_API_URL: z.string().optional(),\r\n  VITE_API_URL_LOCAL: z.string().optional(),\r\n  VITE_API_URL_LIVE: z.string().optional(),\r\n  VITE_API_BASE_URL: z.string().optional(),\r\n  \r\n  // Third-party API Keys\r\n  VITE_GOOGLE_MAPS_API_KEY: z.string().optional(),\r\n  VITE_STRIPE_PUBLISHABLE_KEY: z.string().optional(),\r\n  \r\n  // Feature Flags\r\n  VITE_ENABLE_SW: z.string().optional(), // Service worker flag ('1' or '0')\r\n});\r\n\r\n/**\r\n * Validated environment variables\r\n * Raw access to env vars - prefer using `config` for derived values\r\n */\r\nexport const env = EnvSchema.parse(import.meta.env);\r\n\r\n/**\r\n * Computed configuration derived from environment variables\r\n * This provides cleaner access patterns and type-safe defaults\r\n */\r\nexport const config = {\r\n  // Environment\r\n  isDevelopment: env.DEV,\r\n  isProduction: env.PROD,\r\n  mode: env.MODE,\r\n  \r\n  // API Configuration\r\n  apiBaseUrl: env.VITE_API_BASE_URL || '/api', // Use relative path for Vite proxy\r\n  apiUrl: env.PROD ? (env.VITE_API_URL_LIVE || '') : '', // Force empty in dev to use Vite proxy\r\n  apiUrls: {\r\n    local: env.VITE_API_URL_LOCAL || 'http://localhost:3001',\r\n    live: env.VITE_API_URL_LIVE || '',\r\n  },\r\n  \r\n  // Third-party Services\r\n  googleMapsApiKey: env.VITE_GOOGLE_MAPS_API_KEY,\r\n  stripePublishableKey: env.VITE_STRIPE_PUBLISHABLE_KEY || 'pk_test_placeholder',\r\n  \r\n  // Feature Flags\r\n  serviceWorkerEnabled: env.VITE_ENABLE_SW === '1' && env.PROD,\r\n} as const;","/**\r\n * API utilities for tenant/business data with industry support\r\n * \r\n * Single responsibility: HTTP calls to tenant endpoints\r\n */\r\n\r\nimport { env } from '../env';\r\nimport type { Vertical } from '../types/tenant.types';\r\nimport type { Business, BusinessResponse } from '../types/tenant-business.types';\r\n\r\nconst API_BASE_URL = env.VITE_API_URL || ''; // Empty string uses relative URLs (Vite proxy)\r\n\r\n// Re-export types for convenience\r\nexport type { Business, BusinessResponse } from '../types/tenant-business.types';\r\n\r\nexport interface Tenant {\r\n  id: number;\r\n  slug: string;\r\n  business_name: string;\r\n  owner: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  user_id?: number;\r\n  application_status: 'pending' | 'approved' | 'rejected';\r\n  business_start_date: string;\r\n  business_phone: string;\r\n  personal_phone?: string;\r\n  business_email: string;\r\n  personal_email?: string;\r\n  twilio_phone: string;\r\n  sms_phone: string;\r\n  website: string;\r\n  gbp_url?: string;\r\n  facebook_url?: string;\r\n  instagram_url?: string;\r\n  youtube_url?: string;\r\n  tiktok_url?: string;\r\n  source: string;\r\n  notes?: string;\r\n  service_areas: ServiceArea[];\r\n  application_date: string;\r\n  approved_date?: string;\r\n  last_activity: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  google_maps_url?: string;\r\n  industry: Vertical;\r\n  logo_url?: string;\r\n}\r\n\r\nexport interface ServiceArea {\r\n  zip?: string;\r\n  city: string;\r\n  state: string;\r\n  primary?: boolean;\r\n  minimum?: number;\r\n  multiplier?: number;\r\n}\r\n\r\nexport interface TenantApiResponse {\r\n  success: boolean;\r\n  data?: Tenant;\r\n  error?: string;\r\n}\r\n\r\nexport interface TenantsListResponse {\r\n  success: boolean;\r\n  data?: Tenant[];\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * Fetch tenant data by slug with industry context\r\n * Legacy format - returns Tenant type\r\n */\r\nexport async function fetchTenantBySlug(slug: string): Promise<TenantApiResponse> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/api/tenants/${slug}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch tenant: ${response.status}`);\r\n    }\r\n    \r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- response.json() returns any\r\n    const data: Tenant = await response.json();\r\n    return { success: true, data };\r\n  } catch (error) {\r\n    console.error('Error fetching tenant:', error);\r\n    return { \r\n      success: false, \r\n      error: error instanceof Error ? error.message : 'Unknown error' \r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch business data by slug\r\n * Used by DataContext - returns Business type with BusinessResponse wrapper\r\n */\r\nexport async function fetchBusinessBySlug(slug: string): Promise<Business> {\r\n  const response = await fetch(`${API_BASE_URL}/api/tenants/${slug}`);\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch business data');\r\n  }\r\n  \r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- response.json() returns any\r\n  const result: BusinessResponse = await response.json();\r\n  \r\n  if (!result.success) {\r\n    throw new Error('API returned error');\r\n  }\r\n  \r\n  return result.data;\r\n}\r\n\r\n/**\r\n * Fetch all tenants by industry\r\n */\r\nexport async function fetchTenantsByIndustry(industry: Vertical): Promise<TenantsListResponse> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/api/tenants?industry=${industry}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch tenants: ${response.status}`);\r\n    }\r\n    \r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- response.json() returns any\r\n    const data: Tenant[] = await response.json();\r\n    return { success: true, data };\r\n  } catch (error) {\r\n    console.error('Error fetching tenants by industry:', error);\r\n    return { \r\n      success: false, \r\n      error: error instanceof Error ? error.message : 'Unknown error' \r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Get industry-specific site configuration path\r\n */\r\nexport function getIndustrySiteConfigPath(industry: Vertical): string {\r\n  return `/src/data/${industry}/site.json`;\r\n}\r\n\r\n/**\r\n * Get industry-specific public assets path\r\n */\r\nexport function getIndustryAssetsPath(industry: Vertical): string {\r\n  return `/${industry}/images`;\r\n}\r\n\r\n/**\r\n * Get industry-specific data path\r\n */\r\nexport function getIndustryDataPath(industry: Vertical): string {\r\n  return `/${industry}/data`;\r\n}\r\n\r\n","/**\r\n * Tenant Data Hook\r\n * \r\n * Single responsibility: Fetch and cache tenant/business data\r\n * Wraps React Query with proper query keys and options\r\n */\r\n\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { fetchBusinessBySlug } from '@/shared/api/tenantApi';\r\nimport type { Business } from '@/shared/types/tenant-business.types';\r\n\r\ninterface UseTenantDataOptions {\r\n  /**\r\n   * Tenant slug to fetch data for\r\n   */\r\n  slug: string | undefined;\r\n  \r\n  /**\r\n   * Enable/disable the query\r\n   * @default true if slug is provided\r\n   */\r\n  enabled?: boolean;\r\n  \r\n  /**\r\n   * Stale time in milliseconds\r\n   * @default 10 minutes\r\n   */\r\n  staleTime?: number;\r\n  \r\n  /**\r\n   * Number of retry attempts\r\n   * @default 2\r\n   */\r\n  retry?: number;\r\n}\r\n\r\ninterface UseTenantDataReturn {\r\n  /**\r\n   * Business data from API\r\n   */\r\n  data: Business | undefined;\r\n  \r\n  /**\r\n   * Loading state\r\n   */\r\n  isLoading: boolean;\r\n  \r\n  /**\r\n   * Error state\r\n   */\r\n  error: Error | null;\r\n  \r\n  /**\r\n   * Refetch function\r\n   */\r\n  refetch: () => void;\r\n}\r\n\r\n/**\r\n * Fetch tenant/business data by slug with React Query caching\r\n * \r\n * @param options - Query options\r\n * @returns Business data with loading/error states\r\n * \r\n * @example\r\n * ```tsx\r\n * function TenantInfo() {\r\n *   const { data: business, isLoading } = useTenantData({ slug: 'jps' });\r\n *   \r\n *   if (isLoading) return <Spinner />;\r\n *   \r\n *   return <div>{business?.business_name}</div>;\r\n * }\r\n * ```\r\n */\r\nexport function useTenantData(options: UseTenantDataOptions): UseTenantDataReturn {\r\n  const {\r\n    slug,\r\n    enabled = true,\r\n    staleTime = 10 * 60 * 1000, // 10 minutes\r\n    retry = 2\r\n  } = options;\r\n  \r\n  const { data, isLoading, error, refetch } = useQuery({\r\n    queryKey: ['shared','business', slug],\r\n    queryFn: () => {\r\n      if (!slug) {\r\n        throw new Error('Slug is required to fetch business data');\r\n      }\r\n      return fetchBusinessBySlug(slug);\r\n    },\r\n    enabled: enabled && !!slug,\r\n    staleTime,\r\n    retry\r\n  });\r\n  \r\n  return {\r\n    data,\r\n    isLoading,\r\n    error: error || null,\r\n    refetch: () => {\r\n      void refetch();\r\n    }\r\n  };\r\n}\r\n\r\n","/**\r\n * Domain Resolution Utilities\r\n * \r\n * Single responsibility: Extract tenant slug from hostname/domain\r\n * Pure functions with no side effects\r\n */\r\n\r\n/**\r\n * Domain-to-tenant slug mappings for custom domains\r\n * In production, this could be loaded from a config file or API\r\n */\r\nconst CUSTOM_DOMAIN_MAPPINGS: Record<string, string> = {\r\n  'jpsdetailing.com': 'jps',\r\n  'example.com': 'example',\r\n  'thatsmartsite.com': 'main-site', // Main site for admin dashboard\r\n  'thatsmartsite-backend.onrender.com': 'main-site', // Render URL for admin dashboard\r\n  // Add more domain mappings as needed\r\n};\r\n\r\n/**\r\n * Reserved subdomains that should not be treated as tenant slugs\r\n */\r\nconst RESERVED_SUBDOMAINS = ['www', 'thatsmartsite', 'api', 'admin', 'staging', 'dev', 'main-site'];\r\n\r\n/**\r\n * Extract tenant slug from subdomain\r\n * Example: jps.thatsmartsite.com -> 'jps', testing-mobile-detail.lvh.me -> 'testing-mobile-detail'\r\n * \r\n * @param hostname - The hostname to parse\r\n * @returns Tenant slug or null if not a valid subdomain\r\n */\r\nfunction getTenantFromSubdomain(hostname: string): string | null {\r\n  if (!hostname.includes('.')) {\r\n    return null;\r\n  }\r\n  \r\n  const parts = hostname.split('.');\r\n  const subdomain = parts[0];\r\n  \r\n  // Check if subdomain is reserved\r\n  if (!subdomain || RESERVED_SUBDOMAINS.includes(subdomain)) {\r\n    return null;\r\n  }\r\n  \r\n  // Handle both .thatsmartsite.com and .lvh.me domains\r\n  const domain = parts.slice(-2).join('.');\r\n  if (domain === 'thatsmartsite.com' || domain === 'lvh.me') {\r\n    return subdomain;\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n/**\r\n * Extract tenant slug from custom domain mapping\r\n * Example: jpsdetailing.com -> 'jps'\r\n * \r\n * @param hostname - The hostname to look up\r\n * @returns Tenant slug or null if not in mapping\r\n */\r\nfunction getTenantFromCustomDomain(hostname: string): string | null {\r\n  return CUSTOM_DOMAIN_MAPPINGS[hostname] || null;\r\n}\r\n\r\n/**\r\n * Extract tenant slug from domain/subdomain in production\r\n * Tries subdomain approach first, then custom domain mapping\r\n * \r\n * @param hostname - Optional hostname to parse (defaults to window.location.hostname)\r\n * @param defaultSlug - Default slug to return if no tenant found (defaults to 'jps')\r\n * @returns Tenant slug\r\n * \r\n * @example\r\n * ```ts\r\n * // Subdomain: jps.thatsmartsite.com -> 'jps'\r\n * const slug = getTenantFromDomain();\r\n * \r\n * // Custom domain: jpsdetailing.com -> 'jps'\r\n * const slug = getTenantFromDomain('jpsdetailing.com');\r\n * \r\n * // No match: example.org -> 'default-tenant'\r\n * const slug = getTenantFromDomain('example.org', 'default-tenant');\r\n * ```\r\n */\r\nexport function getTenantFromDomain(\r\n  hostname: string = window.location.hostname,\r\n  defaultSlug: string = 'main-site'\r\n): string {\r\n  // Try subdomain approach first\r\n  const subdomainSlug = getTenantFromSubdomain(hostname);\r\n  if (subdomainSlug) {\r\n    return subdomainSlug;\r\n  }\r\n  \r\n  // Try custom domain mapping\r\n  const customDomainSlug = getTenantFromCustomDomain(hostname);\r\n  if (customDomainSlug) {\r\n    return customDomainSlug;\r\n  }\r\n  \r\n  // Return default fallback\r\n  return defaultSlug;\r\n}\r\n\r\n/**\r\n * Add a custom domain mapping at runtime\r\n * Useful for dynamic tenant configurations\r\n * \r\n * @param domain - Custom domain\r\n * @param slug - Tenant slug to map to\r\n * \r\n * @example\r\n * ```ts\r\n * addDomainMapping('newclient.com', 'newclient-slug');\r\n * ```\r\n */\r\nexport function addDomainMapping(domain: string, slug: string): void {\r\n  CUSTOM_DOMAIN_MAPPINGS[domain] = slug;\r\n}\r\n\r\n/**\r\n * Get all custom domain mappings\r\n * Useful for debugging or admin panels\r\n */\r\nexport function getDomainMappings(): Record<string, string> {\r\n  return { ...CUSTOM_DOMAIN_MAPPINGS };\r\n}\r\n\r\n/**\r\n * Check if a hostname is a reserved subdomain\r\n * \r\n * @param hostname - The hostname to check\r\n * @returns True if the subdomain is reserved\r\n */\r\nexport function isReservedSubdomain(hostname: string): boolean {\r\n  const parts = hostname.split('.');\r\n  const subdomain = parts[0];\r\n  \r\n  if (!subdomain) {\r\n    return false;\r\n  }\r\n  \r\n  return RESERVED_SUBDOMAINS.includes(subdomain);\r\n}\r\n\r\n","/**\r\n * Tenant Slug Hook\r\n * \r\n * Single responsibility: Resolve tenant slug from URL params or domain\r\n * Encapsulates routing logic and domain resolution\r\n */\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { env } from '@/shared/env';\r\nimport { getTenantFromDomain } from '@/shared/utils/domainUtils';\r\n\r\n/**\r\n * Get tenant slug from URL params (dev) or domain (production)\r\n * \r\n * @returns Tenant slug string or undefined\r\n * \r\n * @example\r\n * ```tsx\r\n * function MyComponent() {\r\n *   const slug = useTenantSlug();\r\n *   // In dev: slug from URL params (/jps -> 'jps')\r\n *   // In prod: slug from domain (jps.example.com -> 'jps')\r\n * }\r\n * ```\r\n */\r\nexport function useTenantSlug(): string | undefined {\r\n  const params = useParams();\r\n  \r\n  // First, try to get tenant from domain/subdomain (works in both dev and prod)\r\n  const domainSlug = getTenantFromDomain();\r\n  \r\n  \r\n  if (domainSlug && domainSlug !== 'main-site') {\r\n    return domainSlug;\r\n  }\r\n  \r\n  // Fallback: In development, get tenant from URL slug parameter\r\n  // Check multiple param names for flexibility across different routes\r\n  if (env.DEV) {\r\n    return params['businessSlug'] || params['tenantSlug'] || params['slug'];\r\n  }\r\n  \r\n  // No tenant found\r\n  return undefined;\r\n}\r\n\r\n","/**\r\n * Tenant Data Transformation Utilities\r\n * \r\n * Single responsibility: Transform flat API data into consumer-friendly formats\r\n * Pure functions with no side effects\r\n */\r\n\r\nimport type { Business } from '@/shared/types/tenant-business.types';\r\n\r\n/**\r\n * Social media links object\r\n */\r\nexport interface SocialMediaLinks {\r\n  facebook?: string;\r\n  instagram?: string;\r\n  youtube?: string;\r\n  tiktok?: string;\r\n  googleBusiness?: string;\r\n}\r\n\r\n/**\r\n * Social media platform data structure\r\n */\r\nexport interface SocialMediaPlatform {\r\n  url: string;\r\n  enabled: boolean;\r\n}\r\n\r\n/**\r\n * Transform business social media data into a clean object\r\n * Uses individual enabled/url columns\r\n * Only includes platforms that are enabled and have non-empty URLs\r\n * \r\n * @param business - Business data from API\r\n * @returns Social media links object with only enabled platforms that have URLs\r\n * \r\n * @example\r\n * ```ts\r\n * const socials = transformSocialMedia(businessData);\r\n * // { facebook: 'https://...', instagram: 'https://...' }\r\n * ```\r\n */\r\nexport function transformSocialMedia(business: Business): SocialMediaLinks {\r\n  const socials: SocialMediaLinks = {};\r\n  \r\n  // Use individual enabled/url columns\r\n  // Show if enabled (with or without URL)\r\n  if (business.facebook_enabled) {\r\n    socials.facebook = business.facebook_url?.trim() || '';\r\n  }\r\n  \r\n  if (business.instagram_enabled) {\r\n    socials.instagram = business.instagram_url?.trim() || '';\r\n  }\r\n  \r\n  if (business.youtube_enabled) {\r\n    socials.youtube = business.youtube_url?.trim() || '';\r\n  }\r\n  \r\n  if (business.tiktok_enabled) {\r\n    socials.tiktok = business.tiktok_url?.trim() || '';\r\n  }\r\n  \r\n  // Google Business Profile is still handled separately\r\n  if (business.gbp_url?.trim()) {\r\n    socials.googleBusiness = business.gbp_url;\r\n  }\r\n  \r\n  return socials;\r\n}\r\n\r\n/**\r\n * Get primary location from service areas\r\n * Returns the first primary area, or the first area if no primary is set\r\n * \r\n * @param business - Business data from API\r\n * @returns Location string in format \"City, State\" or empty string\r\n * \r\n * @example\r\n * ```ts\r\n * const location = getPrimaryLocation(businessData);\r\n * // \"Bullhead City, AZ\"\r\n * ```\r\n */\r\nexport function getPrimaryLocation(business: Business): string {\r\n  if (business.service_areas.length === 0) {\r\n    return '';\r\n  }\r\n  \r\n  // Find primary service area\r\n  const primaryArea = business.service_areas.find(area => area.primary);\r\n  const area = primaryArea ?? business.service_areas[0];\r\n  \r\n  // At this point, area is guaranteed to exist due to length check above\r\n  if (!area) {\r\n    return '';\r\n  }\r\n  \r\n  return `${area.city}, ${area.state}`;\r\n}\r\n\r\n/**\r\n * Get all primary service areas (can be multiple)\r\n * \r\n * @param business - Business data from API\r\n * @returns Array of primary service areas\r\n */\r\nexport function getPrimaryServiceAreas(business: Business) {\r\n  if (business.service_areas.length === 0) {\r\n    return [];\r\n  }\r\n  \r\n  const primaryAreas = business.service_areas.filter(area => area.primary);\r\n  \r\n  // If no primary areas are marked, return the first one\r\n  if (primaryAreas.length === 0) {\r\n    return [business.service_areas[0]];\r\n  }\r\n  \r\n  return primaryAreas;\r\n}\r\n\r\n/**\r\n * Format business phone for display\r\n * Handles various formats and ensures consistent output\r\n * \r\n * @param phone - Phone number string\r\n * @returns Formatted phone or empty string\r\n */\r\nexport function formatBusinessPhone(phone?: string): string {\r\n  if (!phone?.trim()) {\r\n    return '';\r\n  }\r\n  \r\n  // Remove all non-numeric characters\r\n  const digits = phone.replace(/\\D/g, '');\r\n  \r\n  // Format as (XXX) XXX-XXXX for 10-digit US numbers\r\n  if (digits.length === 10) {\r\n    return `(${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6)}`;\r\n  }\r\n  \r\n  // Format as +X (XXX) XXX-XXXX for 11-digit numbers\r\n  if (digits.length === 11) {\r\n    return `+${digits[0]} (${digits.slice(1, 4)}) ${digits.slice(4, 7)}-${digits.slice(7)}`;\r\n  }\r\n  \r\n  // Return original if format is unexpected\r\n  return phone;\r\n}\r\n\r\n/**\r\n * Check if business has any social media links\r\n * \r\n * @param business - Business data from API\r\n * @returns True if at least one social media link exists\r\n */\r\nexport function hasSocialMedia(business: Business): boolean {\r\n  return !!(\r\n    business.facebook_enabled ||\r\n    business.instagram_enabled ||\r\n    business.youtube_enabled ||\r\n    business.tiktok_enabled ||\r\n    business.gbp_url?.trim()\r\n  );\r\n}\r\n\r\n/**\r\n * Get business contact email with fallback\r\n * \r\n * @param business - Business data from API\r\n * @param fallback - Fallback email if none exists\r\n * @returns Email address\r\n */\r\nexport function getBusinessEmail(business: Business, fallback: string = 'hello@thatsmartsite.com'): string {\r\n  return business.business_email?.trim() || fallback;\r\n}\r\n\r\n","/**\r\n * Data Context\r\n * \r\n * Central data provider for tenant-based applications\r\n * \r\n * Single responsibility: Orchestrate and provide tenant + industry config data\r\n * Business logic is delegated to hooks, API clients, and utility functions\r\n */\r\n\r\nimport React, { createContext } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { fetchIndustryConfig } from '@/shared/api/industryConfigApi';\r\nimport { useTenantData } from '@/shared/hooks/useTenantData';\r\nimport { useTenantSlug } from '@/shared/hooks/useTenantSlug';\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\nimport {\r\n  getBusinessEmail,\r\n  getPrimaryLocation,\r\n  type SocialMediaLinks,\r\n  transformSocialMedia,\r\n} from '@/shared/utils/tenantDataTransform';\r\n\r\n/**\r\n * Data context type definition\r\n */\r\nexport interface DataContextType {\r\n  // Tenant data (from API)\r\n  businessName: string;\r\n  phone: string;\r\n  email: string;\r\n  owner: string;\r\n  location: string;\r\n  industry: string;\r\n  serviceAreas: Array<{\r\n    city: string;\r\n    state: string;\r\n    zip?: string;\r\n    primary?: boolean;\r\n    minimum?: number;\r\n    multiplier?: number;\r\n  }>;\r\n  socialMedia: SocialMediaLinks;\r\n  \r\n  // Industry config (from data files)\r\n  siteConfig: MainSiteConfig | null;\r\n  \r\n  // Status flags\r\n  isLoading: boolean;\r\n  isTenant: boolean;\r\n  isPreview?: boolean;\r\n}\r\n\r\nexport const DataContext = createContext<DataContextType | null>(null);\r\n\r\ninterface DataProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Data Provider Component\r\n * \r\n * Provides centralized access to tenant and industry configuration data\r\n * Uses composition of hooks and utilities for clean separation of concerns\r\n */\r\nexport const DataProvider: React.FC<DataProviderProps> = ({ children }) => {\r\n  // Step 1: Get tenant slug from URL or domain\r\n  const slug = useTenantSlug();\r\n  \r\n  // Step 2: Fetch tenant/business data\r\n  const { data: businessData, isLoading: isLoadingBusiness } = useTenantData({ \r\n    slug: slug \r\n  });\r\n  \r\n  // Step 3: Fetch industry config based on tenant's industry\r\n  const industry = businessData?.industry || 'mobile-detailing';\r\n  const { data: siteConfig, isLoading: isLoadingSiteConfig } = useQuery({\r\n    queryKey: ['shared','siteConfig', industry],\r\n    queryFn: () => fetchIndustryConfig(industry),\r\n    enabled: !!businessData?.industry,\r\n    staleTime: 10 * 60 * 1000, // 10 minutes\r\n    retry: 2\r\n  });\r\n  \r\n  // Step 4: Compute derived state\r\n  const isLoading = isLoadingBusiness || isLoadingSiteConfig;\r\n  \r\n  // Step 5: Transform and assemble context value\r\n  const transformedSocialMedia = businessData ? transformSocialMedia(businessData) : {};\r\n  \r\n  const contextValue: DataContextType = {\r\n    // Tenant data with fallbacks\r\n    businessName: businessData?.business_name || 'Loading...',\r\n    phone: businessData?.business_phone || '',\r\n    email: businessData ? getBusinessEmail(businessData) : 'service@thatsmartsite.com',\r\n    owner: businessData?.owner || '',\r\n    location: businessData ? getPrimaryLocation(businessData) : '',\r\n    industry: businessData?.industry || 'mobile-detailing',\r\n    serviceAreas: businessData?.service_areas || [],\r\n    \r\n    // Social media (filtered and transformed)\r\n    socialMedia: transformedSocialMedia,\r\n    \r\n    // Industry config\r\n    siteConfig: siteConfig || null,\r\n    \r\n    // Status\r\n    isLoading,\r\n    isTenant: true, // Always a tenant page\r\n    isPreview: false // Regular tenant page, not preview\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={contextValue}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\n// Note: useData and useDataOptional hooks have been moved to @/shared/hooks/useData\r\n// This keeps this file focused on the component provider (for Fast Refresh compatibility)\r\n","import React, { createContext, useContext } from 'react';\r\n\r\nimport { SiteActions,SiteContextType } from '@/shared/types/site';\r\n\r\n// Simplified context for tenant-based sites\r\n// All sites are now tenant-based, so we don't need complex location detection\r\nconst initialState: SiteContextType = {\r\n  siteState: 'tenant', // Changed from 'mdh' to 'tenant'\r\n  currentLocation: null,\r\n  businessData: null,\r\n  isLoading: false,\r\n  hasError: false,\r\n};\r\n\r\n// Context\r\nconst SiteContext = createContext<(SiteContextType & SiteActions) | null>(null);\r\n\r\n// Provider component\r\nexport const SiteProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  // All routes are now tenant-based, so we're always in tenant mode\r\n  const contextValue: SiteContextType & SiteActions = {\r\n    ...initialState,\r\n    // Legacy actions that are no longer needed but kept for compatibility\r\n    setLocation: () => {},\r\n    clearLocation: () => {},\r\n    setLoading: () => {},\r\n    setError: () => {},\r\n  };\r\n\r\n  return (\r\n    <SiteContext.Provider value={contextValue}>\r\n      {children}\r\n    </SiteContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use the context\r\n// eslint-disable-next-line react-refresh/only-export-components -- Standard context pattern: hook and provider together\r\nexport const useSiteState = () => {\r\n  const context = useContext(SiteContext);\r\n  if (!context) {\r\n    console.error('useSiteState must be used within a SiteProvider');\r\n    // Return a safe fallback instead of throwing\r\n    return {\r\n      siteState: 'mdh' as const,\r\n      currentLocation: null,\r\n      businessData: null,\r\n      isLoading: false,\r\n      hasError: false,\r\n      setLocation: () => {},\r\n      clearLocation: () => {},\r\n      setLoading: () => {},\r\n      setError: () => {},\r\n    };\r\n  }\r\n  return context;\r\n};\r\n","/**\r\n * Tenant Asset Locator\r\n * \r\n * Centralized helper for constructing tenant asset URLs with fallbacks.\r\n * Eliminates brittle string concatenation throughout the codebase.\r\n * \r\n * Pure function - no IO, no network calls, no DOM access.\r\n */\r\n\r\nimport type { Vertical } from '@/shared/types';\r\n\r\n/**\r\n * Supported asset types for tenant branding and content\r\n */\r\nexport type AssetType =\r\n  | 'logo'           // Primary brand logo\r\n  | 'logo-dark'      // Dark mode variant\r\n  | 'logo-light'     // Light mode variant\r\n  | 'favicon'        // Browser favicon\r\n  | 'hero'           // Hero/banner images\r\n  | 'hero-1'         // Specific hero image (numbered)\r\n  | 'hero-2'\r\n  | 'hero-3'\r\n  | 'og-image'       // Open Graph social share image\r\n  | 'twitter-image'  // Twitter Card image\r\n  | 'avatar'         // User/review avatar\r\n  | 'gallery';       // Gallery/portfolio images\r\n\r\n/**\r\n * File extension preferences\r\n */\r\nexport type AssetExtension = 'webp' | 'png' | 'jpg' | 'jpeg' | 'svg' | 'gif';\r\n\r\n/**\r\n * Options for asset URL generation\r\n */\r\nexport interface AssetLocatorOptions {\r\n  /** Tenant ID (e.g., 'jps', '123') - if provided, checks uploads first */\r\n  tenantId?: string;\r\n  \r\n  /** Vertical/industry (e.g., 'mobile-detailing') - used for fallback paths */\r\n  vertical: Vertical;\r\n  \r\n  /** Asset type to locate */\r\n  type: AssetType;\r\n  \r\n  /** Custom filename (useful for avatars, gallery images) */\r\n  filename?: string;\r\n  \r\n  /** Preferred file extension (default: 'webp' for most, 'svg' for favicon) */\r\n  extension?: AssetExtension;\r\n  \r\n  /** Use tenant-specific uploads directory (default: true if tenantId provided) */\r\n  useTenantUploads?: boolean;\r\n  \r\n  /** Force fallback to vertical default (skip tenant uploads check) */\r\n  forceVerticalDefault?: boolean;\r\n}\r\n\r\n/**\r\n * Get the default extension for a given asset type\r\n */\r\nfunction getDefaultExtension(type: AssetType): AssetExtension {\r\n  if (type === 'favicon') return 'svg';\r\n  if (type.startsWith('logo')) return 'webp';\r\n  return 'webp';\r\n}\r\n\r\n/**\r\n * Get the subdirectory path for a given asset type\r\n */\r\nfunction getAssetSubdirectory(type: AssetType): string {\r\n  if (type === 'avatar') return 'avatars';\r\n  if (type === 'gallery') return 'gallery';\r\n  if (type.startsWith('hero')) return 'hero';\r\n  if (type.startsWith('logo') || type === 'favicon') return 'icons';\r\n  if (type === 'og-image' || type === 'twitter-image') return 'social';\r\n  return 'images';\r\n}\r\n\r\n/**\r\n * Get the filename for a given asset type\r\n */\r\nfunction getAssetFilename(type: AssetType, customFilename?: string, extension?: AssetExtension): string {\r\n  // If custom filename provided (common for avatars, gallery), use it\r\n  if (customFilename) {\r\n    // If filename already has extension, use as-is\r\n    if (/\\.(webp|png|jpg|jpeg|svg|gif)$/i.test(customFilename)) {\r\n      return customFilename;\r\n    }\r\n    // Otherwise append extension\r\n    return `${customFilename}.${extension || 'webp'}`;\r\n  }\r\n  \r\n  // Standard filenames by type\r\n  const ext = extension || getDefaultExtension(type);\r\n  \r\n  switch (type) {\r\n    case 'logo':\r\n      return `logo.${ext}`;\r\n    case 'logo-dark':\r\n      return `logo-dark.${ext}`;\r\n    case 'logo-light':\r\n      return `logo-light.${ext}`;\r\n    case 'favicon':\r\n      return `favicon.${ext}`;\r\n    case 'hero':\r\n    case 'hero-1':\r\n      return `hero1.${ext}`;\r\n    case 'hero-2':\r\n      return `hero2.${ext}`;\r\n    case 'hero-3':\r\n      return `hero3.${ext}`;\r\n    case 'og-image':\r\n      return `og-image.${ext}`;\r\n    case 'twitter-image':\r\n      return `twitter-image.${ext}`;\r\n    default:\r\n      return `${type}.${ext}`;\r\n  }\r\n}\r\n\r\n/**\r\n * Generate tenant-specific upload URL\r\n * Format: /uploads/{tenantId}/{subdirectory}/{filename}\r\n */\r\nfunction getTenantUploadUrl(\r\n  tenantId: string,\r\n  type: AssetType,\r\n  filename: string\r\n): string {\r\n  const subdirectory = getAssetSubdirectory(type);\r\n  \r\n  // For avatars, uploads structure is: /uploads/avatars/{filename}\r\n  if (type === 'avatar') {\r\n    return `/uploads/avatars/${filename}`;\r\n  }\r\n  \r\n  // For other assets: /uploads/{tenantId}/{subdirectory}/{filename}\r\n  return `/uploads/${tenantId}/${subdirectory}/${filename}`;\r\n}\r\n\r\n/**\r\n * Generate vertical default URL\r\n * Format: /{vertical}/{subdirectory}/{filename}\r\n */\r\nfunction getVerticalDefaultUrl(\r\n  vertical: Vertical,\r\n  type: AssetType,\r\n  filename: string\r\n): string {\r\n  const subdirectory = getAssetSubdirectory(type);\r\n  return `/${vertical}/${subdirectory}/${filename}`;\r\n}\r\n\r\n/**\r\n * Get tenant asset URL with intelligent fallback logic\r\n * \r\n * Priority:\r\n * 1. Custom URL (if provided via database/config)\r\n * 2. Tenant-specific uploads (if tenantId provided and useTenantUploads=true)\r\n * 3. Vertical default assets (fallback)\r\n * \r\n * @example\r\n * // Get tenant logo (checks uploads, falls back to vertical)\r\n * getTenantAssetUrl({ tenantId: 'jps', vertical: 'mobile-detailing', type: 'logo' })\r\n * // => '/uploads/jps/icons/logo.webp' or '/{vertical}/icons/logo.webp'\r\n * \r\n * @example\r\n * // Get specific hero image\r\n * getTenantAssetUrl({ vertical: 'mobile-detailing', type: 'hero-2' })\r\n * // => '/mobile-detailing/hero/hero2.webp'\r\n * \r\n * @example\r\n * // Get avatar with custom filename\r\n * getTenantAssetUrl({ vertical: 'mobile-detailing', type: 'avatar', filename: 'user-123.jpg' })\r\n * // => '/uploads/avatars/user-123.jpg'\r\n * \r\n * @example\r\n * // Force vertical default (skip tenant check)\r\n * getTenantAssetUrl({ \r\n *   tenantId: 'jps', \r\n *   vertical: 'mobile-detailing', \r\n *   type: 'logo',\r\n *   forceVerticalDefault: true \r\n * })\r\n * // => '/mobile-detailing/icons/logo.webp'\r\n */\r\nexport function getTenantAssetUrl(options: AssetLocatorOptions): string {\r\n  const {\r\n    tenantId,\r\n    vertical,\r\n    type,\r\n    filename: customFilename,\r\n    extension,\r\n    useTenantUploads = true,\r\n    forceVerticalDefault = false,\r\n  } = options;\r\n  \r\n  // Generate filename\r\n  const filename = getAssetFilename(type, customFilename, extension);\r\n  \r\n  // If forcing vertical default, skip tenant uploads\r\n  if (forceVerticalDefault) {\r\n    return getVerticalDefaultUrl(vertical, type, filename);\r\n  }\r\n  \r\n  // Avatars always use /uploads/avatars/ (no tenant-specific directory)\r\n  if (type === 'avatar') {\r\n    return `/uploads/avatars/${filename}`;\r\n  }\r\n  \r\n  // If tenant ID provided and uploads enabled, use tenant-specific path\r\n  if (tenantId && useTenantUploads) {\r\n    return getTenantUploadUrl(tenantId, type, filename);\r\n  }\r\n  \r\n  // Fallback to vertical default\r\n  return getVerticalDefaultUrl(vertical, type, filename);\r\n}\r\n\r\n/**\r\n * Get multiple asset URLs at once (useful for responsive images, variants)\r\n * \r\n * @example\r\n * // Get all hero images\r\n * getTenantAssetUrls({ \r\n *   vertical: 'mobile-detailing', \r\n *   types: ['hero-1', 'hero-2', 'hero-3'] \r\n * })\r\n * // => ['/mobile-detailing/hero/hero1.webp', '/mobile-detailing/hero/hero2.webp', ...]\r\n */\r\nexport function getTenantAssetUrls(\r\n  options: Omit<AssetLocatorOptions, 'type'> & { types: AssetType[] }\r\n): string[] {\r\n  const { types, ...baseOptions } = options;\r\n  return types.map(type => getTenantAssetUrl({ ...baseOptions, type }));\r\n}\r\n\r\n/**\r\n * Get logo with automatic dark/light mode fallback\r\n * Returns an object with all logo variants\r\n */\r\nexport interface LogoUrls {\r\n  default: string;\r\n  dark?: string;\r\n  light?: string;\r\n}\r\n\r\nexport function getTenantLogoUrls(\r\n  options: Omit<AssetLocatorOptions, 'type'>\r\n): LogoUrls {\r\n  return {\r\n    default: getTenantAssetUrl({ ...options, type: 'logo' }),\r\n    dark: getTenantAssetUrl({ ...options, type: 'logo-dark' }),\r\n    light: getTenantAssetUrl({ ...options, type: 'logo-light' }),\r\n  };\r\n}\r\n\r\n/**\r\n * Check if a filename already includes an extension\r\n */\r\nexport function hasFileExtension(filename: string): boolean {\r\n  return /\\.(webp|png|jpg|jpeg|svg|gif|bmp|ico)$/i.test(filename);\r\n}\r\n\r\n/**\r\n * Ensure a URL has proper leading slash\r\n */\r\nexport function normalizeAssetUrl(url: string): string {\r\n  if (!url) return '';\r\n  if (url.startsWith('http://') || url.startsWith('https://')) return url;\r\n  return url.startsWith('/') ? url : `/${url}`;\r\n}\r\n\r\n","/**\r\n * Tenant Config Migration Utilities\r\n * Helpers for converting between old (simple) and new (centralized) tenant config formats\r\n */\r\n\r\nimport { TenantConfig, Vertical } from '@/shared/types';\r\n\r\nimport { getTenantAssetUrl } from './assetLocator';\r\n\r\n/**\r\n * Type guard to check if a string is a valid Vertical\r\n */\r\nfunction isValidVertical(value: unknown): value is Vertical {\r\n  return typeof value === 'string' && [\r\n    'mobile-detailing',\r\n    'pet-grooming',\r\n    'lawn-care',\r\n    'maid-service',\r\n    'hvac',\r\n    'plumbing',\r\n    'electrical'\r\n  ].includes(value);\r\n}\r\n\r\n/**\r\n * Old tenant config format (10 simple fields)\r\n * @deprecated Use TenantConfig from @/shared/types instead\r\n */\r\nexport interface LegacyTenantConfig {\r\n  business_name: string;\r\n  phone: string;\r\n  email: string;\r\n  logo_url: string;\r\n  facebook: string;\r\n  instagram: string;\r\n  tiktok: string;\r\n  youtube: string;\r\n  base_location: {\r\n    city: string;\r\n    state: string;\r\n  };\r\n}\r\n\r\n/**\r\n * Convert legacy tenant config to new centralized format\r\n * \r\n * @param legacy - Old format config\r\n * @param affiliateId - Affiliate/tenant ID (optional, will generate from business_name if not provided)\r\n * @returns New centralized TenantConfig\r\n */\r\nexport function legacyToTenantConfig(\r\n  // eslint-disable-next-line @typescript-eslint/no-deprecated -- This function intentionally works with legacy format for migration\r\n  legacy: LegacyTenantConfig,\r\n  affiliateId?: string | number\r\n): TenantConfig {\r\n  // Generate slug from business name if not provided\r\n  const slug = affiliateId \r\n    ? String(affiliateId) \r\n    : legacy.business_name\r\n        .toLowerCase()\r\n        .replace(/[^a-z0-9]+/g, '-')\r\n        .replace(/^-|-$/g, '');\r\n  \r\n  return {\r\n    // Core identity\r\n    id: affiliateId || slug,\r\n    slug: slug,\r\n    vertical: 'mobile-detailing',  // Default to mobile-detailing\r\n    status: 'active',\r\n    \r\n    // Branding\r\n    branding: {\r\n      businessName: legacy.business_name,\r\n      logo: {\r\n        url: legacy.logo_url\r\n      }\r\n    },\r\n    \r\n    // Contact\r\n    contact: {\r\n      phones: {\r\n        main: legacy.phone\r\n      },\r\n      emails: {\r\n        primary: legacy.email\r\n      },\r\n      socials: {\r\n        facebook: legacy.facebook,\r\n        instagram: legacy.instagram,\r\n        tiktok: legacy.tiktok,\r\n        youtube: legacy.youtube\r\n      },\r\n      baseLocation: {\r\n        city: legacy.base_location.city,\r\n        state: legacy.base_location.state\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Convert new centralized config to legacy format (for backward compatibility)\r\n * \r\n * @param config - New centralized TenantConfig\r\n * @returns Old format config\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-deprecated -- This function intentionally returns legacy format for backward compatibility\r\nexport function tenantConfigToLegacy(config: TenantConfig): LegacyTenantConfig {\r\n  return {\r\n    business_name: config.branding.businessName,\r\n    phone: config.contact.phones.main,\r\n    email: config.contact.emails.primary,\r\n    logo_url: config.branding.logo.url,\r\n    facebook: config.contact.socials.facebook,\r\n    instagram: config.contact.socials.instagram,\r\n    tiktok: config.contact.socials.tiktok,\r\n    youtube: config.contact.socials.youtube,\r\n    base_location: {\r\n      city: config.contact.baseLocation.city,\r\n      state: config.contact.baseLocation.state\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a minimal tenant config from affiliate API data\r\n * \r\n * @param affiliate - Affiliate data from API\r\n * @returns Minimal TenantConfig\r\n */\r\nexport function affiliateToTenantConfig(affiliate: {\r\n  id?: string | number;\r\n  slug?: string;\r\n  business_name: string;\r\n  business_phone: string;\r\n  business_email: string;\r\n  facebook_url?: string;\r\n  instagram_url?: string;\r\n  youtube_url?: string;\r\n  tiktok_url?: string;\r\n  service_areas?: Array<{ city: string; state: string; primary?: boolean }>;\r\n  industry?: string;\r\n  logo_url?: string;\r\n}): TenantConfig {\r\n  // Find primary service area or use first one\r\n  const primaryArea = affiliate.service_areas?.find(area => area.primary) || affiliate.service_areas?.[0];\r\n  \r\n  // Safely convert industry to Vertical type\r\n  const vertical: Vertical = isValidVertical(affiliate.industry) \r\n    ? affiliate.industry \r\n    : 'mobile-detailing';\r\n  \r\n  // Build logo URL - use affiliate's logo if provided, otherwise use industry default\r\n  // Only check tenant uploads if a custom logo_url exists in the database\r\n  const logoUrl = affiliate.logo_url || getTenantAssetUrl({\r\n    vertical: vertical,\r\n    type: 'logo',\r\n    forceVerticalDefault: true, // Always use industry default if no custom logo\r\n  });\r\n  \r\n  return {\r\n    // Core identity\r\n    id: affiliate.id || affiliate.slug || 'unknown',\r\n    slug: affiliate.slug || affiliate.business_name.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\r\n    vertical,\r\n    status: 'active',\r\n    \r\n    // Branding\r\n    branding: {\r\n      businessName: affiliate.business_name,\r\n      logo: {\r\n        url: logoUrl\r\n      }\r\n    },\r\n    \r\n    // Contact\r\n    contact: {\r\n      phones: {\r\n        main: affiliate.business_phone\r\n      },\r\n      emails: {\r\n        primary: affiliate.business_email\r\n      },\r\n      socials: {\r\n        facebook: affiliate.facebook_url || '',\r\n        instagram: affiliate.instagram_url || '',\r\n        tiktok: affiliate.tiktok_url || '',\r\n        youtube: affiliate.youtube_url || ''\r\n      },\r\n      baseLocation: {\r\n        city: primaryArea?.city || 'Unknown',\r\n        state: primaryArea?.state || 'Unknown'\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n","import type { ReactNode } from 'react';\r\nimport React, { createContext, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { fetchTenantBySlug } from '../api/tenantApi';\r\nimport { TenantConfig } from '../types';\r\nimport { affiliateToTenantConfig, tenantConfigToLegacy } from '../utils/tenantConfigMigration';\r\n\r\n// Local type for backward compatibility (avoids importing deprecated type)\r\ninterface LegacyTenantConfig {\r\n  branding?: {\r\n    businessName?: string;\r\n    logo?: string;\r\n  };\r\n  contact?: {\r\n    phone?: string;\r\n    email?: string;\r\n  };\r\n  social?: {\r\n    facebook?: string;\r\n    instagram?: string;\r\n    tiktok?: string;\r\n    youtube?: string;\r\n  };\r\n  serviceAreas?: Array<{\r\n    id: number;\r\n    city: string;\r\n    state_code: string;\r\n    postal_codes: string[];\r\n    is_primary: boolean;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Tenant Config Context Type\r\n * Provides both new (centralized) and legacy formats for backward compatibility\r\n */\r\nexport interface TenantConfigContextType {\r\n  // New centralized format\r\n  tenantConfig: TenantConfig | null;\r\n  \r\n  // Legacy format (for backward compatibility)\r\n  legacyConfig: LegacyTenantConfig | null;\r\n  \r\n  // Status\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  \r\n  // Actions\r\n  refreshTenantConfig: () => Promise<void>;\r\n}\r\n\r\nexport const TenantConfigContext = createContext<TenantConfigContextType | null>(null);\r\n\r\ninterface TenantConfigProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n/**\r\n * Tenant Config Provider\r\n * \r\n * Provides tenant configuration in both:\r\n * - New centralized format (TenantConfig)\r\n * - Legacy format (LegacyTenantConfig) for backward compatibility\r\n * \r\n * Data source: Tenant API (fetchTenantBySlug)\r\n */\r\nexport const TenantConfigProvider: React.FC<TenantConfigProviderProps> = ({ children }) => {\r\n  const [tenantConfigState, setTenantConfigState] = useState<TenantConfig | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { slug } = useParams<{ slug: string }>();\r\n\r\n  // Skip fetching for non-tenant routes (admin, onboarding, login, etc.)\r\n  const currentPath = window.location.pathname;\r\n  const isNonTenantRoute = \r\n    currentPath.startsWith('/admin-dashboard') ||\r\n    currentPath.startsWith('/tenant-dashboard') ||\r\n    currentPath.startsWith('/tenant-onboarding') ||\r\n    currentPath.startsWith('/login') ||\r\n    currentPath.startsWith('/booking') ||\r\n    currentPath.startsWith('/preview-generator') ||\r\n    currentPath.startsWith('/preview');\r\n\r\n  const refreshTenantConfig = useCallback(async () => {\r\n    // Skip if no slug or on non-tenant route\r\n    if (!slug || isNonTenantRoute) {\r\n      setTenantConfigState(null);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const result = await fetchTenantBySlug(slug);\r\n      \r\n      if (result.success && result.data) {\r\n        // Convert tenant data to new centralized format\r\n        const config = affiliateToTenantConfig({\r\n          id: result.data.id,\r\n          slug: result.data.slug,\r\n          business_name: result.data.business_name,\r\n          business_phone: result.data.business_phone,\r\n          business_email: result.data.business_email,\r\n          facebook_url: result.data.facebook_url,\r\n          instagram_url: result.data.instagram_url,\r\n          tiktok_url: result.data.tiktok_url,\r\n          youtube_url: result.data.youtube_url,\r\n          service_areas: result.data.service_areas,\r\n          industry: result.data.industry,\r\n          logo_url: result.data.logo_url\r\n        });\r\n        \r\n        setTenantConfigState(config);\r\n      } else {\r\n        setError(result.error || 'Failed to load tenant data');\r\n        setTenantConfigState(null);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error refreshing tenant config:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to refresh tenant config');\r\n      setTenantConfigState(null);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [slug, isNonTenantRoute]);\r\n\r\n  useEffect(() => {\r\n    void refreshTenantConfig();\r\n  }, [refreshTenantConfig]);\r\n\r\n  // Create legacy format for backward compatibility\r\n  const legacyConfig = tenantConfigState ? tenantConfigToLegacy(tenantConfigState) : null;\r\n\r\n  const value: TenantConfigContextType = {\r\n    tenantConfig: tenantConfigState,\r\n    legacyConfig,\r\n    isLoading,\r\n    error,\r\n    refreshTenantConfig,\r\n  };\r\n\r\n  return (\r\n    <TenantConfigContext.Provider value={value}>\r\n      {children}\r\n    </TenantConfigContext.Provider>\r\n  );\r\n};\r\n","import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\n/**\r\n * Utility function to merge Tailwind CSS classes\r\n * Combines clsx for conditional classes and tailwind-merge for deduplication\r\n */\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n","/* eslint-disable react/prop-types -- Using TypeScript interfaces instead of PropTypes */\r\nimport React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n/* eslint-enable react/prop-types -- Re-enable after TypeScript interface declarations */\r\n\r\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  loading?: boolean;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ \r\n    className, \r\n    variant = 'primary', \r\n    size = 'md', \r\n    loading = false,\r\n    leftIcon,\r\n    rightIcon,\r\n    children,\r\n    disabled,\r\n    ...props \r\n  }, ref) => {\r\n    const baseStyles = 'inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-orange-500 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50';\r\n    \r\n    const variants = {\r\n      primary: 'bg-orange-500 text-white hover:bg-orange-600',\r\n      secondary: 'bg-gray-600 text-white hover:bg-gray-700',\r\n      outline: 'border border-gray-300 bg-transparent text-gray-700 hover:bg-gray-50',\r\n      'outline-white': 'border border-white bg-transparent text-white hover:bg-white hover:text-gray-900',\r\n      ghost: 'text-gray-700 hover:bg-gray-100',\r\n      destructive: 'bg-red-500 text-white hover:bg-red-600',\r\n    };\r\n\r\n    const sizes = {\r\n      sm: 'h-9 px-3 text-sm',\r\n      md: 'h-10 px-4 py-2',\r\n      lg: 'h-11 px-8 text-lg',\r\n      xl: 'h-14 px-10 text-xl',\r\n    };\r\n\r\n    return (\r\n      <button\r\n        className={cn(\r\n          baseStyles,\r\n          variants[variant],\r\n          sizes[size],\r\n          className\r\n        )}\r\n        disabled={disabled || loading}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {loading && (\r\n          <svg\r\n            className=\"mr-2 h-4 w-4 animate-spin\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <circle\r\n              className=\"opacity-25\"\r\n              cx=\"12\"\r\n              cy=\"12\"\r\n              r=\"10\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"4\"\r\n            />\r\n            <path\r\n              className=\"opacity-75\"\r\n              fill=\"currentColor\"\r\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n            />\r\n          </svg>\r\n        )}\r\n        {!loading && leftIcon && <span className=\"mr-2\">{leftIcon}</span>}\r\n        {children}\r\n        {!loading && rightIcon && <span className=\"ml-2\">{rightIcon}</span>}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nButton.displayName = 'Button';\r\n\r\nexport { Button };\r\n","/* eslint-disable react/prop-types -- Using TypeScript interfaces instead of PropTypes */\r\nimport React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n/* eslint-enable react/prop-types -- Re-enable after imports */\r\n\r\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  variant?: 'default' | 'secondary' | 'destructive' | 'outline' | 'success' | 'warning';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  dot?: boolean;\r\n}\r\n\r\nconst Badge = React.forwardRef<HTMLDivElement, BadgeProps>(\r\n  ({ className, variant = 'default', size = 'md', dot = false, children, ...props }, ref) => {\r\n    const baseStyles = 'inline-flex items-center rounded-full font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2';\r\n    \r\n    const variants = {\r\n      default: 'bg-primary text-primary-foreground hover:bg-primary/80',\r\n      secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n      destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/80',\r\n      outline: 'text-foreground border border-input',\r\n      success: 'bg-green-100 text-green-800 hover:bg-green-200 dark:bg-green-900 dark:text-green-200',\r\n      warning: 'bg-yellow-100 text-yellow-800 hover:bg-yellow-200 dark:bg-yellow-900 dark:text-yellow-200',\r\n    };\r\n\r\n    const sizes = {\r\n      sm: 'px-2 py-1 text-xs',\r\n      md: 'px-2.5 py-0.5 text-sm',\r\n      lg: 'px-3 py-1 text-base',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          baseStyles,\r\n          variants[variant],\r\n          sizes[size],\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {dot && (\r\n          <div className=\"w-2 h-2 rounded-full bg-current mr-1.5\" />\r\n        )}\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nBadge.displayName = 'Badge';\r\n\r\nexport { Badge };\r\n","import React from 'react';\r\nimport { LucideIcon } from 'lucide-react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nexport interface FilterChipProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  isSelected?: boolean;\r\n  icon?: LucideIcon;\r\n  children: React.ReactNode;\r\n  variant?: 'default' | 'outline' | 'ghost';\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst FilterChip = React.forwardRef<HTMLButtonElement, FilterChipProps>(\r\n  ({ \r\n    className, \r\n    isSelected = false, \r\n    icon: Icon, \r\n    children, \r\n    variant = 'default',\r\n    size = 'md',\r\n    ...props \r\n  }, ref) => {\r\n    const baseStyles = 'inline-flex items-center gap-2 rounded-full font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';\r\n    \r\n    const variants = {\r\n      default: isSelected \r\n        ? 'bg-orange-500 text-white shadow-lg shadow-orange-500/30 hover:bg-orange-600' \r\n        : 'bg-stone-800/70 text-stone-200 hover:bg-stone-700/70 hover:text-white border border-stone-600/50',\r\n      outline: isSelected\r\n        ? 'bg-orange-500 text-white border-orange-500 shadow-lg shadow-orange-500/30'\r\n        : 'text-stone-200 border border-stone-600/50 hover:bg-stone-800/50 hover:border-stone-500',\r\n      ghost: isSelected\r\n        ? 'bg-orange-500/20 text-orange-300 hover:bg-orange-500/30'\r\n        : 'text-stone-300 hover:text-white hover:bg-stone-800/50'\r\n    };\r\n\r\n    const sizes = {\r\n      sm: 'px-3 py-1.5 text-sm',\r\n      md: 'px-4 py-2 text-base',\r\n      lg: 'px-6 py-3 text-lg',\r\n    };\r\n\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        className={cn(\r\n          baseStyles,\r\n          variants[variant],\r\n          sizes[size],\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {Icon && <Icon className=\"h-4 w-4\" />}\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nFilterChip.displayName = 'FilterChip';\r\n\r\nexport { FilterChip };\r\n","/* eslint-disable react/prop-types -- Using TypeScript interfaces instead of PropTypes */\r\nimport React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  label?: string;\r\n  error?: string;\r\n  helperText?: string;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  variant?: 'default' | 'filled' | 'outlined';\r\n}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ \r\n    className, \r\n    type = 'text', \r\n    label,\r\n    error,\r\n    helperText,\r\n    leftIcon,\r\n    rightIcon,\r\n    variant = 'default',\r\n    id,\r\n    ...props \r\n  }, ref) => {\r\n    const inputId = id || `input-${Math.random().toString(36).substring(2, 11)}`;\r\n    \r\n    const baseStyles = 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50';\r\n    \r\n    const variants = {\r\n      default: 'border-input',\r\n      filled: 'border-transparent bg-muted',\r\n      outlined: 'border-2 border-input',\r\n    };\r\n\r\n    const inputClasses = cn(\r\n      baseStyles,\r\n      variants[variant],\r\n      error && 'border-destructive focus-visible:ring-destructive',\r\n      leftIcon && 'pl-10',\r\n      rightIcon && 'pr-10',\r\n      className\r\n    );\r\n\r\n    return (\r\n      <div className=\"w-full\">\r\n        {label && (\r\n          <label\r\n            htmlFor={inputId}\r\n            className=\"block text-sm font-medium text-foreground mb-2\"\r\n          >\r\n            {label}\r\n            {props.required && <span className=\"text-destructive ml-1\">*</span>}\r\n          </label>\r\n        )}\r\n        <div className=\"relative\">\r\n          {leftIcon && (\r\n            <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\">\r\n              {leftIcon}\r\n            </div>\r\n          )}\r\n          <input\r\n            type={type}\r\n            className={inputClasses}\r\n            ref={ref}\r\n            id={inputId}\r\n            {...props}\r\n          />\r\n          {rightIcon && (\r\n            <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\">\r\n              {rightIcon}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {error && (\r\n          <p className=\"mt-1 text-sm text-destructive\" role=\"alert\">\r\n            {error}\r\n          </p>\r\n        )}\r\n        {helperText && !error && (\r\n          <p className=\"mt-1 text-sm text-muted-foreground\">\r\n            {helperText}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nInput.displayName = 'Input';\r\n\r\nexport { Input };\r\n/* eslint-enable react/prop-types -- Re-enable after TypeScript interface declarations */\r\n","/* eslint-disable react/prop-types -- Using TypeScript interfaces instead of PropTypes */\r\nimport React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n/* eslint-enable react/prop-types -- Re-enable after imports section */\r\n\r\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  variant?: 'default' | 'outlined' | 'elevated';\r\n  padding?: 'none' | 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, variant = 'default', padding = 'md', ...props }, ref) => {\r\n    const baseStyles = 'rounded-lg border bg-card text-card-foreground shadow-sm';\r\n    \r\n    const variants = {\r\n      default: 'border-border',\r\n      outlined: 'border-2 border-border',\r\n      elevated: 'border-border shadow-lg',\r\n    };\r\n\r\n    const paddings = {\r\n      none: '',\r\n      sm: 'p-3',\r\n      md: 'p-6',\r\n      lg: 'p-8',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          baseStyles,\r\n          variants[variant],\r\n          paddings[padding],\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nCard.displayName = 'Card';\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardHeader.displayName = 'CardHeader';\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLHeadingElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, children, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      'text-2xl font-semibold leading-none tracking-tight',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </h3>\r\n));\r\nCardTitle.displayName = 'CardTitle';\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn('text-sm text-muted-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardDescription.displayName = 'CardDescription';\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\r\n));\r\nCardContent.displayName = 'CardContent';\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('flex items-center p-6 pt-0', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardFooter.displayName = 'CardFooter';\r\n\r\nexport { \r\n  Card, \r\n  CardContent, \r\n  CardDescription, \r\n  CardFooter, \r\n  CardHeader, \r\n  CardTitle\r\n};\r\n","/**\r\n * Phone Number Formatter Utility\r\n * Ensures phone numbers are always in the format (###) ###-####\r\n */\r\n\r\n/**\r\n * Formats a phone number string to (###) ###-#### format\r\n * @param input - Raw phone number input (can include spaces, dashes, dots, etc.)\r\n * @returns Formatted phone number string\r\n */\r\nexport function formatPhoneNumber(input: string): string {\r\n  if (!input) return '';\r\n  \r\n  // Remove all non-digit characters\r\n  const digitsOnly = input.replace(/\\D/g, '');\r\n  \r\n  // Remove leading 1 if it exists (country code)\r\n  const withoutCountryCode = digitsOnly.startsWith('1') && digitsOnly.length > 10 \r\n    ? digitsOnly.slice(1) \r\n    : digitsOnly;\r\n  \r\n  // If we don't have exactly 10 digits, return the cleaned input\r\n  if (withoutCountryCode.length !== 10) {\r\n    return withoutCountryCode;\r\n  }\r\n  \r\n  // Format as (###) ###-####\r\n  const areaCode = withoutCountryCode.slice(0, 3);\r\n  const prefix = withoutCountryCode.slice(3, 6);\r\n  const lineNumber = withoutCountryCode.slice(6, 10);\r\n  \r\n  return `(${areaCode}) ${prefix}-${lineNumber}`;\r\n}\r\n\r\n/**\r\n * Validates if a phone number is complete (has 10 digits)\r\n * @param input - Phone number string\r\n * @returns boolean indicating if the number is complete\r\n */\r\nexport function isCompletePhoneNumber(input: string): boolean {\r\n  const digitsOnly = input.replace(/\\D/g, '');\r\n  const withoutCountryCode = digitsOnly.startsWith('1') && digitsOnly.length > 10 \r\n    ? digitsOnly.slice(1) \r\n    : digitsOnly;\r\n  \r\n  return withoutCountryCode.length === 10;\r\n}\r\n\r\n/**\r\n * Gets just the digits from a phone number (useful for storage/API calls)\r\n * @param input - Phone number string\r\n * @returns String of digits only\r\n */\r\nexport function getPhoneDigits(input: string): string {\r\n  const digitsOnly = input.replace(/\\D/g, '');\r\n  const withoutCountryCode = digitsOnly.startsWith('1') && digitsOnly.length > 10 \r\n    ? digitsOnly.slice(1) \r\n    : digitsOnly;\r\n  \r\n  return withoutCountryCode;\r\n}\r\n\r\n/**\r\n * Formats phone number as user types (real-time formatting)\r\n * @param input - Current input value\r\n * @param cursorPosition - Current cursor position\r\n * @returns Object with formatted value and new cursor position\r\n */\r\nexport function formatPhoneNumberAsTyped(input: string, cursorPosition: number): {\r\n  value: string;\r\n  cursorPosition: number;\r\n} {\r\n  if (!input) return { value: '', cursorPosition: 0 };\r\n  \r\n  // Get the current digits\r\n  const currentDigits = getPhoneDigits(input);\r\n  \r\n  // If we have 10+ digits, format it\r\n  if (currentDigits.length >= 10) {\r\n    const formatted = formatPhoneNumber(currentDigits);\r\n    \r\n    // Calculate new cursor position\r\n    let newPosition = cursorPosition;\r\n    \r\n    // Adjust cursor position based on formatting characters added\r\n    if (cursorPosition > 0) {\r\n      // Count formatting characters before cursor in original input\r\n      const beforeCursor = input.slice(0, cursorPosition);\r\n      const digitsBeforeCursor = beforeCursor.replace(/\\D/g, '').length;\r\n      \r\n      // Find position in formatted string after same number of digits\r\n      let digitCount = 0;\r\n      for (let i = 0; i < formatted.length; i++) {\r\n        if (/\\d/.test(formatted[i])) {\r\n          digitCount++;\r\n          if (digitCount === digitsBeforeCursor) {\r\n            newPosition = i + 1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return { value: formatted, cursorPosition: newPosition };\r\n  }\r\n  \r\n  // If less than 10 digits, just return cleaned input\r\n  return { value: currentDigits, cursorPosition: cursorPosition };\r\n}\r\n","/**\r\n * Image Rotation and Fade Utilities\r\n * \r\n * Provides reusable functions and hooks for creating image carousels with\r\n * fade transitions, auto-rotation, and performance optimizations.\r\n */\r\n\r\nimport type React from 'react';\r\n\r\nexport interface ImageRotationConfig {\r\n  /** Array of image URLs to rotate through */\r\n  images: string[];\r\n  /** Whether to auto-rotate images */\r\n  autoRotate?: boolean;\r\n  /** Interval in milliseconds between rotations */\r\n  interval?: number;\r\n  /** Duration of fade transition in milliseconds */\r\n  fadeDuration?: number;\r\n  /** Whether to preload next image for smoother transitions */\r\n  preloadNext?: boolean;\r\n  /** Whether to pause rotation on hover */\r\n  pauseOnHover?: boolean;\r\n}\r\n\r\nexport interface ImageRotationState {\r\n  /** Current active image index */\r\n  currentIndex: number;\r\n  /** Next image index (for preloading) */\r\n  nextIndex: number;\r\n  /** Whether rotation is currently paused */\r\n  isPaused: boolean;\r\n}\r\n\r\nexport interface ImageRotationActions {\r\n  /** Go to next image */\r\n  next: () => void;\r\n  /** Go to previous image */\r\n  previous: () => void;\r\n  /** Go to specific image index */\r\n  goTo: (index: number) => void;\r\n  /** Toggle pause state */\r\n  togglePause: () => void;\r\n  /** Set pause state */\r\n  setPaused: (paused: boolean) => void;\r\n}\r\n\r\n/**\r\n * Calculate the next image index in the rotation\r\n */\r\nexport const getNextImageIndex = (currentIndex: number, totalImages: number): number => {\r\n  return (currentIndex + 1) % totalImages;\r\n};\r\n\r\n/**\r\n * Calculate the previous image index in the rotation\r\n */\r\nexport const getPreviousImageIndex = (currentIndex: number, totalImages: number): number => {\r\n  return currentIndex === 0 ? totalImages - 1 : currentIndex - 1;\r\n};\r\n\r\n/**\r\n * Preload an image for smoother transitions\r\n */\r\nexport const preloadImage = (imageUrl: string): Promise<void> => {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    img.onload = () => { resolve(); };\r\n    img.onerror = () => { reject(new Error(`Failed to preload image: ${imageUrl}`)); };\r\n    img.src = imageUrl;\r\n  });\r\n};\r\n\r\n/**\r\n * Preload multiple images\r\n */\r\nexport const preloadImages = async (imageUrls: string[]): Promise<void> => {\r\n  await Promise.all(imageUrls.map(preloadImage));\r\n};\r\n\r\n/**\r\n * Get CSS transition duration string from milliseconds\r\n */\r\nexport const getTransitionDuration = (durationMs: number): string => {\r\n  return `${durationMs}ms`;\r\n};\r\n\r\n/**\r\n * Generate CSS classes for image opacity based on current state\r\n */\r\nexport const getImageOpacityClasses = (\r\n  imageIndex: number,\r\n  currentIndex: number,\r\n  fadeDuration: number = 2000\r\n): string => {\r\n  const isActive = imageIndex === currentIndex;\r\n  const duration = getTransitionDuration(fadeDuration);\r\n  \r\n  return `transition-opacity duration-[${duration}] ${\r\n    isActive ? 'opacity-100' : 'opacity-0'\r\n  }`;\r\n};\r\n\r\n/**\r\n * Generate inline styles for transition duration\r\n */\r\nexport const getTransitionStyles = (durationMs: number): React.CSSProperties => {\r\n  return {\r\n    transitionDuration: getTransitionDuration(durationMs)\r\n  };\r\n};\r\n\r\n/**\r\n * Filter images to only render current and next (for performance)\r\n */\r\nexport const getVisibleImageIndices = (\r\n  currentIndex: number,\r\n  totalImages: number,\r\n  preloadNext: boolean = true\r\n): number[] => {\r\n  if (totalImages <= 1) return [currentIndex];\r\n  \r\n  const indices = [currentIndex];\r\n  if (preloadNext) {\r\n    const nextIndex = getNextImageIndex(currentIndex, totalImages);\r\n    indices.push(nextIndex);\r\n  }\r\n  \r\n  return indices;\r\n};\r\n\r\n/**\r\n * Check if image rotation is valid for the given configuration\r\n */\r\nexport const validateImageRotationConfig = (config: ImageRotationConfig): {\r\n  isValid: boolean;\r\n  errors: string[];\r\n} => {\r\n  const errors: string[] = [];\r\n  \r\n  if (config.images.length === 0) {\r\n    errors.push('Images array cannot be empty');\r\n  }\r\n  \r\n  if (config.interval && config.interval < 1000) {\r\n    errors.push('Interval should be at least 1000ms for better UX');\r\n  }\r\n  \r\n  if (config.fadeDuration && config.fadeDuration < 100) {\r\n    errors.push('Fade duration should be at least 100ms');\r\n  }\r\n  \r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\n/**\r\n * Create a debounced function for rotation controls\r\n */\r\nexport const createDebouncedRotation = (\r\n  callback: () => void,\r\n  delay: number = 300\r\n): (() => void) => {\r\n  let timeoutId: NodeJS.Timeout;\r\n  \r\n  return () => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(callback, delay);\r\n  };\r\n};\r\n\r\n/**\r\n * Generate accessibility attributes for image carousel\r\n */\r\nexport const getAccessibilityAttributes = (\r\n  currentIndex: number,\r\n  totalImages: number,\r\n  autoRotate: boolean\r\n): Record<string, string | boolean> => {\r\n  return {\r\n    role: 'img',\r\n    'aria-label': `Image ${currentIndex + 1} of ${totalImages}`,\r\n    'aria-live': autoRotate ? 'polite' : 'off',\r\n    'aria-atomic': true\r\n  };\r\n};\r\n","/**\r\n * Logger utility for consistent logging across the application\r\n * Disables logging in production to avoid console noise\r\n */\r\n\r\nimport { env } from '@/shared/env';\r\n\r\ntype LogLevel = 'debug' | 'info' | 'warn' | 'error';\r\n\r\ninterface LoggerConfig {\r\n  enabled: boolean;\r\n  level: LogLevel;\r\n}\r\n\r\nconst config: LoggerConfig = {\r\n  enabled: env.DEV,\r\n  level: 'debug'\r\n};\r\n\r\nconst levels: Record<LogLevel, number> = {\r\n  debug: 0,\r\n  info: 1,\r\n  warn: 2,\r\n  error: 3\r\n};\r\n\r\nclass Logger {\r\n  private shouldLog(level: LogLevel): boolean {\r\n    return config.enabled && levels[level] >= levels[config.level];\r\n  }\r\n\r\n  debug(message: string, ...args: unknown[]): void {\r\n    if (this.shouldLog('debug')) {\r\n      // eslint-disable-next-line no-console -- Logger utility needs console access\r\n      console.log(`[DEBUG] ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  info(message: string, ...args: unknown[]): void {\r\n    if (this.shouldLog('info')) {\r\n      // eslint-disable-next-line no-console -- Logger utility needs console access\r\n      console.info(`[INFO] ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  warn(message: string, ...args: unknown[]): void {\r\n    if (this.shouldLog('warn')) {\r\n      console.warn(`[WARN] ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  error(message: string, ...args: unknown[]): void {\r\n    if (this.shouldLog('error')) {\r\n      console.error(`[ERROR] ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  // Booking-specific loggers\r\n  booking = {\r\n    stepChanged: (step: string) => { this.debug(`🔄 Step changed to: ${step}`); },\r\n    dataUpdated: (data: unknown) => { this.debug('📊 Booking data updated:', data); },\r\n    vehicleSelected: (vehicle: string) => { this.debug(`🚗 Vehicle selected: ${vehicle}`); },\r\n    serviceSelected: (service: string) => { this.debug(`🎯 Service selected: ${service}`); },\r\n    addonsSelected: (addons: string[]) => { this.debug('➕ Addons selected:', addons); },\r\n    scheduleSelected: (schedule: unknown) => { this.debug('📅 Schedule selected:', schedule); },\r\n    paymentSelected: (method: string) => { this.debug(`💳 Payment method selected: ${method}`); },\r\n    bookingCompleted: () => { this.info('🎉 Booking completed!'); },\r\n    bookingReset: () => { this.debug('🔄 Booking reset'); },\r\n    error: (error: string) => { this.error(`❌ Booking error: ${error}`); }\r\n  };\r\n\r\n  // Data loading loggers\r\n  data = {\r\n    loading: (type: string, params: unknown) => { this.debug(`🔍 Loading ${type}:`, params); },\r\n    loaded: (type: string, count: number) => { this.debug(`📊 Loaded ${count} ${type}`); },\r\n    error: (type: string, error: string) => { this.error(`❌ Error loading ${type}: ${error}`); },\r\n    noData: (type: string, params: unknown) => { this.warn(`⚠️ No ${type} available:`, params); }\r\n  };\r\n}\r\n\r\nexport const logger = new Logger();\r\nexport default logger;\r\n","import React, { createContext, useCallback, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nimport { Button } from '../buttons/Button';\r\n\r\nexport interface ToastOptions {\r\n  id?: string;\r\n  title?: string;\r\n  description?: string;\r\n  variant?: 'default' | 'success' | 'error' | 'warning' | 'info';\r\n  duration?: number;\r\n  action?: {\r\n    label: string;\r\n    onClick: () => void;\r\n  };\r\n}\r\n\r\nexport interface ToastProps extends ToastOptions {\r\n  id: string;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const Toast: React.FC<ToastProps> = ({\r\n  title,\r\n  description,\r\n  variant = 'default',\r\n  action,\r\n  onClose,\r\n}) => {\r\n  const variants = {\r\n    default: 'bg-background border-border text-foreground',\r\n    success: 'bg-green-50 border-green-200 text-green-900 dark:bg-green-900 dark:border-green-700 dark:text-green-100',\r\n    error: 'bg-red-50 border-red-200 text-red-900 dark:bg-red-900 dark:border-red-700 dark:text-red-100',\r\n    warning: 'bg-yellow-50 border-yellow-200 text-yellow-900 dark:bg-yellow-900 dark:border-yellow-700 dark:text-yellow-100',\r\n    info: 'bg-blue-50 border-blue-200 text-blue-900 dark:bg-blue-900 dark:border-blue-700 dark:text-blue-100',\r\n  };\r\n\r\n  const icons = {\r\n    default: null,\r\n    success: (\r\n      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    ),\r\n    error: (\r\n      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    ),\r\n    warning: (\r\n      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.725-1.36 3.49 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    ),\r\n    info: (\r\n      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'pointer-events-auto w-full max-w-sm overflow-hidden rounded-lg border shadow-lg',\r\n        variants[variant]\r\n      )}\r\n    >\r\n      <div className=\"p-4\">\r\n        <div className=\"flex items-start\">\r\n          <div className=\"flex-shrink-0\">\r\n            {icons[variant]}\r\n          </div>\r\n          <div className=\"ml-3 w-0 flex-1\">\r\n            {title && (\r\n              <p className=\"text-sm font-medium\">{title}</p>\r\n            )}\r\n            {description && (\r\n              <p className=\"mt-1 text-sm opacity-90\">{description}</p>\r\n            )}\r\n            {action && (\r\n              <div className=\"mt-3\">\r\n                <Button\r\n                  onClick={action.onClick}\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  className=\"text-sm font-medium underline hover:no-underline p-0 h-auto\"\r\n                >\r\n                  {action.label}\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"ml-4 flex-shrink-0 flex\">\r\n            <Button\r\n              onClick={onClose}\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              className=\"inline-flex rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 p-1\"\r\n            >\r\n              <span className=\"sr-only\">Close</span>\r\n              <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface ToastContextType {\r\n  toasts: ToastProps[];\r\n  toast: (options: ToastOptions) => string;\r\n  dismiss: (id: string) => void;\r\n  dismissAll: () => void;\r\n}\r\n\r\nexport const ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n\r\nexport const ToastProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastProps[]>([]);\r\n\r\n  const toast = useCallback((options: ToastOptions) => {\r\n    const id = options.id || Math.random().toString(36).substring(2, 11);\r\n    const duration = options.duration || 5000;\r\n\r\n    const newToast: ToastProps = {\r\n      ...options,\r\n      id,\r\n      onClose: () => { dismiss(id); return; },\r\n    };\r\n\r\n    setToasts(prev => [...prev, newToast]);\r\n\r\n    if (duration > 0) {\r\n      setTimeout(() => {\r\n        dismiss(id);\r\n      }, duration);\r\n    }\r\n\r\n    return id;\r\n  }, [dismiss]);\r\n\r\n  const dismiss = useCallback((id: string) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  }, []);\r\n\r\n  const dismissAll = useCallback(() => {\r\n    setToasts([]);\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ toasts, toast, dismiss, dismissAll }}>\r\n      {children}\r\n      <ToastContainer toasts={toasts} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nconst ToastContainer: React.FC<{ toasts: ToastProps[] }> = ({ toasts }) => {\r\n  if (toasts.length === 0) return null;\r\n\r\n  return createPortal(\r\n    <div className=\"pointer-events-none fixed inset-0 z-50 flex items-end px-4 py-6 sm:items-start sm:p-6\">\r\n      <div className=\"flex w-full flex-col items-center space-y-4 sm:items-end\">\r\n        {toasts.map(toast => (\r\n          <Toast key={toast.id} {...toast} />\r\n        ))}\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\n","/**\r\n * Data Context Hooks\r\n * \r\n * Hooks for accessing DataContext from anywhere in the app\r\n */\r\n\r\nimport { useContext } from 'react';\r\n\r\nimport { DataContext, type DataContextType } from '@/shared/contexts/DataContext';\r\n\r\n/**\r\n * Hook to access tenant/business data from DataContext\r\n * Throws error if used outside DataProvider\r\n * \r\n * @example\r\n * ```tsx\r\n * function MyComponent() {\r\n *   const { businessName, industry, slug } = useData();\r\n *   return <div>{businessName}</div>;\r\n * }\r\n * ```\r\n */\r\nexport const useData = (): DataContextType => {\r\n  const context = useContext(DataContext);\r\n  if (!context) {\r\n    throw new Error('useData must be used within a DataProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Optional version of useData that returns null if not in a provider\r\n * Useful for components that may or may not be wrapped in DataProvider\r\n * \r\n * @example\r\n * ```tsx\r\n * function OptionalComponent() {\r\n *   const data = useDataOptional();\r\n *   if (!data) return <div>No tenant data available</div>;\r\n *   return <div>{data.businessName}</div>;\r\n * }\r\n * ```\r\n */\r\nexport const useDataOptional = (): DataContextType | null => {\r\n  const context = useContext(DataContext);\r\n  return context;\r\n};\r\n\r\n","import { useEffect } from 'react';\r\n\r\nimport { useTenantConfigLoader } from '@/shared/hooks';\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\nimport type { Vertical } from '@/shared/types';\r\nimport { getTenantAssetUrl } from '@/shared/utils';\r\n\r\nexport interface UseBrowserTabOptions {\r\n  /** Custom page title (overrides default business name) */\r\n  title?: string;\r\n  /** Custom favicon URL (overrides tenant logo) */\r\n  favicon?: string;\r\n  /** Whether to use business name as title (default: true) */\r\n  useBusinessName?: boolean;\r\n  /** Fallback title if no business name available */\r\n  fallbackTitle?: string;\r\n}\r\n\r\n/**\r\n * Hook to manage browser tab title and favicon\r\n * \r\n * Automatically sets:\r\n * - Browser tab title (uses business name by default)\r\n * - Favicon (uses tenant logo by default)\r\n * - Apple touch icon\r\n * \r\n * @example\r\n * // Use defaults (business name + tenant logo)\r\n * useBrowserTab();\r\n * \r\n * @example\r\n * // Custom title\r\n * useBrowserTab({ title: 'Contact Us - My Business' });\r\n * \r\n * @example\r\n * // Custom favicon\r\n * useBrowserTab({ favicon: '/custom-icon.png' });\r\n * \r\n * @example\r\n * // Preview mode with custom title\r\n * useBrowserTab({ \r\n *   title: `${businessName} - Preview`,\r\n *   useBusinessName: false \r\n * });\r\n */\r\nexport const useBrowserTab = (options: UseBrowserTabOptions = {}) => {\r\n  const {\r\n    title: customTitle,\r\n    favicon: customFavicon,\r\n    useBusinessName = true,\r\n    fallbackTitle = 'That Smart Site',\r\n  } = options;\r\n\r\n  // Try to get tenant context (may not exist for platform pages)\r\n  // useDataOptional returns null instead of throwing if not in context\r\n  const data = useDataOptional();\r\n  const businessName = data?.businessName || '';\r\n  const industry = data?.industry || '';\r\n  const isDataLoading = data?.isLoading || false;\r\n\r\n  // Tenant config hook - safe to call, will return defaults if no tenant\r\n  const { data: tenantConfig, isLoading: isConfigLoading } = useTenantConfigLoader();\r\n  const logoUrl = tenantConfig?.branding.logo.url;\r\n\r\n  // Determine the page title\r\n  const pageTitle = customTitle || (\r\n    useBusinessName && businessName && businessName !== 'Loading...' && businessName !== 'undefined'\r\n      ? businessName\r\n      : fallbackTitle\r\n  );\r\n\r\n  // Determine the favicon URL with proper fallbacks\r\n  const faviconUrl = customFavicon \r\n    || logoUrl \r\n    || (industry ? getTenantAssetUrl({ vertical: industry as Vertical, type: 'logo' }) : null)\r\n    || '/shared/icons/logo-white.svg'; // Platform logo fallback (white for clean favicon)\r\n\r\n  // Determine the manifest URL - use tenant-specific manifest if we're in a tenant context\r\n  const manifestUrl = data?.slug ? `/${data.slug}/manifest.json` : '/manifest.webmanifest';\r\n\r\n  useEffect(() => {\r\n    // Don't update if data is still loading (unless custom values provided)\r\n    if (!customTitle && !customFavicon && (isDataLoading || isConfigLoading)) {\r\n      return;\r\n    }\r\n\r\n    // Update page title\r\n    updateTitle(pageTitle);\r\n\r\n    // Update favicon\r\n    if (faviconUrl) {\r\n      updateFavicon(faviconUrl);\r\n    }\r\n\r\n    // Update manifest URL\r\n    updateManifest(manifestUrl);\r\n  }, [pageTitle, faviconUrl, manifestUrl, customTitle, customFavicon, isDataLoading, isConfigLoading]);\r\n\r\n  return {\r\n    title: pageTitle,\r\n    favicon: faviconUrl,\r\n    manifest: manifestUrl,\r\n  };\r\n};\r\n\r\n/**\r\n * Update the browser tab title\r\n */\r\nfunction updateTitle(title: string): void {\r\n  // Update <title> element text content\r\n  const titleElement = document.getElementById('meta-title');\r\n  if (titleElement) {\r\n    titleElement.textContent = title;\r\n  }\r\n\r\n  // Update document.title for better compatibility\r\n  document.title = title;\r\n}\r\n\r\n/**\r\n * Update the favicon\r\n */\r\nfunction updateFavicon(url: string): void {\r\n  // Update main favicon\r\n  const faviconElement = document.getElementById('favicon') as HTMLLinkElement | null;\r\n  if (faviconElement) {\r\n    faviconElement.href = url;\r\n\r\n    // Update the MIME type based on file extension\r\n    if (url.endsWith('.svg')) {\r\n      faviconElement.type = 'image/svg+xml';\r\n    } else if (url.endsWith('.png')) {\r\n      faviconElement.type = 'image/png';\r\n    } else if (url.endsWith('.ico')) {\r\n      faviconElement.type = 'image/x-icon';\r\n    } else if (url.endsWith('.webp')) {\r\n      faviconElement.type = 'image/webp';\r\n    }\r\n  }\r\n\r\n  // Update Apple touch icon\r\n  const appleTouchIcon = document.getElementById('apple-touch-icon') as HTMLLinkElement | null;\r\n  if (appleTouchIcon) {\r\n    appleTouchIcon.href = url;\r\n  }\r\n}\r\n\r\n/**\r\n * Update the PWA manifest URL\r\n */\r\nfunction updateManifest(url: string): void {\r\n  // Find existing manifest link or create new one\r\n  let manifestElement = document.querySelector('link[rel=\"manifest\"]');\r\n  \r\n  if (!manifestElement) {\r\n    // Create new manifest link if none exists\r\n    manifestElement = document.createElement('link');\r\n    manifestElement.rel = 'manifest';\r\n    document.head.appendChild(manifestElement);\r\n  }\r\n  \r\n  // Update the manifest URL\r\n  manifestElement.href = url;\r\n}\r\n\r\n/**\r\n * Utility function to manually set browser tab title\r\n * Use this for one-off updates outside of React components\r\n */\r\nexport const setBrowserTitle = (title: string): void => {\r\n  updateTitle(title);\r\n};\r\n\r\n/**\r\n * Utility function to manually set favicon\r\n * Use this for one-off updates outside of React components\r\n */\r\nexport const setFavicon = (url: string): void => {\r\n  updateFavicon(url);\r\n};\r\n\r\n/**\r\n * Utility function to set both title and favicon\r\n * Use this for one-off updates outside of React components\r\n */\r\nexport const setBrowserTab = (title: string, favicon?: string): void => {\r\n  updateTitle(title);\r\n  if (favicon) {\r\n    updateFavicon(favicon);\r\n  }\r\n};\r\n\r\n","import { useData } from '@/features/header/contexts/DataProvider';\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\n\r\n/**\r\n * Hook to access the correct site.json based on the tenant's industry\r\n * Site data is now centrally loaded and cached in DataProvider\r\n * \r\n * This hook provides a convenient interface for components that need site config\r\n */\r\nexport const useIndustrySiteData = (): {\r\n  siteData: MainSiteConfig | null;\r\n  industry: string;\r\n  isLoading: boolean;\r\n} => {\r\n  const { industry, siteConfig, isLoading } = useData();\r\n\r\n  return {\r\n    siteData: siteConfig,\r\n    industry,\r\n    isLoading\r\n  };\r\n};\r\n","/**\r\n * Tenant Configuration Zod Schemas\r\n * Runtime validation for tenant configs loaded from API/files\r\n * \r\n * Philosophy: Match the minimal TypeScript types\r\n * - Only 10 core fields are required\r\n * - Everything else is optional (for future features)\r\n * - Provides runtime safety at API boundaries\r\n */\r\n\r\nimport { z } from 'zod';\r\n\r\n// ============================================================================\r\n// Core Identification Schemas\r\n// ============================================================================\r\n\r\n/**\r\n * Vertical schema - uses kebab-case to match database and file paths\r\n */\r\nexport const VerticalSchema = z.enum([\r\n  'mobile-detailing',\r\n  'pet-grooming',\r\n  'lawn-care',\r\n  'maid-service',\r\n  'hvac',\r\n  'plumbing',\r\n  'electrical'\r\n]);\r\n\r\n/**\r\n * Legacy alias for backward compatibility\r\n * @deprecated Use VerticalSchema instead\r\n */\r\nexport const IndustryTypeSchema = VerticalSchema;\r\n\r\nexport const TenantStatusSchema = z.enum([\r\n  'pending',\r\n  'approved',\r\n  'active',\r\n  'suspended',\r\n  'rejected'\r\n]);\r\n\r\nexport const TenantUserRoleSchema = z.enum([\r\n  'owner',\r\n  'manager',\r\n  'tech',\r\n  'viewer'\r\n]);\r\n\r\n// ============================================================================\r\n// Service Catalog Schemas\r\n// ============================================================================\r\n\r\nexport const ServiceCategorySchema = z.enum([\r\n  'interior',\r\n  'exterior',\r\n  'service-packages',\r\n  'addons',\r\n  'ceramic-coating',\r\n  'paint-correction',\r\n  'paint-protection-film',\r\n  'auto',\r\n  'boat',\r\n  'rv',\r\n  'ppf',\r\n  'ceramic'\r\n]);\r\n\r\nexport const VehicleTypeSchema = z.enum([\r\n  'auto',\r\n  'boat',\r\n  'rv',\r\n  'truck',\r\n  'motorcycle',\r\n  'off-road'\r\n]);\r\n\r\nexport const SizeBucketSchema = z.enum(['xs', 's', 'm', 'l', 'xl']);\r\n\r\nexport const PricingUnitSchema = z.enum(['flat', 'hour']);\r\n\r\nexport const ServiceTierSchema = z.object({\r\n  id: z.union([z.string(), z.number()]),\r\n  name: z.string().min(1, 'Tier name is required'),\r\n  priceCents: z.number().int().nonnegative('Price must be non-negative'),\r\n  durationMinutes: z.number().int().positive('Duration must be positive'),\r\n  description: z.string(),\r\n  features: z.array(z.string()),\r\n  popular: z.boolean().optional(),\r\n  enabled: z.boolean().optional().default(true),\r\n  sortOrder: z.number().int().optional()\r\n});\r\n\r\nexport const ServiceSchema = z.object({\r\n  id: z.union([z.string(), z.number()]),\r\n  name: z.string().min(1, 'Service name is required'),\r\n  slug: z.string().optional(),\r\n  category: ServiceCategorySchema,\r\n  description: z.string().optional(),\r\n  vehicleTypes: z.array(VehicleTypeSchema).optional(),\r\n  basePriceCents: z.number().int().nonnegative().optional(),\r\n  pricingUnit: PricingUnitSchema.optional(),\r\n  minDurationMinutes: z.number().int().positive().optional(),\r\n  tiers: z.array(ServiceTierSchema).optional(),\r\n  active: z.boolean().optional().default(true),\r\n  featured: z.boolean().optional().default(false),\r\n  metadata: z.record(z.unknown()).optional()\r\n});\r\n\r\nexport const ServiceCatalogSchema = z.record(\r\n  z.string(),\r\n  z.array(ServiceSchema)\r\n);\r\n\r\n// ============================================================================\r\n// Branding Schemas\r\n// ============================================================================\r\n\r\nconst HexColorSchema = z.string().regex(/^#[0-9A-Fa-f]{6}$/, 'Must be a valid hex color');\r\n\r\nexport const BrandColorsSchema = z.object({\r\n  primary: HexColorSchema.optional(),\r\n  secondary: HexColorSchema.optional(),\r\n  accent: HexColorSchema.optional(),\r\n  background: HexColorSchema.optional(),\r\n  text: HexColorSchema.optional(),\r\n  textLight: HexColorSchema.optional()\r\n}).optional();\r\n\r\n// Logo Schema - REQUIRED: url\r\nexport const LogoSchema = z.object({\r\n  url: z.string().min(1, 'Logo URL is required'),  // ✓ REQUIRED\r\n  alt: z.string().optional(),\r\n  darkUrl: z.string().optional(),\r\n  lightUrl: z.string().optional(),\r\n  width: z.number().int().positive().optional(),\r\n  height: z.number().int().positive().optional()\r\n});\r\n\r\n// Branding Schema - REQUIRED: businessName, logo\r\nexport const TenantBrandingSchema = z.object({\r\n  businessName: z.string().min(1, 'Business name is required'),  // ✓ REQUIRED\r\n  logo: LogoSchema,  // ✓ REQUIRED (at least logo.url)\r\n  tagline: z.string().optional(),\r\n  favicon: z.string().optional(),\r\n  colors: z.object({\r\n    primary: z.string().optional(),\r\n    secondary: z.string().optional(),\r\n    accent: z.string().optional()\r\n  }).optional(),\r\n  theme: z.enum(['default', 'southwest', 'coastal', 'modern', 'classic']).optional()\r\n});\r\n\r\n// ============================================================================\r\n// Contact & Social Schemas\r\n// ============================================================================\r\n\r\n// Helper schemas for validation\r\nconst PhoneSchema = z.string().min(1, 'Phone number is required');\r\n// eslint-disable-next-line @typescript-eslint/no-deprecated -- z.string().email() is the correct modern Zod syntax despite deprecation warning\r\nconst EmailSchema = z.string().email('Must be a valid email address');\r\n// eslint-disable-next-line @typescript-eslint/no-deprecated -- z.string().url() is the correct modern Zod syntax despite deprecation warning\r\nconst URLSchema = z.string().url('Must be a valid URL');\r\n\r\nexport const PhoneNumbersSchema = z.object({\r\n  main: PhoneSchema,  // ✓ REQUIRED\r\n  sms: z.string().optional(),\r\n  twilio: z.string().optional()\r\n});\r\n\r\nexport const EmailAddressesSchema = z.object({\r\n  primary: EmailSchema,  // ✓ REQUIRED\r\n  support: EmailSchema.optional(),\r\n  billing: EmailSchema.optional()\r\n});\r\n\r\nexport const SocialMediaLinksSchema = z.object({\r\n  facebook: z.string(),  // ✓ REQUIRED (can be empty string)\r\n  instagram: z.string(),  // ✓ REQUIRED (can be empty string)\r\n  tiktok: z.string(),  // ✓ REQUIRED (can be empty string)\r\n  youtube: z.string(),  // ✓ REQUIRED (can be empty string)\r\n  twitter: z.string().optional(),\r\n  linkedin: z.string().optional(),\r\n  yelp: z.string().optional(),\r\n  gbp: z.string().optional()\r\n});\r\n\r\nexport const BaseLocationSchema = z.object({\r\n  city: z.string().min(1, 'City is required'),  // ✓ REQUIRED\r\n  state: z.string().min(1, 'State is required')  // ✓ REQUIRED\r\n});\r\n\r\nexport const ContactInfoSchema = z.object({\r\n  phones: PhoneNumbersSchema,  // ✓ REQUIRED\r\n  emails: EmailAddressesSchema,  // ✓ REQUIRED\r\n  socials: SocialMediaLinksSchema,  // ✓ REQUIRED\r\n  baseLocation: BaseLocationSchema,  // ✓ REQUIRED\r\n  address: z.object({\r\n    street: z.string().optional(),\r\n    city: z.string().optional(),\r\n    state: z.string().optional(),\r\n    zip: z.string().optional(),\r\n    country: z.string().optional()\r\n  }).optional()\r\n});\r\n\r\n// ============================================================================\r\n// Service Area Schemas\r\n// ============================================================================\r\n\r\nexport const ServiceAreaSchema = z.object({\r\n  id: z.union([z.string(), z.number()]).optional(),\r\n  city: z.string().min(1, 'City is required'),\r\n  citySlug: z.string().min(1, 'City slug is required'),\r\n  stateCode: z.string().length(2, 'State code must be 2 characters'),\r\n  stateName: z.string().min(1, 'State name is required'),\r\n  zipCodes: z.array(z.string()).optional(),\r\n  latitude: z.number().optional(),\r\n  longitude: z.number().optional(),\r\n  radiusMiles: z.number().int().positive().optional()\r\n});\r\n\r\nexport const ServiceAreaConfigSchema = z.record(\r\n  z.string().length(2), // State code\r\n  z.array(ServiceAreaSchema)\r\n);\r\n\r\n// ============================================================================\r\n// SEO & Page Configuration Schemas\r\n// ============================================================================\r\n\r\nexport const SEOMetadataSchema = z.object({\r\n  title: z.string().min(1, 'SEO title is required').max(60, 'SEO title should be under 60 characters'),\r\n  description: z.string().min(1, 'SEO description is required').max(160, 'SEO description should be under 160 characters'),\r\n  keywords: z.array(z.string()).optional(),\r\n  canonicalPath: z.string().optional(),\r\n  ogImage: URLSchema.optional(),\r\n  twitterImage: URLSchema.optional(),\r\n  robots: z.enum(['index,follow', 'noindex,nofollow']).optional()\r\n});\r\n\r\nexport const HeroContentSchema = z.object({\r\n  h1: z.string().min(1, 'Hero headline is required'),\r\n  subtitle: z.string().optional(),\r\n  ctas: z.array(z.object({\r\n    label: z.string().min(1),\r\n    href: z.string(),\r\n    variant: z.enum(['primary', 'secondary']).optional()\r\n  })).optional()\r\n});\r\n\r\nexport const FAQItemSchema = z.object({\r\n  question: z.string().min(1, 'Question is required'),\r\n  answer: z.string().min(1, 'Answer is required'),\r\n  category: z.string().optional()\r\n});\r\n\r\nexport const LocationPageSchema = z.object({\r\n  slug: z.string().min(1, 'Location slug is required'),\r\n  city: z.string().min(1, 'City is required'),\r\n  stateCode: z.string().length(2),\r\n  state: z.string().min(1),\r\n  postalCode: z.string().optional(),\r\n  latitude: z.number().optional(),\r\n  longitude: z.number().optional(),\r\n  urlPath: z.string().min(1, 'URL path is required'),\r\n  affiliateRef: z.string().optional(),\r\n  seo: SEOMetadataSchema,\r\n  hero: HeroContentSchema,\r\n  faqIntro: z.string().optional(),\r\n  faqs: z.array(FAQItemSchema).optional(),\r\n  neighborhoods: z.array(z.string()).optional(),\r\n  landmarks: z.array(z.string()).optional(),\r\n  localConditions: z.array(z.string()).optional(),\r\n  pricingModifierPct: z.number().min(-1).max(1).optional(),\r\n  images: z.array(z.object({\r\n    url: URLSchema,\r\n    alt: z.string().min(1),\r\n    role: z.enum(['hero', 'gallery', 'service']).optional(),\r\n    width: z.number().int().positive().optional(),\r\n    height: z.number().int().positive().optional(),\r\n    priority: z.boolean().optional()\r\n  })).optional(),\r\n  reviews: z.object({\r\n    ratingValue: z.number().min(0).max(5).optional(),\r\n    reviewCount: z.number().int().nonnegative().optional(),\r\n    featured: z.array(z.string()).optional()\r\n  }).optional(),\r\n  openingHours: z.union([z.string(), z.array(z.string())]).optional()\r\n});\r\n\r\n// ============================================================================\r\n// Integration Schemas\r\n// ============================================================================\r\n\r\nexport const AnalyticsConfigSchema = z.object({\r\n  ga4: z.string().optional(),\r\n  googleAdsId: z.string().optional(),\r\n  facebookPixelId: z.string().optional(),\r\n  hotjarId: z.string().optional()\r\n}).optional();\r\n\r\nexport const PaymentConfigSchema = z.object({\r\n  stripePublishableKey: z.string().optional(),\r\n  stripeAccountId: z.string().optional(),\r\n  acceptsPayments: z.boolean().optional().default(false),\r\n  depositRequired: z.boolean().optional().default(false),\r\n  depositPercentage: z.number().min(0).max(1).optional()\r\n}).optional();\r\n\r\nexport const FeatureFlagsSchema = z.object({\r\n  bookingEnabled: z.boolean().optional().default(false),\r\n  loginEnabled: z.boolean().optional().default(false),\r\n  reviewsEnabled: z.boolean().optional().default(true),\r\n  blogEnabled: z.boolean().optional().default(false),\r\n  referralProgramEnabled: z.boolean().optional().default(false),\r\n  loyaltyProgramEnabled: z.boolean().optional().default(false),\r\n  smsNotificationsEnabled: z.boolean().optional().default(false),\r\n  emailNotificationsEnabled: z.boolean().optional().default(true)\r\n}).optional();\r\n\r\n// ============================================================================\r\n// Complete Tenant Configuration Schema\r\n// ============================================================================\r\n\r\n// ============================================================================\r\n// Main Tenant Configuration Schema\r\n// ============================================================================\r\n\r\nexport const TenantConfigSchema = z.object({\r\n  // ============================================\r\n  // CORE IDENTITY (4 required)\r\n  // ============================================\r\n  id: z.union([z.string(), z.number()]),  // ✓ REQUIRED\r\n  slug: z.string().min(1, 'Tenant slug is required'),  // ✓ REQUIRED\r\n  vertical: VerticalSchema,  // ✓ REQUIRED\r\n  status: TenantStatusSchema,  // ✓ REQUIRED\r\n  \r\n  // ============================================\r\n  // BRANDING (2 required nested)\r\n  // ============================================\r\n  branding: TenantBrandingSchema,  // ✓ REQUIRED\r\n  \r\n  // ============================================\r\n  // CONTACT (4 required nested)\r\n  // ============================================\r\n  contact: ContactInfoSchema,  // ✓ REQUIRED\r\n  \r\n  // ============================================\r\n  // FUTURE FEATURES (all optional)\r\n  // ============================================\r\n  services: ServiceCatalogSchema.optional(),\r\n  enabledServiceCategories: z.array(ServiceCategorySchema).optional(),\r\n  \r\n  serviceAreas: ServiceAreaConfigSchema.optional(),\r\n  serviceRadiusMiles: z.number().int().positive().optional(),\r\n  \r\n  locationPages: z.array(LocationPageSchema).optional(),\r\n  mainSiteSEO: SEOMetadataSchema.optional(),\r\n  \r\n  analytics: AnalyticsConfigSchema.optional(),\r\n  payment: PaymentConfigSchema.optional(),\r\n  features: FeatureFlagsSchema.optional(),\r\n  \r\n  domains: z.array(z.string()).optional(),\r\n  primaryDomain: z.string().optional(),\r\n  \r\n  businessLicense: z.string().optional(),\r\n  insuranceProvider: z.string().optional(),\r\n  insuranceExpiry: z.string().optional(),\r\n  operatingHours: z.record(\r\n    z.string(),\r\n    z.object({\r\n      open: z.string(),\r\n      close: z.string(),\r\n      closed: z.boolean().optional()\r\n    })\r\n  ).optional(),\r\n  \r\n  rating: z.number().min(0).max(5).optional(),\r\n  reviewCount: z.number().int().nonnegative().optional(),\r\n  totalJobs: z.number().int().nonnegative().optional(),\r\n  \r\n  metadata: z.record(z.unknown()).optional(),\r\n  createdAt: z.string().optional(),\r\n  updatedAt: z.string().optional(),\r\n  approvedAt: z.string().optional()\r\n});\r\n\r\n// ============================================================================\r\n// Helper Schemas\r\n// ============================================================================\r\n\r\nexport const TenantConfigUpdateSchema = TenantConfigSchema.partial();\r\n\r\nexport const TenantSummarySchema = z.object({\r\n  id: z.union([z.string(), z.number()]),\r\n  slug: z.string(),\r\n  businessName: z.string(),\r\n  vertical: VerticalSchema,\r\n  status: TenantStatusSchema,\r\n  mainPhone: z.string(),\r\n  // eslint-disable-next-line @typescript-eslint/no-deprecated -- z.string().email() is the correct modern Zod syntax despite deprecation warning\r\n  email: z.string().email('Must be a valid email address'),\r\n  rating: z.number().min(0).max(5).optional(),\r\n  reviewCount: z.number().int().nonnegative().optional()\r\n});\r\n\r\nexport const TenantCreatePayloadSchema = TenantConfigSchema.omit({\r\n  id: true,\r\n  createdAt: true,\r\n  updatedAt: true,\r\n  approvedAt: true\r\n});\r\n\r\n// ============================================================================\r\n// Validation Helper Functions\r\n// ============================================================================\r\n\r\n/**\r\n * Validate tenant config with detailed error reporting\r\n */\r\nexport function validateTenantConfig(data: unknown): {\r\n  success: boolean;\r\n  data?: z.infer<typeof TenantConfigSchema>;\r\n  errors?: z.ZodError;\r\n} {\r\n  try {\r\n    const validated = TenantConfigSchema.parse(data);\r\n    return { success: true, data: validated };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return { success: false, errors: error };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Safe parse tenant config (returns null on error instead of throwing)\r\n */\r\nexport function safeParseTenantConfig(data: unknown) {\r\n  return TenantConfigSchema.safeParse(data);\r\n}\r\n\r\n/**\r\n * Validate service catalog\r\n */\r\nexport function validateServiceCatalog(data: unknown) {\r\n  return ServiceCatalogSchema.safeParse(data);\r\n}\r\n\r\n/**\r\n * Validate location page\r\n */\r\nexport function validateLocationPage(data: unknown) {\r\n  return LocationPageSchema.safeParse(data);\r\n}\r\n\r\n","import { z } from 'zod';\r\n\r\n/**\r\n * Zod schemas for booking data validation\r\n */\r\n\r\n// Feature schema\r\nexport const FeatureSchema = z.object({\r\n  name: z.string(),\r\n  description: z.string(),\r\n  explanation: z.string(),\r\n  image: z.string(),\r\n  duration: z.number(),\r\n  features: z.array(z.string())\r\n});\r\n\r\n// Service schema\r\nexport const ServiceSchema = z.object({\r\n  cost: z.number(),\r\n  features: z.array(z.string()),\r\n  popular: z.boolean().optional(),\r\n  description: z.string().optional()\r\n});\r\n\r\n// Service tier schema\r\nexport const ServiceTierSchema = z.object({\r\n  id: z.string(),\r\n  name: z.string(),\r\n  price: z.number(),\r\n  description: z.string(),\r\n  features: z.array(z.string()),\r\n  featureIds: z.array(z.string()),\r\n  popular: z.boolean().optional()\r\n});\r\n\r\n// Addon schema\r\nexport const AddonSchema = z.object({\r\n  id: z.string(),\r\n  name: z.string(),\r\n  price: z.number(),\r\n  description: z.string(),\r\n  features: z.array(z.string()),\r\n  featureIds: z.array(z.string()),\r\n  popular: z.boolean().optional()\r\n});\r\n\r\n// Vehicle details schema\r\nexport const VehicleDetailsSchema = z.object({\r\n  make: z.string(),\r\n  model: z.string(),\r\n  year: z.string(),\r\n  color: z.string(),\r\n  length: z.string()\r\n});\r\n\r\n// Schedule schema\r\nexport const ScheduleSchema = z.object({\r\n  date: z.string(),\r\n  time: z.string()\r\n});\r\n\r\n// Booking data schema\r\nexport const BookingDataSchema = z.object({\r\n  vehicle: z.string(),\r\n  vehicleDetails: VehicleDetailsSchema,\r\n  serviceTier: z.string(),\r\n  addons: z.array(z.string()),\r\n  schedule: ScheduleSchema,\r\n  paymentMethod: z.string()\r\n});\r\n\r\n// Booking state schema\r\nexport const BookingStateSchema = z.object({\r\n  currentStep: z.enum(['vehicle-selection', 'service-tier', 'addons', 'schedule', 'payment']),\r\n  bookingData: BookingDataSchema,\r\n  completedSteps: z.array(z.string()),\r\n  isLoading: z.boolean(),\r\n  errors: z.array(z.string())\r\n});\r\n\r\n// Type exports\r\nexport type Feature = z.infer<typeof FeatureSchema>;\r\nexport type Service = z.infer<typeof ServiceSchema>;\r\nexport type ServiceTier = z.infer<typeof ServiceTierSchema>;\r\nexport type Addon = z.infer<typeof AddonSchema>;\r\nexport type VehicleDetails = z.infer<typeof VehicleDetailsSchema>;\r\nexport type Schedule = z.infer<typeof ScheduleSchema>;\r\nexport type BookingData = z.infer<typeof BookingDataSchema>;\r\nexport type BookingState = z.infer<typeof BookingStateSchema>;\r\n\r\n// Validation helpers\r\nexport const validateServiceTier = (data: unknown): ServiceTier => {\r\n  return ServiceTierSchema.parse(data);\r\n};\r\n\r\nexport const validateAddon = (data: unknown): Addon => {\r\n  return AddonSchema.parse(data);\r\n};\r\n\r\nexport const validateBookingData = (data: unknown): BookingData => {\r\n  return BookingDataSchema.parse(data);\r\n};\r\n\r\nexport const validateServiceTiers = (data: unknown[]): ServiceTier[] => {\r\n  return z.array(ServiceTierSchema).parse(data);\r\n};\r\n\r\nexport const validateAddons = (data: unknown[]): Addon[] => {\r\n  return z.array(AddonSchema).parse(data);\r\n};\r\n","import { config } from '@/../config/env';\r\n\r\n// Types for the API client\r\nexport interface ApiResponse<T = unknown> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\nexport interface RefreshResponse {\r\n  success: boolean;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  user: unknown;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n  error?: string;\r\n  message?: string;\r\n  retryAfterSeconds?: number;\r\n  remainingAttempts?: number;\r\n  resetTime?: number;\r\n}\r\n\r\n// Extend Error interface for custom error codes\r\nexport interface CustomError extends Error {\r\n  code?: string;\r\n  retryAfterSeconds?: number;\r\n  remainingAttempts?: number;\r\n  resetTime?: number;\r\n}\r\n\r\n// One-flight guard for refresh token requests\r\nclass RefreshTokenGuard {\r\n  private isRefreshing = false;\r\n  private failedQueue: Array<{\r\n    resolve: (token: string) => void;\r\n    reject: (error: unknown) => void;\r\n  }> = [];\r\n\r\n  async executeRefresh(): Promise<string> {\r\n    if (this.isRefreshing) {\r\n      // If already refreshing, queue this request\r\n      return new Promise((resolve, reject) => {\r\n        this.failedQueue.push({ resolve, reject });\r\n      });\r\n    }\r\n\r\n    this.isRefreshing = true;\r\n\r\n    try {\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      if (!refreshToken) {\r\n        throw new Error('No refresh token available');\r\n      }\r\n\r\n      const response = await fetch(`${config.apiUrl}/api/auth/refresh`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ refreshToken }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Refresh token failed');\r\n      }\r\n\r\n      const data = await response.json() as RefreshResponse;\r\n      \r\n      // Update tokens in localStorage\r\n      localStorage.setItem('token', data.accessToken);\r\n      localStorage.setItem('refreshToken', data.refreshToken);\r\n\r\n      // Process queued requests\r\n      this.processQueue(null, data.accessToken);\r\n      \r\n      return data.accessToken;\r\n    } catch (error: unknown) {\r\n      // Process queued requests with error\r\n      this.processQueue(error, null);\r\n      throw error;\r\n    } finally {\r\n      this.isRefreshing = false;\r\n    }\r\n  }\r\n\r\n  private processQueue(error: unknown, token: string | null) {\r\n    this.failedQueue.forEach(({ resolve, reject }) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else if (token) {\r\n        resolve(token);\r\n      }\r\n    });\r\n\r\n    this.failedQueue = [];\r\n  }\r\n}\r\n\r\n// API Client with token refresh interceptor\r\nexport class ApiClient {\r\n  private refreshGuard = new RefreshTokenGuard();\r\n  private baseURL: string;\r\n\r\n  constructor(baseURL: string) {\r\n    this.baseURL = baseURL;\r\n  }\r\n\r\n  // Main request method with automatic token refresh\r\n  async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<T> {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    \r\n    // Add auth header if token exists\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      options.headers = {\r\n        ...options.headers,\r\n        'Authorization': `Bearer ${token}`,\r\n      };\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, options);\r\n      \r\n      // If unauthorized and we have a refresh token, try to refresh\r\n      if (response.status === 401 && localStorage.getItem('refreshToken')) {\r\n        try {\r\n          const newToken = await this.refreshGuard.executeRefresh();\r\n          \r\n          // Retry the original request with new token\r\n          const retryOptions = {\r\n            ...options,\r\n            headers: {\r\n              ...options.headers,\r\n              'Authorization': `Bearer ${newToken}`,\r\n            },\r\n          };\r\n          \r\n          const retryResponse = await fetch(url, retryOptions);\r\n          \r\n          if (!retryResponse.ok) {\r\n            throw new Error(`Request failed: ${retryResponse.status.toString()}`);\r\n          }\r\n          \r\n          return await retryResponse.json() as T;\r\n        } catch {\r\n          // Refresh failed, clear auth state and redirect\r\n          this.handleAuthFailure();\r\n          throw new Error('Authentication failed');\r\n        }\r\n      }\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({})) as ErrorResponse;\r\n        \r\n        // Handle rate limiting specifically\r\n        if (response.status === 429) {\r\n          const error: CustomError = new Error(errorData.error ?? 'Rate limited');\r\n          error.code = 'RATE_LIMITED';\r\n          error.retryAfterSeconds = errorData.retryAfterSeconds;\r\n          error.remainingAttempts = errorData.remainingAttempts;\r\n          error.resetTime = errorData.resetTime;\r\n          throw error;\r\n        }\r\n        \r\n        // Handle other error codes\r\n        if (response.status === 401) {\r\n          const error: CustomError = new Error(errorData.error ?? 'Unauthorized');\r\n          error.code = 'UNAUTHORIZED';\r\n          throw error;\r\n        }\r\n        \r\n        if (response.status === 403) {\r\n          const error: CustomError = new Error(errorData.error ?? 'Forbidden');\r\n          error.code = 'FORBIDDEN';\r\n          throw error;\r\n        }\r\n        \r\n        throw new Error(errorData.error ?? errorData.message ?? `Request failed: ${response.status.toString()}`);\r\n      }\r\n      \r\n      return await response.json() as T;\r\n    } catch (error: unknown) {\r\n      console.error('API request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Handle authentication failure\r\n  private handleAuthFailure() {\r\n    // Clear all auth data\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refreshToken');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Redirect to login or home page\r\n    if (window.location.pathname !== '/') {\r\n      window.location.href = '/';\r\n    }\r\n  }\r\n\r\n  // GET request\r\n  async get<T>(endpoint: string): Promise<T> {\r\n    return this.request<T>(endpoint, { method: 'GET' });\r\n  }\r\n\r\n  // POST request\r\n  async post<T>(endpoint: string, data?: unknown): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  // PUT request\r\n  async put<T>(endpoint: string, data?: unknown): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  // DELETE request\r\n  async delete<T>(endpoint: string): Promise<T> {\r\n    return this.request<T>(endpoint, { method: 'DELETE' });\r\n  }\r\n\r\n  // PATCH request\r\n  async patch<T>(endpoint: string, data?: unknown): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  // Upload file\r\n  async upload<T>(endpoint: string, formData: FormData): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      body: formData,\r\n      // Don't set Content-Type for FormData, let browser set it with boundary\r\n    });\r\n  }\r\n}\r\n\r\n// Create and export the API client instance\r\nexport const apiClient = new ApiClient(config.apiUrl);\r\n","/**\r\n * Tenant Configuration API\r\n * Handles fetching and validation of tenant configs\r\n */\r\n\r\nimport { validateTenantConfig } from '../schemas';\r\nimport { TenantConfig, Vertical } from '../types';\r\nimport { apiClient } from './client';\r\n\r\n/**\r\n * Affiliate API response structure\r\n */\r\ninterface AffiliateApiResponse {\r\n  id?: string | number;\r\n  slug?: string;\r\n  business_name: string;\r\n  business_phone?: string;\r\n  phone?: string;\r\n  business_email?: string;\r\n  email?: string;\r\n  facebook_url?: string;\r\n  instagram_url?: string;\r\n  youtube_url?: string;\r\n  tiktok_url?: string;\r\n  service_areas?: Array<{ city: string; state: string; primary?: boolean }>;\r\n  industry?: string;\r\n  logo_url?: string;\r\n}\r\n\r\n/**\r\n * Fetch tenant configuration by slug\r\n * \r\n * @param slug - Tenant slug (e.g., 'jps', 'johns-detailing')\r\n * @returns Validated TenantConfig\r\n */\r\nexport async function fetchTenantConfigBySlug(slug: string): Promise<TenantConfig> {\r\n  const response = await apiClient.get<{ data?: AffiliateApiResponse }>(`/api/tenants/${slug}`);\r\n  \r\n  // API returns affiliate data, needs conversion\r\n  const { data } = response;\r\n  \r\n  if (!data || !data.business_name) {\r\n    throw new Error(`Tenant not found: ${slug}`);\r\n  }\r\n  \r\n  // Import conversion helper dynamically to avoid circular deps\r\n  const { affiliateToTenantConfig } = await import('../utils/tenantConfigMigration');\r\n  \r\n  // Convert affiliate API response to TenantConfig\r\n  const config = affiliateToTenantConfig({\r\n    id: data.id,\r\n    slug: data.slug,\r\n    business_name: data.business_name,\r\n    business_phone: data.business_phone || data.phone,\r\n    business_email: data.business_email || data.email,\r\n    facebook_url: data.facebook_url,\r\n    instagram_url: data.instagram_url,\r\n    tiktok_url: data.tiktok_url,\r\n    youtube_url: data.youtube_url,\r\n    service_areas: data.service_areas,\r\n    industry: data.industry,\r\n    logo_url: data.logo_url\r\n  });\r\n  \r\n  // Validate\r\n  const result = validateTenantConfig(config);\r\n  \r\n  if (!result.success) {\r\n    console.error('Tenant config validation failed:', result.errors);\r\n    throw new Error('Invalid tenant configuration');\r\n  }\r\n  \r\n  return result.data;\r\n}\r\n\r\n/**\r\n * Fetch tenant configuration by ID\r\n * \r\n * @param tenantId - Tenant ID\r\n * @returns Validated TenantConfig\r\n */\r\nexport async function fetchTenantConfigById(tenantId: string | number): Promise<TenantConfig> {\r\n  const response = await apiClient.get<{ data?: AffiliateApiResponse }>(`/api/tenants/id/${tenantId}`);\r\n  \r\n  const { data } = response;\r\n  \r\n  if (!data || !data.business_name) {\r\n    throw new Error(`Tenant not found: ${tenantId}`);\r\n  }\r\n  \r\n  const { affiliateToTenantConfig } = await import('../utils/tenantConfigMigration');\r\n  \r\n  const config = affiliateToTenantConfig({\r\n    id: data.id,\r\n    slug: data.slug,\r\n    business_name: data.business_name,\r\n    business_phone: data.business_phone || data.phone,\r\n    business_email: data.business_email || data.email,\r\n    facebook_url: data.facebook_url,\r\n    instagram_url: data.instagram_url,\r\n    tiktok_url: data.tiktok_url,\r\n    youtube_url: data.youtube_url,\r\n    service_areas: data.service_areas,\r\n    industry: data.industry,\r\n    logo_url: data.logo_url\r\n  });\r\n  \r\n  const result = validateTenantConfig(config);\r\n  \r\n  if (!result.success) {\r\n    throw new Error('Invalid tenant configuration');\r\n  }\r\n  \r\n  return result.data;\r\n}\r\n\r\n/**\r\n * List all tenants (optionally filtered by vertical)\r\n * \r\n * @param vertical - Optional vertical filter\r\n * @returns Array of TenantConfig\r\n */\r\nexport async function fetchTenants(vertical?: Vertical): Promise<TenantConfig[]> {\r\n  const queryParams = vertical ? `?industry=${vertical}` : '';\r\n  const response = await apiClient.get<{ data: AffiliateApiResponse[] }>(`/api/tenants${queryParams}`);\r\n  \r\n  const { data } = response;\r\n  \r\n  if (!Array.isArray(data)) {\r\n    return [];\r\n  }\r\n  \r\n  const { affiliateToTenantConfig } = await import('../utils/tenantConfigMigration');\r\n  \r\n  // Convert and validate each tenant\r\n  const configs = data.map(affiliate => {\r\n    return affiliateToTenantConfig({\r\n      id: affiliate.id,\r\n      slug: affiliate.slug,\r\n      business_name: affiliate.business_name,\r\n      business_phone: affiliate.business_phone || affiliate.phone,\r\n      business_email: affiliate.business_email || affiliate.email,\r\n      facebook_url: affiliate.facebook_url,\r\n      instagram_url: affiliate.instagram_url,\r\n      tiktok_url: affiliate.tiktok_url,\r\n      youtube_url: affiliate.youtube_url,\r\n      service_areas: affiliate.service_areas,\r\n      industry: affiliate.industry,\r\n      logo_url: affiliate.logo_url\r\n    });\r\n  });\r\n  \r\n  return configs;\r\n}\r\n\r\n/**\r\n * Tenant config cache key factory\r\n * Provides consistent React Query cache keys\r\n */\r\nexport const tenantConfigKeys = {\r\n  all: ['tenant', 'config'] as const,\r\n  lists: () => [...tenantConfigKeys.all, 'list'] as const,\r\n  list: (vertical?: Vertical) => [...tenantConfigKeys.lists(), { vertical }] as const,\r\n  details: () => [...tenantConfigKeys.all, 'detail'] as const,\r\n  detail: (identifier: string | number) => [...tenantConfigKeys.details(), identifier] as const,\r\n  bySlug: (slug: string) => [...tenantConfigKeys.detail(slug), 'slug'] as const,\r\n  byId: (id: string | number) => [...tenantConfigKeys.detail(id), 'id'] as const,\r\n};\r\n\r\n","/**\r\n * Tenant Config Loader Hook\r\n * Centralized, DRY way to fetch and cache tenant configurations\r\n * \r\n * Uses React Query for caching, deduplication, and state management\r\n * Validates all configs with Zod schemas at the API boundary\r\n */\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { QueryClient, useQuery } from '@tanstack/react-query';\r\n\r\nimport { \r\n  fetchTenantConfigById,\r\n  fetchTenantConfigBySlug, \r\n  fetchTenants,\r\n  tenantConfigKeys \r\n} from '../api/tenantConfig.api';\r\nimport type { Vertical } from '../types';\r\nimport { useTenantSlug } from './useTenantSlug';\r\n\r\n/**\r\n * Options for tenant config loader\r\n */\r\nexport interface UseTenantConfigLoaderOptions {\r\n  tenantId?: string | number;\r\n  slug?: string;\r\n  vertical?: Vertical;\r\n  enabled?: boolean;  // Conditional fetching\r\n}\r\n\r\n/**\r\n * Load tenant configuration with React Query\r\n * \r\n * Automatically:\r\n * - Fetches from API\r\n * - Validates with Zod\r\n * - Caches with React Query\r\n * - Deduplicates requests\r\n * - Handles loading/error states\r\n * \r\n * @param options - Loader options\r\n * @returns React Query result with typed TenantConfig\r\n * \r\n * @example\r\n * ```tsx\r\n * // By slug (from URL params)\r\n * const { data: config, isLoading } = useTenantConfigLoader();\r\n * \r\n * // By specific slug\r\n * const { data: config } = useTenantConfigLoader({ slug: 'johns-detailing' });\r\n * \r\n * // By tenant ID\r\n * const { data: config } = useTenantConfigLoader({ tenantId: 123 });\r\n * ```\r\n */\r\nexport function useTenantConfigLoader(options: UseTenantConfigLoaderOptions = {}) {\r\n  // Get slug from URL params if not provided\r\n  const params = useParams<{ slug?: string; tenantSlug?: string; businessSlug?: string }>();\r\n  const urlSlug = params.slug || params.tenantSlug || params.businessSlug;\r\n  \r\n  // Use the proper tenant slug hook for domain-based resolution\r\n  const domainTenantSlug = useTenantSlug();\r\n  \r\n  const { \r\n    tenantId, \r\n    slug = domainTenantSlug || urlSlug, // Prioritize domain-based slug\r\n    enabled = true \r\n  } = options;\r\n  \r\n  // Determine which fetch method to use\r\n  const fetchFn = async () => {\r\n    if (tenantId) {\r\n      return fetchTenantConfigById(tenantId);\r\n    } else if (slug) {\r\n      return fetchTenantConfigBySlug(slug);\r\n    }\r\n    throw new Error('Either tenantId or slug must be provided');\r\n  };\r\n  \r\n  // Generate cache key\r\n  const queryKey = tenantId \r\n    ? tenantConfigKeys.byId(tenantId)\r\n    : slug \r\n    ? tenantConfigKeys.bySlug(slug)\r\n    : tenantConfigKeys.all;\r\n  \r\n  return useQuery({\r\n    queryKey,\r\n    queryFn: fetchFn,\r\n    enabled: enabled && (!!tenantId || !!slug),\r\n    staleTime: 5 * 60 * 1000,  // 5 minutes\r\n    gcTime: 10 * 60 * 1000,     // 10 minutes (cache time)\r\n    retry: 2,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n}\r\n\r\n/**\r\n * Load list of tenants (optionally filtered by vertical)\r\n * \r\n * @param vertical - Optional vertical filter\r\n * @returns React Query result with array of TenantConfig\r\n * \r\n * @example\r\n * ```tsx\r\n * // All tenants\r\n * const { data: tenants } = useTenantsList();\r\n * \r\n * // Only detailing tenants\r\n * const { data: detailers } = useTenantsList('mobile-detailing');\r\n * ```\r\n */\r\nexport function useTenantsList(vertical?: Vertical) {\r\n  return useQuery({\r\n    queryKey: tenantConfigKeys.list(vertical),\r\n    queryFn: () => fetchTenants(vertical),\r\n    staleTime: 5 * 60 * 1000,\r\n    gcTime: 10 * 60 * 1000,\r\n  });\r\n}\r\n\r\n/**\r\n * Prefetch a tenant config (for performance optimization)\r\n * \r\n * @param slug - Tenant slug to prefetch\r\n * \r\n * @example\r\n * ```tsx\r\n * import { useQueryClient } from '@tanstack/react-query';\r\n * import { prefetchTenantConfig } from '@/shared/hooks';\r\n * \r\n * function TenantLink({ slug }: { slug: string }) {\r\n *   const queryClient = useQueryClient();\r\n *   \r\n *   return (\r\n *     <Link \r\n *       to={`/${slug}`}\r\n *       onMouseEnter={() => prefetchTenantConfig(queryClient, slug)}\r\n *     >\r\n *       {slug}\r\n *     </Link>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nexport async function prefetchTenantConfig(\r\n  queryClient: QueryClient,\r\n  slug: string\r\n): Promise<void> {\r\n  await queryClient.prefetchQuery({\r\n    queryKey: tenantConfigKeys.bySlug(slug),\r\n    queryFn: () => fetchTenantConfigBySlug(slug),\r\n    staleTime: 5 * 60 * 1000,\r\n  });\r\n}\r\n\r\n","import { useEffect, useState } from 'react';\r\n\r\n/**\r\n * Responsive breakpoints matching Tailwind's default configuration\r\n */\r\nexport const BREAKPOINTS = {\r\n  sm: 640,\r\n  md: 768,\r\n  lg: 1024,\r\n  xl: 1280,\r\n  '2xl': 1536,\r\n} as const;\r\n\r\n/**\r\n * Hook for responsive media queries\r\n * @param query - Media query string (e.g., '(min-width: 768px)')\r\n * @returns boolean indicating if the media query matches\r\n * \r\n * @example\r\n * const isDesktop = useMediaQuery('(min-width: 768px)');\r\n * const prefersDark = useMediaQuery('(prefers-color-scheme: dark)');\r\n */\r\nexport const useMediaQuery = (query: string): boolean => {\r\n  const [matches, setMatches] = useState<boolean>(() => {\r\n    // SSR-safe initialization\r\n    if (typeof window === 'undefined') return false;\r\n    return window.matchMedia(query).matches;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    const mediaQuery = window.matchMedia(query);\r\n    \r\n    // Update state if initial value differs from current\r\n    if (mediaQuery.matches !== matches) {\r\n      setMatches(mediaQuery.matches);\r\n    }\r\n\r\n    // Event handler for media query changes\r\n    const handleChange = (event: MediaQueryListEvent) => {\r\n      setMatches(event.matches);\r\n    };\r\n\r\n    // Modern browsers support addEventListener\r\n    mediaQuery.addEventListener('change', handleChange);\r\n\r\n    return () => {\r\n      mediaQuery.removeEventListener('change', handleChange);\r\n    };\r\n  }, [query, matches]);\r\n\r\n  return matches;\r\n};\r\n\r\n/**\r\n * Hook to detect if viewport is mobile size (< 768px)\r\n * @returns boolean indicating if viewport is mobile\r\n * \r\n * @example\r\n * const isMobile = useIsMobile();\r\n * return isMobile ? <MobileMenu /> : <DesktopMenu />;\r\n */\r\nexport const useIsMobile = (): boolean => {\r\n  return useMediaQuery(`(max-width: ${BREAKPOINTS.md - 1}px)`);\r\n};\r\n\r\n/**\r\n * Hook to detect if viewport is tablet size (>= 768px and < 1024px)\r\n * @returns boolean indicating if viewport is tablet\r\n * \r\n * @example\r\n * const isTablet = useIsTablet();\r\n */\r\nexport const useIsTablet = (): boolean => {\r\n  const isAboveMobile = useMediaQuery(`(min-width: ${BREAKPOINTS.md}px)`);\r\n  const isBelowDesktop = useMediaQuery(`(max-width: ${BREAKPOINTS.lg - 1}px)`);\r\n  return isAboveMobile && isBelowDesktop;\r\n};\r\n\r\n/**\r\n * Hook to detect if viewport is desktop size (>= 768px)\r\n * @returns boolean indicating if viewport is desktop\r\n * \r\n * @example\r\n * const isDesktop = useIsDesktop();\r\n */\r\nexport const useIsDesktop = (): boolean => {\r\n  return useMediaQuery(`(min-width: ${BREAKPOINTS.md}px)`);\r\n};\r\n\r\n/**\r\n * Hook to detect if viewport is large desktop size (>= 1024px)\r\n * @returns boolean indicating if viewport is large desktop\r\n * \r\n * @example\r\n * const isLargeDesktop = useIsLargeDesktop();\r\n */\r\nexport const useIsLargeDesktop = (): boolean => {\r\n  return useMediaQuery(`(min-width: ${BREAKPOINTS.lg}px)`);\r\n};\r\n\r\n/**\r\n * Hook that returns current breakpoint name\r\n * @returns Current breakpoint ('sm' | 'md' | 'lg' | 'xl' | '2xl')\r\n * \r\n * @example\r\n * const breakpoint = useBreakpoint();\r\n * if (breakpoint === 'sm') { ... }\r\n */\r\nexport const useBreakpoint = (): keyof typeof BREAKPOINTS => {\r\n  const is2xl = useMediaQuery(`(min-width: ${BREAKPOINTS['2xl']}px)`);\r\n  const isXl = useMediaQuery(`(min-width: ${BREAKPOINTS.xl}px)`);\r\n  const isLg = useMediaQuery(`(min-width: ${BREAKPOINTS.lg}px)`);\r\n  const isMd = useMediaQuery(`(min-width: ${BREAKPOINTS.md}px)`);\r\n\r\n  if (is2xl) return '2xl';\r\n  if (isXl) return 'xl';\r\n  if (isLg) return 'lg';\r\n  if (isMd) return 'md';\r\n  return 'sm';\r\n};\r\n\r\n","import { create } from 'zustand';\r\n\r\nexport type SectionId = 'top' | 'services' | 'services-desktop' | 'reviews' | 'faq' | 'gallery' | 'footer' | 'gallery-desktop';\r\n\r\ninterface SectionState {\r\n  current: SectionId | null;\r\n  setCurrent: (id: SectionId | null) => void;\r\n}\r\n\r\n// Map actual section IDs to navigation IDs\r\nexport const getNavId = (sectionId: SectionId | null): SectionId | null => {\r\n  if (!sectionId) return null;\r\n  if (sectionId === 'services-desktop') return 'services';\r\n  if (sectionId === 'gallery-desktop' || sectionId === 'gallery') return 'footer';\r\n  return sectionId;\r\n};\r\n\r\nexport const useSectionStore = create<SectionState>((set) => ({\r\n  current: null,\r\n  setCurrent: (id) => { set({ current: id }); },\r\n}));\r\n\r\n","import { useEffect } from 'react';\r\n\r\nimport { type SectionId,useSectionStore } from '@/shared/state/sectionStore';\r\n\r\ntype Opts = {\r\n  ids: SectionId[];\r\n  headerPx?: number;       // sticky header height\r\n  threshold?: number;      // how much must be visible\r\n  updateHash?: boolean;    // keep URL hash in sync\r\n};\r\n\r\nexport function useScrollSpy({\r\n  ids,\r\n  headerPx = 88,\r\n  threshold = 0.55,\r\n  updateHash = false,\r\n}: Opts) {\r\n  const setCurrent = useSectionStore((s) => s.setCurrent);\r\n\r\n  useEffect(() => {\r\n    const els = ids\r\n      .map((id) => document.getElementById(id))\r\n      .filter((el): el is HTMLElement => !!el);\r\n    if (!els.length) return;\r\n\r\n    // Use multiple thresholds for more granular detection\r\n    const thresholds = Array.from({ length: 21 }, (_, i) => i * 0.05);\r\n\r\n    const io = new IntersectionObserver(\r\n      (entries) => {\r\n        // Only process if we have intersecting entries\r\n        const intersecting = entries.filter((e) => e.isIntersecting);\r\n        \r\n        if (intersecting.length === 0) return;\r\n\r\n        // Find the MOST visible section (highest intersection ratio)\r\n        const mostVisible = intersecting.reduce((best, current) => {\r\n          return current.intersectionRatio > best.intersectionRatio ? current : best;\r\n        });\r\n\r\n        // Only update if intersection ratio is significant (avoid brief overlaps during scroll)\r\n        if (mostVisible.intersectionRatio > 0.3) {\r\n          const id = mostVisible.target.id as SectionId | null;\r\n          setCurrent(id);\r\n\r\n          if (updateHash && id) {\r\n            const hash = `#${id}`;\r\n            if (location.hash !== hash) history.replaceState(null, '', hash);\r\n          }\r\n        }\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: `-${headerPx}px 0px -20% 0px`, // Account for header and bottom\r\n        threshold: thresholds,\r\n      }\r\n    );\r\n\r\n    els.forEach((el) => { io.observe(el); });\r\n    return () => { io.disconnect(); };\r\n  }, [ids, headerPx, threshold, updateHash, setCurrent]);\r\n}\r\n\r\n","import { useCallback,useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n  getNextImageIndex,\r\n  getPreviousImageIndex,\r\n  type ImageRotationActions,\r\n  type ImageRotationConfig, \r\n  type ImageRotationState, \r\n  preloadImages,\r\n  validateImageRotationConfig\r\n} from '@/shared/utils/imageRotation';\r\n\r\nexport interface UseImageRotationReturn extends ImageRotationState, ImageRotationActions {\r\n  /** Whether the carousel has multiple images */\r\n  hasMultipleImages: boolean;\r\n  /** Total number of images */\r\n  totalImages: number;\r\n  /** Whether the configuration is valid */\r\n  isValid: boolean;\r\n  /** Validation errors if any */\r\n  errors: string[];\r\n}\r\n\r\n/**\r\n * Hook for managing image rotation with automatic transitions\r\n */\r\nexport const useImageRotation = (config: ImageRotationConfig): UseImageRotationReturn => {\r\n  const { images, autoRotate, interval, preloadNext } = config;\r\n\r\n  // Validate config\r\n  const { isValid, errors } = validateImageRotationConfig(config);\r\n  const totalImages = images.length;\r\n  const hasMultipleImages = totalImages > 1;\r\n\r\n  // State\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [_prefersReducedMotion, setPrefersReducedMotion] = useState(false);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Check if user prefers reduced motion\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n    \r\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n    setPrefersReducedMotion(mediaQuery.matches);\r\n    \r\n    const handleChange = (e: MediaQueryListEvent) => {\r\n      setPrefersReducedMotion(e.matches);\r\n    };\r\n    \r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => { mediaQuery.removeEventListener('change', handleChange); };\r\n  }, []);\r\n\r\n  // Preload images\r\n  useEffect(() => {\r\n    if (preloadNext && totalImages > 1) {\r\n      void preloadImages(images);\r\n    }\r\n  }, [images, preloadNext, totalImages]);\r\n\r\n  // Auto-rotation effect\r\n  useEffect(() => {\r\n    // Disable auto-rotation if invalid or paused\r\n    // NOTE: prefersReducedMotion check disabled for development\r\n    // Re-enable in production by uncommenting: || prefersReducedMotion\r\n    if (!isValid || !autoRotate || !hasMultipleImages || isPaused) {\r\n      return;\r\n    }\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      setCurrentIndex(prevIndex => getNextImageIndex(prevIndex, totalImages));\r\n    }, interval);\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n    };\r\n  }, [isValid, autoRotate, hasMultipleImages, isPaused, interval, totalImages]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Navigation functions\r\n  const next = useCallback(() => {\r\n    if (!isValid || !hasMultipleImages) return;\r\n    setCurrentIndex(prevIndex => getNextImageIndex(prevIndex, totalImages));\r\n  }, [isValid, hasMultipleImages, totalImages]);\r\n\r\n  const previous = useCallback(() => {\r\n    if (!isValid || !hasMultipleImages) return;\r\n    setCurrentIndex(prevIndex => getPreviousImageIndex(prevIndex, totalImages));\r\n  }, [isValid, hasMultipleImages, totalImages]);\r\n\r\n  const goTo = useCallback((index: number) => {\r\n    if (!isValid || !hasMultipleImages || index < 0 || index >= totalImages) return;\r\n    setCurrentIndex(index);\r\n  }, [isValid, hasMultipleImages, totalImages]);\r\n\r\n  const togglePause = useCallback(() => {\r\n    setIsPaused(prev => !prev);\r\n  }, []);\r\n\r\n  const setPaused = useCallback((paused: boolean) => {\r\n    setIsPaused(paused);\r\n  }, []);\r\n\r\n  return {\r\n    currentIndex,\r\n    nextIndex: getNextImageIndex(currentIndex, totalImages),\r\n    isPaused,\r\n    hasMultipleImages,\r\n    totalImages,\r\n    isValid,\r\n    errors,\r\n    next,\r\n    previous,\r\n    goTo,\r\n    togglePause,\r\n    setPaused\r\n  };\r\n};\r\n\r\n/**\r\n * Hook for handling hover pause functionality\r\n */\r\nexport const useImageRotationHover = (rotation: UseImageRotationReturn) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    setIsHovered(true);\r\n  }, []);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    setIsHovered(false);\r\n  }, []);\r\n\r\n  // Pause rotation on hover\r\n  useEffect(() => {\r\n    if (isHovered && rotation.isValid) {\r\n      rotation.setPaused(true);\r\n    } else {\r\n      rotation.setPaused(false);\r\n    }\r\n  }, [isHovered, rotation]);\r\n\r\n  return {\r\n    isHovered,\r\n    onMouseEnter: handleMouseEnter,\r\n    onMouseLeave: handleMouseLeave\r\n  };\r\n};","// Reviews API client\r\nimport type { DatabaseReview, ReviewQueryParams, ReviewsResponse } from '../types';\r\n\r\nconst API_BASE_URL = '/api/reviews';\r\n\r\nexport const reviewsApi = {\r\n  // Get reviews with filtering\r\n  getReviews: async (params: ReviewQueryParams = {}): Promise<ReviewsResponse> => {\r\n    const searchParams = new URLSearchParams();\r\n    \r\n    Object.entries(params).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== '') {\r\n        searchParams.append(key, String(value));\r\n      }\r\n    });\r\n\r\n    const response = await fetch(`${API_BASE_URL}?${searchParams.toString()}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch reviews: ${response.statusText}`);\r\n    }\r\n\r\n    return response.json() as Promise<ReviewsResponse>;\r\n  },\r\n\r\n  // Get a specific review by ID\r\n  getReview: async (id: string): Promise<{ success: boolean; data: DatabaseReview }> => {\r\n    const response = await fetch(`${API_BASE_URL}/${id}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch review: ${response.statusText}`);\r\n    }\r\n\r\n    return response.json() as Promise<{ success: boolean; data: DatabaseReview }>;\r\n  },\r\n\r\n  // Submit a new review\r\n  submitReview: async (reviewData: {\r\n    tenant_slug: string;\r\n    customer_name: string;\r\n    rating: number;\r\n    comment: string;\r\n    reviewer_url?: string;\r\n    vehicle_type?: 'car' | 'truck' | 'suv' | 'boat' | 'rv' | 'motorcycle';\r\n    paint_correction?: boolean;\r\n    ceramic_coating?: boolean;\r\n    paint_protection_film?: boolean;\r\n    source?: 'website' | 'google' | 'yelp' | 'facebook';\r\n    avatar_filename?: string;\r\n  }): Promise<{ success: boolean; data: DatabaseReview }> => {\r\n    const response = await fetch(API_BASE_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(reviewData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to submit review: ${response.statusText}`);\r\n    }\r\n\r\n    return response.json() as Promise<{ success: boolean; data: DatabaseReview }>;\r\n  },\r\n\r\n};\r\n","// Hook for fetching reviews\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { reviewsApi } from '../api';\r\nimport type { DatabaseReview,Review, ReviewQueryParams } from '../types';\r\n\r\n// Convert database review to frontend review format\r\nconst convertDatabaseReviewToReview = (dbReview: DatabaseReview): Review => {\r\n  const review: Review = {\r\n    id: dbReview.id.toString(),\r\n    customerName: dbReview.customer_name,\r\n    rating: dbReview.rating,\r\n    reviewText: dbReview.comment,\r\n    date: dbReview.published_at || dbReview.created_at,\r\n    reviewSource: dbReview.source,\r\n  };\r\n\r\n  // Add optional fields only if they exist\r\n  if (dbReview.avatar_filename) {\r\n    review.profileImage = `/uploads/avatars/${dbReview.avatar_filename}`;\r\n  }\r\n  if (dbReview.reviewer_url) {\r\n    review.reviewerUrl = dbReview.reviewer_url;\r\n  }\r\n  if (dbReview.vehicle_type) {\r\n    review.serviceCategory = dbReview.vehicle_type;\r\n  }\r\n\r\n  return review;\r\n};\r\n\r\nexport const useReviews = (params: ReviewQueryParams = {}) => {\r\n  // Create a stable query key based on params\r\n  const queryKey = ['reviews', params];\r\n  \r\n  // Only fetch if we have meaningful params\r\n  const hasParams = Object.values(params).some(value => value !== undefined && value !== '');\r\n  \r\n  const {\r\n    data: response,\r\n    isLoading: loading,\r\n    error,\r\n    refetch\r\n  } = useQuery({\r\n    queryKey,\r\n    queryFn: async () => {\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => { controller.abort(); }, 5000); // 5 second timeout\r\n      \r\n      try {\r\n        const response = await reviewsApi.getReviews(params);\r\n        clearTimeout(timeoutId);\r\n        \r\n        if (!response.success) {\r\n          throw new Error(response.error || 'Failed to fetch reviews');\r\n        }\r\n        \r\n        return response;\r\n      } catch (err) {\r\n        clearTimeout(timeoutId);\r\n        throw err;\r\n      }\r\n    },\r\n    enabled: hasParams,\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    retry: 1\r\n  });\r\n\r\n  // Convert database reviews to frontend format\r\n  const reviews = response?.data ? response.data.map(convertDatabaseReviewToReview) : [];\r\n  const pagination = response?.pagination || null;\r\n  const errorMessage = error instanceof Error ? error.message : null;\r\n\r\n  const loadMore = () => {\r\n    if (pagination?.hasMore) {\r\n      // For now, just refetch with current params\r\n      // TODO: Implement proper pagination with offset\r\n      refetch();\r\n    }\r\n  };\r\n\r\n  return {\r\n    reviews,\r\n    loading,\r\n    error: errorMessage,\r\n    pagination,\r\n    refetch,\r\n    loadMore\r\n  };\r\n};\r\n","import { useReviews } from '@/features/reviews/hooks/useReviews';\r\nimport type { ReviewQueryParams } from '@/features/reviews/types';\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\n\r\n/**\r\n * Hook to check if reviews are available for the current site\r\n * Returns true if there are reviews, false otherwise\r\n */\r\nexport const useReviewsAvailability = (): boolean => {\r\n  const data = useDataOptional();\r\n  const isTenant = data?.isTenant || false;\r\n  \r\n  // Build query parameters for availability check only\r\n  const queryParams: ReviewQueryParams = {\r\n    limit: 1\r\n  };\r\n  \r\n  // For tenant sites, get the tenant slug from the URL\r\n  if (isTenant) {\r\n    const urlSlug = window.location.pathname.split('/')[1];\r\n    if (urlSlug) {\r\n      queryParams.tenant_slug = urlSlug;\r\n    }\r\n  }\r\n  \r\n  // Fetch reviews with tenant-specific filtering\r\n  const { reviews, loading } = useReviews(queryParams);\r\n  \r\n  // Only return true if we have reviews and are not loading\r\n  return !loading && reviews.length > 0;\r\n};\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nimport { Button } from './Button';\r\n\r\ninterface BookNowProps {\r\n  to?: string;\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  loading?: boolean;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst BookNow = React.forwardRef<HTMLButtonElement, BookNowProps>(\r\n  ({\r\n    to,\r\n    onClick,\r\n    variant = 'primary',\r\n    size = 'lg',\r\n    loading = false,\r\n    leftIcon,\r\n    rightIcon,\r\n    className = '',\r\n    children,\r\n    style,\r\n    ...props\r\n  }, ref) => {\r\n    const buttonText = children || 'Book Now';\r\n\r\n    // Determine destination based on context\r\n    const getDestination = () => {\r\n      if (to) return to; // Use custom destination if provided\r\n      \r\n      // Always go directly to booking for now\r\n      // TODO: Add location selection page if needed\r\n      return '/booking';\r\n    };\r\n\r\n    const buttonProps = {\r\n      variant,\r\n      size,\r\n      loading,\r\n      leftIcon,\r\n      rightIcon,\r\n      className: cn(\r\n        'whitespace-nowrap',\r\n        className\r\n      ),\r\n      style,\r\n      children: buttonText,\r\n      ref,\r\n      ...props\r\n    };\r\n\r\n    if (onClick) {\r\n      return (\r\n        <Button\r\n          onClick={onClick}\r\n          {...buttonProps}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Link to={getDestination()}>\r\n        <Button {...buttonProps} />\r\n      </Link>\r\n    );\r\n  }\r\n);\r\n\r\nBookNow.displayName = 'BookNow';\r\n\r\nexport default BookNow;\r\n","import React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nimport { Button } from './Button';\r\n\r\ninterface GetQuoteProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  loading?: boolean;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst GetQuote = React.forwardRef<HTMLButtonElement, GetQuoteProps>(\r\n  ({\r\n    variant = 'secondary',\r\n    size = 'lg',\r\n    loading = false,\r\n    leftIcon,\r\n    rightIcon,\r\n    className = '',\r\n    children,\r\n    style,\r\n    ...props\r\n  }, ref) => {\r\n    const buttonText = children || 'Request Quote';\r\n\r\n    return (\r\n      <Button\r\n        variant={variant}\r\n        size={size}\r\n        loading={loading}\r\n        leftIcon={leftIcon}\r\n        rightIcon={rightIcon}\r\n        className={cn(\r\n          'whitespace-nowrap',\r\n          className\r\n        )}\r\n        style={style}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n    );\r\n  }\r\n);\r\n\r\nGetQuote.displayName = 'GetQuote';\r\n\r\nexport default GetQuote;\r\n","import React from 'react';\r\n\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nimport BookNow from './BookNow';\r\nimport GetQuote from './GetQuote';\r\n\r\ninterface CTAButtonsProps {\r\n  layout?: 'horizontal' | 'vertical';\r\n  className?: string;\r\n  bookNowProps?: {\r\n    to?: string;\r\n    onClick?: () => void;\r\n    variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n    size?: 'sm' | 'md' | 'lg' | 'xl';\r\n    className?: string;\r\n    children?: React.ReactNode;\r\n  };\r\n  getQuoteProps?: {\r\n    variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n    size?: 'sm' | 'md' | 'lg' | 'xl';\r\n    className?: string;\r\n    children?: React.ReactNode;\r\n    onClick?: () => void;\r\n  };\r\n}\r\n\r\nconst CTAButtons: React.FC<CTAButtonsProps> = ({\r\n  layout = 'horizontal',\r\n  className = '',\r\n  bookNowProps = {},\r\n  getQuoteProps = {}\r\n}) => {\r\n  const data = useDataOptional();\r\n  const isPreview = data?.isPreview || false;\r\n\r\n  // Default both to the same size unless overridden\r\n  const buttonSize = bookNowProps.size ?? getQuoteProps.size ?? 'lg';\r\n\r\n  const containerClasses =\r\n    layout === 'vertical'\r\n      ? // Single column, centered, consistent width\r\n        'flex flex-col gap-3 w-full max-w-[28rem] md:max-w-[32rem] mx-auto px-6'\r\n      : // 1 col on mobile, 2 equal cols ≥ sm\r\n        'grid grid-cols-1 sm:grid-cols-2 gap-3 w-full max-w-[28rem] md:max-w-[32rem] mx-auto px-6';\r\n\r\n  const commonBtnClasses = 'w-full justify-center'; // fill column, equal widths\r\n\r\n  const handleBookNowClick = (e: React.MouseEvent) => {\r\n    if (isPreview) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      alert('📋 Preview Mode\\n\\nBooking is disabled in preview mode.\\n\\nThis is a demonstration site to showcase features to potential clients.');\r\n      return;\r\n    }\r\n    bookNowProps.onClick?.();\r\n  };\r\n\r\n  return (\r\n    <div className={cn(containerClasses, className)}>\r\n      <BookNow\r\n        variant={bookNowProps.variant ?? 'primary'}\r\n        size={buttonSize}\r\n        className={cn(commonBtnClasses, isPreview && 'cursor-pointer', bookNowProps.className)}\r\n        onClick={isPreview ? handleBookNowClick : bookNowProps.onClick}\r\n        {...(bookNowProps.to && !isPreview && { to: bookNowProps.to })}\r\n      >\r\n        {bookNowProps.children ?? 'Book Now'}\r\n      </BookNow>\r\n\r\n      <GetQuote\r\n        variant={getQuoteProps.variant ?? 'outline-white'}\r\n        size={buttonSize}\r\n        className={cn(commonBtnClasses, getQuoteProps.className)}\r\n        onClick={getQuoteProps.onClick}\r\n      >\r\n        {getQuoteProps.children ?? 'Request Quote'}\r\n      </GetQuote>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CTAButtons;","/**\r\n * Enhanced Error Monitoring System\r\n * Catches all frontend errors including console errors, unhandled promises, and React errors\r\n */\r\n\r\ninterface ReactErrorInfo {\r\n  componentStack?: string;\r\n}\r\n\r\n// Type guard to safely extract error properties\r\nfunction getErrorStack(error: unknown): string | undefined {\r\n  if (error && typeof error === 'object' && 'stack' in error) {\r\n    return String((error as { stack: unknown }).stack);\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction getErrorMessage(error: unknown): string {\r\n  if (error && typeof error === 'object' && 'message' in error) {\r\n    return String((error as { message: unknown }).message);\r\n  }\r\n  return String(error);\r\n}\r\n\r\ninterface ErrorEvent {\r\n  id: string;\r\n  timestamp: Date;\r\n  type: 'console' | 'unhandled' | 'promise' | 'react' | 'network';\r\n  message: string;\r\n  stack?: string;\r\n  url?: string;\r\n  line?: number;\r\n  column?: number;\r\n  userAgent?: string;\r\n  userId?: string;\r\n  sessionId?: string;\r\n  componentStack?: string;\r\n  errorBoundary?: string;\r\n  networkInfo?: {\r\n    url: string;\r\n    method: string;\r\n    status?: number;\r\n    responseTime?: number;\r\n  };\r\n}\r\n\r\nclass ErrorMonitor {\r\n  private errors: ErrorEvent[] = [];\r\n  private maxErrors = 1000; // Keep last 1000 errors\r\n  private sessionId: string;\r\n  private userId?: string;\r\n  private isEnabled = false; // Disabled to see actual console errors\r\n  private listeners: ((error: ErrorEvent) => void)[] = [];\r\n\r\n  constructor() {\r\n    this.sessionId = this.generateSessionId();\r\n    this.setupGlobalErrorHandlers();\r\n    this.setupConsoleErrorHandling();\r\n    this.setupNetworkErrorHandling();\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`;\r\n  }\r\n\r\n  private setupGlobalErrorHandlers(): void {\r\n    // Catch all unhandled errors\r\n    window.addEventListener('error', (event) => {\r\n      const stack = getErrorStack(event.error);\r\n      this.captureError({\r\n        type: 'unhandled',\r\n        message: event.message,\r\n        ...(stack ? { stack } : {}),\r\n        url: event.filename,\r\n        line: event.lineno,\r\n        column: event.colno,\r\n      });\r\n    });\r\n\r\n    // Catch unhandled promise rejections\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      const stack = getErrorStack(event.reason);\r\n      this.captureError({\r\n        type: 'promise',\r\n        message: getErrorMessage(event.reason),\r\n        ...(stack ? { stack } : {}),\r\n      });\r\n    });\r\n\r\n    // Catch resource loading errors\r\n    window.addEventListener('error', (event) => {\r\n      if (event.target !== window) {\r\n        const target = event.target;\r\n        const targetName = target instanceof Element ? target.tagName.toLowerCase() : 'unknown';\r\n        \r\n        let url = 'unknown';\r\n        if (target && typeof target === 'object') {\r\n          if ('src' in target && typeof target.src === 'string') {\r\n            url = target.src;\r\n          } else if ('href' in target && typeof target.href === 'string') {\r\n            url = target.href;\r\n          }\r\n        }\r\n        \r\n        this.captureError({\r\n          type: 'network',\r\n          message: `Resource loading error: ${targetName}`,\r\n          networkInfo: {\r\n            url,\r\n            method: 'GET',\r\n          },\r\n        });\r\n      }\r\n    }, true);\r\n  }\r\n\r\n  private setupConsoleErrorHandling(): void {\r\n    // Override console methods to catch all console errors\r\n    const originalConsoleError = console.error;\r\n    const originalConsoleWarn = console.warn;\r\n\r\n    console.error = (...args: unknown[]) => {\r\n      const stack = new Error().stack;\r\n      this.captureError({\r\n        type: 'console',\r\n        message: args.map(arg => typeof arg === 'string' ? arg : JSON.stringify(arg)).join(' '),\r\n        ...(stack ? { stack } : {}),\r\n      });\r\n      originalConsoleError.apply(console, args);\r\n    };\r\n\r\n    console.warn = (...args: unknown[]) => {\r\n      const stack = new Error().stack;\r\n      this.captureError({\r\n        type: 'console',\r\n        message: `WARNING: ${args.map(arg => typeof arg === 'string' ? arg : JSON.stringify(arg)).join(' ')}`,\r\n        ...(stack ? { stack } : {}),\r\n      });\r\n      originalConsoleWarn.apply(console, args);\r\n    };\r\n  }\r\n\r\n  private setupNetworkErrorHandling(): void {\r\n    // Override fetch to catch network errors\r\n    const originalFetch = window.fetch;\r\n    window.fetch = async (...args: Parameters<typeof fetch>) => {\r\n      const startTime = Date.now();\r\n      const requestInput = args[0];\r\n      // Extract URL from request input - either string or Request object\r\n      let url: string;\r\n      if (typeof requestInput === 'string') {\r\n        url = requestInput;\r\n      } else {\r\n        url = (requestInput as Request).url;\r\n      }\r\n      const method = args[1]?.method || 'GET';\r\n\r\n      try {\r\n        const response = await originalFetch(...args);\r\n        const responseTime = Date.now() - startTime;\r\n\r\n        // Log failed requests (but ignore localhost connection refused errors)\r\n        if (!response.ok && !(url.includes('localhost:5173') && response.status === 0)) {\r\n          this.captureError({\r\n            type: 'network',\r\n            message: `HTTP ${response.status}: ${response.statusText}`,\r\n            networkInfo: {\r\n              url,\r\n              method,\r\n              status: response.status,\r\n              responseTime,\r\n            },\r\n          });\r\n        }\r\n\r\n        return response;\r\n      } catch (error: unknown) {\r\n        const responseTime = Date.now() - startTime;\r\n        const errorMessage = getErrorMessage(error);\r\n        \r\n        // Check if it's a connection refused error to localhost\r\n        const isLocalConnectionError = \r\n          url.includes('localhost:5173') && \r\n          error instanceof TypeError && \r\n          errorMessage.includes('ERR_CONNECTION_REFUSED');\r\n        \r\n        // Don't log connection refused errors to localhost:5173 (Vite dev server pings)\r\n        if (!isLocalConnectionError) {\r\n          this.captureError({\r\n            type: 'network',\r\n            message: `Network error: ${errorMessage}`,\r\n            networkInfo: {\r\n              url,\r\n              method,\r\n              responseTime,\r\n            },\r\n          });\r\n        }\r\n        \r\n        throw error;\r\n      }\r\n    };\r\n  }\r\n\r\n  private captureError(errorData: Partial<ErrorEvent>): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    const error: ErrorEvent = {\r\n      id: `error_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`,\r\n      timestamp: new Date(),\r\n      type: 'console',\r\n      message: '',\r\n      url: window.location.href,\r\n      userAgent: navigator.userAgent,\r\n      sessionId: this.sessionId,\r\n      ...(this.userId ? { userId: this.userId } : {}),\r\n      ...errorData,\r\n    };\r\n\r\n    this.errors.push(error);\r\n\r\n    // Keep only the last maxErrors\r\n    if (this.errors.length > this.maxErrors) {\r\n      this.errors = this.errors.slice(-this.maxErrors);\r\n    }\r\n\r\n    // Notify listeners\r\n    this.listeners.forEach(listener => { listener(error); });\r\n\r\n    // Log to console in development\r\n    if (import.meta.env.DEV) {\r\n      console.group(`🚨 Error Captured (${error.type.toUpperCase()})`);\r\n      console.error('Message:', error.message);\r\n      console.error('Timestamp:', error.timestamp.toISOString());\r\n      console.error('URL:', error.url);\r\n      if (error.stack) console.error('Stack:', error.stack);\r\n      if (error.componentStack) console.error('Component Stack:', error.componentStack);\r\n      if (error.networkInfo) console.error('Network Info:', error.networkInfo);\r\n      console.groupEnd();\r\n    }\r\n  }\r\n\r\n  // Public methods\r\n  public captureReactError(error: Error, errorInfo: ReactErrorInfo, componentStack?: string): void {\r\n    const stack = error.stack;\r\n    const component = componentStack || errorInfo.componentStack;\r\n    this.captureError({\r\n      type: 'react',\r\n      message: error.message,\r\n      ...(stack ? { stack } : {}),\r\n      ...(component ? { componentStack: component } : {}),\r\n    });\r\n  }\r\n\r\n  public setUserId(userId: string): void {\r\n    this.userId = userId;\r\n  }\r\n\r\n  public enable(): void {\r\n    this.isEnabled = true;\r\n  }\r\n\r\n  public disable(): void {\r\n    this.isEnabled = false;\r\n  }\r\n\r\n  public getErrors(): ErrorEvent[] {\r\n    return [...this.errors];\r\n  }\r\n\r\n  public getErrorsByType(type: ErrorEvent['type']): ErrorEvent[] {\r\n    return this.errors.filter(error => error.type === type);\r\n  }\r\n\r\n  public getRecentErrors(count: number = 10): ErrorEvent[] {\r\n    return this.errors.slice(-count);\r\n  }\r\n\r\n  public clearErrors(): void {\r\n    this.errors = [];\r\n  }\r\n\r\n  public addListener(listener: (error: ErrorEvent) => void): () => void {\r\n    this.listeners.push(listener);\r\n    return () => {\r\n      const index = this.listeners.indexOf(listener);\r\n      if (index > -1) {\r\n        this.listeners.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  public exportErrors(): string {\r\n    return JSON.stringify({\r\n      sessionId: this.sessionId,\r\n      userId: this.userId,\r\n      timestamp: new Date().toISOString(),\r\n      errors: this.errors,\r\n    }, null, 2);\r\n  }\r\n\r\n  public printErrorsToConsole(): void {\r\n    console.group('🔍 Error Monitor - All Captured Errors');\r\n    console.log(`Session ID: ${this.sessionId}`);\r\n    console.log(`Total Errors: ${this.errors.length}`);\r\n    console.log(`User ID: ${this.userId || 'Not set'}`);\r\n    \r\n    this.errors.forEach((error, index) => {\r\n      console.group(`Error ${index + 1} (${error.type})`);\r\n      console.log('Time:', error.timestamp.toISOString());\r\n      console.log('Message:', error.message);\r\n      console.log('URL:', error.url);\r\n      if (error.stack) console.log('Stack:', error.stack);\r\n      if (error.componentStack) console.log('Component Stack:', error.componentStack);\r\n      if (error.networkInfo) console.log('Network Info:', error.networkInfo);\r\n      console.groupEnd();\r\n    });\r\n    \r\n    console.groupEnd();\r\n  }\r\n\r\n  public getErrorSummary(): {\r\n    total: number;\r\n    byType: Record<string, number>;\r\n    recent: ErrorEvent[];\r\n  } {\r\n    const byType = this.errors.reduce<Record<string, number>>((acc, error) => {\r\n      acc[error.type] = (acc[error.type] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    return {\r\n      total: this.errors.length,\r\n      byType,\r\n      recent: this.getRecentErrors(5),\r\n    };\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nexport const errorMonitor = new ErrorMonitor();\r\n\r\n// Export types for use in other files\r\nexport type { ErrorEvent, ReactErrorInfo };\r\n\r\n// Global error handler for React errors\r\nexport const handleReactError = (error: Error, errorInfo: ReactErrorInfo, componentStack?: string) => {\r\n  errorMonitor.captureReactError(error, errorInfo, componentStack);\r\n};\r\n\r\n// Extend Window interface for debugging commands\r\ndeclare global {\r\n  interface Window {\r\n    errorMonitor: ErrorMonitor;\r\n    printErrors: () => void;\r\n    getErrors: () => ErrorEvent[];\r\n    clearErrors: () => void;\r\n    exportErrors: () => string;\r\n  }\r\n}\r\n\r\n// Console commands for debugging\r\nif (typeof window !== 'undefined') {\r\n  window.errorMonitor = errorMonitor;\r\n  window.printErrors = () => { errorMonitor.printErrorsToConsole(); };\r\n  window.getErrors = () => errorMonitor.getErrors();\r\n  window.clearErrors = () => { errorMonitor.clearErrors(); };\r\n  window.exportErrors = () => errorMonitor.exportErrors();\r\n}\r\n","import type { ErrorInfo, ReactNode } from 'react';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { env } from '@/shared/env';\r\nimport { handleReactError } from '@/shared/utils/errorMonitoring';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\r\n    \r\n    // Capture error in our monitoring system\r\n    handleReactError(error, errorInfo, errorInfo.componentStack);\r\n    \r\n    // Call custom error handler if provided\r\n    if (this.props.onError) {\r\n      this.props.onError(error, errorInfo);\r\n    }\r\n\r\n    // Log to external service in production\r\n    if (env.PROD) {\r\n      // You can integrate with services like Sentry, LogRocket, etc.\r\n      console.error('Production error:', { error, errorInfo });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // Custom fallback UI\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      // Default error UI\r\n      return (\r\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\r\n          <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-6 text-center\">\r\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n              <svg className=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n              Something went wrong\r\n            </h2>\r\n            <p className=\"text-gray-600 mb-4\">\r\n              We&apos;re sorry, but something unexpected happened. Please try refreshing the page.\r\n            </p>\r\n            <button\r\n              onClick={() => { window.location.reload(); }}\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Refresh Page\r\n            </button>\r\n            {env.DEV && this.state.error && (\r\n              <details className=\"mt-4 text-left\">\r\n                <summary className=\"cursor-pointer text-sm text-gray-500 hover:text-gray-700\">\r\n                  Error Details (Development)\r\n                </summary>\r\n                <pre className=\"mt-2 text-xs text-red-600 bg-red-50 p-2 rounded overflow-auto\">\r\n                  {this.state.error.toString()}\r\n                </pre>\r\n              </details>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  fallback: PropTypes.node,\r\n  onError: PropTypes.func,\r\n};\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const [email, setEmail] = useState('admin@thatsmartsite.com');\r\n  const [password, setPassword] = useState('');\r\n  const { login, loading, error } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const success = await login({ email, password });\r\n    \r\n    if (success) {\r\n      // Add a small delay to ensure state is updated\r\n      setTimeout(() => {\r\n        navigate('/admin-dashboard');\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n      <div className=\"max-w-md w-full bg-gray-800 rounded-lg shadow-lg p-8\">\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-white mb-2\">Admin Login</h1>\r\n          <p className=\"text-gray-400\">Sign in to access the admin dashboard</p>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"admin@thatsmartsite.com\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"Enter your password\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {loading ? 'Signing In...' : 'Sign In'}\r\n          </button>\r\n        </form>\r\n        \r\n        <div className=\"mt-6 text-center\">\r\n          <p className=\"text-gray-400 text-sm\">\r\n            Don't have an account?{' '}\r\n            <Link to=\"/tenant-onboarding\" className=\"text-blue-400 hover:text-blue-300\">\r\n              Apply for tenant access\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nimport { env } from '@/shared/env';\r\nimport { useAuth } from '@/shared/hooks/useAuth';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  requiredRole?: 'admin' | 'tenant' | 'user' | ('admin' | 'tenant' | 'user')[];\r\n  fallbackPath?: string;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \r\n  children, \r\n  requiredRole = 'user',\r\n  fallbackPath = '/login'\r\n}) => {\r\n  const { user, loading, isAuthenticated, isAdmin } = useAuth();\r\n  \r\n  // Allow admin access in development mode only (commented out for testing)\r\n  // if (env.DEV) {\r\n  //   // Allow tenant access\r\n  //   if (Array.isArray(requiredRole) && requiredRole.includes('tenant')) {\r\n  //     return <>{children}</>;\r\n  //   }\r\n  //   if (requiredRole === 'tenant') {\r\n  //     return <>{children}</>;\r\n  //   }\r\n  //   // Allow admin access\r\n  //   if (Array.isArray(requiredRole) && requiredRole.includes('admin')) {\r\n  //     return <>{children}</>;\r\n  //   }\r\n  //   if (requiredRole === 'admin') {\r\n  //     return <>{children}</>;\r\n  //   }\r\n  // }\r\n  \r\n  // Show loading while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"text-white text-2xl mb-4\">Loading...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Check if user is authenticated\r\n  if (!isAuthenticated) {\r\n    return <Navigate to={fallbackPath} replace />;\r\n  }\r\n  \r\n  // Check if user has required role\r\n  if (Array.isArray(requiredRole)) {\r\n    if (requiredRole.includes('admin') && !isAdmin) {\r\n      return <Navigate to={fallbackPath} replace />;\r\n    }\r\n    if (requiredRole.includes('tenant') && isAdmin) {\r\n      return <Navigate to={fallbackPath} replace />;\r\n    }\r\n  } else {\r\n    if (requiredRole === 'admin' && !isAdmin) {\r\n      return <Navigate to={fallbackPath} replace />;\r\n    }\r\n    \r\n    if (requiredRole === 'tenant' && isAdmin) {\r\n      return <Navigate to={fallbackPath} replace />;\r\n    }\r\n  }\r\n  \r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","/**\r\n * Zod validation schemas for location data\r\n * Ensures data integrity and provides clear error messages\r\n */\r\n\r\nimport { z } from 'zod';\r\n\r\n// Image schema with performance optimization fields\r\nconst ImageSchema = z.object({\r\n  url: z.string().min(1, 'Image URL is required'),\r\n  alt: z.string().min(1, 'Image alt text is required'),\r\n  caption: z.string().optional(),\r\n  role: z.enum(['hero', 'gallery', 'process', 'result', 'auto', 'marine', 'rv'], {\r\n    errorMap: () => ({ message: 'Image role must be one of: hero, gallery, process, result, auto, marine, rv' })\r\n  }),\r\n  width: z.number().positive('Image width must be positive').optional(),\r\n  height: z.number().positive('Image height must be positive').optional(),\r\n  priority: z.boolean().optional(),\r\n  sources: z.array(z.object({\r\n    srcset: z.string(),\r\n    type: z.string()\r\n  })).optional()\r\n});\r\n\r\n// Header schema for business information\r\nconst HeaderSchema = z.object({\r\n  businessName: z.string().min(1, 'Business name is required').optional(),\r\n  phoneDisplay: z.string().min(1, 'Phone display format is required').optional(),\r\n  phoneE164: z.string().regex(/^\\+[1-9]\\d{1,14}$/, 'Phone must be in E.164 format (e.g., +1234567890)').optional(),\r\n  cityStateLabel: z.string().min(1, 'City state label is required').optional()\r\n});\r\n\r\n// SEO schema\r\nconst SEOSchema = z.object({\r\n  title: z.string().min(1, 'SEO title is required'),\r\n  description: z.string().min(1, 'SEO description is required'),\r\n  keywords: z.array(z.string()).optional(),\r\n  canonicalPath: z.string().regex(/^\\/.*\\/?$/, 'Canonical path must start with /').optional(),\r\n  ogImage: z.string().optional(),\r\n  twitterImage: z.string().optional(),\r\n  robots: z.enum(['index,follow', 'noindex,nofollow']).optional()\r\n});\r\n\r\n// Hero schema\r\nconst HeroSchema = z.object({\r\n  h1: z.string().min(1, 'Hero H1 is required'),\r\n  sub: z.string().optional()\r\n});\r\n\r\n// Operations schema\r\nconst OpsSchema = z.object({\r\n  acceptsSameDay: z.boolean().optional(),\r\n  leadTimeDays: z.number().int().min(0, 'Lead time days must be non-negative').max(30, 'Lead time days must be reasonable').optional(),\r\n  serviceRadiusMiles: z.number().positive('Service radius must be positive').max(100, 'Service radius must be reasonable').optional()\r\n});\r\n\r\n// Service area schema\r\nconst ServiceAreaSchema = z.object({\r\n  postalCodes: z.array(z.string().regex(/^\\d{5}(-\\d{4})?$/, 'Postal codes must be valid ZIP format')).min(1, 'At least one postal code is required')\r\n});\r\n\r\n// FAQ schema\r\nconst FAQSchema = z.object({\r\n  id: z.string().optional(),\r\n  q: z.string().min(1, 'FAQ question is required'),\r\n  a: z.string().min(1, 'FAQ answer is required')\r\n});\r\n\r\n// Reviews section schema\r\nconst ReviewsSectionSchema = z.object({\r\n  heading: z.string().min(1, 'Reviews heading is required').optional(),\r\n  intro: z.string().min(1, 'Reviews intro is required').optional(),\r\n  feedKey: z.string().optional()\r\n});\r\n\r\n// Schema.org schema (minimal validation since most fields are auto-generated)\r\nconst SchemaOrgSchema = z.object({\r\n  // Manual fields only\r\n  aggregateRating: z.object({\r\n    '@type': z.string().optional(),\r\n    ratingValue: z.string().optional(),\r\n    reviewCount: z.string().optional(),\r\n    bestRating: z.string().optional(),\r\n    worstRating: z.string().optional()\r\n  }).optional(),\r\n  review: z.array(z.object({\r\n    '@type': z.string().optional(),\r\n    author: z.object({\r\n      '@type': z.string().optional(),\r\n      name: z.string().optional()\r\n    }).optional(),\r\n    reviewRating: z.object({\r\n      '@type': z.string().optional(),\r\n      ratingValue: z.string().optional(),\r\n      bestRating: z.string().optional(),\r\n      worstRating: z.string().optional()\r\n    }).optional(),\r\n    reviewBody: z.string().optional()\r\n  })).optional(),\r\n  openingHours: z.union([z.string(), z.array(z.string())]).optional(),\r\n  // Allow additional schema properties\r\n  // eslint-disable-next-line @typescript-eslint/no-deprecated -- passthrough is correct for this zod version\r\n}).passthrough();\r\n\r\n// Main LocationPage schema\r\nexport const LocationPageSchema = z.object({\r\n  // Core identification\r\n  slug: z.string().min(1, 'Slug is required').regex(/^[a-z0-9-]+$/, 'Slug must contain only lowercase letters, numbers, and hyphens'),\r\n  city: z.string().min(1, 'City is required'),\r\n  stateCode: z.string().length(2, 'State code must be 2 characters').regex(/^[A-Z]{2}$/, 'State code must be uppercase'),\r\n  state: z.string().min(1, 'State name is required'),\r\n  postalCode: z.string().regex(/^\\d{5}(-\\d{4})?$/, 'Postal code must be valid ZIP format'),\r\n  latitude: z.number().min(-90).max(90, 'Latitude must be between -90 and 90'),\r\n  longitude: z.number().min(-180).max(180, 'Longitude must be between -180 and 180'),\r\n  openingHours: z.union([z.string(), z.array(z.string())]).optional(),\r\n  urlPath: z.string().regex(/^\\/.*\\/$/, 'URL path must start and end with /'),\r\n  \r\n  // Affiliate/employee references\r\n  affiliateRef: z.string().optional(),\r\n  employee: z.string().optional(),\r\n  \r\n  // Header information\r\n  header: HeaderSchema.optional(),\r\n  \r\n  // SEO\r\n  seo: SEOSchema,\r\n  \r\n  // Hero\r\n  hero: HeroSchema,\r\n  \r\n  // Content\r\n  faqIntro: z.string().optional(),\r\n  neighborhoods: z.array(z.string()).optional(),\r\n  landmarks: z.array(z.string()).optional(),\r\n  localConditions: z.array(z.string()).optional(),\r\n  \r\n  // Pricing\r\n  pricingModifierPct: z.number().min(-0.5, 'Pricing modifier cannot be less than -50%').max(1.0, 'Pricing modifier cannot be more than +100%').optional(),\r\n  \r\n  // Images\r\n  images: z.array(ImageSchema).optional(),\r\n  \r\n  // FAQs\r\n  faqs: z.array(FAQSchema).optional(),\r\n  \r\n  // Reviews\r\n  reviewsSection: ReviewsSectionSchema.optional(),\r\n  \r\n  // Operations\r\n  ops: OpsSchema.optional(),\r\n  \r\n  // Service area\r\n  serviceArea: ServiceAreaSchema.optional(),\r\n  \r\n  // Schema.org\r\n  schemaOrg: SchemaOrgSchema.optional()\r\n});\r\n\r\n// Main site configuration schema\r\nexport const MainSiteConfigSchema = z.object({\r\n  brand: z.string().min(1, 'Brand name is required'),\r\n  slug: z.string().min(1, 'Slug is required'),\r\n  urlPath: z.string().regex(/^\\/.*\\/?$/, 'URL path must start with /'),\r\n  \r\n  logo: z.object({\r\n    url: z.string().min(1, 'Logo URL is required'),\r\n    alt: z.string().min(1, 'Logo alt text is required'),\r\n    darkUrl: z.string().optional(),\r\n    lightUrl: z.string().optional()\r\n  }),\r\n  \r\n  seo: SEOSchema,\r\n  \r\n  hero: HeroSchema.extend({\r\n    images: z.array(ImageSchema).optional(),\r\n    ctas: z.array(z.object({\r\n      label: z.string(),\r\n      href: z.string()\r\n    })).optional()\r\n  }),\r\n  \r\n  servicesGrid: z.array(z.object({\r\n    slug: z.string(),\r\n    title: z.string(),\r\n    image: z.string(),\r\n    alt: z.string(),\r\n    href: z.string(),\r\n    width: z.number().positive().optional(),\r\n    height: z.number().positive().optional(),\r\n    priority: z.boolean().optional()\r\n  })).optional(),\r\n  \r\n  reviews: z.object({\r\n    title: z.string(),\r\n    subtitle: z.string(),\r\n    ratingValue: z.string(),\r\n    reviewCount: z.number(),\r\n    source: z.string()\r\n  }).optional(),\r\n  \r\n  faq: z.object({\r\n    title: z.string(),\r\n    subtitle: z.string()\r\n  }).optional(),\r\n  \r\n  contact: z.object({\r\n    email: z.email('Valid email is required'),\r\n    phone: z.string().min(1, 'Phone is required')\r\n  }).optional(),\r\n  \r\n  socials: z.object({\r\n    facebook: z.url().optional(),\r\n    instagram: z.url().optional(),\r\n    tiktok: z.url().optional(),\r\n    youtube: z.url().optional(),\r\n    googleBusiness: z.url().optional()\r\n  }).optional(),\r\n  \r\n  jsonLd: z.object({\r\n    organization: z.record(z.any()).optional(),\r\n    website: z.record(z.any()).optional()\r\n  }).optional()\r\n});\r\n\r\n// Validation helper functions\r\nexport function validateLocationData(data: unknown) {\r\n  try {\r\n    return {\r\n      success: true,\r\n      data: LocationPageSchema.parse(data),\r\n      errors: null\r\n    };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        errors: error.issues.map((issue) => ({\r\n          path: issue.path.join('.'),\r\n          message: issue.message,\r\n          code: issue.code\r\n        }))\r\n      };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function validateMainSiteConfig(data: unknown) {\r\n  try {\r\n    return {\r\n      success: true,\r\n      data: MainSiteConfigSchema.parse(data),\r\n      errors: null\r\n    };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        errors: error.issues.map((issue) => ({\r\n          path: issue.path.join('.'),\r\n          message: issue.message,\r\n          code: issue.code\r\n        }))\r\n      };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Type exports for use in other files\r\nexport type LocationPageData = z.infer<typeof LocationPageSchema>;\r\nexport type MainSiteConfigData = z.infer<typeof MainSiteConfigSchema>;\r\nexport type ValidationResult<T> = {\r\n  success: boolean;\r\n  data: T | null;\r\n  errors: Array<{\r\n    path: string;\r\n    message: string;\r\n    code: string;\r\n  }> | null;\r\n};\r\n","// Website content API calls\r\n\r\nexport interface FAQItem {\r\n  question: string;\r\n  answer: string;\r\n  category: string;\r\n}\r\n\r\nexport interface WebsiteContentData {\r\n  hero_title?: string;\r\n  hero_subtitle?: string;\r\n  reviews_title?: string;\r\n  reviews_subtitle?: string;\r\n  reviews_avg_rating?: number;\r\n  reviews_total_count?: number;\r\n  faq_title?: string;\r\n  faq_subtitle?: string;\r\n  faq_items?: FAQItem[];\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface WebsiteContentResponse {\r\n  success: boolean;\r\n  content?: WebsiteContentData;\r\n  message?: string;\r\n}\r\n\r\nexport const websiteContentApi = {\r\n  // Get website content for a specific tenant\r\n  getWebsiteContent: async (tenantSlug: string): Promise<WebsiteContentData> => {\r\n    const response = await fetch(`/api/website-content/${tenantSlug}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch website content: ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json() as WebsiteContentResponse;\r\n    \r\n    if (!data.success || !data.content) {\r\n      throw new Error(data.message || 'Failed to fetch website content');\r\n    }\r\n\r\n    return data.content;\r\n  },\r\n\r\n  // Get website content for the main site (no tenant slug)\r\n  getMainSiteContent: async (): Promise<WebsiteContentData> => {\r\n    const response = await fetch('/api/website-content/main', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch main site content: ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json() as WebsiteContentResponse;\r\n    \r\n    if (!data.success || !data.content) {\r\n      throw new Error(data.message || 'Failed to fetch main site content');\r\n    }\r\n\r\n    return data.content;\r\n  }\r\n};\r\n","// Website Content Context\r\n// Loads website content from database once on page load\r\n\r\nimport React, { createContext, ReactNode, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { websiteContentApi, WebsiteContentData } from '../api/websiteContent.api';\r\n\r\ninterface WebsiteContentContextType {\r\n  content: WebsiteContentData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  refetch: () => void;\r\n}\r\n\r\nconst WebsiteContentContext = createContext<WebsiteContentContextType | null>(null);\r\n\r\ninterface WebsiteContentProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const WebsiteContentProvider: React.FC<WebsiteContentProviderProps> = ({ children }) => {\r\n  // Get tenant slug from URL params (same logic as DataProvider)\r\n  const params = useParams();\r\n  const slug = params.businessSlug || params.tenantSlug || params.slug;\r\n\r\n  // Skip fetching for non-tenant routes (admin, onboarding, login, etc.)\r\n  const currentPath = window.location.pathname;\r\n  const isNonTenantRoute = \r\n    currentPath.startsWith('/admin-dashboard') ||\r\n    currentPath.startsWith('/tenant-dashboard') ||\r\n    currentPath.startsWith('/tenant-onboarding') ||\r\n    currentPath.startsWith('/login') ||\r\n    currentPath.startsWith('/booking') ||\r\n    currentPath.startsWith('/preview-generator') ||\r\n    currentPath.startsWith('/preview');\r\n\r\n  const {\r\n    data: content,\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n  } = useQuery({\r\n    queryKey: ['shared','websiteContent', slug],\r\n    queryFn: async () => {\r\n      // Only fetch if we have a valid slug\r\n      if (!slug) {\r\n        return null;\r\n      }\r\n      const result = await websiteContentApi.getWebsiteContent(slug);\r\n      return result;\r\n    },\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    cacheTime: 10 * 60 * 1000, // 10 minutes\r\n    retry: 2,\r\n    enabled: !!slug && !isNonTenantRoute,\r\n  });\r\n\r\n  const contextValue: WebsiteContentContextType = {\r\n    content: content || null,\r\n    isLoading,\r\n    error: error?.message ?? null,\r\n    refetch: () => { void refetch(); },\r\n  };\r\n\r\n  return (\r\n    <WebsiteContentContext.Provider value={contextValue}>\r\n      {children}\r\n    </WebsiteContentContext.Provider>\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line react-refresh/only-export-components -- Standard context pattern: hook and provider together\r\nexport const useWebsiteContent = (): WebsiteContentContextType => {\r\n  const context = useContext(WebsiteContentContext);\r\n  if (!context) {\r\n    throw new Error('useWebsiteContent must be used within a WebsiteContentProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { useWebsiteContent } from '@/shared/contexts/WebsiteContentContext';\r\nimport { useIndustrySiteData } from '@/shared/hooks/useIndustrySiteData';\r\n\r\ninterface UseReviewsContentReturn {\r\n  title: string;\r\n  subtitle: string;\r\n}\r\n\r\ninterface UseReviewsContentProps {\r\n  locationData?: unknown;\r\n  customHeading?: string;\r\n  customIntro?: string;\r\n}\r\n\r\nexport const useReviewsContent = (props?: UseReviewsContentProps): UseReviewsContentReturn => {\r\n  // Get industry-specific site data\r\n  const { siteData } = useIndustrySiteData();\r\n  \r\n  // Always call hooks unconditionally\r\n  const { content: websiteContent } = useWebsiteContent();\r\n  \r\n  // Use passed locationData as fallback (reserved for future use)\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- Reserved for future location-specific data\r\n  const _locationData = props?.locationData;\r\n  \r\n  // All sites are now tenant-based, so use database content or industry-specific site data\r\n  // Priority: Custom props > Database content > Industry-specific site data > Fallback\r\n  const title = props?.customHeading\r\n    || websiteContent?.reviews_title\r\n    || (siteData?.reviews?.title ?? 'Customer Reviews');\r\n    \r\n  const subtitle = props?.customIntro\r\n    || websiteContent?.reviews_subtitle\r\n    || (siteData?.reviews?.subtitle ?? 'What our customers say');\r\n\r\n  return {\r\n    title,\r\n    subtitle\r\n  };\r\n};\r\n\r\n","import { useWebsiteContent } from '@/shared/contexts/WebsiteContentContext';\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\n\r\ninterface UseReviewsRatingReturn {\r\n  averageRating: number;\r\n  totalReviews: number;\r\n  googleBusinessUrl: string;\r\n}\r\n\r\nexport const useReviewsRating = (): UseReviewsRatingReturn => {\r\n  // Always call hooks unconditionally (hooks rules)\r\n  const data = useDataOptional();\r\n  const { content: websiteContent } = useWebsiteContent();\r\n  \r\n  const isPreview = data?.isPreview || false;\r\n  \r\n  // In preview mode, return impressive stats\r\n  if (isPreview) {\r\n    return {\r\n      averageRating: 4.9,\r\n      totalReviews: 863,\r\n      googleBusinessUrl: '#', // Dead link in preview\r\n    };\r\n  }\r\n  \r\n  // Pull reviews data from database, with sensible defaults\r\n  const averageRating = websiteContent?.reviews_avg_rating ?? 4.9;\r\n  const totalReviews = websiteContent?.reviews_total_count ?? 112;\r\n  \r\n  // Get Google Business URL from tenant's social media data (from DataContext)\r\n  // Fall back to legacy site.json if available, then to a default placeholder\r\n  const googleBusinessUrl = \r\n    data?.socialMedia.googleBusiness\r\n    ?? data?.siteConfig?.socials?.googleBusiness\r\n    ?? '#';\r\n\r\n  return {\r\n    averageRating,\r\n    totalReviews,\r\n    googleBusinessUrl\r\n  };\r\n};\r\n\r\n","import { useEffect,useState } from 'react';\r\n\r\nimport { useImageRotation } from '@/shared/hooks';\r\n\r\nimport type { Review } from '../types';\r\n\r\n// Fisher-Yates shuffle algorithm\r\nfunction shuffleArray<T>(array: T[]): T[] {\r\n  const shuffled = [...array];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = shuffled[i];\r\n    if (temp !== undefined && shuffled[j] !== undefined) {\r\n      shuffled[i] = shuffled[j];\r\n      shuffled[j] = temp;\r\n    }\r\n  }\r\n  return shuffled;\r\n}\r\n\r\nexport function useRotatingReviews(reviews: Review[]) {\r\n  const [reviewImages, setReviewImages] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Load gallery images for background rotation (no avatar images)\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    void (async (): Promise<void> => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        let images: string[] = [];\r\n\r\n        // Load gallery images for background rotation (no avatar images)\r\n        try {\r\n          const res = await fetch('/mobile-detailing/data/gallery.json');\r\n          if (!res.ok) throw new Error(`Failed to fetch gallery data: ${res.status}`);\r\n          const galleryData: unknown = await res.json();\r\n          const galleryImages = Array.isArray(galleryData) \r\n            ? galleryData.map((img: unknown) => {\r\n                if (typeof img === 'object' && img !== null && 'src' in img) {\r\n                  return (img as { src: unknown }).src;\r\n                }\r\n                return null;\r\n              }).filter((src): src is string => typeof src === 'string')\r\n            : [];\r\n          \r\n          // Use only gallery images for background rotation\r\n          images = shuffleArray(galleryImages);\r\n          \r\n          // If we still don't have enough images, add some defaults\r\n          if (images.length < 3) {\r\n            const defaultImages = [\r\n              '/mobile-detailing/images/gallery/dodge-viper-gts-grigio-telesto-studio.png',\r\n              '/mobile-detailing/images/gallery/bmw-m4-competition-grigio-telesto-studio.png'\r\n            ];\r\n            images = shuffleArray([...images, ...defaultImages]);\r\n          }\r\n        } catch (galleryError: unknown) {\r\n          // Fallback to default images only\r\n          console.warn('Failed to load gallery images:', galleryError);\r\n          images = ['/mobile-detailing/images/gallery/dodge-viper-gts-grigio-telesto-studio.png'];\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- Prevents state updates after component unmount\r\n        if (!cancelled) {\r\n          setReviewImages(images);\r\n          setLoading(false);\r\n          setError(null);\r\n        }\r\n      } catch (err: unknown) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- Prevents state updates after component unmount\r\n        if (!cancelled) {\r\n          setLoading(false);\r\n          setError(err instanceof Error ? err.message : 'Failed to load review images');\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, [reviews]);\r\n\r\n  // Use the image rotation utility\r\n  const rotation = useImageRotation({\r\n    images: reviewImages,\r\n    autoRotate: true,\r\n    interval: 8000, // Match FAQ interval\r\n    fadeDuration: 2000, // 2 seconds fade duration\r\n    preloadNext: true,\r\n    pauseOnHover: false // Background doesn't need hover pause\r\n  });\r\n\r\n  const { currentIndex, hasMultipleImages } = rotation;\r\n  \r\n  return {\r\n    images: reviewImages,\r\n    currentIndex,\r\n    loading,\r\n    error,\r\n    hasMultipleImages,\r\n    ...rotation\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Star, Users } from 'lucide-react';\r\n\r\nimport { useReviewsRating } from '@/features/reviews/hooks';\r\nimport { useReviewsAvailability } from '@/shared/hooks';\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\nimport type { ReviewsSummaryProps } from '@/shared/types/reviews';\r\n\r\nconst ReviewsSummary: React.FC<ReviewsSummaryProps> = ({ \r\n  averageRating: propAverageRating, \r\n  totalReviews: propTotalReviews,\r\n  googleBusinessUrl: propGoogleBusinessUrl,\r\n  className = '',\r\n  variant = 'default'\r\n}) => {\r\n  // Check if in preview mode\r\n  const data = useDataOptional();\r\n  const isPreview = data?.isPreview || false;\r\n  \r\n  // Check if reviews are available (unless in preview mode)\r\n  const hasReviews = useReviewsAvailability();\r\n  \r\n  // Get data from database (with fallbacks to site.json)\r\n  const dbData = useReviewsRating();\r\n  \r\n  // Use props if provided, otherwise use database/site data\r\n  // Ensure averageRating is a number (convert if string)\r\n  const averageRating = typeof propAverageRating === 'number' \r\n    ? propAverageRating \r\n    : (typeof dbData.averageRating === 'number' \r\n      ? dbData.averageRating \r\n      : parseFloat(String(dbData.averageRating)) || 4.9);\r\n      \r\n  // Ensure totalReviews is a number (convert if string)\r\n  const totalReviews = typeof propTotalReviews === 'number'\r\n    ? propTotalReviews\r\n    : (typeof dbData.totalReviews === 'number'\r\n      ? dbData.totalReviews\r\n      : parseInt(String(dbData.totalReviews), 10) || 112);\r\n      \r\n  const googleBusinessUrl = propGoogleBusinessUrl ?? dbData.googleBusinessUrl;\r\n  const isCompact = variant === 'compact';\r\n  \r\n  // Don't render if there are no reviews (unless in preview mode)\r\n  if (!isPreview && !hasReviews) {\r\n    return null;\r\n  }\r\n  \r\n  const containerClasses = isCompact \r\n    ? 'flex items-center justify-center gap-4'\r\n    : 'flex items-center justify-center gap-8';\r\n    \r\n  const textSize = isCompact ? 'text-lg' : 'text-2xl';\r\n  const iconSize = isCompact ? 'w-4 h-4' : 'w-6 h-6';\r\n  const usersIconSize = isCompact ? 'w-4 h-4' : 'w-5 h-5';\r\n  const dividerHeight = isCompact ? 'h-6' : 'h-8';\r\n\r\n  return (\r\n    <div className={`${containerClasses} ${className}`}>\r\n      {/* Rating Section - Clickable (or span in preview mode) */}\r\n      {isPreview ? (\r\n        <span className=\"flex items-center gap-2 cursor-pointer\">\r\n          <Star className={`${iconSize} text-orange-400 fill-current`} />\r\n          <span className={`${textSize} font-bold text-white`}>\r\n            {averageRating.toFixed(1)}\r\n          </span>\r\n          <span className=\"text-gray-300\">average</span>\r\n        </span>\r\n      ) : (\r\n        <a \r\n          href={googleBusinessUrl}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"flex items-center gap-2 hover:opacity-80 transition-opacity duration-200 cursor-pointer\"\r\n        >\r\n          <Star className={`${iconSize} text-orange-400 fill-current`} />\r\n          <span className={`${textSize} font-bold text-white`}>\r\n            {averageRating.toFixed(1)}\r\n          </span>\r\n          <span className=\"text-gray-300\">average</span>\r\n        </a>\r\n      )}\r\n      \r\n      {/* Vertical Divider */}\r\n      <div className={`w-px ${dividerHeight} bg-stone-600`}></div>\r\n      \r\n      {/* Reviews Count Section - Clickable (or span in preview mode) */}\r\n      {isPreview ? (\r\n        <span className=\"flex items-center gap-2 cursor-pointer\">\r\n          <Users className={`${usersIconSize} text-orange-400`} />\r\n          <span className={`${textSize} font-bold text-white`}>\r\n            {totalReviews.toLocaleString()}\r\n          </span>\r\n          <span className=\"text-gray-300\">reviews</span>\r\n        </span>\r\n      ) : (\r\n        <a \r\n          href={googleBusinessUrl}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"flex items-center gap-2 hover:opacity-80 transition-opacity duration-200 cursor-pointer\"\r\n        >\r\n          <Users className={`${usersIconSize} text-orange-400`} />\r\n          <span className={`${textSize} font-bold text-white`}>\r\n            {totalReviews.toLocaleString()}\r\n          </span>\r\n          <span className=\"text-gray-300\">reviews</span>\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsSummary;\r\n","/**\r\n * Safe Error Handling Utilities\r\n * \r\n * TypeScript-safe error message extraction from unknown errors.\r\n */\r\n\r\n/**\r\n * Safely extract an error message from an unknown error\r\n * @param error - Unknown error from catch block\r\n * @returns Safe error message string\r\n */\r\nexport function safeErrorMessage(error: unknown): string {\r\n  if (typeof error === 'string') {\r\n    return error;\r\n  }\r\n  \r\n  if (error instanceof Error) {\r\n    return error.message;\r\n  }\r\n  \r\n  if (typeof error === 'object' && error !== null) {\r\n    // Check for message property\r\n    const errorObj = error as { message?: unknown };\r\n    if (typeof errorObj.message === 'string') {\r\n      return errorObj.message;\r\n    }\r\n  }\r\n  \r\n  return 'An unexpected error occurred';\r\n}\r\n\r\n/**\r\n * Safely extract the first validation error from a Zod-like error object\r\n * @param error - Validation error object\r\n * @returns First error message or default\r\n */\r\nexport function safeValidationMessage(error: unknown): string {\r\n  if (typeof error === 'object' && error !== null) {\r\n    const errorObj = error as { errors?: unknown[] };\r\n    if (Array.isArray(errorObj.errors) && errorObj.errors.length > 0) {\r\n      const firstError = errorObj.errors[0];\r\n      if (typeof firstError === 'object' && firstError !== null) {\r\n        const err = firstError as { message?: unknown };\r\n        if (typeof err.message === 'string') {\r\n          return err.message;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return safeErrorMessage(error);\r\n}\r\n\r\n","/**\r\n * Preview Types\r\n * \r\n * Type definitions and Zod schemas for preview functionality.\r\n */\r\n\r\nimport { z } from 'zod';\r\n\r\n// Zod schema for preview payload validation\r\nexport const PreviewPayloadSchema = z.object({\r\n  businessName: z\r\n    .string()\r\n    .min(2, 'Business name must be at least 2 characters')\r\n    .max(100, 'Business name must be less than 100 characters'),\r\n  phone: z\r\n    .string()\r\n    .min(7, 'Phone number must be at least 7 characters')\r\n    .max(20, 'Phone number must be less than 20 characters'),\r\n  city: z\r\n    .string()\r\n    .min(2, 'City must be at least 2 characters')\r\n    .max(50, 'City must be less than 50 characters'),\r\n  state: z\r\n    .string()\r\n    .length(2, 'State must be 2 characters (e.g., AZ, CA)')\r\n    .regex(/^[A-Z]{2}$/, 'State must be uppercase letters'),\r\n  industry: z.enum(['mobile-detailing', 'maid-service', 'lawncare', 'pet-grooming'], {\r\n    errorMap: () => ({ message: 'Invalid industry type' }),\r\n  }),\r\n});\r\n\r\n// TypeScript type derived from schema\r\nexport type PreviewPayload = z.infer<typeof PreviewPayloadSchema>;\r\n\r\n// API response types\r\nexport interface CreatePreviewResponse {\r\n  success: boolean;\r\n  url: string;\r\n  token: string;\r\n  expiresIn: string;\r\n}\r\n\r\nexport interface VerifyPreviewResponse {\r\n  success: boolean;\r\n  payload: PreviewPayload;\r\n}\r\n\r\nexport interface PreviewErrorResponse {\r\n  error: string;\r\n  message: string;\r\n  details?: Array<{\r\n    field: string;\r\n    message: string;\r\n  }>;\r\n}\r\n\r\n","/**\r\n * Preview API Client\r\n * \r\n * HTTP calls for preview token generation and verification.\r\n * No UI imports, no DOM usage - pure API layer.\r\n */\r\n\r\nimport { config } from '@/shared/env';\r\nimport { safeValidationMessage } from '@/shared/utils/errorHandling';\r\n\r\nimport type {\r\n  CreatePreviewResponse,\r\n  PreviewErrorResponse,\r\n  PreviewPayload,\r\n  VerifyPreviewResponse,\r\n} from '../types/preview.types';\r\nimport { PreviewPayloadSchema } from '../types/preview.types';\r\n\r\n/**\r\n * Create a preview token\r\n * @param payload - Business information for preview\r\n * @returns Promise with preview URL and token\r\n */\r\nexport async function createPreview(\r\n  payload: PreviewPayload\r\n): Promise<CreatePreviewResponse> {\r\n  // Validate payload before sending\r\n  const validation = PreviewPayloadSchema.safeParse(payload);\r\n  if (!validation.success) {\r\n    throw new Error(safeValidationMessage(validation.error));\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${config.apiUrl || ''}/api/previews`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(validation.data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json() as PreviewErrorResponse;\r\n      const errorMsg = error.message || 'Failed to create preview';\r\n      throw new Error(errorMsg);\r\n    }\r\n\r\n    const result = await response.json() as CreatePreviewResponse;\r\n    return result;\r\n  } catch (error) {\r\n    // Provide more helpful error messages for mobile devices\r\n    if (error instanceof TypeError && error.message.includes('fetch')) {\r\n      throw new Error('Unable to connect to server. Please check your network connection and ensure you can reach the backend server.');\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Verify a preview token\r\n * @param token - JWT token to verify\r\n * @returns Promise with decoded payload\r\n */\r\nexport async function verifyPreview(token: string): Promise<PreviewPayload> {\r\n  try {\r\n    const response = await fetch(\r\n      `${config.apiUrl || ''}/api/preview/verify?t=${encodeURIComponent(token)}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json() as PreviewErrorResponse;\r\n      const errorMsg = error.message || 'Failed to verify preview';\r\n      throw new Error(errorMsg);\r\n    }\r\n\r\n    const data = await response.json() as VerifyPreviewResponse;\r\n    \r\n    // Validate the payload from the backend\r\n    const validation = PreviewPayloadSchema.safeParse(data.payload);\r\n    if (!validation.success) {\r\n      throw new Error('Invalid payload received from server');\r\n    }\r\n\r\n    return validation.data;\r\n  } catch (error) {\r\n    // Provide more helpful error messages for mobile devices\r\n    if (error instanceof TypeError && error.message.includes('fetch')) {\r\n      throw new Error('Unable to connect to server. Please check your network connection and ensure you can reach the backend server.');\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n","/**\r\n * Preview CTA Button\r\n * \r\n * Fixed position \"Get This Site\" button for preview mode.\r\n * Can be positioned in top-left or top-right.\r\n */\r\n\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Sparkles } from 'lucide-react';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport { useSectionStore } from '@/shared/state/sectionStore';\r\n\r\ninterface PreviewCTAButtonProps {\r\n  position?: 'left' | 'right';\r\n}\r\n\r\nexport const PreviewCTAButton: React.FC<PreviewCTAButtonProps> = ({ position = 'left' }) => {\r\n  const navigate = useNavigate();\r\n  const data = useData();\r\n  const currentSection = useSectionStore((s) => s.current);\r\n\r\n  const handleGetThisSite = () => {\r\n    // Pass preview data to onboarding form\r\n    void navigate('/tenant-onboarding', {\r\n      state: {\r\n        fromPreview: true,\r\n        businessName: data.businessName,\r\n        phone: data.phone,\r\n        city: data.serviceAreas[0]?.city || '',\r\n        state: data.serviceAreas[0]?.state || '',\r\n        industry: data.industry,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Only show button in specific sections: hero (top), gallery, and footer\r\n  const shouldShowButton = currentSection === 'top' || \r\n                          currentSection === 'gallery' || \r\n                          currentSection === 'gallery-desktop' || \r\n                          currentSection === 'footer';\r\n\r\n  // Debug logging removed for production\r\n\r\n  // Don't render if not in an allowed section\r\n  if (!shouldShowButton) {\r\n    return null;\r\n  }\r\n\r\n  // Hide right button on mobile (show only on desktop)\r\n  if (position === 'right') {\r\n    return (\r\n      <div className=\"hidden md:block fixed top-4 right-4 z-[10000]\" style={{ pointerEvents: 'auto' }}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleGetThisSite}\r\n          className=\"flex items-center space-x-2 px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white font-semibold rounded-md transition-colors shadow-lg\"\r\n        >\r\n          <Sparkles className=\"h-4 w-4\" />\r\n          <span>Get This Site</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Left button: positioned below header on mobile, top-left on desktop\r\n  return (\r\n    <div className=\"fixed left-4 z-[10000] top-[88px] md:top-4\" style={{ pointerEvents: 'auto' }}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={handleGetThisSite}\r\n        className=\"flex items-center space-x-2 px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white font-semibold rounded-md transition-colors shadow-lg\"\r\n      >\r\n        <Sparkles className=\"h-4 w-4\" />\r\n        <span>Get This Site</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n","/**\r\n * Industry Template Registry\r\n * \r\n * Maps industry types to their template data.\r\n * Updated to use new modular file structure (assets.json, content-defaults.json, seo-defaults.json)\r\n */\r\n\r\n// Industry types enum\r\nexport const INDUSTRIES = [\r\n  'mobile-detailing',\r\n  'maid-service',\r\n  'lawncare',\r\n  'pet-grooming',\r\n] as const;\r\n\r\nexport type Industry = (typeof INDUSTRIES)[number];\r\n\r\n// Base industry template structure\r\nexport interface IndustryTemplate {\r\n  tenant: {\r\n    brand: string | null;\r\n    businessName: string | null;\r\n    customBranding: boolean;\r\n  };\r\n  slug: string;\r\n  urlPath: string;\r\n  logo: {\r\n    url: string;\r\n    alt: string;\r\n    darkUrl?: string;\r\n    lightUrl?: string;\r\n  };\r\n  seo: {\r\n    Title: string;\r\n    subTitle: string;\r\n    canonicalPath: string;\r\n    OgImage?: string;\r\n    TwitterImage?: string;\r\n    robots?: string;\r\n  };\r\n  hero: {\r\n    h1: string;\r\n    subTitle: string;\r\n    Images: Array<{\r\n      url: string;\r\n      alt: string;\r\n      width?: number;\r\n      height?: number;\r\n      priority?: boolean;\r\n    }>;\r\n  };\r\n  servicesGrid?: unknown[];\r\n  [key: string]: unknown;\r\n}\r\n\r\n/**\r\n * Load industry template from modular loaders\r\n * All industries now use the new modular architecture\r\n * \r\n * @param industry - Industry type\r\n * @returns Promise resolving to the industry template\r\n */\r\nexport async function getIndustryTemplate(\r\n  industry: Industry\r\n): Promise<IndustryTemplate> {\r\n  try {\r\n    // All industries now use modular loaders via index.ts\r\n    let config;\r\n    \r\n    switch (industry) {\r\n      case 'mobile-detailing': {\r\n        const { loadMobileDetailingConfig } = await import('@/data/mobile-detailing');\r\n        config = loadMobileDetailingConfig();\r\n        break;\r\n      }\r\n      case 'pet-grooming': {\r\n        const { loadPetGroomingConfig } = await import('@/data/pet-grooming');\r\n        config = await loadPetGroomingConfig();\r\n        break;\r\n      }\r\n      case 'maid-service': {\r\n        const { loadMaidServiceConfig } = await import('@/data/maid-service');\r\n        config = await loadMaidServiceConfig();\r\n        break;\r\n      }\r\n      case 'lawncare': {\r\n        const { loadLawncareConfig } = await import('@/data/lawncare');\r\n        config = await loadLawncareConfig();\r\n        break;\r\n      }\r\n      default: {\r\n        const unknownIndustry: string = industry;\r\n        throw new Error(`Unknown industry: ${unknownIndustry}`);\r\n      }\r\n    }\r\n\r\n    // Convert MainSiteConfig to IndustryTemplate format\r\n    return {\r\n      tenant: {\r\n        brand: config.brand || null,\r\n        businessName: null,\r\n        customBranding: false,\r\n      },\r\n      slug: config.slug || 'site',\r\n      urlPath: config.urlPath || '/',\r\n      logo: config.logo,\r\n      seo: {\r\n        Title: config.seo.title,\r\n        subTitle: config.seo.description,\r\n        canonicalPath: config.seo.canonicalPath,\r\n        OgImage: config.seo.ogImage,\r\n        TwitterImage: config.seo.twitterImage,\r\n        robots: config.seo.robots,\r\n      },\r\n      hero: {\r\n        h1: config.hero.h1,\r\n        subTitle: config.hero.sub || '',\r\n        Images: config.hero.images || [],\r\n      },\r\n      servicesGrid: config.servicesGrid,\r\n    };\r\n  } catch (error) {\r\n    console.error('Failed to load industry template:', error);\r\n    const errorMsg = error instanceof Error ? error.message : 'Unknown error';\r\n    const industryStr: string = industry;\r\n    throw new Error(`Failed to load template for industry ${industryStr}: ${errorMsg}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Validate if a string is a valid industry\r\n * @param value - Value to check\r\n * @returns True if valid industry\r\n */\r\nexport function isValidIndustry(value: unknown): value is Industry {\r\n  return typeof value === 'string' && INDUSTRIES.includes(value as Industry);\r\n}\r\n","/**\r\n * Preview Data Provider\r\n * \r\n * Wraps preview pages with the ACTUAL DataContext used by all components.\r\n * This allows existing components (Header, Hero, etc.) to work\r\n * without modification in preview mode.\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { DataContext } from '@/shared/contexts/DataContext';\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\nimport type { IndustryTemplate } from '@/shared/utils/industryRegistry';\r\nimport { getIndustryTemplate } from '@/shared/utils/industryRegistry';\r\n\r\nimport type { PreviewPayload } from '../types/preview.types';\r\n\r\ninterface PreviewDataProviderProps {\r\n  children: React.ReactNode;\r\n  payload: PreviewPayload;\r\n}\r\n\r\n/**\r\n * PreviewDataProvider\r\n * \r\n * Provides mock data to the actual DataContext that all components use.\r\n * This makes existing components work without modification in preview mode.\r\n */\r\nexport const PreviewDataProvider: React.FC<PreviewDataProviderProps> = ({\r\n  children,\r\n  payload,\r\n}) => {\r\n  const [siteConfig, setSiteConfig] = useState<IndustryTemplate | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadTemplate() {\r\n      try {\r\n        setIsLoading(true);\r\n        const template = await getIndustryTemplate(payload.industry);\r\n        setSiteConfig(template);\r\n      } catch (error) {\r\n        console.error('Failed to load industry template:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    void loadTemplate();\r\n  }, [payload.industry]);\r\n\r\n  // Generate email from business name\r\n  const generateEmail = (businessName: string) => {\r\n    // Convert \"JP's Mobile Detail\" → \"jpsmobiledetail\"\r\n    const domain = businessName\r\n      .toLowerCase()\r\n      .replace(/[^a-z0-9\\s]/g, '') // Remove special chars\r\n      .replace(/\\s+/g, '')          // Remove spaces\r\n      .trim();\r\n    return `info@${domain}.com`;\r\n  };\r\n\r\n  // Create mock context value matching the real DataContext interface\r\n  const mockContextValue = {\r\n    businessName: payload.businessName,\r\n    phone: payload.phone,\r\n    email: generateEmail(payload.businessName),\r\n    owner: payload.businessName,\r\n    location: `${payload.city}, ${payload.state}`,\r\n    industry: payload.industry,\r\n    serviceAreas: [\r\n      {\r\n        city: payload.city,\r\n        state: payload.state,\r\n        primary: true,\r\n      },\r\n    ],\r\n    socialMedia: {\r\n      facebook: '#',\r\n      instagram: '#',\r\n      youtube: '#',\r\n      tiktok: '#',\r\n      googleBusiness: '#',\r\n    },\r\n    siteConfig: siteConfig as MainSiteConfig | null,\r\n    isLoading,\r\n    isTenant: true,\r\n    isPreview: true, // Mark as preview mode\r\n  };\r\n\r\n  // Provide to the ACTUAL DataContext that components are using\r\n  return (\r\n    <DataContext.Provider value={mockContextValue}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\n","/**\r\n * FAQ Data Loader - Shared Utility\r\n * \r\n * Dynamically loads FAQ data from industry-specific JSON files.\r\n * Shared across features to avoid boundary violations.\r\n */\r\n\r\nexport interface FAQItem {\r\n  question: string;\r\n  answer: string;\r\n  category: string;\r\n}\r\n\r\n/**\r\n * Load all FAQ categories for a specific industry\r\n * \r\n * @param industry - Industry slug (e.g., 'mobile-detailing')\r\n * @returns Array of FAQ items with unique IDs\r\n */\r\nexport async function loadIndustryFAQs(industry: string): Promise<FAQItem[]> {\r\n  const categories = [\r\n    'services',\r\n    'pricing',\r\n    'scheduling',\r\n    'locations',\r\n    'preparation',\r\n    'payments',\r\n    'warranty',\r\n    'aftercare',\r\n    'general',\r\n  ];\r\n  \r\n  try {\r\n    const faqArrays = await Promise.all(\r\n      categories.map(async (category) => {\r\n        try {\r\n          const module = await import(`@/data/${industry}/faq/${category}.json`) as { default: FAQItem[] };\r\n          return module.default;\r\n        } catch {\r\n          console.warn(`FAQ category ${category} not found for ${industry}, skipping`);\r\n          return [];\r\n        }\r\n      })\r\n    );\r\n    \r\n    // Flatten and add unique IDs\r\n    const allFAQs = faqArrays.flat();\r\n    return allFAQs.map((faq, index) => ({\r\n      ...faq,\r\n      id: `${industry}-${String(index)}`\r\n    }));\r\n  } catch (error) {\r\n    console.error(`Failed to load FAQs for ${industry}:`, error);\r\n    return [];\r\n  }\r\n}\r\n\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { useData } from '@/shared/hooks';\r\n\r\nimport type { FAQItem } from '../types';\r\nimport { loadIndustryFAQs } from '../utils';\r\n\r\nexport const useFAQData = () => {\r\n  const [openItems, setOpenItems] = useState<Set<string>>(new Set());\r\n  const [faqData, setFaqData] = useState<FAQItem[]>([]);\r\n  const { industry } = useData();\r\n\r\n  // Load industry-specific FAQs\r\n  useEffect(() => {\r\n    if (!industry) return;\r\n    \r\n    loadIndustryFAQs(industry)\r\n      .then(setFaqData)\r\n      .catch((error: unknown) => {\r\n        console.error('Failed to load FAQs:', error);\r\n        setFaqData([]);\r\n      });\r\n  }, [industry]);\r\n\r\n  const toggleItem = (question: string) => {\r\n    setOpenItems(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(question)) {\r\n        newSet.delete(question);\r\n      } else {\r\n        newSet.add(question);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const resetState = () => {\r\n    setOpenItems(new Set());\r\n  };\r\n\r\n  return {\r\n    faqData,\r\n    openItems,\r\n    toggleItem,\r\n    resetState,\r\n  };\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nimport { useWebsiteContent } from '@/shared/contexts/WebsiteContentContext';\r\nimport { useIndustrySiteData } from '@/shared/hooks/useIndustrySiteData';\r\n\r\nimport type { FAQItem as BaseFAQItem } from '../types';\r\nimport { useFAQData } from './useFAQData';\r\n\r\n// Extended FAQ Item that allows any category string\r\nexport interface FAQItem extends Omit<BaseFAQItem, 'category'> {\r\n  category: string;\r\n}\r\n\r\ninterface UseFAQContentReturn {\r\n  faqTitle: string;\r\n  faqSubtitle: string;\r\n  faqItems: FAQItem[];\r\n  categories: string[];\r\n}\r\n\r\ninterface UseFAQContentProps {\r\n  locationData?: {\r\n    faqIntro?: string;\r\n    city?: string;\r\n    faqs?: Array<{ q: string; a: string }>;\r\n  };\r\n}\r\n\r\nexport const useFAQContent = (props?: UseFAQContentProps): UseFAQContentReturn => {\r\n  // Get industry-specific site data\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- siteData is dynamically imported JSON\r\n  const { siteData } = useIndustrySiteData();\r\n  const locationData = props?.locationData;\r\n  \r\n  // Get website content - hooks must be called unconditionally\r\n  const { content: websiteContent } = useWebsiteContent();\r\n  \r\n  // Get industry-specific FAQ items\r\n  const { faqData: industryFAQs } = useFAQData();\r\n  \r\n  // Get FAQ title and subtitle from database or industry-specific fallbacks\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- siteData is dynamically imported JSON\r\n  const faqTitle = websiteContent?.faq_title \r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access -- siteData is dynamically imported JSON\r\n    ?? siteData?.faq?.title \r\n    ?? 'Frequently Asked Questions';\r\n    \r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- siteData is dynamically imported JSON\r\n  const faqSubtitle = websiteContent?.faq_subtitle \r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access -- siteData is dynamically imported JSON\r\n    ?? siteData?.faq?.subtitle \r\n    ?? locationData?.faqIntro \r\n    ?? 'Find answers to common questions about our services';\r\n  \r\n  // Get FAQ items from database or fallback to industry-specific FAQs\r\n  const databaseFAQs: FAQItem[] = useMemo(() => {\r\n    if (!websiteContent?.faq_items || !Array.isArray(websiteContent.faq_items)) {\r\n      return [];\r\n    }\r\n    \r\n    return websiteContent.faq_items.map((faq, index) => ({\r\n      id: `db-${String(index)}`,\r\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- faq properties from database might be null\r\n      question: String(faq.question ?? ''),\r\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- faq properties from database might be null\r\n      answer: String(faq.answer ?? ''),\r\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- faq properties from database might be null\r\n      category: String(faq.category ?? 'General')\r\n    }));\r\n  }, [websiteContent?.faq_items]);\r\n  \r\n  // Convert location FAQs to FAQItem format if available\r\n  const locationFAQs: FAQItem[] = useMemo(() => {\r\n    if (!locationData?.faqs) return [];\r\n    \r\n    return locationData.faqs.map((faq, index) => ({\r\n      id: `location-${String(index)}`,\r\n      question: faq.q,\r\n      answer: faq.a,\r\n      category: locationData.city ?? 'Location'\r\n    }));\r\n  }, [locationData]);\r\n  \r\n  // Priority: Database FAQs > Industry FAQs > Location FAQs\r\n  const faqItems = useMemo(() => {\r\n    if (databaseFAQs.length > 0) {\r\n      // Use ONLY database FAQs (tenant has customized)\r\n      return [...databaseFAQs, ...locationFAQs];\r\n    }\r\n    // Fallback to industry-specific FAQs if no database FAQs\r\n    return [...industryFAQs, ...locationFAQs];\r\n  }, [databaseFAQs, industryFAQs, locationFAQs]);\r\n  \r\n  // Extract unique categories\r\n  const categories = useMemo(() => {\r\n    const uniqueCategories = Array.from(new Set(faqItems.map(faq => faq.category)));\r\n    return ['All', ...uniqueCategories];\r\n  }, [faqItems]);\r\n\r\n  return {\r\n    faqTitle: String(faqTitle),\r\n    faqSubtitle: String(faqSubtitle),\r\n    faqItems,\r\n    categories\r\n  };\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { useImageRotation } from '@/shared/hooks';\r\nimport { GalleryImage } from '@/shared/types';\r\n\r\n// Fisher-Yates shuffle algorithm\r\nfunction shuffleArray<T>(array: T[]): T[] {\r\n  const shuffled = [...array];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = shuffled[i];\r\n    const itemAtJ = shuffled[j];\r\n    if (temp !== undefined && itemAtJ !== undefined) {\r\n      shuffled[i] = itemAtJ;\r\n      shuffled[j] = temp;\r\n    }\r\n  }\r\n  return shuffled;\r\n}\r\n\r\nexport function useRotatingBackground() {\r\n  const [galleryImages, setGalleryImages] = useState<GalleryImage[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Load gallery data\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    void (async () => {\r\n      try {\r\n        const res = await fetch('/mobile-detailing/data/gallery.json');\r\n        if (!res.ok) throw new Error(`Failed to fetch gallery data: ${String(res.status)}`);\r\n        const data = await res.json() as GalleryImage[];\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- cancelled flag is set in cleanup\r\n        if (cancelled) return;\r\n\r\n        // Shuffle the images for random order\r\n        const shuffledData = shuffleArray(data);\r\n        setGalleryImages(shuffledData);\r\n        setLoading(false);\r\n        setError(null);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        setError(err instanceof Error ? err.message : 'Failed to load gallery data');\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  // Extract image URLs for the rotation utility\r\n  const imageUrls = galleryImages.map(img => img.src);\r\n\r\n  // Use the new image rotation utility\r\n  const rotation = useImageRotation({\r\n    images: imageUrls,\r\n    autoRotate: true,\r\n    interval: 7000, // 7 seconds to match original\r\n    fadeDuration: 2000, // 2 seconds fade duration\r\n    preloadNext: true,\r\n    pauseOnHover: false // Background doesn't need hover pause\r\n  });\r\n\r\n  const { currentIndex, hasMultipleImages } = rotation;\r\n\r\n  return {\r\n    images: galleryImages,\r\n    currentIndex,\r\n    loading,\r\n    error,\r\n    hasMultipleImages\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Car, CreditCard, MapPin,Settings, Shield } from 'lucide-react';\r\n\r\nimport { FilterChip } from '@/shared/ui';\r\n\r\ninterface FAQCategoryFilterProps {\r\n  selectedCategory: string;\r\n  onCategoryChange: (category: string) => void;\r\n  categories: string[];\r\n}\r\n\r\nconst categoryIcons: Record<string, React.ComponentType<{ className?: string }>> = {\r\n  All: Car,\r\n  General: Car,\r\n  Services: Car,\r\n  Scheduling: Settings,\r\n  Pricing: CreditCard,\r\n  Preparation: Shield,\r\n  RV: Car,\r\n  Locations: MapPin,\r\n  Payments: CreditCard,\r\n  Warranty: Shield,\r\n  Aftercare: Shield,\r\n};\r\n\r\nconst FAQCategoryFilter: React.FC<FAQCategoryFilterProps> = ({ \r\n  selectedCategory, \r\n  onCategoryChange,\r\n  categories\r\n}) => {\r\n  const renderChip = (categoryName: string) => {\r\n    const isSelected = selectedCategory === categoryName;\r\n    const IconComponent = categoryIcons[categoryName] || MapPin;\r\n    \r\n    return (\r\n      <FilterChip\r\n        key={categoryName}\r\n        onClick={() => {\r\n          onCategoryChange(categoryName);\r\n        }}\r\n        isSelected={isSelected}\r\n        icon={IconComponent}\r\n        className=\"transform hover:scale-105 backdrop-blur-sm text-sm md:text-base\"\r\n      >\r\n        {categoryName}\r\n      </FilterChip>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div className=\"flex flex-wrap justify-center gap-2 md:gap-3 max-w-3xl mx-auto\">\r\n      {categories.map(renderChip)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQCategoryFilter;\r\n","import React from 'react';\r\nimport { Search } from 'lucide-react';\r\n\r\nconst FAQEmptyState: React.FC = () => {\r\n  return (\r\n    <div className=\"text-center py-12\">\r\n      <div className=\"bg-stone-800/80 backdrop-blur-sm rounded-lg p-8 border border-stone-700/50 shadow-xl\">\r\n        <Search className=\"h-12 w-12 text-stone-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-xl font-semibold text-white mb-2\">No FAQs Found</h3>\r\n        <p className=\"text-stone-400\">\r\n          Try adjusting your search or selecting a different category.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQEmptyState;\r\n","import React, { useMemo } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MapPin,X } from 'lucide-react';\r\n\r\ninterface ServiceArea {\r\n  city: string;\r\n  state: string;\r\n  zip?: string;\r\n  primary?: boolean;\r\n  minimum?: number;\r\n  multiplier?: number;\r\n}\r\n\r\ninterface ServiceAreasModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  serviceAreas: ServiceArea[];\r\n  businessName?: string;\r\n}\r\n\r\nconst ServiceAreasModal: React.FC<ServiceAreasModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  serviceAreas,\r\n  businessName = 'Our Business'\r\n}) => {\r\n  // Group service areas by state\r\n  const areasByState = useMemo(() => {\r\n    const grouped: Record<string, ServiceArea[]> = {};\r\n    \r\n    serviceAreas.forEach(area => {\r\n      if (!grouped[area.state]) {\r\n        grouped[area.state] = [];\r\n      }\r\n      grouped[area.state].push(area);\r\n    });\r\n    \r\n    // Sort states alphabetically\r\n    const sortedStates = Object.keys(grouped).sort();\r\n    const result: Record<string, ServiceArea[]> = {};\r\n    sortedStates.forEach(state => {\r\n      // Sort cities within each state, with primary first\r\n      result[state] = grouped[state].sort((a, b) => {\r\n        if (a.primary && !b.primary) return -1;\r\n        if (!a.primary && b.primary) return 1;\r\n        return a.city.localeCompare(b.city);\r\n      });\r\n    });\r\n    \r\n    return result;\r\n  }, [serviceAreas]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const modalContent = (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/70 backdrop-blur-sm\">\r\n      <div className=\"bg-stone-800 rounded-lg shadow-2xl max-w-4xl w-full max-h-[80vh] overflow-hidden border border-stone-700\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-stone-700\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-white\">Service Areas</h2>\r\n            <p className=\"text-gray-400 mt-1\">Where {businessName} provides mobile detailing services</p>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-white transition-colors p-2 hover:bg-stone-700 rounded-lg\"\r\n            aria-label=\"Close modal\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6 overflow-y-auto max-h-[calc(80vh-120px)]\">\r\n          {Object.entries(areasByState).map(([state, areas]) => (\r\n            <div key={state} className=\"mb-8 last:mb-0\">\r\n              {/* State Header */}\r\n              <div className=\"flex items-center gap-2 mb-4\">\r\n                <MapPin className=\"h-5 w-5 text-orange-400\" />\r\n                <h3 className=\"text-xl font-semibold text-orange-400\">\r\n                  {state}\r\n                </h3>\r\n                <span className=\"text-gray-400 text-sm\">\r\n                  ({areas.length} {areas.length === 1 ? 'city' : 'cities'})\r\n                </span>\r\n              </div>\r\n\r\n              {/* Cities Grid */}\r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 ml-7\">\r\n                {areas.map((area, index) => (\r\n                  <div\r\n                    key={`${area.state}-${area.city}-${index}`}\r\n                    className=\"flex items-center gap-2 text-gray-300 hover:text-white transition-colors\"\r\n                  >\r\n                    <div className=\"w-1.5 h-1.5 rounded-full bg-orange-400 flex-shrink-0\"></div>\r\n                    <span className=\"text-sm\">\r\n                      {area.city}\r\n                      {area.primary && (\r\n                        <span className=\"ml-2 text-xs text-orange-400 font-medium\">\r\n                          Primary\r\n                        </span>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {serviceAreas.length === 0 && (\r\n            <div className=\"text-center py-12\">\r\n              <MapPin className=\"h-12 w-12 text-gray-600 mx-auto mb-4\" />\r\n              <p className=\"text-gray-400\">No service areas configured</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"p-6 border-t border-stone-700 bg-stone-900\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <p className=\"text-sm text-gray-400\">\r\n              {serviceAreas.length} total service {serviceAreas.length === 1 ? 'area' : 'areas'}\r\n            </p>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 bg-orange-600 hover:bg-orange-700 text-white rounded-lg transition-colors font-medium\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return createPortal(modalContent, document.body);\r\n};\r\n\r\nexport default ServiceAreasModal;\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport ServiceAreasModal from '@/shared/ui/modals/ServiceAreasModal';\r\n\r\ninterface ServiceAreasLinkProps {\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst ServiceAreasLink: React.FC<ServiceAreasLinkProps> = ({ \r\n  children = 'view our service areas',\r\n  className = ''\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  \r\n  // Get tenant data for service areas - hooks must be called unconditionally\r\n  const tenantData = useData();\r\n\r\n  // If no service areas, just render as plain text\r\n  if (tenantData.serviceAreas.length === 0) {\r\n    return <span>{children}</span>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}\r\n        className={`text-orange-400 hover:text-orange-300 underline transition-colors cursor-pointer bg-transparent border-none p-0 font-inherit ${className}`}\r\n      >\r\n        {children}\r\n      </button>\r\n      \r\n      <ServiceAreasModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => {\r\n          setIsModalOpen(false);\r\n        }}\r\n        serviceAreas={tenantData.serviceAreas}\r\n        businessName={tenantData.businessName}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceAreasLink;\r\n\r\n","import React from 'react';\r\nimport { ChevronDown } from 'lucide-react';\r\n\r\nimport type { FAQItem as FAQItemType } from '@/features/faq/types';\r\n\r\nimport ServiceAreasLink from './ServiceAreasLink';\r\n\r\ninterface FAQItemProps {\r\n  faq: FAQItemType;\r\n  isExpanded: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nconst FAQItem: React.FC<FAQItemProps> = ({ faq, isExpanded, onToggle }) => {\r\n  const handleToggle = () => {\r\n    // Analytics tracking for FAQ interactions\r\n    if (faq.id && !isExpanded) {\r\n      // Track FAQ expansion for analytics and A/B testing\r\n      if (typeof window !== 'undefined' && window.gtag) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call -- gtag is from external Google Analytics script\r\n        window.gtag('event', 'faq_expanded', {\r\n          faq_id: faq.id,\r\n          faq_question: faq.question,\r\n          faq_category: faq.category\r\n        });\r\n      }\r\n    }\r\n    onToggle();\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"bg-stone-800/80 backdrop-blur-sm rounded-lg border border-stone-700/50 overflow-hidden hover:shadow-xl hover:shadow-black/30 transition-all duration-300 h-fit\"\r\n      data-faq-id={faq.id}\r\n      data-faq-category={faq.category}\r\n    >\r\n      <button\r\n        onClick={handleToggle}\r\n        className=\"w-full px-4 py-4 text-left flex justify-between items-start hover:bg-stone-700/40 transition-colors duration-200 group\"\r\n      >\r\n        <div className=\"flex-1 pr-2\">\r\n          <h3 className=\"text-white font-semibold text-base group-hover:text-orange-400 transition-colors duration-200 leading-tight\">\r\n            {faq.question}\r\n          </h3>\r\n        </div>\r\n        <ChevronDown\r\n          className={`h-4 w-4 text-stone-400 transition-transform duration-200 flex-shrink-0 mt-1 ${\r\n            isExpanded ? 'rotate-180 text-orange-400' : ''\r\n          }`}\r\n        />\r\n      </button>\r\n      \r\n      <div\r\n        className={`overflow-hidden transition-all duration-300 ease-in-out ${\r\n          isExpanded ? 'max-h-48 opacity-100' : 'max-h-0 opacity-0'\r\n        }`}\r\n      >\r\n        <div className=\"px-4 pb-4 border-t border-stone-700/30\">\r\n          <div className=\"pt-3\">\r\n            <div className=\"text-stone-300 text-sm leading-relaxed\">\r\n              {faq.question === 'What areas do you service?' ? (\r\n                <>\r\n                  {faq.answer.split('We proudly serve')[0]}\r\n                  We proudly serve{' '}\r\n                  <ServiceAreasLink>our service areas</ServiceAreasLink>\r\n                  {faq.answer.includes('We proudly serve.') \r\n                    ? faq.answer.split('We proudly serve.')[1]\r\n                    : faq.answer.split('We proudly serve')[1] || ''}\r\n                </>\r\n              ) : (\r\n                faq.answer\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQItem;\r\n","import React from 'react';\r\n\r\nimport type { FAQItem as FAQItemType } from '@/features/faq/types';\r\n\r\nimport FAQItem from './FAQItem';\r\n\r\ninterface FAQListProps {\r\n  faqs: FAQItemType[];\r\n  expandedFaq: number | string | null;\r\n  onToggleFaq: (id: number | string) => void;\r\n}\r\n\r\nconst FAQList: React.FC<FAQListProps> = ({ faqs, expandedFaq, onToggleFaq }) => {\r\n  return (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-5 lg:gap-6\">\r\n      {faqs.map((faq, index) => {\r\n        // Use id if available, otherwise fall back to question or index\r\n        const key = faq.id ?? `faq-${String(index)}`;\r\n        return (\r\n          <FAQItem\r\n            key={key}\r\n            faq={faq}\r\n            isExpanded={expandedFaq === key}\r\n            onToggle={() => {\r\n              onToggleFaq(key);\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQList;\r\n","import React from 'react';\r\nimport { Search } from 'lucide-react';\r\n\r\ninterface FAQSearchBarProps {\r\n  searchTerm: string;\r\n  onSearchChange: (term: string) => void;\r\n}\r\n\r\nconst FAQSearchBar: React.FC<FAQSearchBarProps> = ({ searchTerm, onSearchChange }) => {\r\n  return (\r\n    <div className=\"relative max-w-md mx-auto mb-6\">\r\n      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-stone-400 h-5 w-5\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search FAQs...\"\r\n        value={searchTerm}\r\n        onChange={(e) => {\r\n          onSearchChange(e.target.value);\r\n        }}\r\n        className=\"w-full pl-10 pr-4 py-3 bg-stone-800/80 backdrop-blur-sm border border-stone-600/50 rounded-lg text-white placeholder-stone-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all duration-200 shadow-lg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQSearchBar;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useFAQContent,useRotatingBackground } from '@/features/faq/hooks';\r\nimport { getImageOpacityClasses, getTransitionStyles } from '@/shared/utils';\r\n\r\nimport FAQCategoryFilter from './FAQCategoryFilter';\r\nimport FAQEmptyState from './FAQEmptyState';\r\nimport FAQList from './FAQList';\r\nimport FAQSearchBar from './FAQSearchBar';\r\n\r\ninterface FAQProps {\r\n  locationData?: {\r\n    faqIntro?: string;\r\n    city?: string;\r\n    faqs?: Array<{ q: string; a: string }>;\r\n  };\r\n}\r\n\r\nconst FAQ: React.FC<FAQProps> = ({ locationData }) => {\r\n  const [selectedCategory, setSelectedCategory] = useState('Services');\r\n  const [expandedFaq, setExpandedFaq] = useState<string | number | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n  // Get FAQ content from database (with fallbacks)\r\n  const { faqTitle, faqSubtitle, faqItems, categories } = useFAQContent({ locationData });\r\n  \r\n  // Rotating background\r\n  const { images, currentIndex, loading: backgroundLoading } = useRotatingBackground();\r\n\r\n  // Filter FAQs based on category and search\r\n  const filteredFaqs = faqItems.filter(faq => {\r\n    const matchesCategory = selectedCategory === 'All' || faq.category === selectedCategory;\r\n    const matchesSearch = faq.question.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         faq.answer.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesCategory && matchesSearch;\r\n  });\r\n\r\n  const toggleFaq = (id: string | number) => {\r\n    setExpandedFaq(expandedFaq === id ? null : id);\r\n  };\r\n\r\n  return (\r\n    <section id=\"faq\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n      {/* Rotating Background Images with Overlay */}\r\n      <div className=\"absolute inset-0 z-0\">\r\n        {/* Render all images to test if performance optimization causes the pop */}\r\n        {images.map((image, index) => {\r\n          return (\r\n            <img\r\n              key={image.id}\r\n              src={image.src}\r\n              alt={image.alt || `FAQ background image ${String(index + 1)}`}\r\n              className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n              style={getTransitionStyles(2000)}\r\n              decoding={index === 0 ? 'sync' : 'async'}\r\n              loading={index === 0 ? 'eager' : 'lazy'}\r\n            />\r\n          );\r\n        })}\r\n        \r\n        {/* Fallback background if no images loaded */}\r\n        {!images.length && !backgroundLoading && (\r\n          <div\r\n            className=\"absolute inset-0\"\r\n            style={{\r\n              backgroundImage: 'url(/images/gallery/dodge-viper-gts-grigio-telesto-studio.png)',\r\n              backgroundSize: 'cover',\r\n              backgroundPosition: 'center',\r\n              backgroundAttachment: 'fixed'\r\n            }}\r\n          />\r\n        )}\r\n        \r\n        {/* Dark overlay */}\r\n        <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"relative z-10 h-full overflow-y-auto pt-[72px] md:pt-[88px]\">\r\n        <div className=\"max-w-6xl mx-auto w-full px-4 py-8\">\r\n          {/* Header */}\r\n          <div className=\"text-center mb-8\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold text-white mb-3 drop-shadow-lg\">\r\n              {faqTitle}\r\n            </h1>\r\n            <p className=\"text-stone-200 text-lg max-w-2xl mx-auto drop-shadow-md\">\r\n              {faqSubtitle}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Search and Filter Controls */}\r\n          <div className=\"mb-8\">\r\n            <FAQSearchBar \r\n              searchTerm={searchTerm}\r\n              onSearchChange={setSearchTerm}\r\n            />\r\n\r\n            <FAQCategoryFilter\r\n              selectedCategory={selectedCategory}\r\n              onCategoryChange={setSelectedCategory}\r\n              categories={categories}\r\n            />\r\n          </div>\r\n\r\n          {/* FAQ Content */}\r\n          <div className=\"max-w-4xl mx-auto\">\r\n            {filteredFaqs.length === 0 ? (\r\n              <FAQEmptyState />\r\n            ) : (\r\n              <FAQList\r\n                faqs={filteredFaqs}\r\n                expandedFaq={expandedFaq}\r\n                onToggleFaq={toggleFaq}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n/* eslint-disable react-refresh/only-export-components -- Both named and default export needed for compatibility */\r\nexport { FAQ };\r\nexport default FAQ;\r\n/* eslint-enable react-refresh/only-export-components -- End of multi-export section */\r\n","import React from 'react';\r\n\r\ninterface DisclaimerProps {\r\n  businessInfo: {\r\n    name: string;\r\n  };\r\n}\r\n\r\nconst Disclaimer: React.FC<DisclaimerProps> = ({ businessInfo }) => {\r\n  return (\r\n    <div className=\"border-t border-stone-600 pt-4 md:pt-8\">\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-300 text-sm md:text-base\">\r\n            © 2024 {businessInfo.name}. All rights reserved.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Disclaimer;\r\n","import React from 'react';\r\nimport { SiFacebook, SiInstagram, SiTiktok, SiYoutube } from 'react-icons/si';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\n\r\ninterface FollowUsProps {\r\n  socialMedia?: {\r\n    facebook?: string;\r\n    instagram?: string;\r\n    tiktok?: string;\r\n    youtube?: string;\r\n  };\r\n}\r\n\r\nconst FollowUs: React.FC<FollowUsProps> = ({ socialMedia }) => {\r\n  const { isPreview } = useData();\r\n  \r\n  const socialLinks = [\r\n    {\r\n      platform: 'Facebook',\r\n      url: socialMedia?.facebook,\r\n      icon: SiFacebook,\r\n      label: 'Facebook'\r\n    },\r\n    {\r\n      platform: 'Instagram',\r\n      url: socialMedia?.instagram,\r\n      icon: SiInstagram,\r\n      label: 'Instagram'\r\n    },\r\n    {\r\n      platform: 'TikTok',\r\n      url: socialMedia?.tiktok,\r\n      icon: SiTiktok,\r\n      label: 'TikTok'\r\n    },\r\n    {\r\n      platform: 'YouTube',\r\n      url: socialMedia?.youtube,\r\n      icon: SiYoutube,\r\n      label: 'YouTube'\r\n    }\r\n  ];\r\n\r\n  const visibleLinks = socialLinks.filter(link => link.url !== undefined); // Show if URL field exists (even if empty)\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h3 className=\"font-bold text-orange-400 text-xl mb-6\">Follow Us</h3>\r\n      <div className=\"inline-flex flex-col space-y-3 items-start\">\r\n        {visibleLinks.map(({ platform, url, icon: Icon, label }) => {\r\n          const hasUrl = url && url.trim() !== '';\r\n          \r\n          // In preview mode, render as span instead of link\r\n          if (isPreview) {\r\n            return (\r\n              <span\r\n                key={platform}\r\n                className=\"text-white hover:text-orange-400 transition-colors duration-200 flex items-center space-x-2 md:space-x-3 cursor-pointer\"\r\n                title=\"Social media links available in your live site\"\r\n              >\r\n                <Icon className=\"h-4 w-4 md:h-5 md:w-5 flex-shrink-0\" />\r\n                <span className=\"text-sm md:text-lg\">{label}</span>\r\n              </span>\r\n            );\r\n          }\r\n          \r\n          // If no URL, render as span (non-clickable)\r\n          if (!hasUrl) {\r\n            return (\r\n              <span\r\n                key={platform}\r\n                className=\"text-white hover:text-orange-400 transition-colors duration-200 flex items-center space-x-2 md:space-x-3 cursor-pointer\"\r\n                title=\"Social media link not configured\"\r\n              >\r\n                <Icon className=\"h-4 w-4 md:h-5 md:w-5 flex-shrink-0\" />\r\n                <span className=\"text-sm md:text-lg\">{label}</span>\r\n              </span>\r\n            );\r\n          }\r\n          \r\n          // If has URL, render as clickable link\r\n          return (\r\n            <a \r\n              key={platform}\r\n              href={url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"text-white hover:text-orange-400 transition-colors duration-200 flex items-center space-x-3\"\r\n            >\r\n              <Icon className=\"h-5 w-5 flex-shrink-0\" />\r\n              <span className=\"text-lg\">{label}</span>\r\n            </a>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowUs;\r\n","import React from 'react';\nimport { MapPin } from 'lucide-react';\n\nimport { formatPhoneNumber } from '@/shared/utils/phoneFormatter';\n\nimport { useData } from '../contexts/DataProvider';\n\nconst BusinessInfo: React.FC = () => {\n  const { businessName, phone, location, isTenant } = useData();\n  \n  const handleClick = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // All sites are now tenant-based, so show business info\n  if (!isTenant) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-1 md:space-y-1 md:ml-2 min-w-0 flex-1\">\n      {/* Business Name - Full width on mobile, larger on desktop */}\n      <button \n        onClick={handleClick}\n        className=\"hover:opacity-80 transition-opacity text-left min-w-0\"\n      >\n        <h1 className=\"text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold text-white leading-tight truncate\">\n          {businessName}\n        </h1>\n      </button>\n      \n      {/* Phone + Location - side by side on mobile, horizontal on desktop */}\n      <div className=\"flex items-center gap-2 md:gap-2 min-w-0 flex-wrap\">\n        <a \n          href={`tel:${phone || '5551234580'}`}\n          className=\"text-sm md:text-sm lg:text-base text-stone-300 hover:text-orange-400 transition-colors truncate flex-shrink-0\"\n        >\n          {formatPhoneNumber(phone || '(555) 123-4580')}\n        </a>\n        <span className=\"text-stone-400 flex-shrink-0 text-sm\">•</span>\n        <div className=\"flex items-center gap-1 min-w-0\">\n          <MapPin className=\"h-4 w-4 md:h-4 md:w-4 text-orange-400 flex-shrink-0\" />\n          <span className=\"text-sm md:text-sm lg:text-base text-orange-400 truncate\">\n            {location || 'Service Area'}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BusinessInfo;","import React, { createContext, useContext } from 'react';\r\n\r\ninterface TenantContextType {\r\n  slug: string | null;\r\n}\r\n\r\nconst TenantContext = createContext<TenantContextType | null>(null);\r\n\r\ninterface TenantProviderProps {\r\n  children: React.ReactNode;\r\n  slug: string | null;\r\n}\r\n\r\nexport const TenantProvider: React.FC<TenantProviderProps> = ({ children, slug }) => {\r\n  return (\r\n    <TenantContext.Provider value={{ slug }}>\r\n      {children}\r\n    </TenantContext.Provider>\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line react-refresh/only-export-components -- Context hook must be in same file as provider\r\nexport const useTenant = (): TenantContextType => {\r\n  const context = useContext(TenantContext);\r\n  if (!context) {\r\n    throw new Error('useTenant must be used within a TenantProvider');\r\n  }\r\n  return context;\r\n};\r\n","// Header-specific constants\r\nimport { NavLink } from '../types';\r\n\r\nexport const NAV_LINKS: NavLink[] = [\r\n  { name: 'Home', href: '#top' },\r\n  { name: 'Services', href: '#services' },\r\n  { name: 'Reviews', href: '#reviews' },\r\n  { name: 'FAQ', href: '#faq', isFAQ: true },\r\n  { name: 'Gallery', href: '#gallery', isGallery: true }\r\n];\r\n","/**\r\n * Navigation utility functions\r\n */\r\n\r\n/**\r\n * Smoothly scrolls to a section by its ID\r\n * @param sectionId - The ID of the section to scroll to (with or without #)\r\n */\r\nexport const scrollToSection = (sectionId: string): void => {\r\n  const cleanId = sectionId.replace('#', '');\r\n  // NOTE: Using inline window.innerWidth check here is intentional\r\n  // This is a utility function (not a React component), so hooks can't be used\r\n  // We need the current viewport width at the time this function is called\r\n  const isDesktop = window.innerWidth >= 768;\r\n  \r\n  // Map nav ID to actual section ID based on screen size\r\n  let targetId = cleanId;\r\n  if (cleanId === 'services') {\r\n    targetId = isDesktop ? 'services-desktop' : 'services';\r\n  } else if (cleanId === 'footer') {\r\n    targetId = isDesktop ? 'gallery-desktop' : 'footer';\r\n  }\r\n  \r\n  const element = document.getElementById(targetId);\r\n  \r\n  if (element) {\r\n    // Temporarily disable snap scrolling for smooth navigation\r\n    const scrollContainer = document.querySelector('.snap-container');\r\n    \r\n    if (scrollContainer) {\r\n      scrollContainer.classList.remove('snap-y', 'snap-mandatory');\r\n      \r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n      \r\n      // Re-enable snap scrolling after a delay\r\n      setTimeout(() => {\r\n        scrollContainer.classList.add('snap-y', 'snap-mandatory');\r\n      }, 1000);\r\n    } else {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles section click events with smooth scrolling\r\n * @param sectionId - The ID of the section to scroll to\r\n */\r\nexport const handleSectionClick = (sectionId: string): void => {\r\n  scrollToSection(sectionId);\r\n};\r\n","import React from 'react';\r\n\r\nimport { useData, useTenantConfigLoader } from '@/shared/hooks';\r\nimport type { Vertical } from '@/shared/types';\r\nimport { getTenantAssetUrl } from '@/shared/utils';\r\n\r\nconst Logo: React.FC = () => {\r\n  const { industry, isLoading: isDataLoading } = useData();\r\n  const { data: tenantConfig, isLoading: isConfigLoading } = useTenantConfigLoader();\r\n  \r\n  const isLoading = isDataLoading || isConfigLoading;\r\n  const logoUrl = tenantConfig?.branding.logo.url;\r\n  \r\n  const handleClick = () => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n  \r\n  // Use tenant config logo, fallback to industry default via asset locator\r\n  const src = logoUrl || getTenantAssetUrl({\r\n    vertical: industry as Vertical,\r\n    type: 'logo',\r\n  });\r\n  const alt = tenantConfig?.branding.businessName || `${industry} Logo`;\r\n\r\n  // During loading (including HMR), show a minimal placeholder\r\n  if (isLoading && !src) {\r\n    return (\r\n      <div className=\"h-10 w-10 sm:h-12 sm:w-12 md:h-14 md:w-14 lg:h-16 lg:w-16 bg-gray-200 animate-pulse rounded flex-shrink-0\" />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button \r\n      onClick={handleClick}\r\n      className=\"flex items-center hover:opacity-80 transition-opacity flex-shrink-0\"\r\n      aria-label={`${industry} home`}\r\n    >\r\n      <picture>\r\n        {/* Prefer WebP when available; fall back to original */}\r\n        <source srcSet={src.endsWith('.webp') ? src : src.replace(/\\.(png|jpg|jpeg)$/i, '.webp')} type=\"image/webp\" />\r\n        <img \r\n          src={src} \r\n          alt={alt} \r\n          className=\"h-10 w-10 sm:h-12 sm:w-12 md:h-14 md:w-14 lg:h-16 lg:w-16\"\r\n          width={64}\r\n          height={64}\r\n          decoding=\"async\"\r\n          loading=\"eager\"\r\n        />\r\n      </picture>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nimport { NAV_LINKS } from '@/features/header/utils/constants';\r\nimport { handleSectionClick } from '@/features/header/utils/navigation';\r\nimport { useReviewsAvailability } from '@/shared/hooks';\r\n\r\ninterface NavigationProps {\r\n  activeSection: string;\r\n}\r\n\r\nconst Navigation: React.FC<NavigationProps> = ({ activeSection }) => {\r\n  // Check if reviews are available\r\n  const hasReviews = useReviewsAvailability();\r\n\r\n  // Filter navigation links based on reviews availability\r\n  const filteredNavLinks = NAV_LINKS.filter(link => {\r\n    if (link.name === 'Reviews') {\r\n      return hasReviews; // Only show reviews if there are reviews available\r\n    }\r\n    return true; // Show all other links\r\n  });\r\n\r\n  // Determine if a nav item is active based on visible section\r\n  const isActive = (link: typeof NAV_LINKS[0]) => {\r\n    const isLinkActive = (\r\n      (link.name === 'Home' && activeSection === 'top') ||\r\n      (link.name === 'Services' && activeSection === 'services') ||\r\n      (link.name === 'Reviews' && activeSection === 'reviews') ||\r\n      (link.name === 'FAQ' && activeSection === 'faq') ||\r\n      (link.name === 'Gallery' && activeSection === 'footer')\r\n    );\r\n    \r\n    return isLinkActive;\r\n  };\r\n\r\n  // Base classes for nav items\r\n  const getNavItemClasses = (link: typeof NAV_LINKS[0]) => {\r\n    const isLinkActive = isActive(link);\r\n    \r\n    const baseClasses = \"nav-link hover:text-orange-400 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200 p-2 font-inherit cursor-pointer rounded\";\r\n    \r\n    const finalClasses = isLinkActive \r\n      ? `${baseClasses} text-orange-400 bg-transparent border-none ring-2 ring-orange-400 ring-offset-2 ring-offset-black/20` \r\n      : `${baseClasses} text-white bg-transparent border-none`;\r\n    \r\n    return finalClasses;\r\n  };\r\n\r\n  return (\r\n    <nav aria-label=\"Primary navigation\" className=\"hidden xl:flex space-x-6\">\r\n      {filteredNavLinks.map(link => (\r\n        link.isFAQ ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#faq'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : link.isGallery ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#footer'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : link.name === 'Reviews' ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#reviews'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : link.name === 'Home' ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#top'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : link.name === 'Services' ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#services'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : (\r\n          <a\r\n            key={link.name}\r\n            href={link.href}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Navigate to ${link.name} page`}\r\n          >\r\n            {link.name}\r\n          </a>\r\n        )\r\n      ))}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { SiFacebook, SiInstagram, SiYoutube } from 'react-icons/si';\r\n\r\nimport { useData } from '../contexts/DataProvider';\r\n\r\n// Custom TikTok icon component\r\nconst TikTokIcon: React.FC<{ className?: string }> = ({ className }) => (\r\n  <svg \r\n    className={className} \r\n    viewBox=\"0 0 24 24\" \r\n    fill=\"none\" \r\n    stroke=\"currentColor\" \r\n    strokeWidth=\"2\" \r\n    strokeLinecap=\"round\" \r\n    strokeLinejoin=\"round\"\r\n  >\r\n    <path d=\"M9 12a4 4 0 1 0 4 4V4a5 5 0 0 0 5 5\" />\r\n  </svg>\r\n);\r\n\r\nconst SocialMediaIcons: React.FC = () => {\r\n  // Always call hooks unconditionally\r\n  const { isTenant, socialMedia, siteConfig, isPreview } = useData();\r\n  \r\n  // Use tenant social media if available, otherwise use site config\r\n  const socials = isTenant ? socialMedia : siteConfig?.socials;\r\n  \r\n  const socialLinks = [\r\n    {\r\n      platform: 'Facebook',\r\n      url: socials?.facebook,\r\n      icon: SiFacebook,\r\n      ariaLabel: 'Visit our Facebook page'\r\n    },\r\n    {\r\n      platform: 'Instagram',\r\n      url: socials?.instagram,\r\n      icon: SiInstagram,\r\n      ariaLabel: 'Visit our Instagram page'\r\n    },\r\n    {\r\n      platform: 'TikTok',\r\n      url: socials?.tiktok,\r\n      icon: TikTokIcon,\r\n      ariaLabel: 'Visit our TikTok page'\r\n    },\r\n    {\r\n      platform: 'YouTube',\r\n      url: socials?.youtube,\r\n      icon: SiYoutube,\r\n      ariaLabel: 'Visit our YouTube channel'\r\n    }\r\n  ];\r\n\r\n  const visibleLinks = socialLinks.filter(link => {\r\n    const url = link.url;\r\n    return typeof url === 'string'; // Show if URL exists (even if empty)\r\n  });\r\n\r\n  if (visibleLinks.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-3 ml-4\">\r\n      {visibleLinks.map(({ platform, url, icon: Icon, ariaLabel }) => {\r\n        const href = url as string;\r\n        const hasUrl = href && href.trim() !== '';\r\n        \r\n        // In preview mode, render as span instead of link\r\n        if (isPreview) {\r\n          return (\r\n            <span\r\n              key={platform}\r\n              className=\"text-white hover:text-orange-400 transition-colors duration-200 cursor-pointer\"\r\n              aria-label={ariaLabel}\r\n              title=\"Social media links available in your live site\"\r\n            >\r\n              <Icon className=\"h-5 w-5\" />\r\n            </span>\r\n          );\r\n        }\r\n        \r\n        // If no URL, render as span (non-clickable)\r\n        if (!hasUrl) {\r\n          return (\r\n            <span\r\n              key={platform}\r\n              className=\"text-white hover:text-orange-400 transition-colors duration-200 cursor-pointer\"\r\n              aria-label={ariaLabel}\r\n              title=\"Social media link not configured\"\r\n            >\r\n              <Icon className=\"h-5 w-5\" />\r\n            </span>\r\n          );\r\n        }\r\n        \r\n        // If has URL, render as clickable link\r\n        return (\r\n          <a \r\n            key={platform}\r\n            href={href} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            className=\"text-white hover:text-orange-400 transition-colors duration-200\"\r\n            aria-label={ariaLabel}\r\n          >\r\n            <Icon className=\"h-5 w-5\" />\r\n          </a>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialMediaIcons;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Menu, X } from 'lucide-react';\r\n\r\nimport { NAV_LINKS } from '@/features/header/utils/constants';\r\nimport { handleSectionClick } from '@/features/header/utils/navigation';\r\nimport { useReviewsAvailability } from '@/shared/hooks';\r\nimport { getNavId,useSectionStore } from '@/shared/state/sectionStore';\r\n\r\nimport BusinessInfo from './BusinessInfo';\r\nimport Logo from './Logo';\r\nimport Navigation from './Navigation';\r\nimport SocialMediaIcons from './SocialMediaIcons';\r\n\r\nexport default function Header() {\r\n  const [open, setOpen] = useState(false);\r\n  const hasReviews = useReviewsAvailability();\r\n  \r\n  // Subscribe to the section store and map to navigation ID\r\n  const currentSection = useSectionStore((s) => s.current);\r\n  const activeSection = getNavId(currentSection) || 'top';\r\n\r\n  // Prevent background scroll when mobile menu open\r\n  useEffect(() => {\r\n    document.documentElement.style.overflow = open ? \"hidden\" : \"\";\r\n    return () => { document.documentElement.style.overflow = \"\"; };\r\n  }, [open]);\r\n\r\n  return (\r\n    <header\r\n      role=\"banner\"\r\n      className=\"fixed top-0 left-0 right-0 z-50 bg-black/40 backdrop-blur supports-[backdrop-filter]:backdrop-blur w-full\"\r\n    >\r\n      {/* Skip link */}\r\n      <a\r\n        href=\"#main\"\r\n        className=\"sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:px-4 focus:py-2 focus:bg-orange-500 focus:text-white focus:rounded-md\"\r\n      >\r\n        Skip to content\r\n      </a>\r\n\r\n      {/* Bar */}\r\n      <div className=\"py-3 sm:py-4 md:py-4\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-4 md:px-6 min-w-0\">\r\n          {/* Mobile row (< md 768px) */}\r\n          <div className=\"flex md:hidden items-center justify-between gap-3 min-w-0\">\r\n            <div className=\"flex items-center gap-2 flex-1 min-w-0 overflow-hidden\">\r\n              <Logo />\r\n              <BusinessInfo />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              aria-label={open ? \"Close menu\" : \"Open menu\"}\r\n              aria-expanded={open}\r\n              aria-controls=\"mobile-menu\"\r\n              onClick={() => { setOpen(v => !v); }}\r\n              className=\"flex-shrink-0 inline-flex items-center justify-center p-2 rounded-md text-white hover:bg-white/10 focus:outline-none focus:ring-2 focus:ring-orange-400\"\r\n            >\r\n              {open ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Desktop row (≥ md 768px) */}\r\n          <div className=\"hidden md:flex items-center gap-4 lg:gap-6 min-w-0\">\r\n            <Logo />\r\n            <BusinessInfo />\r\n            <div className=\"flex items-center gap-4 lg:gap-6 ml-auto flex-shrink-0\">\r\n              <Navigation activeSection={activeSection} />\r\n              <SocialMediaIcons />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile overlay menu */}\r\n      <div\r\n        id=\"mobile-menu\"\r\n        role=\"dialog\"\r\n        aria-modal=\"true\"\r\n        className={`md:hidden absolute inset-x-0 top-full z-50 bg-black/90 transition-opacity duration-200\r\n          ${open ? \"opacity-100 pointer-events-auto\" : \"opacity-0 pointer-events-none\"}`}\r\n        aria-hidden={!open}\r\n      >\r\n        <div className=\"px-4 py-6 space-y-4 max-w-7xl mx-auto\">\r\n          <h2 className=\"sr-only\">Mobile Navigation Menu</h2>\r\n          \r\n          {/* Mobile Navigation Links */}\r\n          <nav aria-label=\"Mobile navigation\" className=\"space-y-2\">\r\n            {(() => {\r\n              const handleClick = () => {\r\n                document.documentElement.style.overflow = '';\r\n                setOpen(false);\r\n              };\r\n              \r\n              return NAV_LINKS.filter(link => {\r\n                if (link.name === 'Reviews') return hasReviews;\r\n                return true;\r\n              }).map(link => {\r\n              \r\n              return link.isFAQ ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#faq'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : link.isGallery ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#gallery'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : link.name === 'Reviews' ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#reviews'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : link.name === 'Home' ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#top'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : link.name === 'Services' ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#services'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : (\r\n                <a\r\n                  key={link.name}\r\n                  href={link.href}\r\n                  onClick={handleClick}\r\n                  className=\"nav-link block w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Navigate to ${link.name} page`}\r\n                >\r\n                  {link.name}\r\n                </a>\r\n              );\r\n              });\r\n            })()}\r\n            \r\n            {/* Mobile-only Contact link */}\r\n            <button\r\n              onClick={() => { \r\n                handleSectionClick('#footer'); \r\n                const closeMobileMenu = () => {\r\n                  document.documentElement.style.overflow = '';\r\n                  setOpen(false);\r\n                };\r\n                closeMobileMenu();\r\n              }}\r\n              className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n              aria-label=\"Scroll to Contact section\"\r\n            >\r\n              Contact\r\n            </button>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { CTAButtons } from '@/shared/ui';\r\n\r\ninterface CTAProps {\r\n  className?: string;\r\n  onRequestQuote?: () => void;\r\n}\r\n\r\nconst CTA: React.FC<CTAProps> = ({ \r\n  className = \"\",\r\n  onRequestQuote \r\n}) => {\r\n  return (\r\n    <CTAButtons \r\n      className={className}\r\n      bookNowProps={{}}\r\n      getQuoteProps={{\r\n        onClick: onRequestQuote\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line react-refresh/only-export-components -- Default export required for component\r\nexport default CTA;\r\n","import React from 'react';\r\n\r\ninterface TextDisplayProps {\r\n  title: string;\r\n  subtitle: string;\r\n  className?: string;\r\n}\r\n\r\nconst TextDisplay: React.FC<TextDisplayProps> = ({ \r\n  title, \r\n  subtitle,\r\n  className = \"\" \r\n}) => {\r\n  return (\r\n    <div className={`text-center text-white max-w-4xl mx-auto px-4 sm:px-6 ${className}`}>\r\n      <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold mb-1 sm:mb-4 md:mb-6 [text-wrap:balance] leading-tight\">\r\n        {title}\r\n      </h1>\r\n      <p className=\"text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl text-gray-200 leading-relaxed\">\r\n        {subtitle}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextDisplay;\r\n","import React from 'react';\r\n\r\nimport { ReviewsSummary } from '@/shared/ui';\r\n\r\nimport CTA from './CTA';\r\nimport TextDisplay from './TextDisplay';\r\n\r\ninterface ContentContainerProps {\r\n  title: string;\r\n  subtitle: string;\r\n  onRequestQuote?: () => void;\r\n  className?: string;\r\n}\r\n\r\nconst ContentContainer: React.FC<ContentContainerProps> = ({ \r\n  title, \r\n  subtitle,\r\n  onRequestQuote,\r\n  className = \"\" \r\n}) => {\r\n  return (\r\n    <div className={`flex flex-col items-center justify-end h-full ${className}`}>\r\n      <TextDisplay \r\n        title={title} \r\n        subtitle={subtitle}\r\n        className=\"mb-0 sm:mb-8\" \r\n      />\r\n      <CTA onRequestQuote={onRequestQuote} />\r\n      <ReviewsSummary \r\n        variant=\"compact\" \r\n        className=\"mt-0 sm:mt-6 text-base sm:text-lg md:text-xl\" \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","import { useWebsiteContent } from '@/shared/contexts/WebsiteContentContext';\r\nimport { useIndustrySiteData } from '@/shared/hooks/useIndustrySiteData';\r\nimport type { LocationPage } from '@/shared/types/location';\r\n\r\ninterface UseHeroContentReturn {\r\n  title: string;\r\n  subtitle: string;\r\n  isLocation: boolean;\r\n  locationName: string;\r\n}\r\n\r\ninterface UseHeroContentProps {\r\n  locationData?: LocationPage;\r\n}\r\n\r\nexport const useHeroContent = (props?: UseHeroContentProps): UseHeroContentReturn => {\r\n  // Get industry-specific site data\r\n  const { siteData } = useIndustrySiteData();\r\n  \r\n  // Always call hooks unconditionally\r\n  const { content: websiteContent } = useWebsiteContent();\r\n  \r\n  // Use passed locationData as fallback\r\n  const locationData = props?.locationData;\r\n  \r\n  // All sites are now tenant-based, so use database content or industry-specific site data\r\n  // Priority: Database content > Industry-specific site data > Fallback\r\n  const title = String(websiteContent?.hero_title || siteData?.hero.h1 || 'Professional Services');\r\n  const subtitle = String(websiteContent?.hero_subtitle || siteData?.hero.sub || 'Quality service for your needs');\r\n\r\n  return {\r\n    title,\r\n    subtitle,\r\n    isLocation: false, // All sites are now tenant-based\r\n    locationName: locationData?.city ?? ''\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport { useImageRotation } from '@/shared/hooks';\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport { getTransitionStyles } from '@/shared/utils/imageRotation';\r\n// Available when needed: toAvif, toWebp for modern image format support\r\n\r\ninterface HeroImage {\r\n  url: string;\r\n  mobileUrl?: string; // Optional mobile-specific image (portrait orientation)\r\n  alt: string;\r\n  width?: number;\r\n  height?: number;\r\n  priority?: boolean;\r\n}\r\n\r\ninterface ImageCarouselProps {\r\n  autoRotate?: boolean;\r\n  interval?: number;\r\n}\r\n\r\nconst ImageCarousel: React.FC<ImageCarouselProps> = ({ \r\n  autoRotate = true, \r\n  interval = 7000\r\n}) => {\r\n  const { siteConfig } = useData();\r\n  \r\n  // Get hero images from main site config\r\n  const heroImages = (siteConfig?.hero as { Images?: HeroImage[] } | undefined)?.Images || [];\r\n  const imageData: HeroImage[] = heroImages;\r\n  const images: string[] = imageData.map(img => img.url);\r\n\r\n  // Use the new image rotation utility (must be called unconditionally)\r\n  const rotation = useImageRotation({\r\n    images: images.length > 0 ? images : [''], // Provide dummy array if empty\r\n    autoRotate,\r\n    interval,\r\n    fadeDuration: 2000, // 2s fade duration to match original\r\n    preloadNext: true,\r\n    pauseOnHover: false // Hero doesn't need hover pause\r\n  });\r\n\r\n  const { currentIndex } = rotation;\r\n  \r\n  // Guard: nothing to render (must be after ALL hooks)\r\n  if (images.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 pointer-events-none\" aria-hidden=\"true\">\r\n      {images.map((image, index) => {\r\n        const imgData: HeroImage | undefined = imageData[index];\r\n        const desktopUrl = image;\r\n        const mobileUrl = imgData?.mobileUrl;\r\n\r\n        return (\r\n          <div\r\n            key={index}\r\n            className=\"absolute inset-0\"\r\n            style={getTransitionStyles(2000)}\r\n          >\r\n            {mobileUrl ? (\r\n              <>\r\n                {/* Mobile portrait (≤640px) */}\r\n                <img\r\n                  src={mobileUrl}\r\n                  alt={imgData.alt || ''}\r\n                  className=\"absolute inset-0 w-full h-full object-cover object-top sm:hidden\"\r\n                  style={{\r\n                    opacity: index === currentIndex ? 1 : 0,\r\n                    transition: 'opacity 2s ease-in-out',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    zIndex: index === currentIndex ? 2 : 1\r\n                  }}\r\n                  loading={index === 0 ? 'eager' : 'lazy'}\r\n                  decoding=\"async\"\r\n                />\r\n                {/* Tablet/Desktop (≥640px) */}\r\n                <img\r\n                  src={desktopUrl}\r\n                  alt={imgData.alt || ''}\r\n                  className=\"absolute inset-0 w-full h-full object-cover object-center hidden sm:block\"\r\n                  style={{\r\n                    opacity: index === currentIndex ? 1 : 0,\r\n                    transition: 'opacity 2s ease-in-out',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    zIndex: index === currentIndex ? 2 : 1\r\n                  }}\r\n                  loading={index === 0 ? 'eager' : 'lazy'}\r\n                  decoding=\"async\"\r\n                />\r\n              </>\r\n            ) : (\r\n              <img\r\n                src={desktopUrl}\r\n                alt={imgData?.alt || ''}\r\n                className=\"absolute inset-0 w-full h-full object-cover object-top sm:object-center\"\r\n                style={{\r\n                  opacity: index === currentIndex ? 1 : 0,\r\n                  transition: 'opacity 2s ease-in-out',\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  zIndex: index === currentIndex ? 2 : 1\r\n                }}\r\n                loading={index === 0 ? 'eager' : 'lazy'}\r\n                decoding=\"async\"\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/40 to-black/30 pointer-events-none\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","import React from 'react';\r\n\r\nimport { useHeroContent } from '@/features/hero/hooks/useHeroContent';\r\nimport { BREAKPOINTS, useMediaQuery } from '@/shared/hooks';\r\n\r\nimport ContentContainer from './ContentContainer';\r\nimport ImageCarousel from './ImageCarousel';\r\n\r\ninterface HeroProps {\r\n  onRequestQuote?: () => void;\r\n}\r\n\r\nconst Hero: React.FC<HeroProps> = ({ onRequestQuote }) => {\r\n  const { title, subtitle } = useHeroContent({});\r\n  const isSmallMobile = useMediaQuery(`(max-width: ${BREAKPOINTS.sm - 1}px)`);\r\n\r\n  return (\r\n    <section \r\n      id=\"top\" \r\n      className=\"relative isolate overflow-hidden h-[100dvh] sm:h-screen flex items-end justify-center snap-start snap-always\"\r\n    >\r\n      {/* Background layer - carousel */}\r\n      <div className=\"absolute inset-0 -z-10\" style={{ top: '-72px', height: 'calc(100% + 72px)' }}>\r\n        <ImageCarousel />\r\n      </div>\r\n      \r\n      {/* Foreground content */}\r\n      <main\r\n        id=\"main\"\r\n        className=\"relative z-10 w-full\"\r\n        style={{ \r\n          marginTop: '72px',\r\n          paddingBottom: isSmallMobile ? '56px' : '7rem'\r\n        }}\r\n      >\r\n        <ContentContainer \r\n          title={title} \r\n          subtitle={subtitle}\r\n          {...(onRequestQuote && { onRequestQuote })}\r\n          className=\"\"\r\n        />\r\n      </main>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\n\r\nimport type { Review } from '../types';\r\n\r\ninterface ReviewCardProps {\r\n  review: Review;\r\n  onReviewClick?: (review: Review) => void;\r\n}\r\n\r\nconst ReviewCard: React.FC<ReviewCardProps> = ({ review, onReviewClick }) => {\r\n  const handleClick = () => {\r\n    onReviewClick?.(review);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      onReviewClick?.(review);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"relative bg-white/10 backdrop-blur-sm rounded-lg p-6 md:p-8 lg:p-9 cursor-pointer hover:bg-white/20 transition-colors\"\r\n      onClick={handleClick}\r\n      onKeyDown={handleKeyDown}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      aria-label={`Review by ${review.customerName}`}\r\n    >\r\n      <div className=\"flex items-center mb-4 md:mb-5 lg:mb-6\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center text-white font-semibold overflow-hidden\">\r\n            {review.profileImage ? (\r\n              <picture>\r\n                <source\r\n                  type=\"image/webp\"\r\n                  srcSet={`${review.profileImage.replace(/\\.(png|jpg|jpeg)$/i, '.webp')} 64w`}\r\n                  sizes=\"64px\"\r\n                />\r\n                <img \r\n                  src={review.profileImage} \r\n                  alt={review.customerName}\r\n                  className=\"w-full h-full object-cover rounded-full\"\r\n                  width={64}\r\n                  height={64}\r\n                  loading=\"lazy\"\r\n                  decoding=\"async\"\r\n                />\r\n              </picture>\r\n            ) : (\r\n              review.customerName.charAt(0).toUpperCase()\r\n            )}\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-white font-semibold text-lg\">{review.customerName}</h3>\r\n            <div className=\"flex items-center\">\r\n              {Array.from({ length: 5 }).map((_, i) => (\r\n                <span\r\n                  key={i}\r\n                  className={`text-2xl ${\r\n                    i < review.rating ? 'text-yellow-400' : 'text-gray-400'\r\n                  }`}\r\n                >\r\n                  ★\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Review Content - Word Count Based */}\r\n      <div className=\"flex flex-col justify-start pb-16\">\r\n        {/* Review Title */}\r\n        {review.title && (\r\n          <h5 className=\"text-white font-medium mb-2 text-base\">\r\n            {review.title.split(' ').slice(0, 8).join(' ')}\r\n            {review.title.split(' ').length > 8 && '...'}\r\n          </h5>\r\n        )}\r\n\r\n        <p className=\"text-gray-300 text-base leading-relaxed\">\r\n          {review.reviewText.split(' ').slice(0, 25).join(' ')}\r\n          {review.reviewText.split(' ').length > 25 && '...'}\r\n        </p>\r\n      </div>\r\n\r\n      {/* Service Category and Review Source Icon - Fixed Bottom */}\r\n      <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between\">\r\n        <div>\r\n          {review.serviceCategory && (\r\n            <span className=\"text-sm bg-white/20 text-white px-3 py-2 rounded-full\">\r\n              {review.serviceCategory}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {review.reviewSource && (\r\n            <picture>\r\n              <source\r\n                type=\"image/webp\"\r\n                srcSet={`/shared/icons/${review.reviewSource}.webp`}\r\n                sizes=\"20px\"\r\n              />\r\n              <img \r\n                src={`/shared/icons/${review.reviewSource}.png`}\r\n                alt={review.reviewSource}\r\n                className=\"w-5 h-5 rounded\"\r\n                width={20}\r\n                height={20}\r\n                loading=\"lazy\"\r\n                decoding=\"async\"\r\n              />\r\n            </picture>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewCard;\r\n","import React from 'react';\r\n\r\nimport type { Review } from '../types/types';\r\n\r\ninterface ReviewModalProps {\r\n  review: Review | null;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ReviewModal: React.FC<ReviewModalProps> = ({ review, isOpen, onClose }) => {\r\n  if (!isOpen || !review) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-stone-900 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto border border-stone-700\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-between items-start mb-4\">\r\n            <h3 className=\"text-2xl font-bold text-white\">Review Details</h3>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-orange-400 text-2xl transition-colors\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              {review.reviewerUrl ? (\r\n                <a \r\n                  href={review.reviewerUrl}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center text-white font-semibold text-xl overflow-hidden hover:bg-orange-600 transition-colors\"\r\n                >\r\n                  {review.profileImage ? (\r\n                    <picture>\r\n                      <source\r\n                        type=\"image/webp\"\r\n                        srcSet={`${review.profileImage.replace(/\\.(png|jpg|jpeg)$/i, '.webp')} 64w`}\r\n                        sizes=\"64px\"\r\n                      />\r\n                      <img \r\n                        src={review.profileImage} \r\n                        alt={review.customerName}\r\n                        className=\"w-full h-full object-cover rounded-full\"\r\n                        width={64}\r\n                        height={64}\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                      />\r\n                    </picture>\r\n                  ) : (\r\n                    review.customerName.charAt(0).toUpperCase()\r\n                  )}\r\n                </a>\r\n              ) : (\r\n                <div className=\"w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center text-white font-semibold text-xl overflow-hidden\">\r\n                  {review.profileImage ? (\r\n                    <picture>\r\n                      <source\r\n                        type=\"image/webp\"\r\n                        srcSet={`${review.profileImage.replace(/\\.(png|jpg|jpeg)$/i, '.webp')} 64w`}\r\n                        sizes=\"64px\"\r\n                      />\r\n                      <img \r\n                        src={review.profileImage} \r\n                        alt={review.customerName}\r\n                        className=\"w-full h-full object-cover rounded-full\"\r\n                        width={64}\r\n                        height={64}\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                      />\r\n                    </picture>\r\n                  ) : (\r\n                    review.customerName.charAt(0).toUpperCase()\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div>\r\n                {review.reviewerUrl ? (\r\n                  <a \r\n                    href={review.reviewerUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-xl font-semibold text-white hover:text-orange-400 transition-colors\"\r\n                  >\r\n                    {review.customerName}\r\n                  </a>\r\n                ) : (\r\n                  <h4 className=\"text-xl font-semibold text-white\">{review.customerName}</h4>\r\n                )}\r\n                <div className=\"flex items-center\">\r\n                  {Array.from({ length: 5 }, (_, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className={`text-xl ${\r\n                        i < review.rating ? 'text-yellow-400' : 'text-gray-300'\r\n                      }`}\r\n                    >\r\n                      ★\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              {review.reviewSource && review.reviewerUrl && (\r\n                <a \r\n                  href={review.reviewerUrl}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"hover:opacity-80 transition-opacity\"\r\n                >\r\n                  <picture>\r\n                    <source\r\n                      type=\"image/webp\"\r\n                      srcSet={`/shared/icons/${review.reviewSource}.webp`}\r\n                      sizes=\"32px\"\r\n                    />\r\n                    <img \r\n                      src={`/shared/icons/${review.reviewSource}.png`}\r\n                      alt={review.reviewSource}\r\n                      className=\"w-8 h-8 rounded\"\r\n                      width={32}\r\n                      height={32}\r\n                      loading=\"lazy\"\r\n                      decoding=\"async\"\r\n                    />\r\n                  </picture>\r\n                </a>\r\n              )}\r\n              {review.reviewSource && !review.reviewerUrl && (\r\n                <picture>\r\n                  <source\r\n                    type=\"image/webp\"\r\n                    srcSet={`/shared/icons/${review.reviewSource}.webp`}\r\n                    sizes=\"32px\"\r\n                  />\r\n                  <img \r\n                    src={`/shared/icons/${review.reviewSource}.png`}\r\n                    alt={review.reviewSource}\r\n                    className=\"w-8 h-8 rounded\"\r\n                    width={32}\r\n                    height={32}\r\n                    loading=\"lazy\"\r\n                    decoding=\"async\"\r\n                  />\r\n                </picture>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Review Title */}\r\n          {review.title && (\r\n            <h5 className=\"text-lg font-medium text-white mb-3\">\r\n              {review.title}\r\n            </h5>\r\n          )}\r\n          \r\n          <p className=\"text-gray-300 leading-relaxed mb-4\">\r\n            {review.reviewText}\r\n          </p>\r\n\r\n          {/* Additional Info */}\r\n          <div className=\"flex flex-wrap gap-2 mb-4\">\r\n            {review.serviceCategory && (\r\n              <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-orange-500/20 text-orange-400 border border-orange-500/30\">\r\n                {review.serviceCategory}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewModal;\r\n","import React, { useRef, useState } from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\n\r\nimport { useIsMobile, useIsTablet } from '@/shared/hooks';\r\n\r\nimport type { Review } from '../types';\r\nimport ReviewCard from './ReviewCard';\r\n\r\ninterface ReviewsCarouselProps {\r\n  reviews: Review[];\r\n  onReviewClick?: (review: Review) => void;\r\n  maxVisible?: number;\r\n}\r\n\r\nconst ReviewsCarousel: React.FC<ReviewsCarouselProps> = ({ \r\n  reviews, \r\n  onReviewClick,\r\n  maxVisible = 3\r\n}) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const touchStartX = useRef<number | null>(null);\r\n  const touchEndX = useRef<number | null>(null);\r\n\r\n  // Determine how many reviews to show based on screen size\r\n  // Mobile: 1, Tablet: 2, Desktop: 3\r\n  const isMobile = useIsMobile();\r\n  const isTablet = useIsTablet();\r\n  const visibleCount = isMobile ? 1 : isTablet ? 2 : maxVisible;\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentIndex((prev) => (prev > 0 ? prev - 1 : reviews.length - 1));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentIndex((prev) => (prev < reviews.length - 1 ? prev + 1 : 0));\r\n  };\r\n\r\n  // Touch/swipe handlers\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    touchStartX.current = e.touches[0]?.clientX ?? null;\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    touchEndX.current = e.touches[0]?.clientX ?? null;\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    if (touchStartX.current === null || touchEndX.current === null) return;\r\n    \r\n    const diff = touchStartX.current - touchEndX.current;\r\n    const minSwipeDistance = 50;\r\n    \r\n    if (Math.abs(diff) > minSwipeDistance) {\r\n      if (diff > 0) {\r\n        // Swiped left - show next\r\n        handleNext();\r\n      } else {\r\n        // Swiped right - show previous\r\n        handlePrevious();\r\n      }\r\n    }\r\n    \r\n    touchStartX.current = null;\r\n    touchEndX.current = null;\r\n  };\r\n\r\n  const getVisibleReviews = () => {\r\n    // Mobile: show 1 review only\r\n    if (isMobile) {\r\n      return [reviews[currentIndex]].filter(Boolean);\r\n    }\r\n    \r\n    // Desktop/Tablet: show multiple reviews\r\n    const visible: Review[] = [];\r\n    for (let i = 0; i < visibleCount; i++) {\r\n      const index = (currentIndex + i) % reviews.length;\r\n      const review = reviews[index];\r\n      if (review) {\r\n        visible.push(review);\r\n      }\r\n    }\r\n    return visible;\r\n  };\r\n\r\n  if (reviews.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <p className=\"text-gray-300 text-lg\">No reviews available</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative w-full max-w-6xl mx-auto\">\r\n      {/* Navigation Arrows - Hidden on mobile, shown on desktop */}\r\n      {reviews.length > 1 && (\r\n        <>\r\n          <button\r\n            onClick={handlePrevious}\r\n            className=\"hidden md:flex absolute -left-12 top-1/2 -translate-y-1/2 z-20 bg-orange-500 hover:bg-orange-600 text-white p-3 rounded-full transition-colors shadow-lg items-center justify-center\"\r\n            aria-label=\"Previous review\"\r\n          >\r\n            <ChevronLeft className=\"h-5 w-5\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleNext}\r\n            className=\"hidden md:flex absolute -right-12 top-1/2 -translate-y-1/2 z-20 bg-orange-500 hover:bg-orange-600 text-white p-3 rounded-full transition-colors shadow-lg items-center justify-center\"\r\n            aria-label=\"Next review\"\r\n          >\r\n            <ChevronRight className=\"h-5 w-5\" />\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {/* Reviews Container - Swipeable on mobile */}\r\n      <div \r\n        className=\"px-4 md:px-0\"\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n      >\r\n        {/* Mobile: 1 review, Tablet: 2 reviews, Desktop: 3 reviews */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {getVisibleReviews().map((review) => (\r\n            <ReviewCard\r\n              key={review.id}\r\n              review={review}\r\n              onReviewClick={onReviewClick}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Dots Indicator - Show on mobile for swipe feedback */}\r\n      {reviews.length > 1 && (\r\n        <div className=\"flex justify-center mt-4 md:mt-8 space-x-2\">\r\n          {reviews.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => { setCurrentIndex(index); }}\r\n              className={`w-2 h-2 md:w-3 md:h-3 rounded-full transition-colors ${\r\n                currentIndex === index\r\n                  ? 'bg-orange-500'\r\n                  : 'bg-gray-400 hover:bg-gray-300'\r\n              }`}\r\n              aria-label={`Go to review ${index + 1}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsCarousel;\r\n","import React from 'react';\r\n\r\ninterface ReviewsHeaderProps {\r\n  title?: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst ReviewsHeader: React.FC<ReviewsHeaderProps> = ({\r\n  title = \"Customer Reviews\",\r\n  subtitle = \"See what our customers are saying about our mobile detailing services\"\r\n}) => {\r\n  return (\r\n    <div className=\"text-center mb-12\">\r\n      <h2 className=\"text-4xl md:text-5xl font-bold text-white mb-4\">\r\n        {title}\r\n      </h2>\r\n      <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\r\n        {subtitle}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsHeader;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport ReviewsSummary from '@/shared/ui/ReviewsSummary';\r\nimport { getImageOpacityClasses, getTransitionStyles } from '@/shared/utils';\r\n\r\nimport { useReviews, useReviewsContent, useRotatingReviews } from '../hooks';\r\nimport type { Review, ReviewQueryParams, ReviewsProps } from '../types/types';\r\nimport ReviewModal from './ReviewModal';\r\nimport ReviewsCarousel from './ReviewsCarousel';\r\nimport ReviewsHeader from './ReviewsHeader';\r\n\r\nconst Reviews: React.FC<ReviewsProps> = ({\r\n  maxReviews = 50,\r\n  tenantSlug,\r\n  customHeading,\r\n  customIntro,\r\n  feedKey,\r\n  locationData\r\n}) => {\r\n  const [selectedReview, setSelectedReview] = useState<Review | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  \r\n  // Get content from database (with fallbacks)\r\n  const { title, subtitle } = useReviewsContent({ locationData, customHeading, customIntro });\r\n  \r\n  // Get tenant context\r\n  let isTenant = false;\r\n  try {\r\n    const tenantData = useData();\r\n    isTenant = tenantData.isTenant || false;\r\n  } catch {\r\n    // Not in tenant context, so it's main site\r\n    isTenant = false;\r\n  }\r\n\r\n  // Build query parameters based on props and site context\r\n  const queryParams: ReviewQueryParams = {\r\n    limit: maxReviews\r\n  };\r\n\r\n  // Add tenant slug if provided\r\n  if (tenantSlug) {\r\n    queryParams.tenant_slug = tenantSlug;\r\n  }\r\n\r\n  // TODO: Implement feedKey for GBP/Yelp integration\r\n  // The feedKey prop is available for future implementation of external review feeds\r\n  // Example: feedKey: \"gbp:bullhead-city-az\" for Google Business Profile\r\n  // Example: feedKey: \"yelp:las-vegas-nv\" for Yelp integration\r\n  const finalFeedKey = feedKey || (locationData as { reviewsSection?: { feedKey?: string } } | undefined)?.reviewsSection?.feedKey;\r\n  // FeedKey available for future implementation\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- Reserved for future use\r\n  const _feedKey = finalFeedKey;\r\n\r\n  if (isTenant) {\r\n    // For tenant sites, use the tenant slug from the URL\r\n    const urlSlug = window.location.pathname.split('/')[1];\r\n    if (urlSlug) {\r\n      queryParams.tenant_slug = urlSlug;\r\n    }\r\n  }\r\n\r\n  // Fetch reviews from database\r\n  const { reviews, loading, error } = useReviews(queryParams);\r\n  \r\n\r\n  // Use rotating review images as background\r\n  const { images: backgroundImages, currentIndex, loading: _backgroundLoading } = useRotatingReviews(reviews);\r\n\r\n  const handleReviewClick = (review: Review) => {\r\n    setSelectedReview(review);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedReview(null);\r\n  };\r\n\r\n  // Show loading state\r\n  if (loading) {\r\n    return (\r\n      <section id=\"reviews\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n        {/* Rotating Background Images with Overlay */}\r\n        <div className=\"absolute inset-0 z-0\">\r\n          {backgroundImages.map((image, index) => (\r\n            <img\r\n              key={image}\r\n              src={image}\r\n              alt={`Customer reviews background ${index + 1}`}\r\n              className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n              style={getTransitionStyles(2000)}\r\n              decoding={index === 0 ? 'sync' : 'async'}\r\n              loading={index === 0 ? 'eager' : 'lazy'}\r\n            />\r\n          ))}\r\n          {/* Dark overlay */}\r\n          <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n        </div>\r\n        <div className=\"relative z-10 h-full flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto mb-4\"></div>\r\n            <p className=\"text-white text-lg\">Loading reviews...</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // Show error state\r\n  if (error) {\r\n    return (\r\n      <section id=\"reviews\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n        {/* Rotating Background Images with Overlay */}\r\n        <div className=\"absolute inset-0 z-0\">\r\n          {backgroundImages.map((image, index) => (\r\n            <img\r\n              key={image}\r\n              src={image}\r\n              alt={`Customer reviews background ${index + 1}`}\r\n              className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n              style={getTransitionStyles(2000)}\r\n              decoding={index === 0 ? 'sync' : 'async'}\r\n              loading={index === 0 ? 'eager' : 'lazy'}\r\n            />\r\n          ))}\r\n          {/* Dark overlay */}\r\n          <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n        </div>\r\n        <div className=\"relative z-10 h-full flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-red-400 text-lg mb-4\">Error loading reviews</p>\r\n            <p className=\"text-white text-sm\">{error}</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // Show empty state\r\n  if (!reviews.length) {\r\n    return (\r\n      <section id=\"reviews\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n        {/* Rotating Background Images with Overlay */}\r\n        <div className=\"absolute inset-0 z-0\">\r\n          {backgroundImages.map((image, index) => (\r\n            <img\r\n              key={image}\r\n              src={image}\r\n              alt={`Customer reviews background ${index + 1}`}\r\n              className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n              style={getTransitionStyles(2000)}\r\n              decoding={index === 0 ? 'sync' : 'async'}\r\n              loading={index === 0 ? 'eager' : 'lazy'}\r\n            />\r\n          ))}\r\n          {/* Dark overlay */}\r\n          <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n        </div>\r\n        <div className=\"relative z-10 h-full flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-white text-lg\">No reviews available</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section id=\"reviews\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n      <div className=\"h-full pt-[80px] md:pt-[88px]\">\r\n      {/* Rotating Background Images with Overlay */}\r\n      <div className=\"absolute inset-0 z-0\">\r\n        {backgroundImages.map((image, index) => (\r\n          <img\r\n            key={image}\r\n            src={image}\r\n            alt={`Customer reviews background ${index + 1}`}\r\n            className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n            style={getTransitionStyles(2000)}\r\n            decoding={index === 0 ? 'sync' : 'async'}\r\n            loading={index === 0 ? 'eager' : 'lazy'}\r\n          />\r\n        ))}\r\n        {/* Dark overlay */}\r\n        <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n      </div>\r\n      \r\n      {/* Content */}\r\n      <div className=\"relative z-10 h-full flex flex-col items-center justify-start md:justify-center px-4 pt-[20px] md:pt-0\">\r\n        <div className=\"max-w-6xl mx-auto w-full\">\r\n          <ReviewsHeader \r\n            title={title}\r\n            subtitle={subtitle}\r\n          />\r\n          <ReviewsSummary className=\"mb-8\" />\r\n          <ReviewsCarousel \r\n            reviews={reviews}\r\n            onReviewClick={handleReviewClick}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <ReviewModal\r\n        review={selectedReview}\r\n        isOpen={isModalOpen}\r\n        onClose={handleCloseModal}\r\n      />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { ServiceCardProps } from '@/features/services/types/service.types';\n\nconst ServiceCard: React.FC<ServiceCardProps> = ({ \n  service, \n  className = \"\" \n}) => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  \n  const handleClick = () => {\n    // Preserve preview token if present\n    const token = searchParams.get('t');\n    const route = token ? `${service.route}?t=${token}` : service.route;\n    void navigate(route);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      const token = searchParams.get('t');\n      const route = token ? `${service.route}?t=${token}` : service.route;\n      void navigate(route);\n    }\n  };\n  \n  return (\n    <li>\n      <div\n        onClick={handleClick}\n        onKeyDown={handleKeyDown}\n        role=\"button\"\n        tabIndex={0}\n        aria-label={`View ${service.title}`}\n        className={`group relative block rounded-lg overflow-hidden shadow-lg transition-transform duration-300 hover:-translate-y-2 hover:shadow-xl cursor-pointer ${className}`}\n      >\n        <div className=\"h-40 sm:h-64 lg:h-[24rem] xl:h-[28rem]\">\n          <img \n            src={service.imageUrl} \n            alt=\"\" /* decorative; title is visible text */\n            loading={service.imagePriority ? \"eager\" : \"lazy\"}\n            decoding={service.imagePriority ? \"sync\" : \"async\"}\n            // eslint-disable-next-line react/no-unknown-property -- fetchPriority is a valid HTML attribute\n            {...(service.imagePriority && { fetchPriority: 'high' as const })}\n            width={service.imageWidth || 600}\n            height={service.imageHeight || 400}\n            className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n          />\n        </div>\n        \n        {/* Content Overlay */}\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent\">\n          <div className=\"absolute bottom-0 left-0 right-0 p-3 sm:p-6 lg:p-8 text-white text-center\">\n            <h3 className=\"text-base sm:text-xl lg:text-2xl font-semibold\">\n              {service.title}\n            </h3>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ServiceCard;\n","/**\r\n * Utility functions for generating Schema.org structured data\r\n * from location configuration data\r\n * \r\n * Industry-agnostic: All functions accept site config as parameter\r\n */\r\n\r\nimport type { LocationPage, MainSiteConfig } from '@/shared/types/location';\r\n\r\n/**\r\n * Automatically generate Schema.org image array from location images\r\n * Filters images by role and returns their URLs\r\n */\r\nexport function generateSchemaImages(\r\n  locationData: LocationPage, \r\n  roles: string[] = ['hero']\r\n): string[] {\r\n  if (!locationData.images) {\r\n    return [];\r\n  }\r\n\r\n  return locationData.images\r\n    .filter(img => roles.includes(img.role))\r\n    .map(img => img.url);\r\n}\r\n\r\n/**\r\n * Generate complete Schema.org LocalBusiness structure\r\n * from location data with automatic image population and enhanced fields\r\n */\r\nexport function generateLocationSchema(\r\n  locationData: LocationPage,\r\n  siteConfig: MainSiteConfig\r\n): Record<string, unknown> {\r\n  // Get hero images automatically\r\n  const heroImages = generateSchemaImages(locationData, ['hero']);\r\n  \r\n  // Auto-generate area served from postal codes, neighborhoods, and city\r\n  const areaServed = [\r\n    locationData.city,\r\n    ...(locationData.serviceArea?.postalCodes || []),\r\n    ...(locationData.neighborhoods || []).map(n => `${n}, ${locationData.stateCode}`)\r\n  ];\r\n\r\n  // Base schema structure with auto-generated fields\r\n  const domain = window.location.host;\r\n  \r\n  const baseSchema = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"LocalBusiness\",\r\n    \"name\": locationData.header?.businessName || `${locationData.city} ${siteConfig.brand}`,\r\n    \"url\": `https://${domain}${locationData.urlPath}`,\r\n    \"telephone\": locationData.header?.phoneE164 || siteConfig.contact?.phone,\r\n    \"address\": {\r\n      \"@type\": \"PostalAddress\",\r\n      \"addressLocality\": locationData.city,  // Auto-generated\r\n      \"addressRegion\": locationData.stateCode,  // Auto-generated\r\n      \"postalCode\": locationData.postalCode || \"\"  // Auto-generated from location data\r\n    },\r\n    \"areaServed\": areaServed,  // Auto-generated\r\n    \"geo\": {\r\n      \"@type\": \"GeoCoordinates\",\r\n      \"latitude\": locationData.latitude,\r\n      \"longitude\": locationData.longitude\r\n    },\r\n    \"sameAs\": [\r\n      siteConfig.socials?.facebook,\r\n      siteConfig.socials?.instagram,\r\n      siteConfig.socials?.youtube,\r\n      siteConfig.socials?.googleBusiness\r\n    ].filter(Boolean),\r\n    \"description\": locationData.seo.description || `Professional ${siteConfig.brand} services in ${locationData.city}, ${locationData.stateCode}`,\r\n    \"priceRange\": \"$$\",\r\n    \"currenciesAccepted\": \"USD\",\r\n    \"paymentAccepted\": [\"Cash\", \"Credit Card\", \"Debit Card\", \"Check\"],\r\n    \"serviceType\": siteConfig.servicesGrid?.map(s => s.title) || []\r\n  };\r\n\r\n  // Add images if available\r\n  let schema = { ...baseSchema };\r\n  if (heroImages.length > 0) {\r\n    schema.image = heroImages;\r\n  }\r\n\r\n  // Add aggregate rating from site.json (global reviews)\r\n  if (siteConfig.reviews?.ratingValue && siteConfig.reviews.reviewCount) {\r\n    schema.aggregateRating = {\r\n      \"@type\": \"AggregateRating\",\r\n      \"ratingValue\": siteConfig.reviews.ratingValue,\r\n      \"reviewCount\": siteConfig.reviews.reviewCount.toString(),\r\n      \"bestRating\": \"5\",\r\n      \"worstRating\": \"1\"\r\n    };\r\n  }\r\n\r\n  // Note: Individual reviews are handled globally, not per location\r\n  // Reviews are managed through the main Reviews component and site.json\r\n\r\n  // Add business hours from top-level openingHours field\r\n  if (locationData.openingHours) {\r\n    schema.openingHours = locationData.openingHours;\r\n  }\r\n\r\n  // Add operational information for better service understanding\r\n  if (locationData.ops) {\r\n    const operationalInfo = getOperationalInfo(locationData);\r\n    \r\n    // Add service area information\r\n    schema.hasOfferCatalog = {\r\n      \"@type\": \"OfferCatalog\",\r\n      \"name\": \"Mobile Detailing Services\",\r\n      \"itemListElement\": [\r\n        {\r\n          \"@type\": \"Offer\",\r\n          \"itemOffered\": {\r\n            \"@type\": \"Service\",\r\n            \"name\": \"Mobile Auto Detailing\",\r\n            \"description\": `Professional mobile detailing within ${operationalInfo.serviceRadiusMiles} miles`,\r\n            \"areaServed\": {\r\n              \"@type\": \"GeoCircle\",\r\n              \"geoMidpoint\": {\r\n                \"@type\": \"GeoCoordinates\",\r\n                \"latitude\": locationData.latitude,\r\n                \"longitude\": locationData.longitude\r\n              },\r\n              \"geoRadius\": `${operationalInfo.serviceRadiusMiles * 1609.34}` // Convert miles to meters\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    // Add availability information\r\n    if (operationalInfo.acceptsSameDay) {\r\n      schema.availability = \"https://schema.org/InStock\";\r\n    }\r\n  }\r\n\r\n  // Add pricing information if available\r\n  if (locationData.pricingModifierPct !== undefined) {\r\n    const pricingValidation = validatePricingModifier(locationData.pricingModifierPct);\r\n    if (pricingValidation.isValid) {\r\n      schema.priceRange = pricingValidation.value === 0 \r\n        ? \"$$\" \r\n        : pricingValidation.value > 0 \r\n          ? \"$$$\" \r\n          : \"$\";\r\n    }\r\n  }\r\n\r\n  return schema;\r\n}\r\n\r\n/**\r\n * Generate FAQ Schema from location FAQs\r\n */\r\nexport function generateFAQSchema(faqs: Array<{ id?: string; q: string; a: string }>): Record<string, unknown> {\r\n  return {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"FAQPage\",\r\n    \"mainEntity\": faqs.map(faq => ({\r\n      \"@type\": \"Question\",\r\n      \"name\": faq.q,\r\n      \"acceptedAnswer\": {\r\n        \"@type\": \"Answer\",\r\n        \"text\": faq.a\r\n      }\r\n    }))\r\n  };\r\n}\r\n\r\n/**\r\n * Convert FAQItem format to generateFAQSchema format\r\n */\r\nexport function convertFAQItemsToSchemaFormat(faqItems: Array<{ \r\n  id?: string; \r\n  question: string; \r\n  answer: string; \r\n  category?: string; \r\n}>): Array<{ id?: string; q: string; a: string }> {\r\n  return faqItems.map(item => ({\r\n    id: item.id,\r\n    q: item.question,\r\n    a: item.answer\r\n  }));\r\n}\r\n\r\n/**\r\n * Get service-specific image from location data with fallback\r\n */\r\nexport function getServiceImageFromLocation(\r\n  locationData: LocationPage | null, \r\n  serviceRole: \"auto\" | \"marine\" | \"rv\", \r\n  fallbackImage: string\r\n): {\r\n  url: string;\r\n  alt: string;\r\n  width?: number;\r\n  height?: number;\r\n  priority?: boolean;\r\n} {\r\n  if (!locationData?.images || locationData.images.length === 0) {\r\n    return {\r\n      url: fallbackImage,\r\n      alt: \"Service image\",\r\n      width: 400,\r\n      height: 300,\r\n      priority: false\r\n    };\r\n  }\r\n\r\n  const serviceImage = locationData.images.find(img => img.role === serviceRole);\r\n  \r\n  if (serviceImage) {\r\n    return {\r\n      url: serviceImage.url,\r\n      alt: serviceImage.alt,\r\n      width: serviceImage.width || 400,\r\n      height: serviceImage.height || 300,\r\n      priority: serviceImage.priority || false\r\n    };\r\n  }\r\n\r\n  // Fallback to default image\r\n  return {\r\n    url: fallbackImage,\r\n    alt: \"Service image\",\r\n    width: 400,\r\n    height: 300,\r\n    priority: false\r\n  };\r\n}\r\n\r\n/**\r\n * Get operational information for a location\r\n */\r\nexport function getOperationalInfo(locationData: LocationPage): {\r\n  acceptsSameDay: boolean;\r\n  leadTimeDays: number;\r\n  serviceRadiusMiles: number;\r\n  leadTimeText: string;\r\n  serviceAreaText: string;\r\n} {\r\n  const ops = locationData.ops || {};\r\n  \r\n  return {\r\n    acceptsSameDay: ops.acceptsSameDay || false,\r\n    leadTimeDays: ops.leadTimeDays || 2,\r\n    serviceRadiusMiles: ops.serviceRadiusMiles || 25,\r\n    leadTimeText: ops.acceptsSameDay ? 'Same day available' : `${ops.leadTimeDays || 2} day lead time`,\r\n    serviceAreaText: `${ops.serviceRadiusMiles || 25} mile service radius`\r\n  };\r\n}\r\n\r\n/**\r\n * Check if a postal code is served by a location\r\n */\r\nexport function isPostalCodeServed(locationData: LocationPage, postalCode: string): boolean {\r\n  if (!locationData.serviceArea?.postalCodes) {\r\n    return false;\r\n  }\r\n  \r\n  return locationData.serviceArea.postalCodes.includes(postalCode);\r\n}\r\n\r\n/**\r\n * Get service area information for a location\r\n */\r\nexport function getServiceAreaInfo(locationData: LocationPage): {\r\n  postalCodes: string[];\r\n  postalCodeCount: number;\r\n  serviceAreaText: string;\r\n  primaryPostalCode: string;\r\n} {\r\n  const postalCodes = locationData.serviceArea?.postalCodes || [];\r\n  \r\n  return {\r\n    postalCodes,\r\n    postalCodeCount: postalCodes.length,\r\n    serviceAreaText: postalCodes.length > 0 \r\n      ? `We serve ${postalCodes.length} ZIP code${postalCodes.length === 1 ? '' : 's'} in ${locationData.city}`\r\n      : `Service area: ${locationData.city}`,\r\n    primaryPostalCode: postalCodes[0] || locationData.postalCode\r\n  };\r\n}\r\n\r\n/**\r\n * Validate and format pricing modifier\r\n */\r\nexport function validatePricingModifier(pricingModifierPct?: number): {\r\n  isValid: boolean;\r\n  value: number;\r\n  percentage: number;\r\n  displayText: string;\r\n  error?: string;\r\n} {\r\n  // Default to no markup if not provided\r\n  const value = pricingModifierPct ?? 0;\r\n  const percentage = value * 100;\r\n\r\n  // Validate range (reasonable limits: -50% to +100%)\r\n  if (value < -0.5 || value > 1.0) {\r\n    return {\r\n      isValid: false,\r\n      value,\r\n      percentage,\r\n      displayText: `${percentage.toFixed(1)}%`,\r\n      error: 'Pricing modifier must be between -0.50 (-50%) and 1.00 (+100%)'\r\n    };\r\n  }\r\n\r\n  // Format display text\r\n  let displayText: string;\r\n  if (value === 0) {\r\n    displayText = 'Standard pricing';\r\n  } else if (value > 0) {\r\n    displayText = `+${percentage.toFixed(1)}% markup`;\r\n  } else {\r\n    displayText = `${percentage.toFixed(1)}% discount`;\r\n  }\r\n\r\n  return {\r\n    isValid: true,\r\n    value,\r\n    percentage,\r\n    displayText\r\n  };\r\n}\r\n\r\n/**\r\n * Apply pricing modifier to a base price\r\n */\r\nexport function applyPricingModifier(basePrice: number, pricingModifierPct?: number): {\r\n  originalPrice: number;\r\n  modifier: number;\r\n  finalPrice: number;\r\n  difference: number;\r\n  displayText: string;\r\n} {\r\n  const validation = validatePricingModifier(pricingModifierPct);\r\n  \r\n  if (!validation.isValid) {\r\n    throw new Error(`Invalid pricing modifier: ${validation.error}`);\r\n  }\r\n\r\n  const finalPrice = basePrice * (1 + validation.value);\r\n  const difference = finalPrice - basePrice;\r\n\r\n  return {\r\n    originalPrice: basePrice,\r\n    modifier: validation.value,\r\n    finalPrice: Math.round(finalPrice * 100) / 100, // Round to 2 decimal places\r\n    difference: Math.round(difference * 100) / 100,\r\n    displayText: validation.displayText\r\n  };\r\n}\r\n\r\n/**\r\n * Generate BreadcrumbList Schema for location pages\r\n */\r\nexport function generateBreadcrumbSchema(locationData: LocationPage): Record<string, unknown> {\r\n  return {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"BreadcrumbList\",\r\n    \"itemListElement\": [\r\n      {\r\n        \"@type\": \"ListItem\",\r\n        \"position\": 1,\r\n        \"name\": \"Home\",\r\n        \"item\": \"https://thatsmartsite.com/\"\r\n      },\r\n      {\r\n        \"@type\": \"ListItem\",\r\n        \"position\": 2,\r\n        \"name\": locationData.state,\r\n        \"item\": `https://thatsmartsite.com/${locationData.stateCode.toLowerCase()}/`\r\n      },\r\n      {\r\n        \"@type\": \"ListItem\",\r\n        \"position\": 3,\r\n        \"name\": locationData.city,\r\n        \"item\": `https://thatsmartsite.com${locationData.urlPath}`\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\n/**\r\n * Generate Organization Schema for main site\r\n */\r\nexport function generateOrganizationSchema(siteConfig: MainSiteConfig): Record<string, unknown> {\r\n  const domain = window.location.host;\r\n  \r\n  const schema: Record<string, unknown> = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"Organization\",\r\n    \"name\": siteConfig.brand,\r\n    \"url\": `https://${domain}/`,\r\n    \"logo\": `https://${domain}${siteConfig.logo.url}`,\r\n    \"sameAs\": [\r\n      siteConfig.socials?.facebook,\r\n      siteConfig.socials?.instagram,\r\n      siteConfig.socials?.youtube,\r\n      siteConfig.socials?.googleBusiness\r\n    ].filter(Boolean),\r\n    \"contactPoint\": [{\r\n      \"@type\": \"ContactPoint\",\r\n      \"contactType\": \"customer service\",\r\n      \"telephone\": siteConfig.contact?.phone || \"\",\r\n      \"areaServed\": \"US\"\r\n    }]\r\n  };\r\n  \r\n  // Add aggregate rating if available\r\n  if (siteConfig.reviews?.ratingValue && siteConfig.reviews.reviewCount) {\r\n    schema.aggregateRating = {\r\n      \"@type\": \"AggregateRating\",\r\n      \"ratingValue\": siteConfig.reviews.ratingValue,\r\n      \"reviewCount\": siteConfig.reviews.reviewCount.toString(),\r\n      \"bestRating\": \"5\",\r\n      \"worstRating\": \"1\"\r\n    };\r\n  }\r\n  \r\n  return schema;\r\n}\r\n\r\n/**\r\n * Generate Website Schema for main site\r\n */\r\nexport function generateWebsiteSchema(siteConfig: MainSiteConfig): Record<string, unknown> {\r\n  const domain = window.location.host;\r\n  \r\n  return {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"WebSite\",\r\n    \"url\": `https://${domain}/`,\r\n    \"name\": siteConfig.brand,\r\n    \"potentialAction\": {\r\n      \"@type\": \"SearchAction\",\r\n      \"target\": `https://${domain}/search?q={query}`,\r\n      \"query-input\": \"required name=query\"\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Generate WebPage Schema for any page\r\n */\r\nexport function generateWebPageSchema(\r\n  pageData: MainSiteConfig | LocationPage, \r\n  siteConfig: MainSiteConfig,\r\n  pageType: 'home' | 'location' = 'home'\r\n): Record<string, unknown> {\r\n  const domain = window.location.host;\r\n  const baseUrl = `https://${domain}`;\r\n  \r\n  const schema: Record<string, unknown> = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"WebPage\",\r\n    \"url\": `${baseUrl}${'urlPath' in pageData ? pageData.urlPath : '/'}`,\r\n    \"name\": pageData.seo.title || siteConfig.brand,\r\n    \"description\": pageData.seo.description,\r\n    \"isPartOf\": {\r\n      \"@type\": \"WebSite\",\r\n      \"name\": siteConfig.brand,\r\n      \"url\": baseUrl\r\n    }\r\n  };\r\n\r\n  if (pageData.seo.keywords && Array.isArray(pageData.seo.keywords)) {\r\n    schema.keywords = pageData.seo.keywords.join(', ');\r\n  }\r\n\r\n  if (pageData.seo.ogImage) {\r\n    schema.image = pageData.seo.ogImage;\r\n  }\r\n\r\n  if (pageType === 'location' && 'city' in pageData) {\r\n    schema.about = {\r\n      \"@type\": \"LocalBusiness\",\r\n      \"name\": pageData.header?.businessName || `${pageData.city} ${siteConfig.brand}`,\r\n      \"address\": {\r\n        \"@type\": \"PostalAddress\",\r\n        \"addressLocality\": pageData.city,\r\n        \"addressRegion\": pageData.stateCode,\r\n        \"postalCode\": pageData.postalCode\r\n      }\r\n    };\r\n  }\r\n\r\n  return schema;\r\n}\r\n\r\n/**\r\n * Generate all JSON-LD schemas for a page\r\n */\r\nexport function generateAllSchemas(\r\n  pageData: MainSiteConfig | LocationPage,\r\n  siteConfig: MainSiteConfig,\r\n  pageType: 'home' | 'location' = 'home',\r\n  additionalFAQs?: Array<{ id?: string; q: string; a: string }>\r\n): Record<string, unknown>[] {\r\n  const schemas: Record<string, unknown>[] = [];\r\n\r\n  if (pageType === 'home') {\r\n    // Main site gets Organization and Website schemas\r\n    schemas.push(generateOrganizationSchema(siteConfig));\r\n    schemas.push(generateWebsiteSchema(siteConfig));\r\n    schemas.push(generateWebPageSchema(pageData, siteConfig, 'home'));\r\n    \r\n    // Add FAQPage schema if additional FAQs are provided (from general FAQ utils)\r\n    if (additionalFAQs && additionalFAQs.length > 0) {\r\n      schemas.push(generateFAQSchema(additionalFAQs));\r\n    }\r\n  } else {\r\n    // Location pages get LocalBusiness, FAQPage, BreadcrumbList, and WebPage schemas\r\n    if ('city' in pageData) {\r\n      schemas.push(generateLocationSchema(pageData, siteConfig));\r\n      schemas.push(generateWebPageSchema(pageData, siteConfig, 'location'));\r\n      schemas.push(generateBreadcrumbSchema(pageData));\r\n      \r\n      if (pageData.faqs && pageData.faqs.length > 0) {\r\n        schemas.push(generateFAQSchema(pageData.faqs));\r\n      }\r\n    }\r\n  }\r\n\r\n  return schemas;\r\n}\r\n\r\n/**\r\n * Inject all schemas into document head\r\n */\r\nexport function injectAllSchemas(schemas: Record<string, unknown>[]): void {\r\n  // Remove existing schema scripts\r\n  const existingSchemas = document.querySelectorAll('script[type=\"application/ld+json\"]');\r\n  existingSchemas.forEach(schema => { schema.remove(); });\r\n\r\n  // Inject new schemas\r\n  schemas.forEach((schema, index) => {\r\n    const script = document.createElement('script');\r\n    script.type = 'application/ld+json';\r\n    script.textContent = JSON.stringify(schema);\r\n    script.setAttribute('data-schema-index', index.toString());\r\n    document.head.appendChild(script);\r\n  });\r\n}\r\n","import { useNavigate } from 'react-router-dom';\r\n\r\nimport assetsData from '@/data/mobile-detailing/assets.json';\r\nimport autoDetailingData from '@/data/mobile-detailing/services/auto-detailing.json';\r\nimport ceramicCoatingData from '@/data/mobile-detailing/services/ceramic-coating.json';\r\nimport marineDetailingData from '@/data/mobile-detailing/services/marine-detailing.json';\r\nimport paintCorrectionData from '@/data/mobile-detailing/services/paint-correction.json';\r\nimport ppfData from '@/data/mobile-detailing/services/ppf.json';\r\nimport rvDetailingData from '@/data/mobile-detailing/services/rv-detailing.json';\r\nimport { Service } from '@/features/services/types/service.types';\r\nimport { env } from '@/shared/env';\r\nimport { useTenantSlug } from '@/shared/hooks/useTenantSlug';\r\nimport type { LocationPage } from '@/shared/types/location';\r\nimport { getServiceImageFromLocation } from '@/shared/utils/schemaUtils';\r\n\r\n// Transform assets.json services.grid data to Service format with location-specific images\r\nconst getServicesFromSiteData = (locationData: LocationPage | null | undefined, tenantSlug?: string): Service[] => {\r\n  return assetsData.services.grid.map((service, index) => {\r\n    // Get thumbnail data for this service\r\n    const thumbnail = assetsData.services.thumbnails[service.slug as keyof typeof assetsData.services.thumbnails];\r\n    // Determine service role for location-specific images\r\n    let serviceRole: \"auto\" | \"marine\" | \"rv\" | null = null;\r\n    if (service.slug.includes('auto-detailing')) {\r\n      serviceRole = 'auto';\r\n    } else if (service.slug.includes('marine-detailing')) {\r\n      serviceRole = 'marine';\r\n    } else if (service.slug.includes('rv-detailing')) {\r\n      serviceRole = 'rv';\r\n    }\r\n\r\n    // Get location-specific image if available, otherwise use default thumbnail\r\n    const imageData = serviceRole && locationData \r\n      ? getServiceImageFromLocation(locationData, serviceRole, thumbnail.url || '')\r\n      : {\r\n          url: thumbnail.url || '',\r\n          alt: thumbnail.alt || '',\r\n          width: thumbnail.width || 400,\r\n          height: thumbnail.height || 300,\r\n          priority: service.priority\r\n        };\r\n\r\n    // Construct route based on environment\r\n    // Development: /{tenantSlug}/services/{serviceSlug}\r\n    // Production: /service/{serviceSlug}\r\n    const route = env.DEV && tenantSlug\r\n      ? `/${tenantSlug}/services/${service.slug}`\r\n      : `/service/${service.slug}`;\r\n    \r\n\r\n    const serviceData = {\r\n      id: (index + 1).toString(),\r\n      title: service.title,\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- service.alt from JSON, type refinement planned\r\n      description: service.alt, // Using alt text as description\r\n      imageUrl: imageData.url,\r\n      route: route,\r\n      category: service.slug.split('-')[0] || 'general', // Extract category from slug\r\n      imageWidth: imageData.width,\r\n      imageHeight: imageData.height,\r\n      imagePriority: imageData.priority\r\n    };\r\n    \r\n    \r\n    return serviceData;\r\n  });\r\n};\r\n\r\nexport const useServices = (locationData: LocationPage | null | undefined) => {\r\n  const navigate = useNavigate();\r\n  const tenantSlug = useTenantSlug(); // Use the proper tenant slug hook\r\n\r\n  const handleServiceClick = (service: Service) => {\r\n    void navigate(service.route);\r\n  };\r\n\r\n  const getServices = () => {\r\n    return getServicesFromSiteData(locationData, tenantSlug);\r\n  };\r\n\r\n  const getServiceById = (id: string) => {\r\n    return getServicesFromSiteData(locationData, tenantSlug).find(service => service.id === id);\r\n  };\r\n\r\n  const getServicesByCategory = (category: string) => {\r\n    return getServicesFromSiteData(locationData, tenantSlug).filter(service => service.category === category);\r\n  };\r\n\r\n  const getAutoDetailingData = () => {\r\n    return autoDetailingData;\r\n  };\r\n\r\n  const getMarineDetailingData = () => {\r\n    return marineDetailingData;\r\n  };\r\n\r\n  const getRvDetailingData = () => {\r\n    return rvDetailingData;\r\n  };\r\n\r\n  const getCeramicCoatingData = () => {\r\n    return ceramicCoatingData;\r\n  };\r\n\r\n  const getPaintCorrectionData = () => {\r\n    return paintCorrectionData;\r\n  };\r\n\r\n  const getPpfData = () => {\r\n    return ppfData;\r\n  };\r\n\r\n\r\n  return {\r\n    services: getServices(),\r\n    handleServiceClick,\r\n    getServiceById,\r\n    getServicesByCategory,\r\n    getAutoDetailingData,\r\n    getMarineDetailingData,\r\n    getRvDetailingData,\r\n    getCeramicCoatingData,\r\n    getPaintCorrectionData,\r\n    getPpfData,\r\n  };\r\n};\r\n","import React from 'react';\n\nimport { useServices } from '@/features/services/hooks/useServices';\nimport { ServicesGridProps } from '@/features/services/types/service.types';\n\nimport ServiceCard from './ServiceCard';\n\nconst ServicesGrid: React.FC<ServicesGridProps> = ({ locationData }) => {\n  const { services } = useServices(locationData);\n\n  // Split services for mobile: first 3 and last 3\n  const firstThreeServices = services.slice(0, 3);\n  const lastThreeServices = services.slice(3, 6);\n\n  return (\n    <>\n      {/* MOBILE: First 3 services with header */}\n      <section \n        id=\"services\" \n        className=\"md:hidden relative z-0 h-screen snap-start snap-always bg-stone-800 px-4 py-4\"\n      >\n        <div className=\"mx-auto w-full h-full flex flex-col justify-center\">\n          <h2 className=\"text-3xl font-bold text-white text-center mb-4\">\n            Our Services\n          </h2>\n          \n          <ul className=\"grid grid-cols-1 gap-4\">\n            {firstThreeServices.map((service) => (\n              <ServiceCard\n                key={service.id}\n                service={service}\n              />\n            ))}\n          </ul>\n        </div>\n      </section>\n\n      {/* MOBILE: Last 3 services */}\n      <section \n        className=\"md:hidden relative z-0 h-screen snap-start snap-always bg-stone-800 px-4 py-2\"\n      >\n        <div className=\"mx-auto w-full h-full flex flex-col justify-start pt-[80px]\">\n          <ul className=\"grid grid-cols-1 gap-4 [&>li>div>div]:h-[calc((100vh-200px)/3)]\">\n            {lastThreeServices.map((service) => (\n              <ServiceCard\n                key={service.id}\n                service={service}\n              />\n            ))}\n          </ul>\n        </div>\n      </section>\n\n      {/* DESKTOP: All services in one section */}\n      <section \n        id=\"services-desktop\" \n        className=\"hidden md:block relative z-0 min-h-screen snap-start snap-always bg-stone-800 px-4 sm:px-6 md:px-8 lg:px-10 xl:px-12 py-8 md:py-12 pt-[100px] md:pt-[120px]\"\n      >\n        <div className=\"mx-auto w-full\">\n          <h2 className=\"text-3xl md:text-4xl lg:text-5xl font-bold text-white text-center mb-4 md:mb-6 lg:mb-8\">\n            Our Services\n          </h2>\n          \n          {/* Mobile: 1 column, Tablet: 2 columns, Desktop: 3 columns */}\n          <ul className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6 lg:gap-8\">\n            {services.map((service) => (\n              <ServiceCard\n                key={service.id}\n                service={service}\n              />\n            ))}\n          </ul>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ServicesGrid;\n","import React, { Suspense } from 'react';\r\n\r\nimport { type RequestQuoteModalProps } from '../types';\r\n\r\n// Lazy load the modal component\r\nconst RequestQuoteModal = React.lazy(() => import('./RequestQuoteModal'));\r\n\r\nconst LazyRequestQuoteModal: React.FC<RequestQuoteModalProps> = (props) => {\r\n  return (\r\n    <Suspense fallback={<div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"bg-stone-800 text-white p-6 rounded-lg\">\r\n        <div className=\"animate-pulse\">Loading quote form...</div>\r\n      </div>\r\n    </div>}>\r\n      <RequestQuoteModal {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default LazyRequestQuoteModal;\r\n","/**\r\n * Generate years for vehicle dropdowns\r\n * Returns array from current year + 1 down to 1950, plus \"Before 1950\"\r\n */\r\nexport const getVehicleYears = (): (number | string)[] => {\r\n  const currentYear = new Date().getFullYear();\r\n  const maxYear = currentYear + 1;\r\n  const minYear = 1950;\r\n  \r\n  const years: (number | string)[] = [];\r\n  for (let year = maxYear; year >= minYear; year--) {\r\n    years.push(year);\r\n  }\r\n  \r\n  // Add \"Before {minYear}\" at the end\r\n  years.push(`Before ${String(minYear)}`);\r\n  \r\n  return years;\r\n};\r\n\r\n/**\r\n * Static years data for reference\r\n */\r\nexport const yearsConfig = {\r\n  minYear: 1950,\r\n  maxYear: new Date().getFullYear() + 1,\r\n  totalYears: new Date().getFullYear() + 1 - 1950 + 1\r\n} as const;\r\n\r\n/**\r\n * Get years formatted for display\r\n */\r\nexport const getFormattedYears = () => {\r\n  return getVehicleYears().map(year => ({\r\n    value: year,\r\n    label: year.toString()\r\n  }));\r\n};\r\n","// Quote validation schemas and types\r\nimport { z } from 'zod';\r\n\r\n// Quote request schema\r\nexport const quoteRequestSchema = z.object({\r\n  name: z.string().min(2, 'Name must be at least 2 characters'),\r\n  email: z.email('Invalid email address'),\r\n  phone: z.string().min(10, 'Phone number must be at least 10 digits'),\r\n  vehicleType: z.string().min(1, 'Vehicle type is required'),\r\n  vehicleMake: z.string().min(1, 'Vehicle make is required'),\r\n  vehicleModel: z.string().min(1, 'Vehicle model is required'),\r\n  vehicleYear: z.string().min(4, 'Vehicle year must be 4 digits'),\r\n  services: z.array(z.string()).min(1, 'At least one service must be selected'),\r\n  message: z.string().optional(),\r\n  city: z.string().min(1, 'City is required'),\r\n  state: z.string().min(2, 'State is required'),\r\n  zipCode: z.string().min(5, 'Zip code must be at least 5 digits'),\r\n  businessSlug: z.string().optional()\r\n});\r\n\r\n// Quote update schema\r\nexport const quoteUpdateSchema = z.object({\r\n  status: z.enum(['pending', 'in_progress', 'completed', 'cancelled']),\r\n  notes: z.string().optional(),\r\n  estimatedPrice: z.number().optional(),\r\n  estimatedDuration: z.number().optional()\r\n});\r\n\r\n// Quote response schema\r\nexport const quoteResponseSchema = z.object({\r\n  id: z.string(),\r\n  name: z.string(),\r\n  email: z.string(),\r\n  phone: z.string(),\r\n  vehicleType: z.string(),\r\n  vehicleMake: z.string(),\r\n  vehicleModel: z.string(),\r\n  vehicleYear: z.string(),\r\n  services: z.array(z.string()),\r\n  message: z.string().optional(),\r\n  city: z.string(),\r\n  state: z.string(),\r\n  zipCode: z.string(),\r\n  businessSlug: z.string().optional(),\r\n  status: z.enum(['pending', 'in_progress', 'completed', 'cancelled']),\r\n  createdAt: z.string(),\r\n  updatedAt: z.string(),\r\n  estimatedPrice: z.number().optional(),\r\n  estimatedDuration: z.number().optional(),\r\n  notes: z.string().optional()\r\n});\r\n\r\n// Quote list query schema\r\nexport const quoteListQuerySchema = z.object({\r\n  business_slug: z.string().optional(),\r\n  user_id: z.string().optional(),\r\n  status: z.enum(['pending', 'in_progress', 'completed', 'cancelled']).optional(),\r\n  limit: z.number().min(1).max(100).default(10),\r\n  offset: z.number().min(0).default(0)\r\n});\r\n\r\n// Quote cancellation schema\r\nexport const quoteCancellationSchema = z.object({\r\n  reason: z.string().optional(),\r\n  notes: z.string().optional()\r\n});\r\n\r\n// Export types\r\nexport type QuoteRequest = z.infer<typeof quoteRequestSchema>;\r\nexport type QuoteUpdate = z.infer<typeof quoteUpdateSchema>;\r\nexport type QuoteResponse = z.infer<typeof quoteResponseSchema>;\r\nexport type QuoteListQuery = z.infer<typeof quoteListQuerySchema>;\r\nexport type QuoteCancellation = z.infer<typeof quoteCancellationSchema>;\r\n\r\n// Quote status enum\r\nexport const QuoteStatus = {\r\n  PENDING: 'pending',\r\n  IN_PROGRESS: 'in_progress',\r\n  COMPLETED: 'completed',\r\n  CANCELLED: 'cancelled'\r\n} as const;\r\n\r\nexport type QuoteStatusType = typeof QuoteStatus[keyof typeof QuoteStatus];\r\n\r\n// Component prop types\r\nexport interface RequestQuoteModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\n// Form data type\r\nexport interface QuoteFormData {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  services: string[];\r\n  vehicleType: string;\r\n  vehicleMake: string;\r\n  vehicleModel: string;\r\n  vehicleYear: string;\r\n  vehicleColor?: string;\r\n  vehicleLength?: string;\r\n  message?: string;\r\n}\r\n\r\n// Service area type\r\nexport interface ServiceArea {\r\n  city: string;\r\n  state: string;\r\n  primary?: boolean;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { useData } from '@/features/header';\r\n\r\nimport ServiceAreasModal from '../modals/ServiceAreasModal';\r\n\r\ninterface ServiceArea {\r\n  city: string;\r\n  state: string;\r\n  zip?: string;\r\n  primary?: boolean;\r\n  minimum?: number;\r\n  multiplier?: number;\r\n}\r\n\r\ninterface FooterLocationsProps {\r\n  serviceAreas?: ServiceArea[];\r\n}\r\n\r\nconst FooterLocations: React.FC<FooterLocationsProps> = ({ serviceAreas }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  \r\n  // Get tenant data - component should always be used in a valid context\r\n  const tenantData = useData();\r\n  \r\n  // Use tenant service areas if available, otherwise show default message\r\n  const shouldUseTenantData = tenantData.isTenant && serviceAreas && serviceAreas.length > 0;\r\n  \r\n  // Always show first 4 cities\r\n  const displayAreas = shouldUseTenantData ? serviceAreas.slice(0, 4) : [];\r\n  const hasMore = shouldUseTenantData && serviceAreas.length > 4;\r\n  \r\n  const handleViewMore = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"text-center md:text-right\">\r\n        <h3 className=\"font-bold text-orange-400 text-xl mb-6\">Service Areas</h3>\r\n        <div className=\"flex flex-col space-y-3\">\r\n          {shouldUseTenantData ? (\r\n            <>\r\n              {displayAreas.map((area, index) => (\r\n                <div key={index} className=\"text-white text-lg\">\r\n                  {area.city}, {area.state}\r\n                </div>\r\n              ))}\r\n              {hasMore && (\r\n                <div className=\"flex justify-center md:justify-end\">\r\n                  <button\r\n                    onClick={handleViewMore}\r\n                    className=\"text-orange-400 hover:text-orange-300 transition-colors duration-200 text-lg bg-transparent border-none p-0 font-inherit cursor-pointer\"\r\n                  >\r\n                    View More\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"text-white text-lg\">\r\n              Multiple Service Areas\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Service Areas Modal */}\r\n      {shouldUseTenantData && (\r\n        <ServiceAreasModal\r\n          isOpen={isModalOpen}\r\n          onClose={() => { setIsModalOpen(false); }}\r\n          serviceAreas={serviceAreas}\r\n          businessName={tenantData.businessName}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FooterLocations;\r\n","import React from 'react';\r\nimport { Mail, MapPin, Phone } from 'lucide-react';\r\n\r\ninterface GetInTouchProps {\r\n  config?: {\r\n    phone?: string;\r\n    email?: string;\r\n    base_location?: {\r\n      city?: string;\r\n      state_name?: string;\r\n    };\r\n  };\r\n  onRequestQuote?: () => void;\r\n  showLocationSetter?: boolean;\r\n}\r\n\r\nconst GetInTouch: React.FC<GetInTouchProps> = ({ \r\n  config, \r\n  onRequestQuote,\r\n  showLocationSetter = false\r\n}) => {\r\n  const contactInfo = {\r\n    phone: config?.phone ?? '(555) 123-4567',\r\n    email: config?.email ?? 'hello@thatsmartsite.com',\r\n    location: config?.base_location?.city && config.base_location.state_name \r\n      ? `${config.base_location.city}, ${config.base_location.state_name}`\r\n      : null // Don't show location for main site\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center md:text-left\">\r\n      <h3 className=\"font-bold text-orange-400 text-xl mb-6\">Get in Touch</h3>\r\n      <div className=\"flex flex-col space-y-3\">\r\n        <div className=\"flex items-center justify-center md:justify-start space-x-3\">\r\n          <Phone className=\"h-5 w-5 flex-shrink-0 text-orange-400\" />\r\n          <a \r\n            href={`tel:${contactInfo.phone}`}\r\n            className=\"text-lg text-white hover:text-orange-400 transition-colors duration-200\"\r\n          >\r\n            {contactInfo.phone}\r\n          </a>\r\n        </div>\r\n        <div className=\"flex items-center justify-center md:justify-start space-x-3\">\r\n          <Mail className=\"h-5 w-5 flex-shrink-0 text-orange-400\" />\r\n          <button\r\n            onClick={onRequestQuote}\r\n            className=\"text-lg text-white hover:text-orange-400 transition-colors duration-200 bg-transparent border-none p-0 font-inherit cursor-pointer text-left\"\r\n          >\r\n            {contactInfo.email}\r\n          </button>\r\n        </div>\r\n        {contactInfo.location && (\r\n          <div className=\"hidden md:flex items-center justify-center md:justify-start space-x-3\">\r\n            <MapPin className=\"h-5 w-5 flex-shrink-0 text-orange-400\" />\r\n            <span className=\"text-lg text-white\">\r\n              {contactInfo.location}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {showLocationSetter && !contactInfo.location && (\r\n          <div className=\"flex items-center justify-center md:justify-start space-x-3\">\r\n            <MapPin className=\"h-5 w-5 flex-shrink-0 text-orange-400\" />\r\n            <a \r\n              href=\"/locations\" \r\n              className=\"text-lg text-orange-400 hover:text-orange-300 transition-colors duration-200\"\r\n            >\r\n              Set Your Location\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetInTouch;\r\n","import React from 'react';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport CTAButtons from '@/shared/ui/buttons/CTAButtons';\r\nimport FooterLocations from '@/shared/ui/navigation/FooterLocations';\r\nimport { formatPhoneNumber } from '@/shared/utils/phoneFormatter';\r\n\r\nimport Disclaimer from './Disclaimer';\r\nimport FollowUs from './FollowUs';\r\nimport GetInTouch from './GetInTouch';\r\n\r\ninterface FooterProps {\r\n  onRequestQuote?: () => void;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ onRequestQuote }) => {\r\n  const tenantData = useData();\r\n  \r\n  // All sites are now tenant-based, so use tenant data\r\n  const config = {\r\n    phone: formatPhoneNumber(tenantData.phone),\r\n    email: tenantData.email,\r\n    base_location: {\r\n      city: tenantData.location.split(', ')[0] ?? '',\r\n      state_name: tenantData.location.split(', ')[1] ?? ''\r\n    }\r\n  };\r\n\r\n  // Use tenant social media\r\n  const socialMedia = {\r\n    facebook: tenantData.socialMedia.facebook,\r\n    instagram: tenantData.socialMedia.instagram,\r\n    tiktok: tenantData.socialMedia.tiktok,\r\n    youtube: tenantData.socialMedia.youtube\r\n  };\r\n\r\n  const businessInfo = {\r\n    name: tenantData.businessName\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto w-full px-4 md:px-6 lg:px-8\">\r\n      {/* Mobile Layout: Vertical stack */}\r\n      <div className=\"md:hidden space-y-6 mb-6\">\r\n        <GetInTouch \r\n          config={config}\r\n          onRequestQuote={onRequestQuote || (() => {})}\r\n          showLocationSetter={false}\r\n        />\r\n        <FollowUs socialMedia={socialMedia} />\r\n        <FooterLocations serviceAreas={tenantData.serviceAreas} />\r\n      </div>\r\n\r\n      {/* Desktop Layout: 3 equal columns */}\r\n      <div className=\"hidden md:grid md:grid-cols-3 gap-6 md:gap-7 lg:gap-8 mb-6 md:mb-7 lg:mb-8\">\r\n        <GetInTouch \r\n          config={config}\r\n          onRequestQuote={onRequestQuote || (() => {})}\r\n          showLocationSetter={false}\r\n        />\r\n        <FollowUs socialMedia={socialMedia} />\r\n        <FooterLocations serviceAreas={tenantData.serviceAreas} />\r\n      </div>\r\n      \r\n      {/* CTA Buttons - Centered above line break */}\r\n      <div className=\"flex justify-center mb-4 md:mb-8\">\r\n        <CTAButtons \r\n          getQuoteProps={{ onClick: onRequestQuote }}\r\n          bookNowProps={{ size: 'md' }}\r\n        />\r\n      </div>\r\n      \r\n      {/* Footer Bottom */}\r\n      <Disclaimer \r\n        businessInfo={businessInfo}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/**\r\n * Gallery API Layer\r\n * Handles all gallery-related API calls\r\n */\r\n\r\nimport { GalleryImage } from '@/shared/types/gallery';\r\n\r\nconst GALLERY_DATA_URL = '/mobile-detailing/data/gallery.json';\r\n\r\n// Type guard to ensure we have a valid GalleryImage\r\nconst isValidGalleryImage = (item: unknown): item is GalleryImage => {\r\n  return typeof item === 'object' && item !== null && 'src' in item && 'tags' in item;\r\n};\r\n\r\nexport interface GalleryApiResponse {\r\n  success: boolean;\r\n  data: GalleryImage[];\r\n  error?: string;\r\n}\r\n\r\nexport const galleryApi = {\r\n  /**\r\n   * Fetch gallery images\r\n   */\r\n  getGalleryImages: async (): Promise<GalleryImage[]> => {\r\n    try {\r\n      const response = await fetch(GALLERY_DATA_URL);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch gallery data: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json() as GalleryImage[];\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Gallery API Error:', error);\r\n      throw new Error(`Failed to load gallery images: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get random gallery images for background rotation\r\n   */\r\n  getRandomGalleryImages: async (count: number = 5): Promise<GalleryImage[]> => {\r\n    try {\r\n      // Call the getGalleryImages function directly to avoid circular reference\r\n      const response = await fetch(GALLERY_DATA_URL);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch gallery data: ${response.status}`);\r\n      }\r\n      \r\n      const allImages = await response.json() as GalleryImage[];\r\n      \r\n      // Filter out images that might be used for avatars (you can customize this logic)\r\n      const backgroundImages = allImages.filter((img) => {\r\n        if (!isValidGalleryImage(img)) return false;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access -- TypeScript type inference issue with GalleryImage interface\r\n        const src = img.src.toLowerCase();\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access -- TypeScript type inference issue with GalleryImage interface\r\n        return !src.includes('avatar') && !src.includes('profile');\r\n      });\r\n      \r\n      // Shuffle and take the requested count\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- TypeScript type inference issue with filter result\r\n      const shuffled = [...backgroundImages].sort(() => Math.random() - 0.5);\r\n      return shuffled.slice(0, Math.min(count, shuffled.length));\r\n    } catch (error) {\r\n      console.error('Random Gallery API Error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to load random gallery images: ${errorMessage}`);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get gallery images for a specific category\r\n   */\r\n  getGalleryImagesByCategory: async (category: string): Promise<GalleryImage[]> => {\r\n    try {\r\n      // Call the getGalleryImages function directly to avoid circular reference\r\n      const response = await fetch(GALLERY_DATA_URL);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch gallery data: ${response.status}`);\r\n      }\r\n      \r\n      const allImages = await response.json() as GalleryImage[];\r\n      return allImages.filter((img) => {\r\n        if (!isValidGalleryImage(img)) return false;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access -- TypeScript type inference issue with GalleryImage interface\r\n        return img.tags.some((tag: string) => tag.toLowerCase().includes(category.toLowerCase()));\r\n      });\r\n    } catch (error) {\r\n      console.error('Gallery Category API Error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to load gallery images for category ${category}: ${errorMessage}`);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get featured gallery images\r\n   */\r\n  getFeaturedGalleryImages: async (): Promise<GalleryImage[]> => {\r\n    try {\r\n      const allImages = await galleryApi.getGalleryImages();\r\n      // For now, return all images since there's no featured property\r\n      // In the future, you could add a featured property to the data or use tags\r\n      return allImages;\r\n    } catch (error) {\r\n      console.error('Featured Gallery API Error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to load featured gallery images: ${errorMessage}`);\r\n    }\r\n  }\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { galleryApi } from '../api/gallery.api';\r\nimport { GalleryImage } from '../types';\r\n\r\nexport const useGallery = () => {\r\n  const [images, setImages] = useState<GalleryImage[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchGalleryData = async (): Promise<void> => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        const galleryImages = await galleryApi.getGalleryImages();\r\n        setImages(galleryImages);\r\n      } catch (err: unknown) {\r\n        setError(err instanceof Error ? err.message : 'Failed to load gallery data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    void fetchGalleryData();\r\n  }, []);\r\n\r\n  return {\r\n    images,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n","import { useCallback,useEffect, useRef, useState } from 'react';\r\n\r\nimport { galleryApi } from '../api/gallery.api';\r\nimport { GalleryImage } from '../types';\r\n\r\n// Fisher-Yates shuffle algorithm\r\nfunction shuffleArray<T>(array: T[]): T[] {\r\n  const shuffled = [...array];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    // Safe swap - indices are guaranteed to be valid by loop bounds\r\n    const temp = shuffled[i];\r\n    const itemJ = shuffled[j];\r\n    if (temp !== undefined && itemJ !== undefined) {\r\n      shuffled[i] = itemJ;\r\n      shuffled[j] = temp;\r\n    }\r\n  }\r\n  return shuffled;\r\n}\r\n\r\ntype RotatingState = {\r\n  currentImages: GalleryImage[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  fadingIndex: number | null; // which card is currently fading (0,1,2)\r\n  nextImages: GalleryImage[]; // next images for crossfade\r\n};\r\n\r\nexport function useRotatingGallery() {\r\n  const [allImages, setAllImages] = useState<GalleryImage[]>([]);\r\n  const [state, setState] = useState<RotatingState>({\r\n    currentImages: [],\r\n    loading: true,\r\n    error: null,\r\n    fadingIndex: null,\r\n    nextImages: [],\r\n  });\r\n\r\n  // Refs to avoid stale closures inside timers\r\n  const allImagesRef = useRef<GalleryImage[]>([]);\r\n  const currentRef = useRef<GalleryImage[]>([]);\r\n  const fadingIndexRef = useRef<number>(-1);\r\n  const nextPtrRef = useRef<number>(0); // next index in allImages to try\r\n  const intervalRef = useRef<number | null>(null);\r\n  const fadeTimeoutRef = useRef<number | null>(null);\r\n  const unFadeTimeoutRef = useRef<{ timeout: number | null; raf: number | null }>({ \r\n    timeout: null, \r\n    raf: null \r\n  });\r\n\r\n  // Load data\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    void (async (): Promise<void> => {\r\n        try {\r\n          const data = await galleryApi.getGalleryImages();\r\n\r\n          // Check if component is still mounted before updating state\r\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- cancelled can be set to true by cleanup function before async completes\r\n          if (cancelled) return;\r\n          \r\n          const shuffledData = shuffleArray(data) as GalleryImage[];\r\n          setAllImages(shuffledData);\r\n          allImagesRef.current = shuffledData;\r\n\r\n          const initial = shuffledData.slice(0, Math.min(3, shuffledData.length));\r\n          currentRef.current = initial;\r\n\r\n          // set nextPtr to first unseen image\r\n          nextPtrRef.current = initial.length % shuffledData.length;\r\n\r\n          setState(s => ({\r\n            ...s,\r\n            currentImages: initial,\r\n            nextImages: initial,\r\n            loading: false,\r\n            error: null,\r\n          }));\r\n      } catch (err: unknown) {\r\n        // Check if component is still mounted before updating state\r\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- cancelled can be set to true by cleanup function before async completes\r\n        if (cancelled) return;\r\n        \r\n        setState(s => ({\r\n          ...s,\r\n          loading: false,\r\n          error: err instanceof Error ? err.message : 'Failed to load gallery data',\r\n        }));\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  // Helper: advance nextPtr to an image not currently displayed (avoid dupes)\r\n  const getNextUniqueImage = useCallback((): GalleryImage | null => {\r\n    const all = allImagesRef.current;\r\n    const current = currentRef.current;\r\n    if (all.length === 0) return null;\r\n\r\n    const visibleIds = new Set(current.map(i => i.id));\r\n    let tries = 0;\r\n    let ptr = nextPtrRef.current;\r\n\r\n    while (tries < all.length) {\r\n      const candidate = all[ptr];\r\n      ptr = (ptr + 1) % all.length;\r\n      tries++;\r\n\r\n      if (!candidate) continue;\r\n      if (!visibleIds.has(candidate.id)) {\r\n        // lock in the advanced ptr\r\n        nextPtrRef.current = ptr;\r\n        return candidate;\r\n      }\r\n    }\r\n\r\n    // Fallback: if everything is visible (e.g., all.length <= 3), just cycle anyway\r\n    const fallback = all[nextPtrRef.current];\r\n    nextPtrRef.current = (nextPtrRef.current + 1) % all.length;\r\n    return fallback ?? null;\r\n  }, []);\r\n\r\n  // One-step rotation: fade one card, swap only that card, un-fade, move to next card index\r\n  const rotateOneCard = useCallback(() => {\r\n    const all = allImagesRef.current;\r\n    if (all.length === 0) return;\r\n\r\n    const current = currentRef.current;\r\n    if (current.length === 0) return;\r\n\r\n    // if only 1–3 images total, we can still fade them one-by-one but replacement may repeat\r\n    const nextFadeIndex = (fadingIndexRef.current + 1) % Math.min(current.length, 3);\r\n    fadingIndexRef.current = nextFadeIndex;\r\n\r\n    // Get replacement image\r\n    const replacement = getNextUniqueImage();\r\n    if (replacement) {\r\n      // Create next images array with replacement\r\n      const nextImages = currentRef.current.slice();\r\n      nextImages[nextFadeIndex] = replacement;\r\n      \r\n      // 1) Set next images first (paint baseline)\r\n      setState(s => ({ ...s, nextImages }));\r\n      \r\n      // 2) Flip the fade flag on the next frame so CSS transitions fire\r\n      const raf = window.requestAnimationFrame(() => {\r\n        setState(s => ({ ...s, fadingIndex: nextFadeIndex }));\r\n      });\r\n\r\n      // Store raf id to clean up if needed\r\n      unFadeTimeoutRef.current.raf = raf;\r\n\r\n      // After 1000ms (CSS duration), commit nextImages -> currentImages\r\n      const timeout = window.setTimeout(() => {\r\n        // Update current images to the new ones\r\n        currentRef.current = nextImages;\r\n        setState(s => ({ \r\n          ...s, \r\n          currentImages: nextImages,\r\n          fadingIndex: null \r\n        }));\r\n      }, 1000 + 50); // + small buffer\r\n      \r\n      unFadeTimeoutRef.current.timeout = timeout;\r\n    }\r\n  }, [getNextUniqueImage]);\r\n\r\n  // Interval: every 7s rotate one card\r\n  useEffect(() => {\r\n    if (allImages.length === 0) return;\r\n\r\n    // Clear any existing\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n\r\n    intervalRef.current = window.setInterval(rotateOneCard, 7000);\r\n\r\n    return () => {\r\n      // Clean up interval\r\n      if (intervalRef.current) clearInterval(intervalRef.current);\r\n      \r\n      // Clean up fade timeouts - capture ref values at cleanup time\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- We intentionally capture current ref values at cleanup time, not at effect setup\r\n      const fadeTimeout = fadeTimeoutRef.current;\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- We intentionally capture current ref values at cleanup time, not at effect setup\r\n      const unFadeTimeouts = unFadeTimeoutRef.current;\r\n      \r\n      if (fadeTimeout !== null) {\r\n        clearTimeout(fadeTimeout);\r\n      }\r\n      if (unFadeTimeouts.timeout !== null) {\r\n        clearTimeout(unFadeTimeouts.timeout);\r\n      }\r\n      if (unFadeTimeouts.raf !== null) {\r\n        cancelAnimationFrame(unFadeTimeouts.raf);\r\n      }\r\n    };\r\n  }, [allImages.length, rotateOneCard]);\r\n\r\n  return {\r\n    currentImages: state.currentImages,   // render these 3\r\n    nextImages: state.nextImages,         // next images for crossfade\r\n    loading: state.loading,\r\n    error: state.error,\r\n    fadingIndex: state.fadingIndex,       // which card should have the fade class\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport { GalleryImage } from '../types';\r\n\r\ninterface GalleryItemProps {\r\n  image: GalleryImage;\r\n}\r\n\r\nconst GalleryItem: React.FC<GalleryItemProps> = ({ image }) => {\r\n  try {\r\n    return (\r\n    <li>\r\n      <div className=\"group relative block rounded-lg overflow-hidden shadow-lg transition-transform duration-300 hover:-translate-y-2 hover:shadow-xl\">\r\n        <div className=\"aspect-[3/2]\">\r\n          <img\r\n            src={image.src}\r\n            alt={image.alt}\r\n            width={image.width}\r\n            height={image.height}\r\n            loading={image.loading || 'lazy'}\r\n            className=\"absolute inset-0 w-full h-full object-cover\"\r\n            onError={(e) => {\r\n              // Show a simple placeholder if image fails to load\r\n              const target = e.target as HTMLImageElement;\r\n              target.style.display = 'none';\r\n              const parent = target.parentElement;\r\n              if (parent) {\r\n                parent.innerHTML = `\r\n                  <div class=\"absolute inset-0 w-full h-full bg-stone-700 flex items-center justify-center\">\r\n                    <div class=\"text-center text-stone-400\">\r\n                      <div class=\"text-4xl mb-2\">📷</div>\r\n                      <div class=\"text-sm\">Add ${image.src.split('/').pop()}</div>\r\n                    </div>\r\n                  </div>\r\n                `;\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent\">\r\n          <div className=\"absolute bottom-0 left-0 right-0 p-4\">\r\n            <h3 className=\"text-white font-semibold text-sm mb-1 truncate\">\r\n              {image.title || 'Untitled'}\r\n            </h3>\r\n            <p className=\"text-stone-300 text-xs overflow-hidden\" style={{ display: '-webkit-box', WebkitLineClamp: 2, WebkitBoxOrient: 'vertical' }}>\r\n              {image.caption || 'No description available'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    );\r\n  } catch (error) {\r\n    console.error('Error rendering gallery item:', error);\r\n    return (\r\n      <li>\r\n        <div className=\"group relative block rounded-lg overflow-hidden shadow-lg bg-stone-700\">\r\n          <div className=\"aspect-[3/2] flex items-center justify-center\">\r\n            <span className=\"text-stone-400\">Error loading image</span>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nexport default GalleryItem;\r\n","import React from 'react';\r\n\r\nimport { GalleryImage } from '../types';\r\n\r\n// Gallery item component with crossfade support\r\ninterface RotatingGalleryItemProps {\r\n  image: GalleryImage;\r\n  nextImage?: GalleryImage;\r\n  isTransitioning: boolean;\r\n  index: number;\r\n}\r\n\r\nconst RotatingGalleryItem: React.FC<RotatingGalleryItemProps> = ({ image, nextImage, isTransitioning, index: _index }) => {\r\n  // Fallback to current image if no next image\r\n  const next = nextImage ?? image;\r\n  \r\n  return (\r\n    <li>\r\n      <div className={`group relative block rounded-lg overflow-hidden shadow-lg transition-all duration-1000 hover:-translate-y-2 hover:shadow-xl ${isTransitioning ? 'is-fading' : ''}`}>\r\n        <div className=\"aspect-[3/2] relative\">\r\n          {/* Base layer: current image */}\r\n          <img\r\n            src={image.src}\r\n            alt={image.alt}\r\n            width={image.width}\r\n            height={image.height}\r\n            loading={image.loading || 'lazy'}\r\n            className={`absolute inset-0 w-full h-full object-cover transition-opacity will-change-opacity ${\r\n              isTransitioning ? 'opacity-0' : 'opacity-100'\r\n            }`}\r\n            style={{ transitionDuration: '1000ms' }}\r\n            onError={(e) => {\r\n              // Show a simple placeholder if image fails to load\r\n              const target = e.target as HTMLImageElement;\r\n              target.style.display = 'none';\r\n              const parent = target.parentElement;\r\n              if (parent) {\r\n                parent.innerHTML = `\r\n                  <div class=\"absolute inset-0 w-full h-full bg-stone-700 flex items-center justify-center\">\r\n                    <div class=\"text-center text-stone-400\">\r\n                      <div class=\"text-4xl mb-2\">📷</div>\r\n                      <div class=\"text-sm\">Add ${image.src.split('/').pop()}</div>\r\n                    </div>\r\n                  </div>\r\n                `;\r\n              }\r\n            }}\r\n          />\r\n          {/* Overlay layer: next image */}\r\n          <img\r\n            src={next.src}\r\n            alt={next.alt}\r\n            width={next.width}\r\n            height={next.height}\r\n            loading=\"lazy\"\r\n            className={`absolute inset-0 w-full h-full object-cover transition-opacity will-change-opacity ${\r\n              isTransitioning ? 'opacity-100' : 'opacity-0'\r\n            }`}\r\n            style={{ transitionDuration: '1000ms' }}\r\n          />\r\n        </div>\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent transition-opacity will-change-opacity\"\r\n        style={{ transitionDuration: '1000ms' }}>\r\n          <div className=\"absolute bottom-0 left-0 right-0 p-4\">\r\n            <h3 className=\"text-white font-semibold text-sm mb-1 truncate\">\r\n              {isTransitioning ? (next.title || 'Untitled') : (image.title || 'Untitled')}\r\n            </h3>\r\n            <p className=\"text-stone-300 text-xs overflow-hidden\" style={{ display: '-webkit-box', WebkitLineClamp: 2, WebkitBoxOrient: 'vertical' }}>\r\n              {isTransitioning ? (next.caption || 'No description available') : (image.caption || 'No description available')}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default RotatingGalleryItem;\r\n","import React, { useRef, useState } from 'react';\r\n\r\n// Gallery section includes footer as part of its display\r\n// This is intentional and part of the gallery feature's design\r\n// eslint-disable-next-line no-restricted-imports -- Gallery displays footer as bottom half of section\r\nimport { Footer } from '@/features/footer';\r\n\r\nimport { useGallery } from '../hooks/useGallery';\r\nimport { useRotatingGallery } from '../hooks/useRotatingGallery';\r\nimport { GalleryProps } from '../types';\r\nimport GalleryItem from './GalleryItem';\r\nimport RotatingGalleryItem from './RotatingGalleryItem';\r\n\r\nconst Gallery: React.FC<GalleryProps> = ({ onRequestQuote, locationData: _locationData }) => {\r\n  // Mobile: manual swipe carousel\r\n  const { images, loading, error } = useGallery();\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const touchStartX = useRef<number | null>(null);\r\n  const touchEndX = useRef<number | null>(null);\r\n\r\n  // Desktop: auto-rotating gallery\r\n  const { currentImages, nextImages, loading: rotatingLoading, error: rotatingError, fadingIndex } = useRotatingGallery();\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentIndex((prev) => (prev > 0 ? prev - 1 : images.length - 1));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentIndex((prev) => (prev < images.length - 1 ? prev + 1 : 0));\r\n  };\r\n\r\n  // Touch/swipe handlers\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    touchStartX.current = e.touches[0]?.clientX ?? null;\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    touchEndX.current = e.touches[0]?.clientX ?? null;\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    if (touchStartX.current === null || touchEndX.current === null) return;\r\n    \r\n    const diff = touchStartX.current - touchEndX.current;\r\n    const minSwipeDistance = 50;\r\n    \r\n    if (Math.abs(diff) > minSwipeDistance) {\r\n      if (diff > 0) {\r\n        handleNext();\r\n      } else {\r\n        handlePrevious();\r\n      }\r\n    }\r\n    \r\n    touchStartX.current = null;\r\n    touchEndX.current = null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* MOBILE: Separate full-screen gallery section */}\r\n      <section id=\"gallery\" className=\"md:hidden relative h-screen snap-start snap-always flex items-center justify-center bg-stone-900 px-4\">\r\n        <div className=\"h-full w-full flex items-center justify-center pt-[72px]\">\r\n        {loading ? (\r\n          <div className=\"text-stone-400\">Loading gallery...</div>\r\n        ) : error ? (\r\n          <div className=\"text-red-400\">Error loading gallery: {error}</div>\r\n        ) : images.length === 0 ? (\r\n          <div className=\"text-stone-400\">No images available</div>\r\n        ) : (\r\n          <div className=\"relative w-full mx-auto flex flex-col h-full justify-center\">\r\n            <h2 className=\"text-3xl font-bold text-white text-center mb-8\">Gallery</h2>\r\n            \r\n            {/* Swipeable gallery - full width on mobile */}\r\n            <div\r\n              onTouchStart={handleTouchStart}\r\n              onTouchMove={handleTouchMove}\r\n              onTouchEnd={handleTouchEnd}\r\n              className=\"w-full\"\r\n            >\r\n              {/* Main large image */}\r\n              <ul className=\"w-full mb-6\">\r\n                {images[currentIndex] && <GalleryItem image={images[currentIndex]} />}\r\n              </ul>\r\n\r\n              {/* Next 2 thumbnails preview */}\r\n              {images.length > 1 && (\r\n                <div className=\"grid grid-cols-2 gap-4 px-4\">\r\n                  {images[(currentIndex + 1) % images.length] && (\r\n                    <button\r\n                      onClick={() => { setCurrentIndex((currentIndex + 1) % images.length); }}\r\n                      className=\"rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow\"\r\n                    >\r\n                      <img\r\n                        src={images[(currentIndex + 1) % images.length].src}\r\n                        alt={images[(currentIndex + 1) % images.length].alt}\r\n                        className=\"w-full h-24 object-cover\"\r\n                      />\r\n                    </button>\r\n                  )}\r\n                  {images[(currentIndex + 2) % images.length] && (\r\n                    <button\r\n                      onClick={() => { setCurrentIndex((currentIndex + 2) % images.length); }}\r\n                      className=\"rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow\"\r\n                    >\r\n                      <img\r\n                        src={images[(currentIndex + 2) % images.length].src}\r\n                        alt={images[(currentIndex + 2) % images.length].alt}\r\n                        className=\"w-full h-24 object-cover\"\r\n                      />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Dots Indicator */}\r\n            {images.length > 1 && (\r\n              <div className=\"flex justify-center mt-6 space-x-2\">\r\n                {images.map((_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => { setCurrentIndex(index); }}\r\n                    className={`w-3 h-3 rounded-full transition-colors ${\r\n                      currentIndex === index\r\n                        ? 'bg-orange-500'\r\n                        : 'bg-gray-400 hover:bg-gray-300'\r\n                    }`}\r\n                    aria-label={`Go to image ${index + 1}`}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        </div>\r\n      </section>\r\n\r\n      {/* MOBILE: Separate footer section */}\r\n      <section id=\"footer\" className=\"md:hidden relative snap-start snap-always bg-stone-900\">\r\n        <div className=\"pt-[72px] py-12\">\r\n        <Footer onRequestQuote={onRequestQuote || (() => { /* noop */ })} />\r\n        </div>\r\n      </section>\r\n\r\n      {/* DESKTOP: Combined gallery + footer in one section (original) */}\r\n      <section id=\"gallery-desktop\" className=\"hidden md:block relative h-screen snap-start snap-always overflow-hidden bg-stone-900\">\r\n        <div className=\"h-full pt-[88px]\">\r\n        <div className=\"relative z-10 h-full px-4 pt-20\">\r\n          {/* Top Half - Gallery */}\r\n          <div className=\"h-1/2 flex items-center justify-center px-4 sm:px-6 lg:px-8 relative\">\r\n            {rotatingLoading ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"text-stone-400\">Loading gallery...</div>\r\n              </div>\r\n            ) : rotatingError ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"text-red-400\">Error loading gallery: {rotatingError}</div>\r\n              </div>\r\n            ) : currentImages.length === 0 ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"text-stone-400\">No images available</div>\r\n              </div>\r\n            ) : (\r\n              <ul className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-5 lg:gap-6 w-full\">\r\n                {currentImages.map((image, index) => (\r\n                  <RotatingGalleryItem \r\n                    key={image.id} \r\n                    image={image} \r\n                    {...(nextImages[index] && { nextImage: nextImages[index] })}\r\n                    isTransitioning={fadingIndex === index}\r\n                    index={index}\r\n                  />\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          {/* Bottom Half - Footer Content */}\r\n          <div className=\"h-1/2 flex flex-col justify-center border-t border-stone-700\">\r\n            <Footer onRequestQuote={onRequestQuote || (() => { /* noop */ })} />\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","/**\r\n * Preview Store\r\n * \r\n * Zustand store for managing preview state.\r\n * Holds the current preview payload (businessName, phone, industry).\r\n */\r\n\r\nimport { create } from 'zustand';\r\n\r\nimport type { PreviewPayload } from '../types/preview.types';\r\n\r\ninterface PreviewState {\r\n  payload: PreviewPayload | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  setPayload: (payload: PreviewPayload) => void;\r\n  setLoading: (loading: boolean) => void;\r\n  setError: (error: string | null) => void;\r\n  clearPreview: () => void;\r\n}\r\n\r\nexport const usePreviewStore = create<PreviewState>((set) => ({\r\n  payload: null,\r\n  isLoading: false,\r\n  error: null,\r\n  \r\n  setPayload: (payload) => {\r\n    set({\r\n      payload,\r\n      error: null,\r\n    });\r\n  },\r\n  \r\n  setLoading: (loading) => {\r\n    set({\r\n      isLoading: loading,\r\n    });\r\n  },\r\n  \r\n  setError: (error) => {\r\n    set({\r\n      error,\r\n      isLoading: false,\r\n    });\r\n  },\r\n  \r\n  clearPreview: () => {\r\n    set({\r\n      payload: null,\r\n      error: null,\r\n      isLoading: false,\r\n    });\r\n  },\r\n}));\r\n\r\n","/**\r\n * usePreviewParams Hook\r\n * \r\n * Reads preview parameters from URL (either token or individual params),\r\n * validates them, and hydrates the preview store.\r\n * \r\n * Supports two modes:\r\n * 1. Token mode: ?t=<jwt>\r\n * 2. URL params mode: ?name=&phone=&industry= (for quick testing)\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport { safeErrorMessage, safeValidationMessage } from '@/shared/utils/errorHandling';\r\n\r\nimport { verifyPreview } from '../api/preview.api';\r\nimport { usePreviewStore } from '../state/previewStore';\r\nimport type { PreviewPayload } from '../types/preview.types';\r\nimport { PreviewPayloadSchema } from '../types/preview.types';\r\n\r\ninterface UsePreviewParamsResult {\r\n  payload: PreviewPayload | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport function usePreviewParams(): UsePreviewParamsResult {\r\n  const [searchParams] = useSearchParams();\r\n  const { payload, isLoading, error, setPayload, setLoading, setError } = usePreviewStore();\r\n  const [hasInitialized, setHasInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Only run once on mount\r\n    if (hasInitialized) return;\r\n    setHasInitialized(true);\r\n\r\n    async function loadPreview() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        // Check if token mode is used\r\n        const token = searchParams.get('t');\r\n\r\n        if (token) {\r\n          // Token mode: verify with backend\r\n          const verifiedPayload = await verifyPreview(token);\r\n          setPayload(verifiedPayload);\r\n          return;\r\n        }\r\n\r\n        // URL params mode: validate and use directly\r\n        const name = searchParams.get('name');\r\n        const phone = searchParams.get('phone');\r\n        const city = searchParams.get('city');\r\n        const state = searchParams.get('state');\r\n        const industry = searchParams.get('industry');\r\n\r\n        if (!name || !phone || !city || !state || !industry) {\r\n          throw new Error('Missing required parameters. Please use a valid preview link.');\r\n        }\r\n\r\n        const validation = PreviewPayloadSchema.safeParse({\r\n          businessName: name,\r\n          phone,\r\n          city,\r\n          state: state.toUpperCase(),\r\n          industry,\r\n        });\r\n\r\n        if (!validation.success) {\r\n          throw new Error(safeValidationMessage(validation.error));\r\n        }\r\n\r\n        setPayload(validation.data);\r\n      } catch (err: unknown) {\r\n        setError(safeErrorMessage(err));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    void loadPreview();\r\n  }, [searchParams, hasInitialized, setPayload, setLoading, setError]);\r\n\r\n  return {\r\n    payload,\r\n    isLoading,\r\n    error,\r\n  };\r\n}\r\n\r\n"],"file":"assets/usePreviewParams-DBlmro9g.js"}