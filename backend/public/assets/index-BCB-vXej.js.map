{"version":3,"mappings":";;;;;AAeA,eAAsB,qBAA8C;AAIlE,QAAM,eAAe,0BAAM,OAAO,gDAA6B;AAK/D,SAAO,aAAa;AACtB","names":[],"ignoreList":[],"sources":["../../src/data/lawncare/index.ts"],"sourcesContent":["/**\r\n * Lawncare Industry Config Loader\r\n * Assembles modular config files into MainSiteConfig structure\r\n * \r\n * NOTE: This industry is not yet fully configured. Placeholder files are used\r\n * to establish the modular architecture pattern. The old site.json is still\r\n * available as a reference/backup.\r\n */\r\n\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\n\r\n/**\r\n * Load and assemble lawncare config from modular files\r\n * Falls back to legacy site.json data structure for now\r\n */\r\nexport async function loadLawncareConfig(): Promise<MainSiteConfig> {\r\n  // TODO: Populate modular files with actual lawncare data\r\n  // For now, import the legacy site.json from archive as fallback\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- Legacy JSON import, typing refactor planned\r\n  const legacyConfig = await import('./_archive/site.json.legacy');\r\n  \r\n  // Return legacy config until modular files are populated\r\n  // Once populated, replace with assembled config like mobile-detailing\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access -- Legacy JSON import, typing refactor planned\r\n  return legacyConfig.default as MainSiteConfig;\r\n}\r\n\r\n"],"file":"assets/index-BCB-vXej.js"}