{"version":3,"mappings":"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","names":["jsx","jsxs","useState","Fragment","useEffect","useRef","useCallback","lazy","Suspense","AdminDashboard"],"ignoreList":[],"sources":["../../src/admin-app/AdminProviders.tsx","../../src/features/adminDashboard/components/AdminLayout.tsx","../../src/features/adminDashboard/utils/constants.ts","../../src/features/adminDashboard/components/AdminTabs.tsx","../../src/features/adminDashboard/components/tabs/analytics/AnalyticsTab.tsx","../../src/features/adminDashboard/api/admin.api.ts","../../src/features/adminDashboard/hooks/useSeedReview.ts","../../src/features/adminDashboard/components/tabs/reviews/ReviewsTab.tsx","../../src/features/adminDashboard/components/tabs/settings/SettingsTab.tsx","../../src/features/adminDashboard/components/shared/ApplicationModal.tsx","../../src/features/adminDashboard/components/shared/DeleteConfirmationModal.tsx","../../src/features/adminDashboard/components/shared/Toast.tsx","../../src/shared/utils/tenantEventManager.ts","../../src/shared/utils/urlGenerator.ts","../../src/features/adminDashboard/components/tabs/users/UsersTab.tsx","../../src/features/adminDashboard/components/TabContent.tsx","../../src/features/adminDashboard/components/DashboardPage.tsx","../../src/features/preview/components/PreviewError.tsx","../../src/features/preview/components/PreviewLoading.tsx","../../src/shared/seo/SeoHead.tsx","../../src/features/preview/components/PreviewPage.tsx","../../src/features/preview/pages/PreviewGeneratorPage.tsx","../../src/admin-app/AdminApp.tsx","../../src/admin-app/main.tsx"],"sourcesContent":["import React from 'react';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\n\r\nimport { AuthProvider } from '@/shared/contexts';\r\nimport { ErrorBoundary } from '@/shared/ui';\r\n\r\n// Create a client\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000, // 5 minutes\r\n      gcTime: 10 * 60 * 1000, // 10 minutes (formerly cacheTime)\r\n      retry: 1,\r\n      refetchOnWindowFocus: false,\r\n    },\r\n  },\r\n});\r\n\r\ninterface AdminProvidersProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AdminProviders: React.FC<AdminProvidersProps> = ({ children }) => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <QueryClientProvider client={queryClient}>\r\n        <AuthProvider>\r\n          {children}\r\n        </AuthProvider>\r\n      </QueryClientProvider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Database } from 'lucide-react';\r\n\r\ninterface AdminLayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AdminLayout: React.FC<AdminLayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900\">\r\n      <header className=\"bg-gray-800 shadow-sm border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-16\">\r\n            <div className=\"flex items-center\">\r\n              <Database className=\"w-8 h-8 text-blue-600 mr-3\" />\r\n              <h1 className=\"text-xl font-semibold text-white\">Admin Dashboard</h1>\r\n            </div>\r\n            <div className=\"flex items-center gap-4\">\r\n              <span className=\"text-sm text-gray-300\">Welcome back, Admin</span>\r\n              <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\r\n                <span className=\"text-white text-sm font-medium\">A</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const ADMIN_TABS = [\r\n  { id: 'users', label: 'Users', icon: 'Users' },\r\n  { id: 'reviews', label: 'Reviews', icon: 'Star' },\r\n  { id: 'analytics', label: 'Analytics', icon: 'BarChart3' },\r\n  { id: 'settings', label: 'Settings', icon: 'Settings' },\r\n] as const;\r\n","import React from 'react';\r\nimport { BarChart3, Database, Settings, Star,Users } from 'lucide-react';\r\n\r\nimport type { AdminTab } from '@/features/adminDashboard/types';\r\nimport { ADMIN_TABS } from '@/features/adminDashboard/utils/constants';\r\n\r\ninterface AdminTabsProps {\r\n  activeTab: AdminTab;\r\n  onTabChange: (tab: AdminTab) => void;\r\n}\r\n\r\nconst iconMap = {\r\n  Database,\r\n  Users,\r\n  Star,\r\n  BarChart3,\r\n  Settings,\r\n};\r\n\r\nexport const AdminTabs: React.FC<AdminTabsProps> = ({ activeTab, onTabChange }) => {\r\n  return (\r\n    <nav className=\"flex space-x-8 mb-8\">\r\n      {ADMIN_TABS.map((tab) => {\r\n        const Icon = iconMap[tab.icon];\r\n        return (\r\n          <button\r\n            key={tab.id}\r\n            onClick={() => { onTabChange(tab.id as AdminTab); }}\r\n            className={`flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${\r\n              activeTab === tab.id\r\n                ? 'bg-blue-900 text-blue-300 border-b-2 border-blue-400'\r\n                : 'text-gray-300 hover:text-white hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <Icon className=\"w-4 h-4\" />\r\n            {tab.label}\r\n          </button>\r\n        );\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { BarChart3, TrendingUp } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\nexport const AnalyticsTab: React.FC = () => {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-gray-800 rounded-lg shadow-sm border border-gray-700\">\r\n        <div className=\"px-6 py-4 border-b border-gray-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-lg font-semibold text-white flex items-center gap-2\">\r\n              <BarChart3 className=\"w-5 h-5 text-blue-400\" />\r\n              Analytics Dashboard\r\n            </h2>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button \r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                className=\"flex items-center gap-2 px-3 py-1.5 bg-gray-600 hover:bg-gray-700 text-white rounded-md\"\r\n                leftIcon={<TrendingUp className=\"w-4 h-4\" />}\r\n              >\r\n                Export Report\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"p-6\">\r\n          <div className=\"text-center text-gray-300\">\r\n            <BarChart3 className=\"w-16 h-16 mx-auto mb-4 text-gray-600\" />\r\n            <h3 className=\"text-lg font-semibold mb-2\">Analytics Coming Soon</h3>\r\n            <p>This section will provide comprehensive analytics and reporting capabilities.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","interface ReviewFormData {\r\n  name: string;\r\n  stars: number;\r\n  title: string;\r\n  content: string;\r\n  type: 'affiliate' | 'mdh';\r\n  businessSlug?: string;\r\n  source: 'website' | 'google' | 'yelp' | 'facebook';\r\n  daysAgo: number;\r\n  weeksAgo: number;\r\n  specificDate: string;\r\n  serviceCategory: 'car' | 'truck' | 'boat' | 'rv' | 'motorcycle' | 'ceramic' | 'none';\r\n  avatarFile?: File;\r\n  reviewerUrl?: string;\r\n}\r\n\r\ninterface SeedReviewsResponse {\r\n  errorDetails?: unknown[];\r\n  count?: number;\r\n  reviewIds?: string[];\r\n}\r\n\r\n/**\r\n * Seed reviews via the admin API\r\n */\r\nexport const seedReviews = async (\r\n  reviews: ReviewFormData[],\r\n  signal?: AbortSignal\r\n): Promise<SeedReviewsResponse> => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    throw new Error('No authentication token found');\r\n  }\r\n\r\n  const response = await fetch('/api/admin/seed-reviews', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ reviews }),\r\n    signal\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    throw new Error(`Server error: ${String(response.status)} - ${errorText}`);\r\n  }\r\n\r\n  return await response.json() as SeedReviewsResponse;\r\n};\r\n\r\n/**\r\n * Upload a reviewer avatar via the admin API\r\n */\r\nexport const uploadReviewerAvatar = async (\r\n  avatarFile: File,\r\n  reviewerName: string,\r\n  reviewId: string\r\n): Promise<unknown> => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    throw new Error('No authentication token found');\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append('avatar', avatarFile);\r\n  formData.append('reviewerName', reviewerName);\r\n  formData.append('reviewId', reviewId);\r\n\r\n  const response = await fetch('/api/avatar/upload', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: formData\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Avatar upload failed');\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\n","import { useState } from 'react';\r\n\r\nimport { seedReviews, uploadReviewerAvatar } from '../api/admin.api';\r\n\r\ninterface ReviewFormData {\r\n  name: string;\r\n  stars: number;\r\n  title: string;\r\n  content: string;\r\n  type: 'affiliate' | 'mdh';\r\n  businessSlug?: string;\r\n  source: 'website' | 'google' | 'yelp' | 'facebook';\r\n  daysAgo: number;\r\n  weeksAgo: number;\r\n  specificDate: string;\r\n  serviceCategory: 'car' | 'truck' | 'boat' | 'rv' | 'motorcycle' | 'ceramic' | 'none';\r\n  avatarFile?: File;\r\n  reviewerUrl?: string;\r\n}\r\n\r\ntype SubmitStatus = 'idle' | 'success' | 'error';\r\n\r\n/**\r\n * Hook for seeding reviews via the admin API\r\n */\r\nexport const useSeedReview = () => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState<SubmitStatus>('idle');\r\n  const [submitMessage, setSubmitMessage] = useState('');\r\n\r\n  const submitReview = async (formData: ReviewFormData) => {\r\n    if (!formData.name || !formData.title || !formData.content) {\r\n      setSubmitMessage('Please fill in all required fields');\r\n      setSubmitStatus('error');\r\n      return false;\r\n    }\r\n\r\n    if (formData.type === 'affiliate' && !formData.businessSlug) {\r\n      setSubmitMessage('Please select a business for affiliate reviews');\r\n      setSubmitStatus('error');\r\n      return false;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setSubmitStatus('idle');\r\n    setSubmitMessage('Sending request...');\r\n\r\n    try {\r\n      // Add timeout to prevent infinite hanging\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => {\r\n        controller.abort();\r\n      }, 10000); // 10 second timeout\r\n\r\n      const result = await seedReviews([formData], controller.signal);\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      // Log error details if there are any\r\n      if (result.errorDetails && result.errorDetails.length > 0) {\r\n        console.error('Review creation errors:', result.errorDetails);\r\n      }\r\n\r\n      // If there's an avatar file and the review was created successfully, upload the avatar\r\n      if (formData.avatarFile && result.count && result.count > 0) {\r\n        setSubmitMessage('Review created! Uploading avatar...');\r\n\r\n        try {\r\n          await uploadReviewerAvatar(\r\n            formData.avatarFile,\r\n            formData.name,\r\n            result.reviewIds?.[0] ?? '1'\r\n          );\r\n          setSubmitMessage(`Successfully added review with avatar: \"${formData.title}\"`);\r\n          setSubmitStatus('success');\r\n        } catch (avatarError) {\r\n          console.warn('Avatar upload error:', avatarError);\r\n          setSubmitMessage(`Review created (avatar upload failed): \"${formData.title}\"`);\r\n          setSubmitStatus('success');\r\n        }\r\n      } else {\r\n        setSubmitMessage(`Successfully added review: \"${formData.title}\"`);\r\n        setSubmitStatus('success');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Submit error:', error);\r\n      setSubmitStatus('error');\r\n\r\n      if (error instanceof Error && error.name === 'AbortError') {\r\n        setSubmitMessage(\r\n          'Request timed out after 10 seconds. Please check if the backend server is running.'\r\n        );\r\n      } else {\r\n        setSubmitMessage(error instanceof Error ? error.message : 'Failed to seed review');\r\n      }\r\n\r\n      return false;\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetStatus = () => {\r\n    setSubmitStatus('idle');\r\n    setSubmitMessage('');\r\n  };\r\n\r\n  return {\r\n    isSubmitting,\r\n    submitStatus,\r\n    submitMessage,\r\n    submitReview,\r\n    resetStatus\r\n  };\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { AlertCircle, CheckCircle, Star } from 'lucide-react';\r\n\r\nimport { useSeedReview } from '@/features/adminDashboard/hooks/useSeedReview';\r\n\r\ninterface ReviewFormData {\r\n  name: string;\r\n  stars: number;\r\n  title: string;\r\n  content: string;\r\n  type: 'affiliate' | 'mdh';\r\n  businessSlug?: string;\r\n  source: 'website' | 'google' | 'yelp' | 'facebook';\r\n  daysAgo: number;\r\n  weeksAgo: number;\r\n  specificDate: string;\r\n  serviceCategory: 'car' | 'truck' | 'boat' | 'rv' | 'motorcycle' | 'ceramic' | 'none';\r\n  avatarFile?: File;\r\n  reviewerUrl?: string;\r\n}\r\n\r\n\r\nconst ReviewsTab: React.FC = () => {\r\n  const [formData, setFormData] = useState<ReviewFormData>({\r\n    name: '',\r\n    stars: 5,\r\n    title: '',\r\n    content: '',\r\n    type: 'mdh',\r\n    businessSlug: '',\r\n    source: 'website',\r\n    daysAgo: 0,\r\n    weeksAgo: 0,\r\n    specificDate: '',\r\n    serviceCategory: 'none',\r\n    reviewerUrl: ''\r\n  });\r\n\r\n  const { isSubmitting, submitStatus, submitMessage, submitReview } = useSeedReview();\r\n\r\n  // Sample business slugs for affiliate reviews\r\n  const businessSlugs = [\r\n    { value: 'jps', label: 'JP\\'s Mobile Detailing' },\r\n    { value: 'premium-auto-spa', label: 'Premium Auto Spa' },\r\n    { value: 'elite-mobile-detail', label: 'Elite Mobile Detail' },\r\n    { value: 'quick-clean-mobile', label: 'Quick Clean Mobile' }\r\n  ];\r\n\r\n  const handleInputChange = (field: keyof ReviewFormData, value: string | number | File | undefined) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmitReview = async () => {\r\n    const success = await submitReview(formData);\r\n\r\n    if (success) {\r\n      // Reset form\r\n      setFormData({\r\n        name: '',\r\n        stars: 5,\r\n        title: '',\r\n        content: '',\r\n        type: 'mdh',\r\n        businessSlug: '',\r\n        source: 'website',\r\n        daysAgo: 0,\r\n        weeksAgo: 0,\r\n        specificDate: '',\r\n        serviceCategory: 'none',\r\n        reviewerUrl: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderStars = (rating: number, interactive: boolean = false) => {\r\n    return (\r\n      <div className=\"flex space-x-1\">\r\n        {[1, 2, 3, 4, 5].map((star) => (\r\n          <Star\r\n            key={star}\r\n            className={`w-5 h-5 ${\r\n              star <= rating\r\n                ? 'text-yellow-400 fill-current'\r\n                : 'text-gray-300'\r\n            } ${interactive ? 'cursor-pointer hover:text-yellow-300' : ''}`}\r\n            onClick={() => { if (interactive) handleInputChange('stars', star); }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Google Reviews Integration */}\r\n      <div className=\"bg-blue-900 rounded-lg p-6 border border-blue-700\">\r\n        <h2 className=\"text-xl font-semibold text-white mb-4 flex items-center gap-2\">\r\n          <Star className=\"w-5 h-5 text-yellow-400\" />\r\n          Google Reviews Integration\r\n        </h2>\r\n        <p className=\"text-blue-200 mb-4\">\r\n          Connect your Google Business Profile to automatically fetch and display reviews on your website.\r\n        </p>\r\n        <a \r\n          href=\"http://localhost:3001/api/google/auth\"\r\n          className=\"inline-flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\"\r\n        >\r\n          <Star className=\"w-4 h-4\" />\r\n          Connect Google Reviews\r\n        </a>\r\n        <p className=\"text-xs text-blue-300 mt-2\">\r\n          This will open Google's authorization screen to connect your business profile.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"bg-gray-800 rounded-lg p-6\">\r\n        <h2 className=\"text-xl font-semibold text-white mb-4\">Seed Reviews</h2>\r\n        <p className=\"text-gray-300 mb-6\">\r\n          Add reviews to the system. Just fill in the 4 required fields and the rest will be handled automatically.\r\n        </p>\r\n\r\n        {/* Form */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n          <div>\r\n            <label htmlFor=\"reviewer-name\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Reviewer Name *\r\n            </label>\r\n            <input\r\n              id=\"reviewer-name\"\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => { handleInputChange('name', e.target.value); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"e.g., John Smith\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"rating\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Rating *\r\n            </label>\r\n            <div id=\"rating\">\r\n              {renderStars(formData.stars, true)}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"md:col-span-2\">\r\n            <label htmlFor=\"review-title\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Review Title *\r\n            </label>\r\n            <input\r\n              id=\"review-title\"\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => { handleInputChange('title', e.target.value); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"e.g., Amazing service!\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"md:col-span-2\">\r\n            <label htmlFor=\"review-content\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Review Content *\r\n            </label>\r\n            <textarea\r\n              id=\"review-content\"\r\n              value={formData.content}\r\n              onChange={(e) => { handleInputChange('content', e.target.value); }}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"Write your review here...\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"review-type\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Review Type\r\n            </label>\r\n            <select\r\n              id=\"review-type\"\r\n              value={formData.type}\r\n              onChange={(e) => { handleInputChange('type', e.target.value as 'affiliate' | 'mdh'); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"mdh\">MDH Site Review</option>\r\n              <option value=\"affiliate\">Affiliate Review</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"business-slug\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Business {formData.type === 'affiliate' && <span className=\"text-red-400\">*</span>}\r\n            </label>\r\n            <select\r\n              id=\"business-slug\"\r\n              value={formData.businessSlug}\r\n              onChange={(e) => { handleInputChange('businessSlug', e.target.value); }}\r\n              className={`w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                formData.type === 'affiliate' ? '' : 'opacity-50 cursor-not-allowed'\r\n              }`}\r\n              disabled={formData.type !== 'affiliate'}\r\n            >\r\n              <option value=\"\">{formData.type === 'affiliate' ? 'Select a business' : 'N/A for MDH reviews'}</option>\r\n              {businessSlugs.map((business) => (\r\n                <option key={business.value} value={business.value}>\r\n                  {business.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {formData.type !== 'affiliate' && (\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                Business selection only applies to affiliate reviews\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"review-source\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Review Source\r\n            </label>\r\n            <select\r\n              id=\"review-source\"\r\n              value={formData.source}\r\n              onChange={(e) => { handleInputChange('source', e.target.value as 'website' | 'google' | 'yelp' | 'facebook'); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"website\">Website</option>\r\n              <option value=\"google\">Google</option>\r\n              <option value=\"yelp\">Yelp</option>\r\n              <option value=\"facebook\">Facebook</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"days-ago\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Days Ago (0-6 for recent reviews)\r\n            </label>\r\n            <input\r\n              id=\"days-ago\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"6\"\r\n              value={formData.daysAgo}\r\n              onChange={(e) => {\r\n                const days = parseInt(e.target.value) || 0;\r\n                handleInputChange('daysAgo', days);\r\n                if (days > 0) {\r\n                  handleInputChange('weeksAgo', 0); // Clear weeks if days is set\r\n                }\r\n              }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"weeks-ago\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Weeks Ago (1+ for older reviews)\r\n            </label>\r\n            <input\r\n              id=\"weeks-ago\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"52\"\r\n              value={formData.weeksAgo}\r\n              onChange={(e) => {\r\n                const weeks = parseInt(e.target.value) || 0;\r\n                handleInputChange('weeksAgo', weeks);\r\n                if (weeks > 0) {\r\n                  handleInputChange('daysAgo', 0); // Clear days if weeks is set\r\n                  handleInputChange('specificDate', ''); // Clear date if weeks is set\r\n                }\r\n              }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"specific-date\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Specific Date (for reviews older than 52 weeks)\r\n            </label>\r\n            <input\r\n              id=\"specific-date\"\r\n              type=\"date\"\r\n              value={formData.specificDate}\r\n              onChange={(e) => {\r\n                handleInputChange('specificDate', e.target.value);\r\n                if (e.target.value) {\r\n                  handleInputChange('daysAgo', 0); // Clear days if date is set\r\n                  handleInputChange('weeksAgo', 0); // Clear weeks if date is set\r\n                }\r\n              }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <p className=\"text-xs text-gray-400 mt-1\">\r\n              Use this for reviews older than 52 weeks (Google switches to date mode)\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"service-category\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Service Category\r\n            </label>\r\n            <select\r\n              id=\"service-category\"\r\n              value={formData.serviceCategory}\r\n              onChange={(e) => { handleInputChange('serviceCategory', e.target.value as 'car' | 'truck' | 'boat' | 'rv' | 'motorcycle' | 'ceramic' | 'none'); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"none\">None</option>\r\n              <option value=\"car\">Car</option>\r\n              <option value=\"truck\">Truck</option>\r\n              <option value=\"boat\">Boat</option>\r\n              <option value=\"rv\">RV</option>\r\n              <option value=\"motorcycle\">Motorcycle</option>\r\n              <option value=\"ceramic\">Ceramic</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"avatar-file\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Avatar Image (Optional)\r\n            </label>\r\n            <input\r\n              id=\"avatar-file\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={(e) => {\r\n                const file = e.target.files?.[0];\r\n                if (file) {\r\n                  // Validate file size (5MB limit)\r\n                  if (file.size > 5 * 1024 * 1024) {\r\n                    alert('Avatar file must be less than 5MB');\r\n                    e.target.value = ''; // Clear the file input\r\n                    return;\r\n                  }\r\n                  handleInputChange('avatarFile', file);\r\n                }\r\n              }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-blue-600 file:text-white hover:file:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            {formData.avatarFile && (\r\n              <div className=\"mt-2 text-sm text-gray-400\">\r\n                Selected: {formData.avatarFile.name} ({(formData.avatarFile.size / 1024 / 1024).toFixed(2)} MB)\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"reviewer-url\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Reviewer Profile URL (Optional)\r\n            </label>\r\n            <input\r\n              id=\"reviewer-url\"\r\n              type=\"url\"\r\n              value={formData.reviewerUrl}\r\n              onChange={(e) => { handleInputChange('reviewerUrl', e.target.value); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"e.g., https://www.google.com/maps/contrib/123456789\"\r\n            />\r\n            <p className=\"text-xs text-gray-400 mt-1\">\r\n              Link to reviewer&rsquo;s profile page (Google, Yelp, etc.)\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-4\">\r\n          <button\r\n            onClick={() => { void handleSubmitReview(); }}\r\n            disabled={isSubmitting}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {isSubmitting ? (\r\n              <>\r\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                Saving...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <CheckCircle className=\"w-4 h-4\" />\r\n                Save Review\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Status Message */}\r\n        {submitMessage && (\r\n          <div className={`mt-4 p-3 rounded-md flex items-center gap-2 ${\r\n            submitStatus === 'success' \r\n              ? 'bg-green-900 text-green-300' \r\n              : 'bg-red-900 text-red-300'\r\n          }`}>\r\n            {submitStatus === 'success' ? (\r\n              <CheckCircle className=\"w-4 h-4\" />\r\n            ) : (\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n            )}\r\n            {submitMessage}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsTab;\r\n","import React from 'react';\r\nimport { Settings, Shield } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\nexport const SettingsTab: React.FC = () => {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-gray-800 rounded-lg shadow-sm border border-gray-700\">\r\n        <div className=\"px-6 py-4 border-b border-gray-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-lg font-semibold text-white flex items-center gap-2\">\r\n              <Settings className=\"w-5 h-5 text-blue-400\" />\r\n              System Settings\r\n            </h2>\r\n            <Button \r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              className=\"flex items-center gap-2 px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white rounded-md\"\r\n              leftIcon={<Shield className=\"w-4 h-4\" />}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"p-6\">\r\n          <div className=\"text-center text-gray-300\">\r\n            <Settings className=\"w-16 h-16 mx-auto mb-4 text-gray-600\" />\r\n            <h3 className=\"text-lg font-semibold mb-2\">Settings Coming Soon</h3>\r\n            <p>This section will allow you to configure system settings and preferences.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CheckCircle, X, XCircle } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\ninterface ApplicationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: { slug?: string; reason?: string; notes: string }) => Promise<void>;\r\n  type: 'approve' | 'reject';\r\n  businessName: string;\r\n  isLoading?: boolean;\r\n}\r\n\r\nexport const ApplicationModal: React.FC<ApplicationModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n  type,\r\n  businessName,\r\n  isLoading = false\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    slug: '',\r\n    reason: '',\r\n    notes: ''\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent): void => {\r\n    e.preventDefault();\r\n    \r\n    // Validate slug format for approval\r\n    if (type === 'approve' && formData.slug) {\r\n      if (formData.slug.length < 3) {\r\n        alert('Slug must be at least 3 characters long');\r\n        return;\r\n      }\r\n      if (formData.slug.length > 50) {\r\n        alert('Slug must be less than 50 characters long');\r\n        return;\r\n      }\r\n      if (!/^[a-z0-9-]+$/.test(formData.slug)) {\r\n        alert('Slug must contain only lowercase letters, numbers, and hyphens');\r\n        return;\r\n      }\r\n      if (formData.slug.startsWith('-') || formData.slug.endsWith('-')) {\r\n        alert('Slug cannot start or end with a hyphen');\r\n        return;\r\n      }\r\n      if (formData.slug.includes('--')) {\r\n        alert('Slug cannot contain consecutive hyphens');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Validate rejection reason\r\n    if (type === 'reject' && formData.reason) {\r\n      if (formData.reason.trim().length < 10) {\r\n        alert('Rejection reason must be at least 10 characters long');\r\n        return;\r\n      }\r\n      if (formData.reason.trim().length > 500) {\r\n        alert('Rejection reason must be less than 500 characters long');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Validate admin notes length\r\n    if (formData.notes && formData.notes.trim().length > 1000) {\r\n      alert('Admin notes must be less than 1000 characters long');\r\n      return;\r\n    }\r\n    \r\n    void onSubmit(formData);\r\n    setFormData({ slug: '', reason: '', notes: '' });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData({ slug: '', reason: '', notes: '' });\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-md mx-4\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            {type === 'approve' ? (\r\n              <CheckCircle className=\"w-6 h-6 text-green-400\" />\r\n            ) : (\r\n              <XCircle className=\"w-6 h-6 text-red-400\" />\r\n            )}\r\n            <h3 className=\"text-lg font-semibold text-white\">\r\n              {type === 'approve' ? 'Approve' : 'Reject'} Application\r\n            </h3>\r\n          </div>\r\n          <Button\r\n            onClick={handleClose}\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-gray-400 hover:text-white p-1\"\r\n          >\r\n            <X className=\"w-5 h-5\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <p className=\"text-gray-300 text-sm\">\r\n            {type === 'approve' ? 'Approving' : 'Rejecting'} application for{' '}\r\n            <span className=\"font-medium text-white\">{businessName}</span>\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {type === 'approve' && (\r\n            <div>\r\n              <label htmlFor=\"slug\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                Approved Slug *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"slug\"\r\n                value={formData.slug}\r\n                onChange={(e) => { setFormData({ ...formData, slug: e.target.value }); }}\r\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"e.g., my-business-name\"\r\n                required\r\n              />\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                This will be the URL slug for the affiliate&rsquo;s business page\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {type === 'reject' && (\r\n            <div>\r\n              <label htmlFor=\"reason\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                Rejection Reason *\r\n              </label>\r\n              <textarea\r\n                id=\"reason\"\r\n                value={formData.reason}\r\n                onChange={(e) => { setFormData({ ...formData, reason: e.target.value }); }}\r\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Please provide a reason for rejection...\"\r\n                rows={3}\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Admin Notes\r\n            </label>\r\n            <textarea\r\n              id=\"notes\"\r\n              value={formData.notes}\r\n              onChange={(e) => { setFormData({ ...formData, notes: e.target.value }); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"Additional notes (optional)...\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex gap-3 pt-2\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={handleClose}\r\n              variant=\"secondary\"\r\n              size=\"md\"\r\n              className=\"flex-1 px-4 py-2 bg-gray-600 hover:bg-gray-700\"\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant={type === 'approve' ? 'primary' : 'destructive'}\r\n              size=\"md\"\r\n              className={`flex-1 px-4 py-2 ${\r\n                type === 'approve'\r\n                  ? 'bg-green-600 hover:bg-green-700'\r\n                  : 'bg-red-600 hover:bg-red-700'\r\n              }`}\r\n              loading={isLoading}\r\n              disabled={isLoading}\r\n            >\r\n              {type === 'approve' ? 'Approve' : 'Reject'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { AlertTriangle, X } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\ninterface DeleteConfirmationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n  title: string;\r\n  message: string;\r\n  itemName: string;\r\n  isLoading?: boolean;\r\n  isTenant?: boolean;\r\n}\r\n\r\nexport const DeleteConfirmationModal: React.FC<DeleteConfirmationModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  title,\r\n  message,\r\n  itemName,\r\n  isLoading = false,\r\n  isTenant = false\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-md mx-4\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <AlertTriangle className=\"w-6 h-6 text-red-400\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">\r\n              {title}\r\n            </h3>\r\n          </div>\r\n          <Button\r\n            onClick={onClose}\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-gray-400 hover:text-white\"\r\n            disabled={isLoading}\r\n          >\r\n            <X className=\"w-4 h-4\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <p className=\"text-gray-300 mb-4\">\r\n            {message}\r\n          </p>\r\n          \r\n          <div className=\"bg-gray-700 rounded-lg p-3 mb-4\">\r\n            <p className=\"text-white font-medium\">\r\n              {itemName}\r\n            </p>\r\n          </div>\r\n\r\n          {isTenant && (\r\n            <div className=\"bg-red-900/20 border border-red-700 rounded-lg p-4 mb-4\">\r\n              <p className=\"text-red-200 text-sm font-medium mb-2\">⚠️ This will permanently delete:</p>\r\n              <ul className=\"text-red-300 text-xs space-y-1 ml-4\">\r\n                <li>• Tenant business record</li>\r\n                <li>• User account</li>\r\n                <li>• All reviews</li>\r\n                <li>• Website content</li>\r\n                <li>• Images and gallery</li>\r\n                <li>• Services and pricing</li>\r\n                <li>• Bookings and quotes</li>\r\n                <li>• Schedule and appointments</li>\r\n                <li>• Subscriptions</li>\r\n                <li>• Health monitoring data</li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          <p className=\"text-red-400 text-sm font-medium\">\r\n            This action cannot be undone!\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"flex gap-3\">\r\n          <Button\r\n            onClick={onClose}\r\n            variant=\"secondary\"\r\n            className=\"flex-1\"\r\n            disabled={isLoading}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={onConfirm}\r\n            variant=\"destructive\"\r\n            className=\"flex-1 bg-red-600 hover:bg-red-700\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? 'Deleting...' : 'Delete'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { CheckCircle, X,XCircle } from 'lucide-react';\r\n\r\ninterface ToastProps {\r\n  message: string;\r\n  type: 'success' | 'error';\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  duration?: number;\r\n}\r\n\r\nexport const Toast: React.FC<ToastProps> = ({\r\n  message,\r\n  type,\r\n  isVisible,\r\n  onClose,\r\n  duration = 5000\r\n}) => {\r\n  useEffect(() => {\r\n    if (isVisible && duration > 0) {\r\n      const timer = setTimeout(() => {\r\n        onClose();\r\n      }, duration);\r\n      return () => { clearTimeout(timer); };\r\n    }\r\n  }, [isVisible, duration, onClose]);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const bgColor = type === 'success' ? 'bg-green-600' : 'bg-red-600';\r\n  const Icon = type === 'success' ? CheckCircle : XCircle;\r\n\r\n  return (\r\n    <div className={`fixed top-4 right-4 z-50 ${bgColor} text-white px-6 py-4 rounded-lg shadow-lg max-w-sm`}>\r\n      <div className=\"flex items-center gap-3\">\r\n        <Icon className=\"w-5 h-5\" />\r\n        <span className=\"flex-1\">{message}</span>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"text-white hover:text-gray-200 transition-colors\"\r\n        >\r\n          <X className=\"w-4 h-4\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// Simple event system for tenant updates\r\n// Shared utility for cross-feature communication\r\n\r\ntype TenantEventListener = () => void;\r\n\r\nclass TenantEventManager {\r\n  private listeners: TenantEventListener[] = [];\r\n\r\n  subscribe(listener: TenantEventListener) {\r\n    this.listeners.push(listener);\r\n    \r\n    // Return unsubscribe function\r\n    return () => {\r\n      const index = this.listeners.indexOf(listener);\r\n      if (index > -1) {\r\n        this.listeners.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  notify() {\r\n    this.listeners.forEach(listener => { listener(); });\r\n  }\r\n}\r\n\r\nexport const tenantEventManager = new TenantEventManager();\r\n\r\n// Event types (currently unused, but defined for future use)\r\nexport const TENANT_EVENTS = {\r\n  TENANT_DELETED: 'tenant_deleted',\r\n  TENANT_APPROVED: 'tenant_approved',\r\n  TENANT_REJECTED: 'tenant_rejected',\r\n  TENANT_UPDATED: 'tenant_updated'\r\n} as const;\r\n\r\n","/**\r\n * Utility functions for generating URLs based on environment\r\n */\r\n\r\nexport interface EnvironmentConfig {\r\n  isDevelopment: boolean;\r\n  baseDomain: string;\r\n  port?: string;\r\n}\r\n\r\n/**\r\n * Get the current environment configuration\r\n */\r\nexport function getEnvironmentConfig(): EnvironmentConfig {\r\n  const isDevelopment = import.meta.env.DEV;\r\n  \r\n  if (isDevelopment) {\r\n    return {\r\n      isDevelopment: true,\r\n      baseDomain: 'lvh.me',\r\n      port: window.location.port || '5175'\r\n    };\r\n  }\r\n  \r\n  // Production configuration\r\n  return {\r\n    isDevelopment: false,\r\n    baseDomain: 'thatsmartsite.com',\r\n    port: undefined // No port needed in production\r\n  };\r\n}\r\n\r\n/**\r\n * Generate a tenant website URL\r\n */\r\nexport function generateTenantWebsiteUrl(slug: string): string {\r\n  const config = getEnvironmentConfig();\r\n  \r\n  if (config.isDevelopment) {\r\n    return `http://${slug}.${config.baseDomain}:${config.port}/`;\r\n  }\r\n  \r\n  return `https://${slug}.${config.baseDomain}/`;\r\n}\r\n\r\n/**\r\n * Generate a tenant dashboard URL\r\n */\r\nexport function generateTenantDashboardUrl(slug: string): string {\r\n  const config = getEnvironmentConfig();\r\n  \r\n  if (config.isDevelopment) {\r\n    return `http://${slug}.${config.baseDomain}:${config.port}/dashboard`;\r\n  }\r\n  \r\n  return `https://${slug}.${config.baseDomain}/dashboard`;\r\n}\r\n\r\n/**\r\n * Generate a tenant onboarding URL\r\n */\r\nexport function generateTenantOnboardingUrl(): string {\r\n  const config = getEnvironmentConfig();\r\n  \r\n  if (config.isDevelopment) {\r\n    return `http://localhost:${config.port}/tenant-onboarding`;\r\n  }\r\n  \r\n  return `https://${config.baseDomain}/tenant-onboarding`;\r\n}\r\n","/* eslint-disable max-lines -- Complex component with multiple sub-tabs, refactoring planned */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { ExternalLink, Loader2, Plus, Settings, Trash2, UserCheck, UserCog, UserPlus, Users, UserX } from 'lucide-react';\n\nimport { ApplicationModal, DeleteConfirmationModal, Toast } from '@/features/adminDashboard/components/shared';\nimport type { UserSubTab } from '@/features/adminDashboard/types';\nimport { apiService } from '@/shared/api/api';\nimport { Button } from '@/shared/ui';\nimport { tenantEventManager } from '@/shared/utils/tenantEventManager';\nimport { generateTenantWebsiteUrl, generateTenantDashboardUrl, generateTenantOnboardingUrl } from '@/shared/utils/urlGenerator';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  role?: string;\n  is_admin?: boolean;\n  created_at: string;\n  business_name?: string;\n  slug?: string;\n  tenant_id?: number;\n}\n\ninterface PendingApplication {\n  id: number;\n  slug: string;\n  business_name: string;\n  owner: string;\n  phone: string;\n  email: string;\n  city: string;\n  state_code: string;\n  postal_code: string;\n  has_insurance: boolean;\n  source: string;\n  notes?: string;\n  application_date: string;\n  created_at: string;\n}\n\nexport const UsersTab: React.FC = () => {\n  const [activeSubTab, setActiveSubTab] = useState<UserSubTab>('all-users');\n  const [users, setUsers] = useState<User[]>([]);\n  const [pendingApplications, setPendingApplications] = useState<PendingApplication[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [modalState, setModalState] = useState<{\n    isOpen: boolean;\n    type: 'approve' | 'reject';\n    applicationId: number;\n    businessName: string;\n  } | null>(null);\n  const [deleteModalState, setDeleteModalState] = useState<{\n    isOpen: boolean;\n    userId: number;\n    name: string;\n    isTenant: boolean;\n  } | null>(null);\n  const [processingApplication, setProcessingApplication] = useState(false);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: 'success' | 'error';\n    isVisible: boolean;\n  } | null>(null);\n  const [deletingAffiliate, setDeletingAffiliate] = useState<number | null>(null);\n\n  // Add debouncing to prevent rapid API calls\n  const debounceTimer = useRef<number | null>(null);\n  const lastFetchRef = useRef<{ status: UserSubTab; timestamp: number } | null>(null);\n\n  const subTabs = [\n    { id: 'all-users' as UserSubTab, label: 'All Users', icon: Users },\n    { id: 'admin' as UserSubTab, label: 'Admin', icon: UserCog },\n    { id: 'tenant' as UserSubTab, label: 'Tenants', icon: UserCheck },\n    { id: 'customer' as UserSubTab, label: 'Customers', icon: UserX },\n    { id: 'pending' as UserSubTab, label: 'Pending', icon: UserPlus },\n  ];\n\n  const fetchUsers = useCallback((status: UserSubTab, force = false) => {\n    // Debouncing: prevent rapid successive calls for the same status\n    const now = Date.now();\n    const lastFetch = lastFetchRef.current;\n    \n    if (!force && lastFetch && lastFetch.status === status && now - lastFetch.timestamp < 1000) {\n      // Skip if the same request was made within the last second\n      return;\n    }\n    \n    // Clear any existing debounce timer\n    if (debounceTimer.current) {\n      clearTimeout(debounceTimer.current);\n    }\n    \n    // Set a debounce timer for rapid successive calls\n    debounceTimer.current = setTimeout(() => {\n      void (async () => {\n        setLoading(true);\n        setError(null);\n        lastFetchRef.current = { status, timestamp: now };\n        \n        try {\n          if (status === 'pending') {\n            // Fetch pending tenant applications\n            const response = await apiService.getPendingApplications();\n            setPendingApplications(response.applications);\n          } else {\n            // Fetch regular users with roles\n            const response = await apiService.getUsers(status);\n            // Users now come with role already assigned from the backend\n            setUsers(response.users);\n          }\n        } catch (err) {\n          setError(err instanceof Error ? err.message : 'An error occurred');\n        } finally {\n          setLoading(false);\n        }\n      })();\n    }, 200); // 200ms debounce delay\n  }, []); // Empty dependency array is correct here\n\n  useEffect(() => {\n    fetchUsers(activeSubTab);\n  }, [activeSubTab, fetchUsers]); // Include fetchUsers in dependencies\n\n  // Cleanup timer on unmount\n  useEffect(() => {\n    return () => {\n      if (debounceTimer.current) {\n        clearTimeout(debounceTimer.current);\n      }\n    };\n  }, []);\n\n  const handleSubTabChange = (subTab: UserSubTab) => {\n    setActiveSubTab(subTab);\n  };\n\n  const handleApproveApplication = (applicationId: number, businessName: string) => {\n    // Check if application is still pending\n    const application = pendingApplications.find(app => app.id === applicationId);\n    if (!application) {\n      setToast({\n        message: 'Application not found or already processed',\n        type: 'error',\n        isVisible: true\n      });\n      return;\n    }\n    \n    setModalState({\n      isOpen: true,\n      type: 'approve',\n      applicationId,\n      businessName\n    });\n  };\n\n  const handleRejectApplication = (applicationId: number, businessName: string) => {\n    // Check if application is still pending\n    const application = pendingApplications.find(app => app.id === applicationId);\n    if (!application) {\n      setToast({\n        message: 'Application not found or already processed',\n        type: 'error',\n        isVisible: true\n      });\n      return;\n    }\n    \n    setModalState({\n      isOpen: true,\n      type: 'reject',\n      applicationId,\n      businessName\n    });\n  };\n\n  const handleModalSubmit = async (data: { slug?: string; reason?: string; notes: string }) => {\n    if (!modalState) return;\n    \n    setProcessingApplication(true);\n    try {\n      let response;\n      \n      if (modalState.type === 'approve') {\n        if (!data.slug) {\n          throw new Error('Slug is required for approval');\n        }\n        response = await apiService.approveApplication(modalState.applicationId, data.slug, data.notes);\n      } else {\n        if (!data.reason) {\n          throw new Error('Rejection reason is required');\n        }\n        response = await apiService.rejectApplication(modalState.applicationId, data.reason, data.notes);\n      }\n      \n      // Check if the API call was successful\n      if (!response.success) {\n        throw new Error(response.message || 'Operation failed');\n      }\n      \n      // Refresh the pending applications list\n      fetchUsers('pending', true);\n      \n      // Notify other components that a tenant was updated\n      tenantEventManager.notify();\n      \n      // Close modal\n      setModalState(null);\n      \n      // Show success message\n      setToast({\n        message: `Application ${modalState.type === 'approve' ? 'approved' : 'rejected'} successfully`,\n        type: 'success',\n        isVisible: true\n      });\n      \n    } catch (err) {\n      console.error(`Error ${modalState.type === 'approve' ? 'approving' : 'rejecting'} application:`, err);\n      \n      let errorMessage = 'An error occurred';\n      if (err instanceof Error) {\n        errorMessage = err.message;\n      } else if (typeof err === 'string') {\n        errorMessage = err;\n      } else if (err && typeof err === 'object' && 'message' in err) {\n        errorMessage = String(err.message);\n      }\n      \n      setToast({\n        message: errorMessage,\n        type: 'error',\n        isVisible: true\n      });\n    } finally {\n      setProcessingApplication(false);\n    }\n  };\n\n  const closeModal = () => {\n    setModalState(null);\n  };\n\n  const handleDeleteClick = (userId: number, name: string, isTenant: boolean) => {\n    setDeleteModalState({\n      isOpen: true,\n      userId,\n      name,\n      isTenant\n    });\n  };\n\n  const handleDeleteConfirm = async () => {\n    if (!deleteModalState) return;\n    \n    setDeletingAffiliate(deleteModalState.userId);\n    try {\n      const response = await apiService.deleteAffiliate(deleteModalState.userId);\n      if (response.success) {\n        setToast({\n          message: `\"${deleteModalState.name}\" deleted successfully. All associated data has been removed.`,\n          type: 'success',\n          isVisible: true\n        });\n        fetchUsers(activeSubTab, true); // Refresh current tab\n        \n        // Notify other components that a tenant was deleted\n        tenantEventManager.notify();\n        \n        // Close modal\n        setDeleteModalState(null);\n      } else {\n        throw new Error(response.message || 'Failed to delete');\n      }\n    } catch (err) {\n      console.error('Error deleting:', err);\n      let errorMessage = 'An error occurred';\n      if (err instanceof Error) {\n        errorMessage = err.message;\n      } else if (typeof err === 'string') {\n        errorMessage = err;\n      } else if (err && typeof err === 'object' && 'message' in err) {\n        errorMessage = String(err.message);\n      }\n      setToast({\n        message: errorMessage,\n        type: 'error',\n        isVisible: true\n      });\n      setDeleteModalState(null);\n    } finally {\n      setDeletingAffiliate(null);\n    }\n  };\n\n  const renderSubTabContent = (subTab: UserSubTab) => {\n    if (loading) {\n      return (\n        <div className=\"text-center text-gray-300\">\n          <Loader2 className=\"w-16 h-16 mx-auto mb-4 text-blue-400 animate-spin\" />\n          <h3 className=\"text-lg font-semibold mb-2\">Loading Users...</h3>\n        </div>\n      );\n    }\n\n    if (error) {\n      // Check if it's an authentication error\n      if (error.includes('401') || error.includes('Unauthorized') || error.includes('Forbidden')) {\n        return (\n          <div className=\"text-center text-gray-300\">\n            <div className=\"w-16 h-16 mx-auto mb-4 text-yellow-400\">🔒</div>\n            <h3 className=\"text-lg font-semibold mb-2 text-yellow-400\">Authentication Required</h3>\n            <p className=\"text-yellow-300\">You need to be logged in as an admin to view users.</p>\n            <p className=\"text-sm text-gray-400 mt-2\">\n              Please log in with an admin account or check your authentication status.\n            </p>\n          </div>\n        );\n      }\n      \n      return (\n        <div className=\"text-center text-gray-300\">\n          <div className=\"w-16 h-16 mx-auto mb-4 text-red-400\">⚠️</div>\n          <h3 className=\"text-lg font-semibold mb-2 text-red-400\">Error</h3>\n          <p className=\"text-red-300\">{error}</p>\n          <button \n            onClick={() => { fetchUsers(subTab, true); }}\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      );\n    }\n\n      if (activeSubTab === 'pending') {\n        if (pendingApplications.length === 0) {\n          return (\n            <div className=\"text-center text-gray-300\">\n              <UserPlus className=\"w-16 h-16 mx-auto mb-4 text-gray-600\" />\n              <h3 className=\"text-lg font-semibold mb-2\">No Pending Applications</h3>\n              <p>All affiliate applications have been processed.</p>\n              <button \n                onClick={() => { fetchUsers('pending', true); }}\n                className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                Refresh\n              </button>\n            </div>\n          );\n        }\n        \n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between text-sm text-gray-400 mb-4\">\n              <span>\n                Showing {pendingApplications.length} pending application{pendingApplications.length !== 1 ? 's' : ''}\n              </span>\n              <button \n                onClick={() => { fetchUsers('pending', true); }}\n                className=\"px-3 py-1 bg-gray-600 text-white text-xs rounded hover:bg-gray-700 transition-colors\"\n              >\n                Refresh\n              </button>\n            </div>\n            <div className=\"grid gap-4\">\n            {pendingApplications.map((app) => (\n              <div key={app.id} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-white\">{app.business_name}</h4>\n                    <p className=\"text-gray-300 text-sm\">Owner: {app.owner}</p>\n                    <p className=\"text-gray-300 text-sm\">{app.email}</p>\n                    <p className=\"text-gray-300 text-sm\">{app.phone}</p>\n                    <p className=\"text-gray-400 text-xs mt-2\">\n                      Location: {app.city}, {app.state_code} {app.postal_code}\n                    </p>\n                    {app.has_insurance && (\n                      <p className=\"text-green-400 text-xs mt-2\">✓ Has Insurance</p>\n                    )}\n                    {app.source && (\n                      <p className=\"text-gray-400 text-xs mt-1\">Source: {app.source}</p>\n                        )}\n                    <p className=\"text-gray-400 text-xs mt-2\">\n                      Applied: {new Date(app.application_date).toLocaleDateString()}\n                    </p>\n                  </div>\n                  <div className=\"ml-4 flex flex-col gap-2\">\n                    <button \n                      onClick={() => { handleApproveApplication(app.id, app.business_name); }}\n                      disabled={processingApplication}\n                      className={`px-3 py-1.5 text-white text-xs rounded transition-colors ${\n                        processingApplication \n                          ? 'bg-gray-500 cursor-not-allowed' \n                          : 'bg-green-600 hover:bg-green-700'\n                      }`}\n                    >\n                      {processingApplication ? 'Processing...' : 'Approve'}\n                    </button>\n                    <button \n                      onClick={() => { handleRejectApplication(app.id, app.business_name); }}\n                      disabled={processingApplication}\n                      className={`px-3 py-1.5 text-white text-xs rounded transition-colors ${\n                        processingApplication \n                          ? 'bg-gray-500 cursor-not-allowed' \n                          : 'bg-red-600 hover:bg-red-700'\n                      }`}\n                    >\n                      {processingApplication ? 'Processing...' : 'Reject'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    if (users.length === 0) {\n      return (\n        <div className=\"text-center text-gray-300\">\n          <Users className=\"w-16 h-16 mx-auto mb-4 text-gray-600\" />\n          <h3 className=\"text-lg font-semibold mb-2\">No Users Found</h3>\n          <p>No users match the current filter criteria.</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between text-sm text-gray-400 mb-4\">\n          <span>\n            Showing {users.length} user{users.length !== 1 ? 's' : ''}\n          </span>\n          <button \n            onClick={() => { fetchUsers(activeSubTab, true); }}\n            className=\"px-3 py-1 bg-gray-600 text-white text-xs rounded hover:bg-gray-700 transition-colors\"\n          >\n            Refresh\n          </button>\n        </div>\n        <div className=\"grid gap-4\">\n          {users.map((user) => (\n            <div key={user.id} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center gap-3 mb-2\">\n                    <h4 className=\"font-medium text-white text-lg\">{user.name}</h4>\n                    {user.role && (\n                      <span className={`px-2 py-1 text-xs font-semibold rounded-full ${\n                        user.role === 'admin' \n                          ? 'bg-purple-600 text-purple-100' \n                          : user.role === 'tenant'\n                          ? 'bg-green-600 text-green-100'\n                          : 'bg-blue-600 text-blue-100'\n                      }`}>\n                        {user.role.toUpperCase()}\n                      </span>\n                    )}\n                  </div>\n                  <p className=\"text-gray-300 text-sm mb-1\">{user.email}</p>\n                  {user.business_name && (\n                    <p className=\"text-gray-300 text-sm mb-1\">\n                      <span className=\"text-gray-400\">Business:</span> {user.business_name}\n                    </p>\n                  )}\n                  {user.slug && (\n                    <p className=\"text-gray-400 text-xs\">\n                      <span className=\"text-gray-500\">Slug:</span> {user.slug}\n                    </p>\n                  )}\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"text-right text-xs text-gray-400\">\n                    <p>ID: {user.id}</p>\n                    <p>Created: {new Date(user.created_at).toLocaleDateString()}</p>\n                  </div>\n                  \n                  {/* Action buttons for tenants */}\n                  {user.role === 'tenant' && user.slug && (\n                    <div className=\"flex items-center gap-2\">\n                      <a\n                        href={generateTenantWebsiteUrl(user.slug)}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex items-center gap-1 px-3 py-1.5 text-white text-xs rounded transition-colors bg-blue-600 hover:bg-blue-700\"\n                        title=\"View tenant website\"\n                      >\n                        <ExternalLink className=\"w-3 h-3\" />\n                        Website\n                      </a>\n                      <a\n                        href={generateTenantDashboardUrl(user.slug)}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex items-center gap-1 px-3 py-1.5 text-white text-xs rounded transition-colors bg-green-600 hover:bg-green-700\"\n                        title=\"View tenant dashboard\"\n                      >\n                        <Settings className=\"w-3 h-3\" />\n                        Dashboard\n                      </a>\n                    </div>\n                  )}\n                  \n                  {/* Delete button for tenants */}\n                  {user.role === 'tenant' && (\n                    <button\n                      onClick={() => { handleDeleteClick(user.tenant_id || user.id, user.business_name || user.name, true); }}\n                      disabled={deletingAffiliate === (user.tenant_id || user.id)}\n                      className={`flex items-center gap-2 px-3 py-1.5 text-white text-xs rounded transition-colors ${\n                        deletingAffiliate === (user.tenant_id || user.id)\n                          ? 'bg-gray-500 cursor-not-allowed'\n                          : 'bg-red-600 hover:bg-red-700'\n                      }`}\n                      title=\"Delete tenant and all associated data\"\n                    >\n                      <Trash2 className=\"w-3 h-3\" />\n                      {deletingAffiliate === (user.tenant_id || user.id) ? 'Deleting...' : 'Delete'}\n                    </button>\n                  )}\n                  {/* Delete button for regular users (customers/admins) */}\n                  {(user.role === 'customer' || user.role === 'admin') && user.id !== 1 && (\n                    <button\n                      onClick={() => { handleDeleteClick(user.id, user.name, false); }}\n                      disabled={deletingAffiliate === user.id}\n                      className={`flex items-center gap-2 px-3 py-1.5 text-white text-xs rounded transition-colors ${\n                        deletingAffiliate === user.id\n                          ? 'bg-gray-500 cursor-not-allowed'\n                          : 'bg-red-600 hover:bg-red-700'\n                      }`}\n                      title=\"Delete user\"\n                    >\n                      <Trash2 className=\"w-3 h-3\" />\n                      {deletingAffiliate === user.id ? 'Deleting...' : 'Delete'}\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-gray-800 rounded-lg shadow-sm border border-gray-700\">\n        <div className=\"px-6 py-4 border-b border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n              <Users className=\"w-5 h-5 text-blue-400\" />\n              User Management\n            </h2>\n            <Button \n              variant=\"primary\" \n              size=\"sm\"\n              className=\"flex items-center gap-2 px-3 py-1.5 bg-blue-600 hover:bg-blue-700\"\n              leftIcon={<UserPlus className=\"w-4 h-4\" />}\n            >\n              Add User\n            </Button>\n          </div>\n        </div>\n        \n        {/* Sub-tabs */}\n        <div className=\"px-6 py-3 border-b border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            <nav className=\"flex space-x-6\">\n              {subTabs.map((subTab) => {\n                const Icon = subTab.icon;\n                return (\n                  <button\n                    key={subTab.id}\n                    onClick={() => { handleSubTabChange(subTab.id); }}\n                    className={`flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${\n                      activeSubTab === subTab.id\n                        ? 'bg-blue-900 text-blue-300 border-b-2 border-blue-400'\n                        : 'text-gray-300 hover:text-white hover:bg-gray-700'\n                    }`}\n                  >\n                    <Icon className=\"w-4 h-4\" />\n                    {subTab.label}\n                  </button>\n                );\n              })}\n            </nav>\n            \n            {/* Tenant Onboarding Button */}\n            <a\n              href={generateTenantOnboardingUrl()}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center gap-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-md transition-colors\"\n              title=\"Open tenant onboarding form\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              New Tenant\n            </a>\n          </div>\n        </div>\n        \n        <div className=\"p-6\">\n          {renderSubTabContent(activeSubTab)}\n        </div>\n      </div>\n      \n      {/* Application Modal */}\n      {modalState && (\n        <ApplicationModal\n          isOpen={modalState.isOpen}\n          onClose={closeModal}\n          onSubmit={handleModalSubmit}\n          type={modalState.type}\n          applicationId={modalState.applicationId}\n          businessName={modalState.businessName}\n          isLoading={processingApplication}\n        />\n      )}\n      \n      {/* Delete Confirmation Modal */}\n      {deleteModalState && (\n        <DeleteConfirmationModal\n          isOpen={deleteModalState.isOpen}\n          onClose={() => { setDeleteModalState(null); }}\n          onConfirm={() => { void handleDeleteConfirm(); }}\n          title={deleteModalState.isTenant ? 'Delete Tenant' : 'Delete User'}\n          message={deleteModalState.isTenant \n            ? `Are you sure you want to delete this tenant and all associated data?`\n            : `Are you sure you want to delete this user account?`\n          }\n          itemName={deleteModalState.name}\n          isLoading={deletingAffiliate === deleteModalState.userId}\n          isTenant={deleteModalState.isTenant}\n        />\n      )}\n      \n      {/* Toast Notifications */}\n      {toast && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          isVisible={toast.isVisible}\n          onClose={() => { setToast(null); }}\n        />\n      )}\n    </div>\n  );\n};\n/* eslint-enable max-lines -- Re-enabled after complex multi-tab component */\n","import React from 'react';\r\n\r\nimport type { AdminTab } from '@/features/adminDashboard/types';\r\n\r\nimport { AnalyticsTab } from './tabs/analytics/AnalyticsTab';\r\nimport ReviewsTab from './tabs/reviews/ReviewsTab';\r\nimport { SettingsTab } from './tabs/settings/SettingsTab';\r\nimport { UsersTab } from './tabs/users/UsersTab';\r\n\r\ninterface TabContentProps {\r\n  activeTab: AdminTab;\r\n}\r\n\r\nexport const TabContent: React.FC<TabContentProps> = ({ activeTab }) => {\r\n  return (\r\n    <main>\r\n      {activeTab === 'users' && <UsersTab />}\r\n      {activeTab === 'reviews' && <ReviewsTab />}\r\n      {activeTab === 'analytics' && <AnalyticsTab />}\r\n      {activeTab === 'settings' && <SettingsTab />}\r\n    </main>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport type { AdminTab } from '@/features/adminDashboard/types';\r\nimport { useBrowserTab } from '@/shared/hooks';\r\n\r\nimport { AdminLayout, AdminTabs, TabContent } from './';\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<AdminTab>('users');\r\n\r\n  // Set browser tab title and favicon for admin dashboard\r\n  useBrowserTab({\r\n    title: 'Admin Dashboard - That Smart Site',\r\n    useBusinessName: false,\r\n  });\r\n\r\n  const handleTabChange = (tab: AdminTab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <AdminTabs \r\n        activeTab={activeTab}\r\n        onTabChange={handleTabChange}\r\n      />\r\n      \r\n      <TabContent \r\n        activeTab={activeTab}\r\n      />\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","/**\r\n * Preview Error State\r\n * \r\n * Displayed when preview link is invalid, expired, or fails to load.\r\n */\r\n\r\nimport React from 'react';\r\nimport { AlertCircle, Mail, Phone } from 'lucide-react';\r\n\r\ninterface PreviewErrorProps {\r\n  error: string;\r\n}\r\n\r\nexport const PreviewError: React.FC<PreviewErrorProps> = ({ error }) => {\r\n  const isExpired = error.toLowerCase().includes('expired');\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black flex items-center justify-center px-4\">\r\n      <div className=\"max-w-md w-full bg-gray-800 rounded-lg shadow-xl p-8 text-center space-y-6\">\r\n        <AlertCircle className=\"h-16 w-16 text-red-500 mx-auto\" />\r\n        <h2 className=\"text-2xl font-bold text-white\">Preview Unavailable</h2>\r\n        <p className=\"text-gray-300\">{error}</p>\r\n        \r\n        {isExpired && (\r\n          <div className=\"bg-orange-900/30 border border-orange-700 rounded-md p-4\">\r\n            <p className=\"text-orange-200 text-sm\">\r\n              Preview links expire after 7 days for security.\r\n            </p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"pt-4 space-y-4\">\r\n          <p className=\"text-sm text-gray-400\">\r\n            Need a new preview link or have questions?\r\n          </p>\r\n          \r\n          <div className=\"flex flex-col space-y-3\">\r\n            <a\r\n              href=\"tel:+15551234567\"\r\n              className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md transition-colors\"\r\n            >\r\n              <Phone className=\"h-4 w-4\" />\r\n              <span>Call Us</span>\r\n            </a>\r\n            \r\n            <a\r\n              href=\"mailto:hello@thatsmartsite.com\"\r\n              className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-md transition-colors\"\r\n            >\r\n              <Mail className=\"h-4 w-4\" />\r\n              <span>Email Sales</span>\r\n            </a>\r\n          </div>\r\n          \r\n          <a \r\n            href=\"/\"\r\n            className=\"text-sm text-orange-400 hover:text-orange-300 block pt-2\"\r\n          >\r\n            Visit our main site →\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","/**\r\n * Preview Loading State\r\n * \r\n * Displayed while preview data is being loaded/verified.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\nexport const PreviewLoading: React.FC = () => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black flex items-center justify-center\">\r\n      <div className=\"text-center space-y-4\">\r\n        <Loader2 className=\"h-12 w-12 text-orange-500 animate-spin mx-auto\" />\r\n        <h2 className=\"text-2xl font-semibold text-white\">Loading Preview...</h2>\r\n        <p className=\"text-gray-400\">Setting up your demo site</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","/**\r\n * Central SEO head manager.\r\n * Handles <title>, <meta>, <canonical>, and noindex logic.\r\n * \r\n * This component anchors Cursor's understanding of SEO head management.\r\n */\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\ninterface SeoHeadProps {\r\n  title?: string;\r\n  description?: string;\r\n  canonical?: string;\r\n  noindex?: boolean;\r\n}\r\n\r\nexport const SeoHead: React.FC<SeoHeadProps> = ({\r\n  title,\r\n  description,\r\n  canonical,\r\n  noindex,\r\n}) => {\r\n  return (\r\n    <Helmet>\r\n      {title && <title>{title}</title>}\r\n      {description && <meta name=\"description\" content={description} />}\r\n      {canonical && <link rel=\"canonical\" href={canonical} />}\r\n      {noindex && <meta name=\"robots\" content=\"noindex, nofollow\" />}\r\n      {/* Social sharing defaults */}\r\n      {title && <meta property=\"og:title\" content={title} />}\r\n      {description && <meta property=\"og:description\" content={description} />}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n    </Helmet>\r\n  );\r\n};\r\n","/**\n * Preview Page\n * \n * Displays a preview of a tenant site with injected business info.\n * Used for sales demos - no tenant record is created yet.\n */\n\nimport React, { useState } from 'react';\n\nimport { FAQ } from '@/features/faq';\nimport { Gallery } from '@/features/gallery';\nimport { Header } from '@/features/header';\nimport { Hero } from '@/features/hero';\nimport { LazyRequestQuoteModal } from '@/features/quotes';\nimport { Reviews } from '@/features/reviews';\nimport { ServicesGrid } from '@/features/services';\nimport { useBrowserTab, useIsDesktop, useScrollSpy } from '@/shared/hooks';\nimport { SeoHead } from '@/shared/seo';\nimport type { SectionId } from '@/shared/state/sectionStore';\n\nimport { usePreviewParams } from '../hooks/usePreviewParams';\nimport { PreviewCTAButton } from './PreviewCTAButton';\nimport { PreviewDataProvider } from './PreviewDataProvider';\nimport { PreviewError } from './PreviewError';\nimport { PreviewLoading } from './PreviewLoading';\n\nconst PreviewPage: React.FC = () => {\n  const { payload, isLoading, error } = usePreviewParams();\n  const [isQuoteModalOpen, setIsQuoteModalOpen] = useState(false);\n  const isDesktop = useIsDesktop();\n\n  const handleOpenQuoteModal = () => {\n    setIsQuoteModalOpen(true);\n  };\n  \n  const handleCloseQuoteModal = () => {\n    setIsQuoteModalOpen(false);\n  };\n\n  // Update browser tab title with business name\n  useBrowserTab({\n    title: payload?.businessName ? `${payload.businessName} - Preview` : 'Platform Preview',\n    useBusinessName: false, // Don't use default business name, we have custom format\n  });\n\n  // Section tracking for scroll spy\n  const sectionIds: SectionId[] = isDesktop \n    ? ['top', 'services', 'services-desktop', 'reviews', 'faq', 'gallery', 'gallery-desktop', 'footer']\n    : ['top', 'services', 'reviews', 'faq', 'gallery', 'footer'];\n  \n  useScrollSpy({ \n    ids: sectionIds, \n    headerPx: isDesktop ? 88 : 72, \n    updateHash: false \n  });\n\n  // Loading state\n  if (isLoading) {\n    return <PreviewLoading />;\n  }\n\n  // Error state\n  if (error || !payload) {\n    return <PreviewError error={error || 'Failed to load preview'} />;\n  }\n\n  // Render preview with injected data\n  return (\n    <PreviewDataProvider payload={payload}>\n      {/* SEO Head with noindex for preview pages */}\n      <SeoHead \n        title={payload.businessName ? `${payload.businessName} - Preview` : 'Platform Preview'}\n        description={`Preview of ${payload.businessName || 'business'} website`}\n        noindex={true}\n      />\n      \n      {/* Fixed \"Get This Site\" buttons in both corners */}\n      <PreviewCTAButton position=\"left\" />\n      <PreviewCTAButton position=\"right\" />\n      \n      <div className=\"h-screen snap-y snap-mandatory overflow-y-scroll snap-container\">\n        {/* Regular site components - they'll get preview data from context */}\n        <Header />\n        <Hero onRequestQuote={handleOpenQuoteModal} />\n        <ServicesGrid />\n        <Reviews />\n        <FAQ />\n        <Gallery onRequestQuote={handleOpenQuoteModal} />\n      </div>\n      \n      {/* Quote Modal */}\n      {isQuoteModalOpen && (\n        <LazyRequestQuoteModal \n          isOpen={isQuoteModalOpen} \n          onClose={handleCloseQuoteModal} \n        />\n      )}\n    </PreviewDataProvider>\n  );\n};\n\nexport default PreviewPage;\n\n","/**\r\n * Preview Generator Page\r\n * \r\n * Internal sales tool to quickly generate preview links.\r\n * Form inputs for business info → generates token → navigates to preview.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Eye, Loader2, Sparkles, Zap } from 'lucide-react';\r\n\r\nimport { useBrowserTab } from '@/shared/hooks';\r\nimport { formatPhoneNumber } from '@/shared/utils/phoneFormatter';\r\n\r\nimport { createPreview } from '../api/preview.api';\r\nimport type { PreviewPayload } from '../types/preview.types';\r\n\r\nconst INDUSTRIES = [\r\n  { value: 'mobile-detailing', label: 'Mobile Detailing' },\r\n  { value: 'maid-service', label: 'Maid Service' },\r\n  { value: 'lawncare', label: 'Lawn Care' },\r\n  { value: 'pet-grooming', label: 'Pet Grooming' },\r\n] as const;\r\n\r\n// Test data for quick autofill by industry\r\nconst TEST_DATA = {\r\n  'mobile-detailing': {\r\n    businessName: \"JP's Mobile Detail\",\r\n    phone: '(702) 420-3140',\r\n    city: 'Bullhead City',\r\n    state: 'AZ'\r\n  },\r\n  'maid-service': {\r\n    businessName: 'Sparkle Clean Maids',\r\n    phone: '(602) 555-5678',\r\n    city: 'Phoenix',\r\n    state: 'AZ'\r\n  },\r\n  'lawncare': {\r\n    businessName: 'Green Horizons Lawn Care',\r\n    phone: '(928) 555-9012',\r\n    city: 'Flagstaff',\r\n    state: 'AZ'\r\n  },\r\n  'pet-grooming': {\r\n    businessName: 'Pampered Paws Grooming',\r\n    phone: '(520) 555-3456',\r\n    city: 'Tucson',\r\n    state: 'AZ'\r\n  }\r\n} as const;\r\n\r\nconst PreviewGeneratorPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Set browser tab title and favicon for preview generator page\r\n  useBrowserTab({\r\n    title: 'Preview Generator - That Smart Site',\r\n    useBusinessName: false,\r\n  });\r\n  \r\n  const [formData, setFormData] = useState({\r\n    businessName: '',\r\n    phone: '',\r\n    city: '',\r\n    state: '',\r\n    industry: 'mobile-detailing' as PreviewPayload['industry'],\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setIsLoading(true);\r\n\r\n    void (async () => {\r\n      try {\r\n        const response = await createPreview(formData);\r\n        \r\n        // Navigate to the preview page with the token\r\n        void navigate(response.url);\r\n      } catch (err) {\r\n        const errorMessage = err instanceof Error ? err.message : 'Failed to create preview';\r\n        setError(errorMessage);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    })();\r\n  };\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const formatted = formatPhoneNumber(e.target.value);\r\n    setFormData((prev) => ({ ...prev, phone: formatted }));\r\n  };\r\n\r\n  const handleStateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.toUpperCase().slice(0, 2); // Max 2 chars, uppercase\r\n    setFormData((prev) => ({ ...prev, state: value }));\r\n  };\r\n\r\n  const handleAutofill = () => {\r\n    const testData = TEST_DATA[formData.industry];\r\n    setFormData({\r\n      industry: formData.industry,\r\n      businessName: testData.businessName,\r\n      phone: testData.phone,\r\n      city: testData.city,\r\n      state: testData.state\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black flex items-center justify-center px-4 py-12\">\r\n      <div className=\"max-w-md w-full\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-orange-500 rounded-full mb-4\">\r\n            <Sparkles className=\"h-8 w-8 text-white\" />\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-white mb-2\">Tenant Preview Generator</h1>\r\n          <p className=\"text-gray-400\">\r\n            Create instant preview sites for sales demos\r\n          </p>\r\n        </div>\r\n\r\n        {/* Form */}\r\n        <form onSubmit={handleSubmit} className=\"bg-gray-800 rounded-lg shadow-xl p-8 space-y-6\">\r\n          {/* Business Name */}\r\n          <div>\r\n            <label htmlFor=\"businessName\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n              Business Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"businessName\"\r\n              name=\"businessName\"\r\n              value={formData.businessName}\r\n              onChange={handleChange}\r\n              required\r\n              minLength={2}\r\n              maxLength={100}\r\n              placeholder=\"JP's Mobile Detail\"\r\n              className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n\r\n          {/* Phone */}\r\n          <div>\r\n            <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n              Phone Number\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handlePhoneChange}\r\n              required\r\n              minLength={14}\r\n              maxLength={14}\r\n              placeholder=\"(928) 555-1234\"\r\n              className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n\r\n          {/* City & State */}\r\n          <div className=\"grid grid-cols-3 gap-4\">\r\n            <div className=\"col-span-2\">\r\n              <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n                City\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"city\"\r\n                name=\"city\"\r\n                value={formData.city}\r\n                onChange={handleChange}\r\n                required\r\n                minLength={2}\r\n                maxLength={50}\r\n                placeholder=\"Phoenix\"\r\n                className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"state\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n                State\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"state\"\r\n                name=\"state\"\r\n                value={formData.state}\r\n                onChange={handleStateChange}\r\n                required\r\n                minLength={2}\r\n                maxLength={2}\r\n                placeholder=\"AZ\"\r\n                className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent uppercase\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Industry */}\r\n          <div>\r\n            <label htmlFor=\"industry\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n              Industry\r\n            </label>\r\n            <select\r\n              id=\"industry\"\r\n              name=\"industry\"\r\n              value={formData.industry}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n            >\r\n              {INDUSTRIES.map((industry) => (\r\n                <option key={industry.value} value={industry.value}>\r\n                  {industry.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Autofill Button */}\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleAutofill}\r\n            className=\"w-full flex items-center justify-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition-colors border border-blue-500\"\r\n          >\r\n            <Zap className=\"h-4 w-4\" />\r\n            <span>Quick Fill Test Data</span>\r\n          </button>\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"bg-red-900/50 border border-red-700 rounded-md p-4\">\r\n              <p className=\"text-sm text-red-200\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full flex items-center justify-center space-x-2 px-6 py-3 bg-orange-500 hover:bg-orange-600 disabled:bg-gray-600 disabled:cursor-not-allowed text-white font-semibold rounded-md transition-colors shadow-lg\"\r\n          >\r\n            {isLoading ? (\r\n              <>\r\n                <Loader2 className=\"h-5 w-5 animate-spin\" />\r\n                <span>Generating Preview...</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Eye className=\"h-5 w-5\" />\r\n                <span>Generate Preview</span>\r\n              </>\r\n            )}\r\n          </button>\r\n\r\n          {/* Help Text */}\r\n          <p className=\"text-xs text-gray-400 text-center\">\r\n            Preview links expire after 7 days\r\n          </p>\r\n        </form>\r\n\r\n          {/* Back Link */}\r\n        <div className=\"mt-6 text-center\">\r\n          <button\r\n            onClick={() => { void navigate('/'); }}\r\n            className=\"text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            ← Back to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewGeneratorPage;\r\n\r\n","import { lazy, Suspense } from 'react';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\n\r\nimport { DashboardPage as AdminDashboard } from '@/features/adminDashboard';\r\nimport { PreviewGeneratorPage, PreviewPage } from '@/features/preview';\r\nimport { LoginPage, ProtectedRoute } from '@/shared/ui';\r\n\r\n// Heavy modules are NOT imported here - they stay out of the initial bundle\r\nconst Booking = lazy(() => import('../features/booking/BookingApp'));\r\n\r\nexport default function AdminApp() {\r\n  const routes = (\r\n    <Suspense fallback={<div className=\"p-8 text-white\">Loading…</div>}>\r\n      <Routes>\r\n        {/* Admin Dashboard - redirect root to admin dashboard */}\r\n        <Route path=\"/\" element={<Navigate to=\"/admin-dashboard\" replace />} />\r\n        \r\n        {/* Login route */}\r\n        <Route path=\"/login\" element={<LoginPage />} />\r\n        \r\n        {/* Admin Dashboard - protected route */}\r\n        <Route path=\"/admin-dashboard\" element={\r\n          <ProtectedRoute requiredRole=\"admin\" fallbackPath=\"/login\">\r\n            <AdminDashboard />\r\n          </ProtectedRoute>\r\n        } />\r\n        \r\n        {/* Preview routes */}\r\n        <Route path=\"/preview-generator\" element={<PreviewGeneratorPage />} />\r\n        <Route path=\"/preview/:tenantSlug\" element={<PreviewPage />} />\r\n        \r\n        {/* Booking route for admin testing */}\r\n        <Route path=\"/booking\" element={<Booking />} />\r\n        \r\n        {/* Catch all - redirect to admin dashboard */}\r\n        <Route path=\"*\" element={<Navigate to=\"/admin-dashboard\" replace />} />\r\n      </Routes>\r\n    </Suspense>\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900\">\r\n      {routes}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { AdminProviders } from './AdminProviders';\r\nimport AdminApp from './AdminApp';\r\n\r\nconst container = document.getElementById('root');\r\nif (!container) {\r\n  throw new Error('Root element not found');\r\n}\r\n\r\nconst root = createRoot(container);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <AdminProviders>\r\n        <AdminApp />\r\n      </AdminProviders>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n"],"file":"assets/admin-BzjXQGUc.js"}