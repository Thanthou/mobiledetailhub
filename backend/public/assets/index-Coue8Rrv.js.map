{"version":3,"mappings":"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","names":["z.object","z.enum","z.boolean","z.string","jsxs","jsx","useAutoSave","useState","useRef","useEffect","area","createContext","API_BASE_URL","useContext","z.union","z.number","z.array","z.record","z.unknown","ServiceAreaSchema","z.ZodError","RefreshTokenGuard","apiClient","ApiClient","useCallback","response","Component","z.email","z.url","z.any","WebsiteContentContext","WebsiteContentProvider","useWebsiteContent","shuffleArray","Fragment","errorMessage","TabContent","DashboardPage","useMemo","createPortal","Suspense","INDUSTRIES","error","Link","API_BASE","makeRequest","startTransition","CAR_SERVICE_OPTIONS","service","Edit2","Boat","value","Image","ServicesTab","Router","lazy","AdminDashboard"],"ignoreList":[],"sources":["../../src/shared/env.ts","../../src/features/adminDashboard/components/AdminLayout.tsx","../../src/features/adminDashboard/utils/constants.ts","../../src/features/adminDashboard/components/AdminTabs.tsx","../../src/shared/utils/cn.ts","../../src/shared/ui/buttons/Button.tsx","../../src/shared/ui/forms/AutoSaveInput.tsx","../../src/shared/ui/forms/Badge.tsx","../../src/shared/ui/forms/FilterChip.tsx","../../src/shared/ui/forms/Input.tsx","../../src/shared/ui/layout/Card.tsx","../../src/shared/utils/phoneFormatter.ts","../../src/shared/utils/useAutoSave.ts","../../src/shared/utils/dateFormatter.ts","../../src/shared/utils/siteUtils.ts","../../src/shared/utils/imageRotation.ts","../../src/shared/utils/logger.ts","../../src/shared/utils/assetLocator.ts","../../src/shared/utils/tenantConfigMigration.ts","../../src/shared/utils/domainUtils.ts","../../src/shared/utils/tenantDataTransform.ts","../../src/shared/ui/utility/toast.tsx","../../src/shared/config/api.ts","../../src/shared/contexts/AuthContext.tsx","../../src/shared/api/industryConfigApi.ts","../../src/shared/api/tenantApi.ts","../../src/shared/hooks/useTenantData.ts","../../src/shared/hooks/useTenantSlug.ts","../../src/shared/contexts/DataContext.tsx","../../src/shared/hooks/useData.ts","../../src/shared/hooks/useBrowserTab.ts","../../src/shared/hooks/useIndustrySiteData.ts","../../src/shared/hooks/useMetaTags.ts","../../src/shared/hooks/useSEO.ts","../../src/shared/schemas/tenant.schema.ts","../../src/shared/schemas/booking.ts","../../src/shared/api/client.ts","../../src/shared/api/tenantConfig.api.ts","../../src/shared/hooks/useTenantConfigLoader.ts","../../src/shared/hooks/useMediaQuery.ts","../../src/shared/state/sectionStore.ts","../../src/shared/hooks/useScrollSpy.ts","../../src/shared/hooks/useImageRotation.ts","../../src/features/reviews/api/reviewsApi.ts","../../src/features/reviews/hooks/useReviews.ts","../../src/shared/hooks/useReviewsAvailability.ts","../../src/shared/ui/buttons/BookNow.tsx","../../src/shared/ui/buttons/GetQuote.tsx","../../src/shared/ui/buttons/CTAButtons.tsx","../../src/shared/utils/errorMonitoring.ts","../../src/shared/ui/layout/ErrorBoundary.tsx","../../src/shared/ui/layout/LoginPage.tsx","../../src/shared/ui/layout/ProtectedRoute.tsx","../../src/shared/validation/locationSchema.ts","../../src/shared/api/websiteContent.api.ts","../../src/shared/contexts/WebsiteContentContext.tsx","../../src/features/reviews/hooks/useReviewsContent.ts","../../src/features/reviews/hooks/useReviewsRating.ts","../../src/features/reviews/hooks/useRotatingReviews.ts","../../src/shared/ui/ReviewsSummary.tsx","../../src/features/adminDashboard/components/tabs/analytics/AnalyticsTab.tsx","../../src/features/adminDashboard/api/admin.api.ts","../../src/features/adminDashboard/hooks/useSeedReview.ts","../../src/features/adminDashboard/components/tabs/reviews/ReviewsTab.tsx","../../src/features/adminDashboard/components/tabs/settings/SettingsTab.tsx","../../src/features/adminDashboard/components/shared/ApplicationModal.tsx","../../src/features/adminDashboard/components/shared/DeleteConfirmationModal.tsx","../../src/features/adminDashboard/components/shared/Toast.tsx","../../src/shared/api/api.ts","../../src/shared/utils/tenantEventManager.ts","../../src/features/adminDashboard/components/tabs/users/UsersTab.tsx","../../src/features/adminDashboard/components/TabContent.tsx","../../src/features/adminDashboard/components/DashboardPage.tsx","../../src/features/header/components/BusinessInfo.tsx","../../src/features/header/contexts/TenantContext.tsx","../../src/features/header/utils/constants.ts","../../src/features/header/utils/navigation.ts","../../src/features/header/components/Logo.tsx","../../src/features/header/components/Navigation.tsx","../../src/features/header/components/SocialMediaIcons.tsx","../../src/features/header/components/Header.tsx","../../src/shared/utils/faqLoader.ts","../../src/features/faq/hooks/useFAQData.ts","../../src/features/faq/hooks/useFAQContent.ts","../../src/features/faq/hooks/useRotatingBackground.ts","../../src/features/faq/components/FAQCategoryFilter.tsx","../../src/features/faq/components/FAQEmptyState.tsx","../../src/shared/ui/modals/ServiceAreasModal.tsx","../../src/features/faq/components/ServiceAreasLink.tsx","../../src/features/faq/components/FAQItem.tsx","../../src/features/faq/components/FAQList.tsx","../../src/features/faq/components/FAQSearchBar.tsx","../../src/features/faq/components/FAQ.tsx","../../src/features/footer/components/Disclaimer.tsx","../../src/features/footer/components/FollowUs.tsx","../../src/shared/ui/navigation/FooterLocations.tsx","../../src/features/footer/components/GetInTouch.tsx","../../src/features/footer/components/Footer.tsx","../../src/features/gallery/api/gallery.api.ts","../../src/features/gallery/hooks/useGallery.ts","../../src/features/gallery/hooks/useRotatingGallery.ts","../../src/features/gallery/components/GalleryItem.tsx","../../src/features/gallery/components/RotatingGalleryItem.tsx","../../src/features/gallery/components/Gallery.tsx","../../src/features/hero/components/CTA.tsx","../../src/features/hero/components/TextDisplay.tsx","../../src/features/hero/components/ContentContainer.tsx","../../src/features/hero/hooks/useHeroContent.ts","../../src/features/hero/components/ImageCarousel.tsx","../../src/features/hero/components/Hero.tsx","../../src/features/reviews/components/ReviewCard.tsx","../../src/features/reviews/components/ReviewModal.tsx","../../src/features/reviews/components/ReviewsCarousel.tsx","../../src/features/reviews/components/ReviewsHeader.tsx","../../src/features/reviews/components/Reviews.tsx","../../src/features/services/components/BeforeAfterSlider.tsx","../../src/features/services/components/Process.tsx","../../src/features/services/utils/protectionComparison.ts","../../src/features/services/components/ProtectionComparisonChart.tsx","../../src/features/services/components/Results.tsx","../../src/features/services/components/ServiceCard.tsx","../../src/features/services/components/ServiceCTA.tsx","../../src/features/services/components/ServiceHero.tsx","../../src/shared/utils/schemaUtils.ts","../../src/features/services/hooks/useServices.ts","../../src/features/services/components/ServicesGrid.tsx","../../src/features/services/components/WhatItIs.tsx","../../src/app/pages/HomePage.tsx","../../src/features/quotes/components/LazyRequestQuoteModal.tsx","../../src/data/mobile-detailing/vehicle_data/years-dropdown.ts","../../src/features/quotes/types/quotes.types.ts","../../src/features/header/pages/TenantPage.tsx","../../src/shared/utils/errorHandling.ts","../../src/features/preview/types/preview.types.ts","../../src/features/preview/api/preview.api.ts","../../src/features/preview/components/PreviewCTAButton.tsx","../../src/shared/utils/industryRegistry.ts","../../src/features/preview/components/PreviewDataProvider.tsx","../../src/features/preview/components/PreviewError.tsx","../../src/features/preview/components/PreviewLoading.tsx","../../src/shared/seo/SeoHead.tsx","../../src/features/preview/state/previewStore.ts","../../src/features/preview/hooks/usePreviewParams.ts","../../src/features/preview/components/PreviewPage.tsx","../../src/features/preview/pages/PreviewGeneratorPage.tsx","../../src/features/tenantDashboard/components/DashboardHeader.tsx","../../src/features/tenantDashboard/components/DashboardLayout.tsx","../../src/features/tenantDashboard/utils/constants.ts","../../src/features/tenantDashboard/config/tabConfig.ts","../../src/features/tenantDashboard/components/DashboardTabs.tsx","../../src/features/tenantDashboard/tabs/customers/CustomersTab.tsx","../../src/features/tenantDashboard/api/locationsApi.ts","../../src/features/tenantDashboard/hooks/useTenantBusinessData.ts","../../src/shared/api/apiClient.ts","../../src/shared/data/states.ts","../../src/shared/utils/googleMaps.helpers.ts","../../src/features/tenantDashboard/tabs/locations/components/AddLocationModal.tsx","../../src/features/tenantDashboard/tabs/locations/components/DeleteLocationModal.tsx","../../src/features/tenantDashboard/tabs/locations/components/PrimaryServiceArea.tsx","../../src/features/tenantDashboard/tabs/locations/components/ServiceAreasList.tsx","../../src/features/tenantDashboard/tabs/locations/hooks/useGoogleMaps.ts","../../src/features/tenantDashboard/tabs/locations/hooks/useLocationState.ts","../../src/features/tenantDashboard/tabs/locations/LocationsTab.tsx","../../src/features/tenantDashboard/tabs/overview/components/QuickActions.tsx","../../src/features/tenantDashboard/tabs/overview/OverviewTab.tsx","../../src/features/tenantDashboard/tabs/profile/hooks/useProfileData.ts","../../src/features/tenantDashboard/tabs/profile/hooks/useAutoSaveField.ts","../../src/features/tenantDashboard/tabs/profile/components/AutoSaveField.tsx","../../src/features/tenantDashboard/tabs/profile/components/ProfileForm.tsx","../../src/features/tenantDashboard/tabs/profile/ProfileTab.tsx","../../src/features/tenantDashboard/tabs/schedule/api/appointments.ts","../../src/features/tenantDashboard/tabs/schedule/api/blockedDays.ts","../../src/features/tenantDashboard/tabs/schedule/api/timeBlocks.ts","../../src/features/tenantDashboard/tabs/schedule/components/modals/AppointmentModal.tsx","../../src/features/tenantDashboard/tabs/schedule/components/scheduleUtils.ts","../../src/features/tenantDashboard/tabs/schedule/components/DayView.tsx","../../src/features/tenantDashboard/tabs/schedule/components/AppointmentCard.tsx","../../src/features/tenantDashboard/tabs/schedule/components/MonthView.tsx","../../src/features/tenantDashboard/tabs/schedule/components/ScheduleLoadingState.tsx","../../src/features/tenantDashboard/tabs/schedule/components/ScheduleNavigationHeader.tsx","../../src/features/tenantDashboard/tabs/schedule/components/WeekView.tsx","../../src/features/tenantDashboard/tabs/schedule/components/ScheduleGrid.tsx","../../src/features/tenantDashboard/tabs/schedule/components/ScheduleHeader.tsx","../../src/features/tenantDashboard/tabs/schedule/components/ScheduleSidebar.tsx","../../src/features/tenantDashboard/tabs/schedule/hooks/useScheduleData.ts","../../src/features/tenantDashboard/tabs/schedule/ScheduleTab.tsx","../../src/features/tenantDashboard/tabs/services/components/CategorySelector.tsx","../../src/features/tenantDashboard/tabs/services/components/DeleteServiceModal.tsx","../../src/features/tenantDashboard/tabs/services/components/FeatureDropdown.tsx","../../src/features/tenantDashboard/tabs/services/types/ServiceClasses.ts","../../src/features/tenantDashboard/tabs/services/components/MultiTierPricingModal.tsx","../../src/features/tenantDashboard/tabs/services/components/ServiceSelector.tsx","../../src/features/tenantDashboard/tabs/services/components/VehicleSelector.tsx","../../src/features/tenantDashboard/tabs/services/hooks/useServicesData.ts","../../src/features/tenantDashboard/tabs/services/SimpleFixedServicesTab.tsx","../../src/features/tenantDashboard/api/websiteContentApi.ts","../../src/features/tenantDashboard/api/reviewsApi.ts","../../src/features/tenantDashboard/tabs/website/components/AddReviewForm.tsx","../../src/features/tenantDashboard/tabs/website/hooks/useWebsiteContentData.ts","../../src/features/tenantDashboard/tabs/website/contexts/WebsiteContentContext.tsx","../../src/features/tenantDashboard/tabs/website/components/FAQItemAutoSaveField.tsx","../../src/features/tenantDashboard/tabs/website/hooks/useWebsiteContentField.ts","../../src/features/tenantDashboard/tabs/website/components/WebsiteAutoSaveField.tsx","../../src/features/tenantDashboard/tabs/website/components/FAQSection.tsx","../../src/features/tenantDashboard/tabs/website/components/GallerySection.tsx","../../src/features/tenantDashboard/api/healthApi.ts","../../src/features/tenantDashboard/tabs/website/components/HealthTab.tsx","../../src/features/tenantDashboard/tabs/website/components/HeroSection.tsx","../../src/features/tenantDashboard/tabs/website/components/RemoveReviewTab.tsx","../../src/features/tenantDashboard/tabs/website/components/ReviewsContent.tsx","../../src/features/tenantDashboard/tabs/website/components/ReviewsSection.tsx","../../src/features/tenantDashboard/tabs/website/components/ServicesSection.tsx","../../src/features/tenantDashboard/tabs/website/WebsiteContentTab.tsx","../../src/features/tenantDashboard/tabs/website/WebsiteDomainTab.tsx","../../src/features/tenantDashboard/tabs/website/WebsiteHealthTab.tsx","../../src/features/tenantDashboard/api/analytics.ts","../../src/features/tenantDashboard/tabs/services/hooks/useTenantId.ts","../../src/features/tenantDashboard/tabs/website/WebsitePerformanceTab.tsx","../../src/features/tenantDashboard/tabs/website/WebsiteTab.tsx","../../src/features/tenantDashboard/components/TabContent.tsx","../../src/features/tenantDashboard/api/dashboard.api.ts","../../src/features/tenantDashboard/components/DashboardPage.tsx","../../src/features/tenantOnboarding/components/ApplicationHeader.tsx","../../src/features/tenantOnboarding/components/BusinessInformationSection.tsx","../../src/features/tenantOnboarding/components/PersonalInformationSection.tsx","../../src/features/tenantOnboarding/types/index.ts","../../src/features/tenantOnboarding/components/PlanSelectionSection.tsx","../../src/features/tenantOnboarding/components/StepProgress.tsx","../../src/features/tenantOnboarding/components/SuccessPage.tsx","../../src/shared/utils/loadDefaults.ts","../../src/features/tenantOnboarding/hooks/useAutoSave.ts","../../src/features/tenantOnboarding/utils/validation.ts","../../src/features/tenantOnboarding/api/payments.api.ts","../../src/features/tenantOnboarding/components/PaymentSection.tsx","../../src/features/tenantOnboarding/components/TenantApplicationPage.tsx","../../src/features/services/hooks/useServicePage.ts","../../src/app/pages/ServicePage.tsx","../../src/shared/contexts/SiteContext.tsx","../../src/shared/contexts/TenantConfigContext.tsx","../../src/app/providers.tsx","../../src/app/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\r\n * Centralized Environment Configuration\r\n * \r\n * This module validates and exports all environment variables used in the application.\r\n * Always import from this module instead of using import.meta.env directly.\r\n * \r\n * @example\r\n * ```ts\r\n * import { env, config } from '@/shared/env';\r\n * \r\n * // Use env for raw values\r\n * if (env.DEV) { ... }\r\n * \r\n * // Use config for computed/derived values\r\n * const apiUrl = config.apiBaseUrl;\r\n * ```\r\n */\r\n\r\nimport { z } from \"zod\";\r\n\r\nconst EnvSchema = z.object({\r\n  // Vite built-in variables\r\n  MODE: z.enum([\"development\", \"production\", \"test\"]),\r\n  DEV: z.boolean(),\r\n  PROD: z.boolean(),\r\n  \r\n  // API Configuration\r\n  VITE_API_URL: z.string().optional(),\r\n  VITE_API_URL_LOCAL: z.string().optional(),\r\n  VITE_API_URL_LIVE: z.string().optional(),\r\n  VITE_API_BASE_URL: z.string().optional(),\r\n  \r\n  // Third-party API Keys\r\n  VITE_GOOGLE_MAPS_API_KEY: z.string().optional(),\r\n  VITE_STRIPE_PUBLISHABLE_KEY: z.string().optional(),\r\n  \r\n  // Feature Flags\r\n  VITE_ENABLE_SW: z.string().optional(), // Service worker flag ('1' or '0')\r\n});\r\n\r\n/**\r\n * Validated environment variables\r\n * Raw access to env vars - prefer using `config` for derived values\r\n */\r\nexport const env = EnvSchema.parse(import.meta.env);\r\n\r\n/**\r\n * Computed configuration derived from environment variables\r\n * This provides cleaner access patterns and type-safe defaults\r\n */\r\nexport const config = {\r\n  // Environment\r\n  isDevelopment: env.DEV,\r\n  isProduction: env.PROD,\r\n  mode: env.MODE,\r\n  \r\n  // API Configuration\r\n  apiBaseUrl: env.VITE_API_BASE_URL || '/api', // Use relative path for Vite proxy\r\n  apiUrl: env.PROD ? (env.VITE_API_URL_LIVE || '') : '', // Force empty in dev to use Vite proxy\r\n  apiUrls: {\r\n    local: env.VITE_API_URL_LOCAL || 'http://localhost:3001',\r\n    live: env.VITE_API_URL_LIVE || '',\r\n  },\r\n  \r\n  // Third-party Services\r\n  googleMapsApiKey: env.VITE_GOOGLE_MAPS_API_KEY,\r\n  stripePublishableKey: env.VITE_STRIPE_PUBLISHABLE_KEY || 'pk_test_placeholder',\r\n  \r\n  // Feature Flags\r\n  serviceWorkerEnabled: env.VITE_ENABLE_SW === '1' && env.PROD,\r\n} as const;","import React from 'react';\r\nimport { Database } from 'lucide-react';\r\n\r\ninterface AdminLayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AdminLayout: React.FC<AdminLayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900\">\r\n      <header className=\"bg-gray-800 shadow-sm border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-16\">\r\n            <div className=\"flex items-center\">\r\n              <Database className=\"w-8 h-8 text-blue-600 mr-3\" />\r\n              <h1 className=\"text-xl font-semibold text-white\">Admin Dashboard</h1>\r\n            </div>\r\n            <div className=\"flex items-center gap-4\">\r\n              <span className=\"text-sm text-gray-300\">Welcome back, Admin</span>\r\n              <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\r\n                <span className=\"text-white text-sm font-medium\">A</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const ADMIN_TABS = [\r\n  { id: 'users', label: 'Users', icon: 'Users' },\r\n  { id: 'reviews', label: 'Reviews', icon: 'Star' },\r\n  { id: 'analytics', label: 'Analytics', icon: 'BarChart3' },\r\n  { id: 'settings', label: 'Settings', icon: 'Settings' },\r\n] as const;\r\n","import React from 'react';\r\nimport { BarChart3, Database, Settings, Star,Users } from 'lucide-react';\r\n\r\nimport type { AdminTab } from '@/features/adminDashboard/types';\r\nimport { ADMIN_TABS } from '@/features/adminDashboard/utils/constants';\r\n\r\ninterface AdminTabsProps {\r\n  activeTab: AdminTab;\r\n  onTabChange: (tab: AdminTab) => void;\r\n}\r\n\r\nconst iconMap = {\r\n  Database,\r\n  Users,\r\n  Star,\r\n  BarChart3,\r\n  Settings,\r\n};\r\n\r\nexport const AdminTabs: React.FC<AdminTabsProps> = ({ activeTab, onTabChange }) => {\r\n  return (\r\n    <nav className=\"flex space-x-8 mb-8\">\r\n      {ADMIN_TABS.map((tab) => {\r\n        const Icon = iconMap[tab.icon];\r\n        return (\r\n          <button\r\n            key={tab.id}\r\n            onClick={() => { onTabChange(tab.id as AdminTab); }}\r\n            className={`flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${\r\n              activeTab === tab.id\r\n                ? 'bg-blue-900 text-blue-300 border-b-2 border-blue-400'\r\n                : 'text-gray-300 hover:text-white hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <Icon className=\"w-4 h-4\" />\r\n            {tab.label}\r\n          </button>\r\n        );\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\n","import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\n/**\r\n * Utility function to merge Tailwind CSS classes\r\n * Combines clsx for conditional classes and tailwind-merge for deduplication\r\n */\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n","/* eslint-disable react/prop-types -- Using TypeScript interfaces instead of PropTypes */\r\nimport React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n/* eslint-enable react/prop-types -- Re-enable after TypeScript interface declarations */\r\n\r\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  loading?: boolean;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ \r\n    className, \r\n    variant = 'primary', \r\n    size = 'md', \r\n    loading = false,\r\n    leftIcon,\r\n    rightIcon,\r\n    children,\r\n    disabled,\r\n    ...props \r\n  }, ref) => {\r\n    const baseStyles = 'inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-orange-500 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50';\r\n    \r\n    const variants = {\r\n      primary: 'bg-orange-500 text-white hover:bg-orange-600',\r\n      secondary: 'bg-gray-600 text-white hover:bg-gray-700',\r\n      outline: 'border border-gray-300 bg-transparent text-gray-700 hover:bg-gray-50',\r\n      'outline-white': 'border border-white bg-transparent text-white hover:bg-white hover:text-gray-900',\r\n      ghost: 'text-gray-700 hover:bg-gray-100',\r\n      destructive: 'bg-red-500 text-white hover:bg-red-600',\r\n    };\r\n\r\n    const sizes = {\r\n      sm: 'h-9 px-3 text-sm',\r\n      md: 'h-10 px-4 py-2',\r\n      lg: 'h-11 px-8 text-lg',\r\n      xl: 'h-14 px-10 text-xl',\r\n    };\r\n\r\n    return (\r\n      <button\r\n        className={cn(\r\n          baseStyles,\r\n          variants[variant],\r\n          sizes[size],\r\n          className\r\n        )}\r\n        disabled={disabled || loading}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {loading && (\r\n          <svg\r\n            className=\"mr-2 h-4 w-4 animate-spin\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <circle\r\n              className=\"opacity-25\"\r\n              cx=\"12\"\r\n              cy=\"12\"\r\n              r=\"10\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"4\"\r\n            />\r\n            <path\r\n              className=\"opacity-75\"\r\n              fill=\"currentColor\"\r\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n            />\r\n          </svg>\r\n        )}\r\n        {!loading && leftIcon && <span className=\"mr-2\">{leftIcon}</span>}\r\n        {children}\r\n        {!loading && rightIcon && <span className=\"ml-2\">{rightIcon}</span>}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nButton.displayName = 'Button';\r\n\r\nexport { Button };\r\n","import React from 'react';\r\nimport { AlertCircle, CheckCircle, Loader2 } from 'lucide-react';\r\n\r\n/**\r\n * Generic auto-save input component with visual feedback\r\n * \r\n * Features:\r\n * - Green checkmark when value is saved\r\n * - Blue spinning loader while saving\r\n * - Red alert icon on error\r\n * - \"Saving...\" text below field during save\r\n * - Error message display\r\n */\r\n\r\ninterface AutoSaveInputProps {\r\n  label: string;\r\n  type?: 'text' | 'email' | 'tel' | 'url' | 'date';\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  isSaving: boolean;\r\n  error: string | null;\r\n  placeholder?: string;\r\n  className?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const AutoSaveInput: React.FC<AutoSaveInputProps> = ({\r\n  label,\r\n  type = 'text',\r\n  value,\r\n  onChange,\r\n  isSaving,\r\n  error,\r\n  placeholder,\r\n  className = '',\r\n  disabled = false,\r\n}) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    if (isSaving) {\r\n      return <Loader2 className=\"h-4 w-4 text-blue-500 animate-spin\" />;\r\n    }\r\n    if (error) {\r\n      return <AlertCircle className=\"h-4 w-4 text-red-500\" />;\r\n    }\r\n    if (value && value.trim() !== '') {\r\n      return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n        {label}\r\n      </label>\r\n      <div className=\"relative\">\r\n        <input\r\n          type={type}\r\n          value={value}\r\n          onChange={handleChange}\r\n          placeholder={placeholder}\r\n          disabled={disabled}\r\n          className={`w-full px-3 py-2 pr-10 border rounded-md bg-stone-700 text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent ${\r\n            error ? 'border-red-500' : 'border-stone-600'\r\n          } ${disabled ? 'opacity-50 cursor-not-allowed' : ''} ${className}`}\r\n        />\r\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-3\">\r\n          {getStatusIcon()}\r\n        </div>\r\n      </div>\r\n      {error && (\r\n        <p className=\"mt-1 text-sm text-red-400\">{error}</p>\r\n      )}\r\n      {isSaving && (\r\n        <p className=\"mt-1 text-sm text-blue-400\">Saving...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","/* eslint-disable react/prop-types -- Using TypeScript interfaces instead of PropTypes */\r\nimport React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n/* eslint-enable react/prop-types -- Re-enable after imports */\r\n\r\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  variant?: 'default' | 'secondary' | 'destructive' | 'outline' | 'success' | 'warning';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  dot?: boolean;\r\n}\r\n\r\nconst Badge = React.forwardRef<HTMLDivElement, BadgeProps>(\r\n  ({ className, variant = 'default', size = 'md', dot = false, children, ...props }, ref) => {\r\n    const baseStyles = 'inline-flex items-center rounded-full font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2';\r\n    \r\n    const variants = {\r\n      default: 'bg-primary text-primary-foreground hover:bg-primary/80',\r\n      secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n      destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/80',\r\n      outline: 'text-foreground border border-input',\r\n      success: 'bg-green-100 text-green-800 hover:bg-green-200 dark:bg-green-900 dark:text-green-200',\r\n      warning: 'bg-yellow-100 text-yellow-800 hover:bg-yellow-200 dark:bg-yellow-900 dark:text-yellow-200',\r\n    };\r\n\r\n    const sizes = {\r\n      sm: 'px-2 py-1 text-xs',\r\n      md: 'px-2.5 py-0.5 text-sm',\r\n      lg: 'px-3 py-1 text-base',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          baseStyles,\r\n          variants[variant],\r\n          sizes[size],\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {dot && (\r\n          <div className=\"w-2 h-2 rounded-full bg-current mr-1.5\" />\r\n        )}\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nBadge.displayName = 'Badge';\r\n\r\nexport { Badge };\r\n","import React from 'react';\r\nimport { LucideIcon } from 'lucide-react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nexport interface FilterChipProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  isSelected?: boolean;\r\n  icon?: LucideIcon;\r\n  children: React.ReactNode;\r\n  variant?: 'default' | 'outline' | 'ghost';\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst FilterChip = React.forwardRef<HTMLButtonElement, FilterChipProps>(\r\n  ({ \r\n    className, \r\n    isSelected = false, \r\n    icon: Icon, \r\n    children, \r\n    variant = 'default',\r\n    size = 'md',\r\n    ...props \r\n  }, ref) => {\r\n    const baseStyles = 'inline-flex items-center gap-2 rounded-full font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';\r\n    \r\n    const variants = {\r\n      default: isSelected \r\n        ? 'bg-orange-500 text-white shadow-lg shadow-orange-500/30 hover:bg-orange-600' \r\n        : 'bg-stone-800/70 text-stone-200 hover:bg-stone-700/70 hover:text-white border border-stone-600/50',\r\n      outline: isSelected\r\n        ? 'bg-orange-500 text-white border-orange-500 shadow-lg shadow-orange-500/30'\r\n        : 'text-stone-200 border border-stone-600/50 hover:bg-stone-800/50 hover:border-stone-500',\r\n      ghost: isSelected\r\n        ? 'bg-orange-500/20 text-orange-300 hover:bg-orange-500/30'\r\n        : 'text-stone-300 hover:text-white hover:bg-stone-800/50'\r\n    };\r\n\r\n    const sizes = {\r\n      sm: 'px-3 py-1.5 text-sm',\r\n      md: 'px-4 py-2 text-base',\r\n      lg: 'px-6 py-3 text-lg',\r\n    };\r\n\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        className={cn(\r\n          baseStyles,\r\n          variants[variant],\r\n          sizes[size],\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {Icon && <Icon className=\"h-4 w-4\" />}\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nFilterChip.displayName = 'FilterChip';\r\n\r\nexport { FilterChip };\r\n","/* eslint-disable react/prop-types -- Using TypeScript interfaces instead of PropTypes */\r\nimport React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  label?: string;\r\n  error?: string;\r\n  helperText?: string;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  variant?: 'default' | 'filled' | 'outlined';\r\n}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ \r\n    className, \r\n    type = 'text', \r\n    label,\r\n    error,\r\n    helperText,\r\n    leftIcon,\r\n    rightIcon,\r\n    variant = 'default',\r\n    id,\r\n    ...props \r\n  }, ref) => {\r\n    const inputId = id || `input-${Math.random().toString(36).substring(2, 11)}`;\r\n    \r\n    const baseStyles = 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50';\r\n    \r\n    const variants = {\r\n      default: 'border-input',\r\n      filled: 'border-transparent bg-muted',\r\n      outlined: 'border-2 border-input',\r\n    };\r\n\r\n    const inputClasses = cn(\r\n      baseStyles,\r\n      variants[variant],\r\n      error && 'border-destructive focus-visible:ring-destructive',\r\n      leftIcon && 'pl-10',\r\n      rightIcon && 'pr-10',\r\n      className\r\n    );\r\n\r\n    return (\r\n      <div className=\"w-full\">\r\n        {label && (\r\n          <label\r\n            htmlFor={inputId}\r\n            className=\"block text-sm font-medium text-foreground mb-2\"\r\n          >\r\n            {label}\r\n            {props.required && <span className=\"text-destructive ml-1\">*</span>}\r\n          </label>\r\n        )}\r\n        <div className=\"relative\">\r\n          {leftIcon && (\r\n            <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\">\r\n              {leftIcon}\r\n            </div>\r\n          )}\r\n          <input\r\n            type={type}\r\n            className={inputClasses}\r\n            ref={ref}\r\n            id={inputId}\r\n            {...props}\r\n          />\r\n          {rightIcon && (\r\n            <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\">\r\n              {rightIcon}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {error && (\r\n          <p className=\"mt-1 text-sm text-destructive\" role=\"alert\">\r\n            {error}\r\n          </p>\r\n        )}\r\n        {helperText && !error && (\r\n          <p className=\"mt-1 text-sm text-muted-foreground\">\r\n            {helperText}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nInput.displayName = 'Input';\r\n\r\nexport { Input };\r\n/* eslint-enable react/prop-types -- Re-enable after TypeScript interface declarations */\r\n","/* eslint-disable react/prop-types -- Using TypeScript interfaces instead of PropTypes */\r\nimport React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n/* eslint-enable react/prop-types -- Re-enable after imports section */\r\n\r\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  variant?: 'default' | 'outlined' | 'elevated';\r\n  padding?: 'none' | 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, variant = 'default', padding = 'md', ...props }, ref) => {\r\n    const baseStyles = 'rounded-lg border bg-card text-card-foreground shadow-sm';\r\n    \r\n    const variants = {\r\n      default: 'border-border',\r\n      outlined: 'border-2 border-border',\r\n      elevated: 'border-border shadow-lg',\r\n    };\r\n\r\n    const paddings = {\r\n      none: '',\r\n      sm: 'p-3',\r\n      md: 'p-6',\r\n      lg: 'p-8',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          baseStyles,\r\n          variants[variant],\r\n          paddings[padding],\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nCard.displayName = 'Card';\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardHeader.displayName = 'CardHeader';\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLHeadingElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, children, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      'text-2xl font-semibold leading-none tracking-tight',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </h3>\r\n));\r\nCardTitle.displayName = 'CardTitle';\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn('text-sm text-muted-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardDescription.displayName = 'CardDescription';\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\r\n));\r\nCardContent.displayName = 'CardContent';\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('flex items-center p-6 pt-0', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardFooter.displayName = 'CardFooter';\r\n\r\nexport { \r\n  Card, \r\n  CardContent, \r\n  CardDescription, \r\n  CardFooter, \r\n  CardHeader, \r\n  CardTitle\r\n};\r\n","/**\r\n * Phone Number Formatter Utility\r\n * Ensures phone numbers are always in the format (###) ###-####\r\n */\r\n\r\n/**\r\n * Formats a phone number string to (###) ###-#### format\r\n * @param input - Raw phone number input (can include spaces, dashes, dots, etc.)\r\n * @returns Formatted phone number string\r\n */\r\nexport function formatPhoneNumber(input: string): string {\r\n  if (!input) return '';\r\n  \r\n  // Remove all non-digit characters\r\n  const digitsOnly = input.replace(/\\D/g, '');\r\n  \r\n  // Remove leading 1 if it exists (country code)\r\n  const withoutCountryCode = digitsOnly.startsWith('1') && digitsOnly.length > 10 \r\n    ? digitsOnly.slice(1) \r\n    : digitsOnly;\r\n  \r\n  // If we don't have exactly 10 digits, return the cleaned input\r\n  if (withoutCountryCode.length !== 10) {\r\n    return withoutCountryCode;\r\n  }\r\n  \r\n  // Format as (###) ###-####\r\n  const areaCode = withoutCountryCode.slice(0, 3);\r\n  const prefix = withoutCountryCode.slice(3, 6);\r\n  const lineNumber = withoutCountryCode.slice(6, 10);\r\n  \r\n  return `(${areaCode}) ${prefix}-${lineNumber}`;\r\n}\r\n\r\n/**\r\n * Validates if a phone number is complete (has 10 digits)\r\n * @param input - Phone number string\r\n * @returns boolean indicating if the number is complete\r\n */\r\nexport function isCompletePhoneNumber(input: string): boolean {\r\n  const digitsOnly = input.replace(/\\D/g, '');\r\n  const withoutCountryCode = digitsOnly.startsWith('1') && digitsOnly.length > 10 \r\n    ? digitsOnly.slice(1) \r\n    : digitsOnly;\r\n  \r\n  return withoutCountryCode.length === 10;\r\n}\r\n\r\n/**\r\n * Gets just the digits from a phone number (useful for storage/API calls)\r\n * @param input - Phone number string\r\n * @returns String of digits only\r\n */\r\nexport function getPhoneDigits(input: string): string {\r\n  const digitsOnly = input.replace(/\\D/g, '');\r\n  const withoutCountryCode = digitsOnly.startsWith('1') && digitsOnly.length > 10 \r\n    ? digitsOnly.slice(1) \r\n    : digitsOnly;\r\n  \r\n  return withoutCountryCode;\r\n}\r\n\r\n/**\r\n * Formats phone number as user types (real-time formatting)\r\n * @param input - Current input value\r\n * @param cursorPosition - Current cursor position\r\n * @returns Object with formatted value and new cursor position\r\n */\r\nexport function formatPhoneNumberAsTyped(input: string, cursorPosition: number): {\r\n  value: string;\r\n  cursorPosition: number;\r\n} {\r\n  if (!input) return { value: '', cursorPosition: 0 };\r\n  \r\n  // Get the current digits\r\n  const currentDigits = getPhoneDigits(input);\r\n  \r\n  // If we have 10+ digits, format it\r\n  if (currentDigits.length >= 10) {\r\n    const formatted = formatPhoneNumber(currentDigits);\r\n    \r\n    // Calculate new cursor position\r\n    let newPosition = cursorPosition;\r\n    \r\n    // Adjust cursor position based on formatting characters added\r\n    if (cursorPosition > 0) {\r\n      // Count formatting characters before cursor in original input\r\n      const beforeCursor = input.slice(0, cursorPosition);\r\n      const digitsBeforeCursor = beforeCursor.replace(/\\D/g, '').length;\r\n      \r\n      // Find position in formatted string after same number of digits\r\n      let digitCount = 0;\r\n      for (let i = 0; i < formatted.length; i++) {\r\n        if (/\\d/.test(formatted[i])) {\r\n          digitCount++;\r\n          if (digitCount === digitsBeforeCursor) {\r\n            newPosition = i + 1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return { value: formatted, cursorPosition: newPosition };\r\n  }\r\n  \r\n  // If less than 10 digits, just return cleaned input\r\n  return { value: currentDigits, cursorPosition: cursorPosition };\r\n}\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\ninterface UseAutoSaveOptions {\r\n  debounce?: number;\r\n}\r\n\r\nexport function useAutoSave<T>(\r\n  initialValue: T,\r\n  saveFn: (value: T) => Promise<unknown>,\r\n  options: UseAutoSaveOptions = {}\r\n) {\r\n  const { debounce = 800 } = options;\r\n  const [value, setValue] = useState<T>(initialValue);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const timeoutRef = useRef<number | null>(null);\r\n  const isFirstRender = useRef(true);\r\n  const previousInitialValue = useRef<T>(initialValue);\r\n\r\n  // Reset value and first run flag if initialValue changes (e.g., after async load)\r\n  // Only reset if the initialValue is actually different to prevent infinite loops\r\n  useEffect(() => {\r\n    if (previousInitialValue.current !== initialValue) {\r\n      setValue(initialValue);\r\n      isFirstRender.current = true;\r\n      previousInitialValue.current = initialValue;\r\n    }\r\n  }, [initialValue]);\r\n\r\n  useEffect(() => {\r\n    // Only trigger saveFn if this is not the initial mount or after initialValue changes.\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    setIsSaving(true);\r\n    setError(null);\r\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      void (async () => {\r\n        try {\r\n          await saveFn(value);\r\n          setIsSaving(false);\r\n        } catch (err: unknown) {\r\n          const errorMessage = err instanceof Error ? err.message : 'Failed to save';\r\n          setError(errorMessage);\r\n          setIsSaving(false);\r\n        }\r\n      })();\r\n    }, debounce);\r\n    return () => {\r\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- Only re-run when value changes, not when saveFunction changes\r\n  }, [value]);\r\n\r\n  return { value, setValue, isSaving, error };\r\n}\r\n","/**\r\n * Date Formatting Utilities\r\n * Centralized date formatting functions to ensure consistency across the app\r\n */\r\n\r\n/**\r\n * Get today's date as YYYY-MM-DD string (local timezone)\r\n */\r\nexport function getToday(): string {\r\n  const now = new Date();\r\n  return formatDateToYYYYMMDD(now);\r\n}\r\n\r\n/**\r\n * Parse YYYY-MM-DD string as local date (avoids timezone issues)\r\n * @param dateString - Date string in YYYY-MM-DD format\r\n * @returns Date object in local timezone\r\n */\r\nexport function parseLocalDate(dateString: string): Date {\r\n  const [year = 0, month = 1, day = 1] = dateString.split('-').map(Number);\r\n  return new Date(year, month - 1, day);\r\n}\r\n\r\n/**\r\n * Format Date object as YYYY-MM-DD string\r\n * @param date - Date object\r\n * @returns Date string in YYYY-MM-DD format\r\n */\r\nexport function formatDateToYYYYMMDD(date: Date): string {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\n/**\r\n * Format date for display (e.g., \"January 15, 2025\")\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @param options - Intl.DateTimeFormatOptions\r\n * @returns Formatted date string\r\n */\r\nexport function formatDateForDisplay(\r\n  date: Date | string,\r\n  options: Intl.DateTimeFormatOptions = {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  }\r\n): string {\r\n  const dateObj = typeof date === 'string' ? parseLocalDate(date) : date;\r\n  return dateObj.toLocaleDateString('en-US', options);\r\n}\r\n\r\n/**\r\n * Format date for short display (e.g., \"Jan 15, 2025\")\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @returns Short formatted date string\r\n */\r\nexport function formatDateShort(date: Date | string): string {\r\n  return formatDateForDisplay(date, {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n}\r\n\r\n/**\r\n * Format date for compact display (e.g., \"1/15/25\")\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @returns Compact formatted date string\r\n */\r\nexport function formatDateCompact(date: Date | string): string {\r\n  return formatDateForDisplay(date, {\r\n    year: '2-digit',\r\n    month: 'numeric',\r\n    day: 'numeric'\r\n  });\r\n}\r\n\r\n/**\r\n * Get month and year display (e.g., \"January 2025\")\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @returns Month and year string\r\n */\r\nexport function formatMonthYear(date: Date | string): string {\r\n  return formatDateForDisplay(date, {\r\n    year: 'numeric',\r\n    month: 'long'\r\n  });\r\n}\r\n\r\n/**\r\n * Get week dates (Monday to Sunday) for a given date\r\n * @param dateString - Date string in YYYY-MM-DD format\r\n * @returns Array of 7 date strings (Monday to Sunday)\r\n */\r\nexport function getWeekDates(dateString: string): string[] {\r\n  const parts = dateString.split('-').map(Number);\r\n  const year = parts[0] ?? 0;\r\n  const month = parts[1] ?? 1;\r\n  const day = parts[2] ?? 1;\r\n  \r\n  const selectedDate = new Date(year, month - 1, day);\r\n  const dayOfWeek = selectedDate.getDay();\r\n  \r\n  // Calculate offset to Monday (0=Sunday, 1=Monday, etc.)\r\n  const mondayOffset = dayOfWeek === 0 ? -6 : 1 - dayOfWeek;\r\n  \r\n  const weekDates: string[] = [];\r\n  for (let i = 0; i < 7; i++) {\r\n    const weekDate = new Date(year, month - 1, day + mondayOffset + i);\r\n    weekDates.push(formatDateToYYYYMMDD(weekDate));\r\n  }\r\n  \r\n  return weekDates;\r\n}\r\n\r\n/**\r\n * Get week range display (e.g., \"Jan 15 - Jan 21, 2025\")\r\n * @param dateString - Date string in YYYY-MM-DD format\r\n * @returns Week range string\r\n */\r\nexport function formatWeekRange(dateString: string): string {\r\n  const weekDates = getWeekDates(dateString);\r\n  \r\n  // getWeekDates always returns 7 dates (Monday-Sunday)\r\n  const firstDate = weekDates[0];\r\n  const lastDate = weekDates[6];\r\n  \r\n  if (!firstDate || !lastDate) {\r\n    return '';\r\n  }\r\n  \r\n  const startDate = parseLocalDate(firstDate);\r\n  const endDate = parseLocalDate(lastDate);\r\n  \r\n  const startFormatted = startDate.toLocaleDateString('en-US', { \r\n    month: 'short', \r\n    day: 'numeric' \r\n  });\r\n  \r\n  const endFormatted = endDate.toLocaleDateString('en-US', { \r\n    month: 'short', \r\n    day: 'numeric',\r\n    year: 'numeric' \r\n  });\r\n  \r\n  return `${startFormatted} - ${endFormatted}`;\r\n}\r\n\r\n/**\r\n * Check if a date is today\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @returns True if date is today\r\n */\r\nexport function isToday(date: Date | string): boolean {\r\n  const dateString = typeof date === 'string' ? date : formatDateToYYYYMMDD(date);\r\n  return dateString === getToday();\r\n}\r\n\r\n/**\r\n * Check if a date is in the past\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @returns True if date is before today\r\n */\r\nexport function isPast(date: Date | string): boolean {\r\n  const dateString = typeof date === 'string' ? date : formatDateToYYYYMMDD(date);\r\n  return dateString < getToday();\r\n}\r\n\r\n/**\r\n * Check if a date is in the future\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @returns True if date is after today\r\n */\r\nexport function isFuture(date: Date | string): boolean {\r\n  const dateString = typeof date === 'string' ? date : formatDateToYYYYMMDD(date);\r\n  return dateString > getToday();\r\n}\r\n\r\n/**\r\n * Get the day name from a date (e.g., \"Monday\")\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @returns Day name\r\n */\r\nexport function getDayName(date: Date | string): string {\r\n  const dateObj = typeof date === 'string' ? parseLocalDate(date) : date;\r\n  return dateObj.toLocaleDateString('en-US', { weekday: 'long' });\r\n}\r\n\r\n/**\r\n * Get the short day name from a date (e.g., \"Mon\")\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @returns Short day name\r\n */\r\nexport function getDayNameShort(date: Date | string): string {\r\n  const dateObj = typeof date === 'string' ? parseLocalDate(date) : date;\r\n  return dateObj.toLocaleDateString('en-US', { weekday: 'short' });\r\n}\r\n\r\n/**\r\n * Add days to a date\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @param days - Number of days to add (can be negative)\r\n * @returns New date string in YYYY-MM-DD format\r\n */\r\nexport function addDays(date: Date | string, days: number): string {\r\n  const dateObj = typeof date === 'string' ? parseLocalDate(date) : new Date(date);\r\n  dateObj.setDate(dateObj.getDate() + days);\r\n  return formatDateToYYYYMMDD(dateObj);\r\n}\r\n\r\n/**\r\n * Add months to a date\r\n * @param date - Date object or YYYY-MM-DD string\r\n * @param months - Number of months to add (can be negative)\r\n * @returns New date string in YYYY-MM-DD format\r\n */\r\nexport function addMonths(date: Date | string, months: number): string {\r\n  const dateObj = typeof date === 'string' ? parseLocalDate(date) : new Date(date);\r\n  dateObj.setMonth(dateObj.getMonth() + months);\r\n  return formatDateToYYYYMMDD(dateObj);\r\n}\r\n\r\n","/**\r\n * Site Data Utilities\r\n * Industry-agnostic functions to transform and format data from site.json for display purposes\r\n * All functions accept MainSiteConfig to support multi-industry architecture\r\n */\r\n\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\n\r\nimport { formatPhoneNumber } from './phoneFormatter';\r\n\r\n/**\r\n * Formats contact information from site.json for display\r\n */\r\nexport function formatContactInfo(siteConfig: MainSiteConfig) {\r\n  return {\r\n    phone: siteConfig.contact?.phone ? formatPhoneNumber(siteConfig.contact.phone) : '',\r\n    email: siteConfig.contact?.email || '',\r\n    phoneRaw: siteConfig.contact?.phone || '', // Raw phone for tel: links\r\n  };\r\n}\r\n\r\n/**\r\n * Formats social media links for display\r\n */\r\nexport function formatSocialMedia(siteConfig: MainSiteConfig) {\r\n  return {\r\n    facebook: siteConfig.socials?.facebook || '',\r\n    instagram: siteConfig.socials?.instagram || '',\r\n    tiktok: siteConfig.socials?.tiktok || '',\r\n    youtube: siteConfig.socials?.youtube || '',\r\n  };\r\n}\r\n\r\n/**\r\n * Converts relative URLs to absolute URLs for SEO\r\n * Uses current window location to determine the domain (works for any industry/subdomain)\r\n */\r\nexport function getAbsoluteUrl(relativeUrl: string): string {\r\n  if (!relativeUrl) return '';\r\n  \r\n  // If it's already an absolute URL, return as is\r\n  if (relativeUrl.startsWith('http://') || relativeUrl.startsWith('https://')) {\r\n    return relativeUrl;\r\n  }\r\n  \r\n  // Use current window location (works for all industries/subdomains)\r\n  if (typeof window !== 'undefined') {\r\n    return `${window.location.protocol}//${window.location.host}${relativeUrl}`;\r\n  }\r\n  \r\n  // Fallback for SSR (should rarely be hit)\r\n  return relativeUrl;\r\n}\r\n\r\n/**\r\n * Formats SEO data for display\r\n */\r\nexport function formatSEO(siteConfig: MainSiteConfig) {\r\n  return {\r\n    title: siteConfig.seo.title || siteConfig.brand || '',\r\n    description: siteConfig.seo.description || '',\r\n    keywords: siteConfig.seo.keywords || [],\r\n    canonical: getAbsoluteUrl(siteConfig.seo.canonicalPath || '/'),\r\n    ogImage: getAbsoluteUrl(siteConfig.seo.ogImage || ''),\r\n  };\r\n}\r\n\r\n/**\r\n * Formats hero section data for display\r\n */\r\nexport function formatHero(siteConfig: MainSiteConfig) {\r\n  return {\r\n    h1: siteConfig.hero.h1 || '',\r\n    images: siteConfig.hero.images || [],\r\n    finder: {\r\n      placeholder: siteConfig.finder?.placeholder || '',\r\n      sub: siteConfig.finder?.sub || '',\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Formats services grid data for display\r\n */\r\nexport function formatServices(siteConfig: MainSiteConfig) {\r\n  return siteConfig.servicesGrid || [];\r\n}\r\n\r\n/**\r\n * Formats reviews data for display\r\n */\r\nexport function formatReviews(siteConfig: MainSiteConfig) {\r\n  return {\r\n    title: siteConfig.reviews?.title || '',\r\n    subtitle: siteConfig.reviews?.subtitle || '',\r\n    ratingValue: siteConfig.reviews?.ratingValue || '',\r\n    reviewCount: siteConfig.reviews?.reviewCount || 0,\r\n    source: siteConfig.reviews?.source || '',\r\n  };\r\n}\r\n\r\n/**\r\n * Formats FAQ data for display\r\n */\r\nexport function formatFAQ(siteConfig: MainSiteConfig) {\r\n  return {\r\n    title: siteConfig.faq?.title || '',\r\n    subtitle: siteConfig.faq?.subtitle || '',\r\n  };\r\n}\r\n\r\n/**\r\n * Gets formatted business information\r\n */\r\nexport function getBusinessInfo(siteConfig: MainSiteConfig) {\r\n  return {\r\n    name: siteConfig.brand || '',\r\n    logo: siteConfig.logo.url || '',\r\n    logoAlt: siteConfig.logo.alt || '',\r\n    slug: siteConfig.slug || '',\r\n    urlPath: siteConfig.urlPath || '/',\r\n  };\r\n}\r\n\r\n/**\r\n * Comprehensive site data formatter - formats all site data at once\r\n */\r\nexport function formatSiteData(siteConfig: MainSiteConfig) {\r\n  return {\r\n    business: getBusinessInfo(siteConfig),\r\n    contact: formatContactInfo(siteConfig),\r\n    socials: formatSocialMedia(siteConfig),\r\n    seo: formatSEO(siteConfig),\r\n    hero: formatHero(siteConfig),\r\n    services: formatServices(siteConfig),\r\n    reviews: formatReviews(siteConfig),\r\n    faq: formatFAQ(siteConfig),\r\n  };\r\n}\r\n","/**\r\n * Image Rotation and Fade Utilities\r\n * \r\n * Provides reusable functions and hooks for creating image carousels with\r\n * fade transitions, auto-rotation, and performance optimizations.\r\n */\r\n\r\nimport type React from 'react';\r\n\r\nexport interface ImageRotationConfig {\r\n  /** Array of image URLs to rotate through */\r\n  images: string[];\r\n  /** Whether to auto-rotate images */\r\n  autoRotate?: boolean;\r\n  /** Interval in milliseconds between rotations */\r\n  interval?: number;\r\n  /** Duration of fade transition in milliseconds */\r\n  fadeDuration?: number;\r\n  /** Whether to preload next image for smoother transitions */\r\n  preloadNext?: boolean;\r\n  /** Whether to pause rotation on hover */\r\n  pauseOnHover?: boolean;\r\n}\r\n\r\nexport interface ImageRotationState {\r\n  /** Current active image index */\r\n  currentIndex: number;\r\n  /** Next image index (for preloading) */\r\n  nextIndex: number;\r\n  /** Whether rotation is currently paused */\r\n  isPaused: boolean;\r\n}\r\n\r\nexport interface ImageRotationActions {\r\n  /** Go to next image */\r\n  next: () => void;\r\n  /** Go to previous image */\r\n  previous: () => void;\r\n  /** Go to specific image index */\r\n  goTo: (index: number) => void;\r\n  /** Toggle pause state */\r\n  togglePause: () => void;\r\n  /** Set pause state */\r\n  setPaused: (paused: boolean) => void;\r\n}\r\n\r\n/**\r\n * Calculate the next image index in the rotation\r\n */\r\nexport const getNextImageIndex = (currentIndex: number, totalImages: number): number => {\r\n  return (currentIndex + 1) % totalImages;\r\n};\r\n\r\n/**\r\n * Calculate the previous image index in the rotation\r\n */\r\nexport const getPreviousImageIndex = (currentIndex: number, totalImages: number): number => {\r\n  return currentIndex === 0 ? totalImages - 1 : currentIndex - 1;\r\n};\r\n\r\n/**\r\n * Preload an image for smoother transitions\r\n */\r\nexport const preloadImage = (imageUrl: string): Promise<void> => {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    img.onload = () => { resolve(); };\r\n    img.onerror = () => { reject(new Error(`Failed to preload image: ${imageUrl}`)); };\r\n    img.src = imageUrl;\r\n  });\r\n};\r\n\r\n/**\r\n * Preload multiple images\r\n */\r\nexport const preloadImages = async (imageUrls: string[]): Promise<void> => {\r\n  await Promise.all(imageUrls.map(preloadImage));\r\n};\r\n\r\n/**\r\n * Get CSS transition duration string from milliseconds\r\n */\r\nexport const getTransitionDuration = (durationMs: number): string => {\r\n  return `${durationMs}ms`;\r\n};\r\n\r\n/**\r\n * Generate CSS classes for image opacity based on current state\r\n */\r\nexport const getImageOpacityClasses = (\r\n  imageIndex: number,\r\n  currentIndex: number,\r\n  fadeDuration: number = 2000\r\n): string => {\r\n  const isActive = imageIndex === currentIndex;\r\n  const duration = getTransitionDuration(fadeDuration);\r\n  \r\n  return `transition-opacity duration-[${duration}] ${\r\n    isActive ? 'opacity-100' : 'opacity-0'\r\n  }`;\r\n};\r\n\r\n/**\r\n * Generate inline styles for transition duration\r\n */\r\nexport const getTransitionStyles = (durationMs: number): React.CSSProperties => {\r\n  return {\r\n    transitionDuration: getTransitionDuration(durationMs)\r\n  };\r\n};\r\n\r\n/**\r\n * Filter images to only render current and next (for performance)\r\n */\r\nexport const getVisibleImageIndices = (\r\n  currentIndex: number,\r\n  totalImages: number,\r\n  preloadNext: boolean = true\r\n): number[] => {\r\n  if (totalImages <= 1) return [currentIndex];\r\n  \r\n  const indices = [currentIndex];\r\n  if (preloadNext) {\r\n    const nextIndex = getNextImageIndex(currentIndex, totalImages);\r\n    indices.push(nextIndex);\r\n  }\r\n  \r\n  return indices;\r\n};\r\n\r\n/**\r\n * Check if image rotation is valid for the given configuration\r\n */\r\nexport const validateImageRotationConfig = (config: ImageRotationConfig): {\r\n  isValid: boolean;\r\n  errors: string[];\r\n} => {\r\n  const errors: string[] = [];\r\n  \r\n  if (config.images.length === 0) {\r\n    errors.push('Images array cannot be empty');\r\n  }\r\n  \r\n  if (config.interval && config.interval < 1000) {\r\n    errors.push('Interval should be at least 1000ms for better UX');\r\n  }\r\n  \r\n  if (config.fadeDuration && config.fadeDuration < 100) {\r\n    errors.push('Fade duration should be at least 100ms');\r\n  }\r\n  \r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\n/**\r\n * Create a debounced function for rotation controls\r\n */\r\nexport const createDebouncedRotation = (\r\n  callback: () => void,\r\n  delay: number = 300\r\n): (() => void) => {\r\n  let timeoutId: NodeJS.Timeout;\r\n  \r\n  return () => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(callback, delay);\r\n  };\r\n};\r\n\r\n/**\r\n * Generate accessibility attributes for image carousel\r\n */\r\nexport const getAccessibilityAttributes = (\r\n  currentIndex: number,\r\n  totalImages: number,\r\n  autoRotate: boolean\r\n): Record<string, string | boolean> => {\r\n  return {\r\n    role: 'img',\r\n    'aria-label': `Image ${currentIndex + 1} of ${totalImages}`,\r\n    'aria-live': autoRotate ? 'polite' : 'off',\r\n    'aria-atomic': true\r\n  };\r\n};\r\n","/**\r\n * Logger utility for consistent logging across the application\r\n * Disables logging in production to avoid console noise\r\n */\r\n\r\nimport { env } from '@/shared/env';\r\n\r\ntype LogLevel = 'debug' | 'info' | 'warn' | 'error';\r\n\r\ninterface LoggerConfig {\r\n  enabled: boolean;\r\n  level: LogLevel;\r\n}\r\n\r\nconst config: LoggerConfig = {\r\n  enabled: env.DEV,\r\n  level: 'debug'\r\n};\r\n\r\nconst levels: Record<LogLevel, number> = {\r\n  debug: 0,\r\n  info: 1,\r\n  warn: 2,\r\n  error: 3\r\n};\r\n\r\nclass Logger {\r\n  private shouldLog(level: LogLevel): boolean {\r\n    return config.enabled && levels[level] >= levels[config.level];\r\n  }\r\n\r\n  debug(message: string, ...args: unknown[]): void {\r\n    if (this.shouldLog('debug')) {\r\n      // eslint-disable-next-line no-console -- Logger utility needs console access\r\n      console.log(`[DEBUG] ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  info(message: string, ...args: unknown[]): void {\r\n    if (this.shouldLog('info')) {\r\n      // eslint-disable-next-line no-console -- Logger utility needs console access\r\n      console.info(`[INFO] ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  warn(message: string, ...args: unknown[]): void {\r\n    if (this.shouldLog('warn')) {\r\n      console.warn(`[WARN] ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  error(message: string, ...args: unknown[]): void {\r\n    if (this.shouldLog('error')) {\r\n      console.error(`[ERROR] ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  // Booking-specific loggers\r\n  booking = {\r\n    stepChanged: (step: string) => { this.debug(`🔄 Step changed to: ${step}`); },\r\n    dataUpdated: (data: unknown) => { this.debug('📊 Booking data updated:', data); },\r\n    vehicleSelected: (vehicle: string) => { this.debug(`🚗 Vehicle selected: ${vehicle}`); },\r\n    serviceSelected: (service: string) => { this.debug(`🎯 Service selected: ${service}`); },\r\n    addonsSelected: (addons: string[]) => { this.debug('➕ Addons selected:', addons); },\r\n    scheduleSelected: (schedule: unknown) => { this.debug('📅 Schedule selected:', schedule); },\r\n    paymentSelected: (method: string) => { this.debug(`💳 Payment method selected: ${method}`); },\r\n    bookingCompleted: () => { this.info('🎉 Booking completed!'); },\r\n    bookingReset: () => { this.debug('🔄 Booking reset'); },\r\n    error: (error: string) => { this.error(`❌ Booking error: ${error}`); }\r\n  };\r\n\r\n  // Data loading loggers\r\n  data = {\r\n    loading: (type: string, params: unknown) => { this.debug(`🔍 Loading ${type}:`, params); },\r\n    loaded: (type: string, count: number) => { this.debug(`📊 Loaded ${count} ${type}`); },\r\n    error: (type: string, error: string) => { this.error(`❌ Error loading ${type}: ${error}`); },\r\n    noData: (type: string, params: unknown) => { this.warn(`⚠️ No ${type} available:`, params); }\r\n  };\r\n}\r\n\r\nexport const logger = new Logger();\r\nexport default logger;\r\n","/**\r\n * Tenant Asset Locator\r\n * \r\n * Centralized helper for constructing tenant asset URLs with fallbacks.\r\n * Eliminates brittle string concatenation throughout the codebase.\r\n * \r\n * Pure function - no IO, no network calls, no DOM access.\r\n */\r\n\r\nimport type { Vertical } from '@/shared/types';\r\n\r\n/**\r\n * Supported asset types for tenant branding and content\r\n */\r\nexport type AssetType =\r\n  | 'logo'           // Primary brand logo\r\n  | 'logo-dark'      // Dark mode variant\r\n  | 'logo-light'     // Light mode variant\r\n  | 'favicon'        // Browser favicon\r\n  | 'hero'           // Hero/banner images\r\n  | 'hero-1'         // Specific hero image (numbered)\r\n  | 'hero-2'\r\n  | 'hero-3'\r\n  | 'og-image'       // Open Graph social share image\r\n  | 'twitter-image'  // Twitter Card image\r\n  | 'avatar'         // User/review avatar\r\n  | 'gallery';       // Gallery/portfolio images\r\n\r\n/**\r\n * File extension preferences\r\n */\r\nexport type AssetExtension = 'webp' | 'png' | 'jpg' | 'jpeg' | 'svg' | 'gif';\r\n\r\n/**\r\n * Options for asset URL generation\r\n */\r\nexport interface AssetLocatorOptions {\r\n  /** Tenant ID (e.g., 'jps', '123') - if provided, checks uploads first */\r\n  tenantId?: string;\r\n  \r\n  /** Vertical/industry (e.g., 'mobile-detailing') - used for fallback paths */\r\n  vertical: Vertical;\r\n  \r\n  /** Asset type to locate */\r\n  type: AssetType;\r\n  \r\n  /** Custom filename (useful for avatars, gallery images) */\r\n  filename?: string;\r\n  \r\n  /** Preferred file extension (default: 'webp' for most, 'svg' for favicon) */\r\n  extension?: AssetExtension;\r\n  \r\n  /** Use tenant-specific uploads directory (default: true if tenantId provided) */\r\n  useTenantUploads?: boolean;\r\n  \r\n  /** Force fallback to vertical default (skip tenant uploads check) */\r\n  forceVerticalDefault?: boolean;\r\n}\r\n\r\n/**\r\n * Get the default extension for a given asset type\r\n */\r\nfunction getDefaultExtension(type: AssetType): AssetExtension {\r\n  if (type === 'favicon') return 'svg';\r\n  if (type.startsWith('logo')) return 'webp';\r\n  return 'webp';\r\n}\r\n\r\n/**\r\n * Get the subdirectory path for a given asset type\r\n */\r\nfunction getAssetSubdirectory(type: AssetType): string {\r\n  if (type === 'avatar') return 'avatars';\r\n  if (type === 'gallery') return 'gallery';\r\n  if (type.startsWith('hero')) return 'hero';\r\n  if (type.startsWith('logo') || type === 'favicon') return 'icons';\r\n  if (type === 'og-image' || type === 'twitter-image') return 'social';\r\n  return 'images';\r\n}\r\n\r\n/**\r\n * Get the filename for a given asset type\r\n */\r\nfunction getAssetFilename(type: AssetType, customFilename?: string, extension?: AssetExtension): string {\r\n  // If custom filename provided (common for avatars, gallery), use it\r\n  if (customFilename) {\r\n    // If filename already has extension, use as-is\r\n    if (/\\.(webp|png|jpg|jpeg|svg|gif)$/i.test(customFilename)) {\r\n      return customFilename;\r\n    }\r\n    // Otherwise append extension\r\n    return `${customFilename}.${extension || 'webp'}`;\r\n  }\r\n  \r\n  // Standard filenames by type\r\n  const ext = extension || getDefaultExtension(type);\r\n  \r\n  switch (type) {\r\n    case 'logo':\r\n      return `logo.${ext}`;\r\n    case 'logo-dark':\r\n      return `logo-dark.${ext}`;\r\n    case 'logo-light':\r\n      return `logo-light.${ext}`;\r\n    case 'favicon':\r\n      return `favicon.${ext}`;\r\n    case 'hero':\r\n    case 'hero-1':\r\n      return `hero1.${ext}`;\r\n    case 'hero-2':\r\n      return `hero2.${ext}`;\r\n    case 'hero-3':\r\n      return `hero3.${ext}`;\r\n    case 'og-image':\r\n      return `og-image.${ext}`;\r\n    case 'twitter-image':\r\n      return `twitter-image.${ext}`;\r\n    default:\r\n      return `${type}.${ext}`;\r\n  }\r\n}\r\n\r\n/**\r\n * Generate tenant-specific upload URL\r\n * Format: /uploads/{tenantId}/{subdirectory}/{filename}\r\n */\r\nfunction getTenantUploadUrl(\r\n  tenantId: string,\r\n  type: AssetType,\r\n  filename: string\r\n): string {\r\n  const subdirectory = getAssetSubdirectory(type);\r\n  \r\n  // For avatars, uploads structure is: /uploads/avatars/{filename}\r\n  if (type === 'avatar') {\r\n    return `/uploads/avatars/${filename}`;\r\n  }\r\n  \r\n  // For other assets: /uploads/{tenantId}/{subdirectory}/{filename}\r\n  return `/uploads/${tenantId}/${subdirectory}/${filename}`;\r\n}\r\n\r\n/**\r\n * Generate vertical default URL\r\n * Format: /{vertical}/{subdirectory}/{filename}\r\n */\r\nfunction getVerticalDefaultUrl(\r\n  vertical: Vertical,\r\n  type: AssetType,\r\n  filename: string\r\n): string {\r\n  const subdirectory = getAssetSubdirectory(type);\r\n  return `/${vertical}/${subdirectory}/${filename}`;\r\n}\r\n\r\n/**\r\n * Get tenant asset URL with intelligent fallback logic\r\n * \r\n * Priority:\r\n * 1. Custom URL (if provided via database/config)\r\n * 2. Tenant-specific uploads (if tenantId provided and useTenantUploads=true)\r\n * 3. Vertical default assets (fallback)\r\n * \r\n * @example\r\n * // Get tenant logo (checks uploads, falls back to vertical)\r\n * getTenantAssetUrl({ tenantId: 'jps', vertical: 'mobile-detailing', type: 'logo' })\r\n * // => '/uploads/jps/icons/logo.webp' or '/{vertical}/icons/logo.webp'\r\n * \r\n * @example\r\n * // Get specific hero image\r\n * getTenantAssetUrl({ vertical: 'mobile-detailing', type: 'hero-2' })\r\n * // => '/mobile-detailing/hero/hero2.webp'\r\n * \r\n * @example\r\n * // Get avatar with custom filename\r\n * getTenantAssetUrl({ vertical: 'mobile-detailing', type: 'avatar', filename: 'user-123.jpg' })\r\n * // => '/uploads/avatars/user-123.jpg'\r\n * \r\n * @example\r\n * // Force vertical default (skip tenant check)\r\n * getTenantAssetUrl({ \r\n *   tenantId: 'jps', \r\n *   vertical: 'mobile-detailing', \r\n *   type: 'logo',\r\n *   forceVerticalDefault: true \r\n * })\r\n * // => '/mobile-detailing/icons/logo.webp'\r\n */\r\nexport function getTenantAssetUrl(options: AssetLocatorOptions): string {\r\n  const {\r\n    tenantId,\r\n    vertical,\r\n    type,\r\n    filename: customFilename,\r\n    extension,\r\n    useTenantUploads = true,\r\n    forceVerticalDefault = false,\r\n  } = options;\r\n  \r\n  // Generate filename\r\n  const filename = getAssetFilename(type, customFilename, extension);\r\n  \r\n  // If forcing vertical default, skip tenant uploads\r\n  if (forceVerticalDefault) {\r\n    return getVerticalDefaultUrl(vertical, type, filename);\r\n  }\r\n  \r\n  // Avatars always use /uploads/avatars/ (no tenant-specific directory)\r\n  if (type === 'avatar') {\r\n    return `/uploads/avatars/${filename}`;\r\n  }\r\n  \r\n  // If tenant ID provided and uploads enabled, use tenant-specific path\r\n  if (tenantId && useTenantUploads) {\r\n    return getTenantUploadUrl(tenantId, type, filename);\r\n  }\r\n  \r\n  // Fallback to vertical default\r\n  return getVerticalDefaultUrl(vertical, type, filename);\r\n}\r\n\r\n/**\r\n * Get multiple asset URLs at once (useful for responsive images, variants)\r\n * \r\n * @example\r\n * // Get all hero images\r\n * getTenantAssetUrls({ \r\n *   vertical: 'mobile-detailing', \r\n *   types: ['hero-1', 'hero-2', 'hero-3'] \r\n * })\r\n * // => ['/mobile-detailing/hero/hero1.webp', '/mobile-detailing/hero/hero2.webp', ...]\r\n */\r\nexport function getTenantAssetUrls(\r\n  options: Omit<AssetLocatorOptions, 'type'> & { types: AssetType[] }\r\n): string[] {\r\n  const { types, ...baseOptions } = options;\r\n  return types.map(type => getTenantAssetUrl({ ...baseOptions, type }));\r\n}\r\n\r\n/**\r\n * Get logo with automatic dark/light mode fallback\r\n * Returns an object with all logo variants\r\n */\r\nexport interface LogoUrls {\r\n  default: string;\r\n  dark?: string;\r\n  light?: string;\r\n}\r\n\r\nexport function getTenantLogoUrls(\r\n  options: Omit<AssetLocatorOptions, 'type'>\r\n): LogoUrls {\r\n  return {\r\n    default: getTenantAssetUrl({ ...options, type: 'logo' }),\r\n    dark: getTenantAssetUrl({ ...options, type: 'logo-dark' }),\r\n    light: getTenantAssetUrl({ ...options, type: 'logo-light' }),\r\n  };\r\n}\r\n\r\n/**\r\n * Check if a filename already includes an extension\r\n */\r\nexport function hasFileExtension(filename: string): boolean {\r\n  return /\\.(webp|png|jpg|jpeg|svg|gif|bmp|ico)$/i.test(filename);\r\n}\r\n\r\n/**\r\n * Ensure a URL has proper leading slash\r\n */\r\nexport function normalizeAssetUrl(url: string): string {\r\n  if (!url) return '';\r\n  if (url.startsWith('http://') || url.startsWith('https://')) return url;\r\n  return url.startsWith('/') ? url : `/${url}`;\r\n}\r\n\r\n","/**\r\n * Tenant Config Migration Utilities\r\n * Helpers for converting between old (simple) and new (centralized) tenant config formats\r\n */\r\n\r\nimport { TenantConfig, Vertical } from '@/shared/types';\r\n\r\nimport { getTenantAssetUrl } from './assetLocator';\r\n\r\n/**\r\n * Type guard to check if a string is a valid Vertical\r\n */\r\nfunction isValidVertical(value: unknown): value is Vertical {\r\n  return typeof value === 'string' && [\r\n    'mobile-detailing',\r\n    'pet-grooming',\r\n    'lawn-care',\r\n    'maid-service',\r\n    'hvac',\r\n    'plumbing',\r\n    'electrical'\r\n  ].includes(value);\r\n}\r\n\r\n/**\r\n * Old tenant config format (10 simple fields)\r\n * @deprecated Use TenantConfig from @/shared/types instead\r\n */\r\nexport interface LegacyTenantConfig {\r\n  business_name: string;\r\n  phone: string;\r\n  email: string;\r\n  logo_url: string;\r\n  facebook: string;\r\n  instagram: string;\r\n  tiktok: string;\r\n  youtube: string;\r\n  base_location: {\r\n    city: string;\r\n    state: string;\r\n  };\r\n}\r\n\r\n/**\r\n * Convert legacy tenant config to new centralized format\r\n * \r\n * @param legacy - Old format config\r\n * @param affiliateId - Affiliate/tenant ID (optional, will generate from business_name if not provided)\r\n * @returns New centralized TenantConfig\r\n */\r\nexport function legacyToTenantConfig(\r\n  // eslint-disable-next-line @typescript-eslint/no-deprecated -- This function intentionally works with legacy format for migration\r\n  legacy: LegacyTenantConfig,\r\n  affiliateId?: string | number\r\n): TenantConfig {\r\n  // Generate slug from business name if not provided\r\n  const slug = affiliateId \r\n    ? String(affiliateId) \r\n    : legacy.business_name\r\n        .toLowerCase()\r\n        .replace(/[^a-z0-9]+/g, '-')\r\n        .replace(/^-|-$/g, '');\r\n  \r\n  return {\r\n    // Core identity\r\n    id: affiliateId || slug,\r\n    slug: slug,\r\n    vertical: 'mobile-detailing',  // Default to mobile-detailing\r\n    status: 'active',\r\n    \r\n    // Branding\r\n    branding: {\r\n      businessName: legacy.business_name,\r\n      logo: {\r\n        url: legacy.logo_url\r\n      }\r\n    },\r\n    \r\n    // Contact\r\n    contact: {\r\n      phones: {\r\n        main: legacy.phone\r\n      },\r\n      emails: {\r\n        primary: legacy.email\r\n      },\r\n      socials: {\r\n        facebook: legacy.facebook,\r\n        instagram: legacy.instagram,\r\n        tiktok: legacy.tiktok,\r\n        youtube: legacy.youtube\r\n      },\r\n      baseLocation: {\r\n        city: legacy.base_location.city,\r\n        state: legacy.base_location.state\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Convert new centralized config to legacy format (for backward compatibility)\r\n * \r\n * @param config - New centralized TenantConfig\r\n * @returns Old format config\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-deprecated -- This function intentionally returns legacy format for backward compatibility\r\nexport function tenantConfigToLegacy(config: TenantConfig): LegacyTenantConfig {\r\n  return {\r\n    business_name: config.branding.businessName,\r\n    phone: config.contact.phones.main,\r\n    email: config.contact.emails.primary,\r\n    logo_url: config.branding.logo.url,\r\n    facebook: config.contact.socials.facebook,\r\n    instagram: config.contact.socials.instagram,\r\n    tiktok: config.contact.socials.tiktok,\r\n    youtube: config.contact.socials.youtube,\r\n    base_location: {\r\n      city: config.contact.baseLocation.city,\r\n      state: config.contact.baseLocation.state\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a minimal tenant config from affiliate API data\r\n * \r\n * @param affiliate - Affiliate data from API\r\n * @returns Minimal TenantConfig\r\n */\r\nexport function affiliateToTenantConfig(affiliate: {\r\n  id?: string | number;\r\n  slug?: string;\r\n  business_name: string;\r\n  business_phone: string;\r\n  business_email: string;\r\n  facebook_url?: string;\r\n  instagram_url?: string;\r\n  youtube_url?: string;\r\n  tiktok_url?: string;\r\n  service_areas?: Array<{ city: string; state: string; primary?: boolean }>;\r\n  industry?: string;\r\n  logo_url?: string;\r\n}): TenantConfig {\r\n  // Find primary service area or use first one\r\n  const primaryArea = affiliate.service_areas?.find(area => area.primary) || affiliate.service_areas?.[0];\r\n  \r\n  // Safely convert industry to Vertical type\r\n  const vertical: Vertical = isValidVertical(affiliate.industry) \r\n    ? affiliate.industry \r\n    : 'mobile-detailing';\r\n  \r\n  // Build logo URL - use affiliate's logo if provided, otherwise use industry default\r\n  // Only check tenant uploads if a custom logo_url exists in the database\r\n  const logoUrl = affiliate.logo_url || getTenantAssetUrl({\r\n    vertical: vertical,\r\n    type: 'logo',\r\n    forceVerticalDefault: true, // Always use industry default if no custom logo\r\n  });\r\n  \r\n  return {\r\n    // Core identity\r\n    id: affiliate.id || affiliate.slug || 'unknown',\r\n    slug: affiliate.slug || affiliate.business_name.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\r\n    vertical,\r\n    status: 'active',\r\n    \r\n    // Branding\r\n    branding: {\r\n      businessName: affiliate.business_name,\r\n      logo: {\r\n        url: logoUrl\r\n      }\r\n    },\r\n    \r\n    // Contact\r\n    contact: {\r\n      phones: {\r\n        main: affiliate.business_phone\r\n      },\r\n      emails: {\r\n        primary: affiliate.business_email\r\n      },\r\n      socials: {\r\n        facebook: affiliate.facebook_url || '',\r\n        instagram: affiliate.instagram_url || '',\r\n        tiktok: affiliate.tiktok_url || '',\r\n        youtube: affiliate.youtube_url || ''\r\n      },\r\n      baseLocation: {\r\n        city: primaryArea?.city || 'Unknown',\r\n        state: primaryArea?.state || 'Unknown'\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n","/**\r\n * Domain Resolution Utilities\r\n * \r\n * Single responsibility: Extract tenant slug from hostname/domain\r\n * Pure functions with no side effects\r\n */\r\n\r\n/**\r\n * Domain-to-tenant slug mappings for custom domains\r\n * In production, this could be loaded from a config file or API\r\n */\r\nconst CUSTOM_DOMAIN_MAPPINGS: Record<string, string> = {\r\n  'jpsdetailing.com': 'jps',\r\n  'example.com': 'example',\r\n  'thatsmartsite.com': 'main-site', // Main site for admin dashboard\r\n  'thatsmartsite-backend.onrender.com': 'main-site', // Render URL for admin dashboard\r\n  // Add more domain mappings as needed\r\n};\r\n\r\n/**\r\n * Reserved subdomains that should not be treated as tenant slugs\r\n */\r\nconst RESERVED_SUBDOMAINS = ['www', 'thatsmartsite', 'api', 'admin', 'staging', 'dev', 'main-site'];\r\n\r\n/**\r\n * Extract tenant slug from subdomain\r\n * Example: jps.thatsmartsite.com -> 'jps', testing-mobile-detail.lvh.me -> 'testing-mobile-detail'\r\n * \r\n * @param hostname - The hostname to parse\r\n * @returns Tenant slug or null if not a valid subdomain\r\n */\r\nfunction getTenantFromSubdomain(hostname: string): string | null {\r\n  if (!hostname.includes('.')) {\r\n    return null;\r\n  }\r\n  \r\n  const parts = hostname.split('.');\r\n  const subdomain = parts[0];\r\n  \r\n  // Check if subdomain is reserved\r\n  if (!subdomain || RESERVED_SUBDOMAINS.includes(subdomain)) {\r\n    return null;\r\n  }\r\n  \r\n  // Handle both .thatsmartsite.com and .lvh.me domains\r\n  const domain = parts.slice(-2).join('.');\r\n  if (domain === 'thatsmartsite.com' || domain === 'lvh.me') {\r\n    return subdomain;\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n/**\r\n * Extract tenant slug from custom domain mapping\r\n * Example: jpsdetailing.com -> 'jps'\r\n * \r\n * @param hostname - The hostname to look up\r\n * @returns Tenant slug or null if not in mapping\r\n */\r\nfunction getTenantFromCustomDomain(hostname: string): string | null {\r\n  return CUSTOM_DOMAIN_MAPPINGS[hostname] || null;\r\n}\r\n\r\n/**\r\n * Extract tenant slug from domain/subdomain in production\r\n * Tries subdomain approach first, then custom domain mapping\r\n * \r\n * @param hostname - Optional hostname to parse (defaults to window.location.hostname)\r\n * @param defaultSlug - Default slug to return if no tenant found (defaults to 'jps')\r\n * @returns Tenant slug\r\n * \r\n * @example\r\n * ```ts\r\n * // Subdomain: jps.thatsmartsite.com -> 'jps'\r\n * const slug = getTenantFromDomain();\r\n * \r\n * // Custom domain: jpsdetailing.com -> 'jps'\r\n * const slug = getTenantFromDomain('jpsdetailing.com');\r\n * \r\n * // No match: example.org -> 'default-tenant'\r\n * const slug = getTenantFromDomain('example.org', 'default-tenant');\r\n * ```\r\n */\r\nexport function getTenantFromDomain(\r\n  hostname: string = window.location.hostname,\r\n  defaultSlug: string = 'main-site'\r\n): string {\r\n  // Try subdomain approach first\r\n  const subdomainSlug = getTenantFromSubdomain(hostname);\r\n  if (subdomainSlug) {\r\n    return subdomainSlug;\r\n  }\r\n  \r\n  // Try custom domain mapping\r\n  const customDomainSlug = getTenantFromCustomDomain(hostname);\r\n  if (customDomainSlug) {\r\n    return customDomainSlug;\r\n  }\r\n  \r\n  // Return default fallback\r\n  return defaultSlug;\r\n}\r\n\r\n/**\r\n * Add a custom domain mapping at runtime\r\n * Useful for dynamic tenant configurations\r\n * \r\n * @param domain - Custom domain\r\n * @param slug - Tenant slug to map to\r\n * \r\n * @example\r\n * ```ts\r\n * addDomainMapping('newclient.com', 'newclient-slug');\r\n * ```\r\n */\r\nexport function addDomainMapping(domain: string, slug: string): void {\r\n  CUSTOM_DOMAIN_MAPPINGS[domain] = slug;\r\n}\r\n\r\n/**\r\n * Get all custom domain mappings\r\n * Useful for debugging or admin panels\r\n */\r\nexport function getDomainMappings(): Record<string, string> {\r\n  return { ...CUSTOM_DOMAIN_MAPPINGS };\r\n}\r\n\r\n/**\r\n * Check if a hostname is a reserved subdomain\r\n * \r\n * @param hostname - The hostname to check\r\n * @returns True if the subdomain is reserved\r\n */\r\nexport function isReservedSubdomain(hostname: string): boolean {\r\n  const parts = hostname.split('.');\r\n  const subdomain = parts[0];\r\n  \r\n  if (!subdomain) {\r\n    return false;\r\n  }\r\n  \r\n  return RESERVED_SUBDOMAINS.includes(subdomain);\r\n}\r\n\r\n","/**\r\n * Tenant Data Transformation Utilities\r\n * \r\n * Single responsibility: Transform flat API data into consumer-friendly formats\r\n * Pure functions with no side effects\r\n */\r\n\r\nimport type { Business } from '@/shared/types/tenant-business.types';\r\n\r\n/**\r\n * Social media links object\r\n */\r\nexport interface SocialMediaLinks {\r\n  facebook?: string;\r\n  instagram?: string;\r\n  youtube?: string;\r\n  tiktok?: string;\r\n  googleBusiness?: string;\r\n}\r\n\r\n/**\r\n * Social media platform data structure\r\n */\r\nexport interface SocialMediaPlatform {\r\n  url: string;\r\n  enabled: boolean;\r\n}\r\n\r\n/**\r\n * Transform business social media data into a clean object\r\n * Uses individual enabled/url columns\r\n * Only includes platforms that are enabled and have non-empty URLs\r\n * \r\n * @param business - Business data from API\r\n * @returns Social media links object with only enabled platforms that have URLs\r\n * \r\n * @example\r\n * ```ts\r\n * const socials = transformSocialMedia(businessData);\r\n * // { facebook: 'https://...', instagram: 'https://...' }\r\n * ```\r\n */\r\nexport function transformSocialMedia(business: Business): SocialMediaLinks {\r\n  const socials: SocialMediaLinks = {};\r\n  \r\n  // Use individual enabled/url columns\r\n  // Show if enabled (with or without URL)\r\n  if (business.facebook_enabled) {\r\n    socials.facebook = business.facebook_url?.trim() || '';\r\n  }\r\n  \r\n  if (business.instagram_enabled) {\r\n    socials.instagram = business.instagram_url?.trim() || '';\r\n  }\r\n  \r\n  if (business.youtube_enabled) {\r\n    socials.youtube = business.youtube_url?.trim() || '';\r\n  }\r\n  \r\n  if (business.tiktok_enabled) {\r\n    socials.tiktok = business.tiktok_url?.trim() || '';\r\n  }\r\n  \r\n  // Google Business Profile is still handled separately\r\n  if (business.gbp_url?.trim()) {\r\n    socials.googleBusiness = business.gbp_url;\r\n  }\r\n  \r\n  return socials;\r\n}\r\n\r\n/**\r\n * Get primary location from service areas\r\n * Returns the first primary area, or the first area if no primary is set\r\n * \r\n * @param business - Business data from API\r\n * @returns Location string in format \"City, State\" or empty string\r\n * \r\n * @example\r\n * ```ts\r\n * const location = getPrimaryLocation(businessData);\r\n * // \"Bullhead City, AZ\"\r\n * ```\r\n */\r\nexport function getPrimaryLocation(business: Business): string {\r\n  if (business.service_areas.length === 0) {\r\n    return '';\r\n  }\r\n  \r\n  // Find primary service area\r\n  const primaryArea = business.service_areas.find(area => area.primary);\r\n  const area = primaryArea ?? business.service_areas[0];\r\n  \r\n  // At this point, area is guaranteed to exist due to length check above\r\n  if (!area) {\r\n    return '';\r\n  }\r\n  \r\n  return `${area.city}, ${area.state}`;\r\n}\r\n\r\n/**\r\n * Get all primary service areas (can be multiple)\r\n * \r\n * @param business - Business data from API\r\n * @returns Array of primary service areas\r\n */\r\nexport function getPrimaryServiceAreas(business: Business) {\r\n  if (business.service_areas.length === 0) {\r\n    return [];\r\n  }\r\n  \r\n  const primaryAreas = business.service_areas.filter(area => area.primary);\r\n  \r\n  // If no primary areas are marked, return the first one\r\n  if (primaryAreas.length === 0) {\r\n    return [business.service_areas[0]];\r\n  }\r\n  \r\n  return primaryAreas;\r\n}\r\n\r\n/**\r\n * Format business phone for display\r\n * Handles various formats and ensures consistent output\r\n * \r\n * @param phone - Phone number string\r\n * @returns Formatted phone or empty string\r\n */\r\nexport function formatBusinessPhone(phone?: string): string {\r\n  if (!phone?.trim()) {\r\n    return '';\r\n  }\r\n  \r\n  // Remove all non-numeric characters\r\n  const digits = phone.replace(/\\D/g, '');\r\n  \r\n  // Format as (XXX) XXX-XXXX for 10-digit US numbers\r\n  if (digits.length === 10) {\r\n    return `(${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6)}`;\r\n  }\r\n  \r\n  // Format as +X (XXX) XXX-XXXX for 11-digit numbers\r\n  if (digits.length === 11) {\r\n    return `+${digits[0]} (${digits.slice(1, 4)}) ${digits.slice(4, 7)}-${digits.slice(7)}`;\r\n  }\r\n  \r\n  // Return original if format is unexpected\r\n  return phone;\r\n}\r\n\r\n/**\r\n * Check if business has any social media links\r\n * \r\n * @param business - Business data from API\r\n * @returns True if at least one social media link exists\r\n */\r\nexport function hasSocialMedia(business: Business): boolean {\r\n  return !!(\r\n    business.facebook_enabled ||\r\n    business.instagram_enabled ||\r\n    business.youtube_enabled ||\r\n    business.tiktok_enabled ||\r\n    business.gbp_url?.trim()\r\n  );\r\n}\r\n\r\n/**\r\n * Get business contact email with fallback\r\n * \r\n * @param business - Business data from API\r\n * @param fallback - Fallback email if none exists\r\n * @returns Email address\r\n */\r\nexport function getBusinessEmail(business: Business, fallback: string = 'hello@thatsmartsite.com'): string {\r\n  return business.business_email?.trim() || fallback;\r\n}\r\n\r\n","import React, { createContext, useCallback, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nimport { Button } from '../buttons/Button';\r\n\r\nexport interface ToastOptions {\r\n  id?: string;\r\n  title?: string;\r\n  description?: string;\r\n  variant?: 'default' | 'success' | 'error' | 'warning' | 'info';\r\n  duration?: number;\r\n  action?: {\r\n    label: string;\r\n    onClick: () => void;\r\n  };\r\n}\r\n\r\nexport interface ToastProps extends ToastOptions {\r\n  id: string;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const Toast: React.FC<ToastProps> = ({\r\n  title,\r\n  description,\r\n  variant = 'default',\r\n  action,\r\n  onClose,\r\n}) => {\r\n  const variants = {\r\n    default: 'bg-background border-border text-foreground',\r\n    success: 'bg-green-50 border-green-200 text-green-900 dark:bg-green-900 dark:border-green-700 dark:text-green-100',\r\n    error: 'bg-red-50 border-red-200 text-red-900 dark:bg-red-900 dark:border-red-700 dark:text-red-100',\r\n    warning: 'bg-yellow-50 border-yellow-200 text-yellow-900 dark:bg-yellow-900 dark:border-yellow-700 dark:text-yellow-100',\r\n    info: 'bg-blue-50 border-blue-200 text-blue-900 dark:bg-blue-900 dark:border-blue-700 dark:text-blue-100',\r\n  };\r\n\r\n  const icons = {\r\n    default: null,\r\n    success: (\r\n      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    ),\r\n    error: (\r\n      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    ),\r\n    warning: (\r\n      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.725-1.36 3.49 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    ),\r\n    info: (\r\n      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'pointer-events-auto w-full max-w-sm overflow-hidden rounded-lg border shadow-lg',\r\n        variants[variant]\r\n      )}\r\n    >\r\n      <div className=\"p-4\">\r\n        <div className=\"flex items-start\">\r\n          <div className=\"flex-shrink-0\">\r\n            {icons[variant]}\r\n          </div>\r\n          <div className=\"ml-3 w-0 flex-1\">\r\n            {title && (\r\n              <p className=\"text-sm font-medium\">{title}</p>\r\n            )}\r\n            {description && (\r\n              <p className=\"mt-1 text-sm opacity-90\">{description}</p>\r\n            )}\r\n            {action && (\r\n              <div className=\"mt-3\">\r\n                <Button\r\n                  onClick={action.onClick}\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  className=\"text-sm font-medium underline hover:no-underline p-0 h-auto\"\r\n                >\r\n                  {action.label}\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"ml-4 flex-shrink-0 flex\">\r\n            <Button\r\n              onClick={onClose}\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              className=\"inline-flex rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 p-1\"\r\n            >\r\n              <span className=\"sr-only\">Close</span>\r\n              <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface ToastContextType {\r\n  toasts: ToastProps[];\r\n  toast: (options: ToastOptions) => string;\r\n  dismiss: (id: string) => void;\r\n  dismissAll: () => void;\r\n}\r\n\r\nexport const ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n\r\nexport const ToastProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastProps[]>([]);\r\n\r\n  const toast = useCallback((options: ToastOptions) => {\r\n    const id = options.id || Math.random().toString(36).substring(2, 11);\r\n    const duration = options.duration || 5000;\r\n\r\n    const newToast: ToastProps = {\r\n      ...options,\r\n      id,\r\n      onClose: () => { dismiss(id); return; },\r\n    };\r\n\r\n    setToasts(prev => [...prev, newToast]);\r\n\r\n    if (duration > 0) {\r\n      setTimeout(() => {\r\n        dismiss(id);\r\n      }, duration);\r\n    }\r\n\r\n    return id;\r\n  }, [dismiss]);\r\n\r\n  const dismiss = useCallback((id: string) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  }, []);\r\n\r\n  const dismissAll = useCallback(() => {\r\n    setToasts([]);\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ toasts, toast, dismiss, dismissAll }}>\r\n      {children}\r\n      <ToastContainer toasts={toasts} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nconst ToastContainer: React.FC<{ toasts: ToastProps[] }> = ({ toasts }) => {\r\n  if (toasts.length === 0) return null;\r\n\r\n  return createPortal(\r\n    <div className=\"pointer-events-none fixed inset-0 z-50 flex items-end px-4 py-6 sm:items-start sm:p-6\">\r\n      <div className=\"flex w-full flex-col items-center space-y-4 sm:items-end\">\r\n        {toasts.map(toast => (\r\n          <Toast key={toast.id} {...toast} />\r\n        ))}\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\n","// API configuration based on environment\r\nconst getApiBaseUrl = () => {\r\n  // In production, use relative URLs (same domain)\r\n  if (import.meta.env.PROD) {\r\n    return '';\r\n  }\r\n  \r\n  // In development, use localhost\r\n  return 'http://localhost:3001';\r\n};\r\n\r\nexport const API_BASE_URL = getApiBaseUrl();\r\n\r\nexport const API_ENDPOINTS = {\r\n  AUTH: {\r\n    LOGIN: `${API_BASE_URL}/api/auth/login`,\r\n    ME: `${API_BASE_URL}/api/auth/me`,\r\n    LOGOUT: `${API_BASE_URL}/api/auth/logout`,\r\n  },\r\n  HEALTH: `${API_BASE_URL}/api/health`,\r\n} as const;\r\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { API_ENDPOINTS } from '../config/api';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  name: string;\r\n  is_admin: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface LoginCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface AuthResponse {\r\n  success: boolean;\r\n  user: User;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  expiresIn: string;\r\n  refreshExpiresIn: string;\r\n}\r\n\r\nexport interface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (credentials: LoginCredentials) => Promise<boolean>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  isAdmin: boolean;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Check if user is logged in on mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      // Verify token with backend\r\n      fetch(API_ENDPOINTS.AUTH.ME, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          setUser(data);\r\n        } else {\r\n          localStorage.removeItem('accessToken');\r\n          localStorage.removeItem('refreshToken');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginCredentials): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(API_ENDPOINTS.AUTH.LOGIN, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n\r\n      const data: AuthResponse = await response.json();\r\n\r\n      if (data.success) {\r\n        // Store tokens\r\n        localStorage.setItem('accessToken', data.accessToken);\r\n        localStorage.setItem('refreshToken', data.refreshToken);\r\n        \r\n        // Set user\r\n        setUser(data.user);\r\n        \r\n        return true;\r\n      } else {\r\n        setError(data.error || 'Login failed');\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      setError('Network error. Please try again.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    setUser(null);\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.is_admin || false,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};","/**\r\n * Industry Configuration API\r\n * \r\n * Single responsibility: Load industry-specific site configurations\r\n * All industries now use modular config approach via index.ts loaders\r\n */\r\n\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\n\r\n/**\r\n * Fetch site configuration for a given industry\r\n * Uses modular config loaders for all industries\r\n * \r\n * @param industry - Industry identifier (e.g., 'mobile-detailing', 'pet-grooming')\r\n * @returns MainSiteConfig object or null if not found\r\n * \r\n * @example\r\n * ```ts\r\n * const config = await fetchIndustryConfig('mobile-detailing');\r\n * console.log(config.hero.h1);\r\n * ```\r\n */\r\nexport async function fetchIndustryConfig(industry: string): Promise<MainSiteConfig | null> {\r\n  try {\r\n    // All industries now use modular config files with index.ts loaders\r\n    switch (industry) {\r\n      case 'mobile-detailing': {\r\n        const { loadMobileDetailingConfig } = await import('@/data/mobile-detailing');\r\n        return loadMobileDetailingConfig();\r\n      }\r\n      \r\n      case 'pet-grooming': {\r\n        const { loadPetGroomingConfig } = await import('@/data/pet-grooming');\r\n        return await loadPetGroomingConfig();\r\n      }\r\n      \r\n      case 'maid-service': {\r\n        const { loadMaidServiceConfig } = await import('@/data/maid-service');\r\n        return await loadMaidServiceConfig();\r\n      }\r\n      \r\n      case 'lawncare': {\r\n        const { loadLawncareConfig } = await import('@/data/lawncare');\r\n        return await loadLawncareConfig();\r\n      }\r\n      \r\n      default:\r\n        console.warn(`Unknown industry: ${industry}`);\r\n        return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(`Failed to load config for industry: ${industry}`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\n","/**\r\n * API utilities for tenant/business data with industry support\r\n * \r\n * Single responsibility: HTTP calls to tenant endpoints\r\n */\r\n\r\nimport { env } from '../env';\r\nimport type { Vertical } from '../types/tenant.types';\r\nimport type { Business, BusinessResponse } from '../types/tenant-business.types';\r\n\r\nconst API_BASE_URL = env.VITE_API_URL || ''; // Empty string uses relative URLs (Vite proxy)\r\n\r\n// Re-export types for convenience\r\nexport type { Business, BusinessResponse } from '../types/tenant-business.types';\r\n\r\nexport interface Tenant {\r\n  id: number;\r\n  slug: string;\r\n  business_name: string;\r\n  owner: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  user_id?: number;\r\n  application_status: 'pending' | 'approved' | 'rejected';\r\n  business_start_date: string;\r\n  business_phone: string;\r\n  personal_phone?: string;\r\n  business_email: string;\r\n  personal_email?: string;\r\n  twilio_phone: string;\r\n  sms_phone: string;\r\n  website: string;\r\n  gbp_url?: string;\r\n  facebook_url?: string;\r\n  instagram_url?: string;\r\n  youtube_url?: string;\r\n  tiktok_url?: string;\r\n  source: string;\r\n  notes?: string;\r\n  service_areas: ServiceArea[];\r\n  application_date: string;\r\n  approved_date?: string;\r\n  last_activity: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  google_maps_url?: string;\r\n  industry: Vertical;\r\n  logo_url?: string;\r\n}\r\n\r\nexport interface ServiceArea {\r\n  zip?: string;\r\n  city: string;\r\n  state: string;\r\n  primary?: boolean;\r\n  minimum?: number;\r\n  multiplier?: number;\r\n}\r\n\r\nexport interface TenantApiResponse {\r\n  success: boolean;\r\n  data?: Tenant;\r\n  error?: string;\r\n}\r\n\r\nexport interface TenantsListResponse {\r\n  success: boolean;\r\n  data?: Tenant[];\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * Fetch tenant data by slug with industry context\r\n * Legacy format - returns Tenant type\r\n */\r\nexport async function fetchTenantBySlug(slug: string): Promise<TenantApiResponse> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/api/tenants/${slug}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch tenant: ${response.status}`);\r\n    }\r\n    \r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- response.json() returns any\r\n    const data: Tenant = await response.json();\r\n    return { success: true, data };\r\n  } catch (error) {\r\n    console.error('Error fetching tenant:', error);\r\n    return { \r\n      success: false, \r\n      error: error instanceof Error ? error.message : 'Unknown error' \r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch business data by slug\r\n * Used by DataContext - returns Business type with BusinessResponse wrapper\r\n */\r\nexport async function fetchBusinessBySlug(slug: string): Promise<Business> {\r\n  const response = await fetch(`${API_BASE_URL}/api/tenants/${slug}`);\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch business data');\r\n  }\r\n  \r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- response.json() returns any\r\n  const result: BusinessResponse = await response.json();\r\n  \r\n  if (!result.success) {\r\n    throw new Error('API returned error');\r\n  }\r\n  \r\n  return result.data;\r\n}\r\n\r\n/**\r\n * Fetch all tenants by industry\r\n */\r\nexport async function fetchTenantsByIndustry(industry: Vertical): Promise<TenantsListResponse> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/api/tenants?industry=${industry}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch tenants: ${response.status}`);\r\n    }\r\n    \r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- response.json() returns any\r\n    const data: Tenant[] = await response.json();\r\n    return { success: true, data };\r\n  } catch (error) {\r\n    console.error('Error fetching tenants by industry:', error);\r\n    return { \r\n      success: false, \r\n      error: error instanceof Error ? error.message : 'Unknown error' \r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Get industry-specific site configuration path\r\n */\r\nexport function getIndustrySiteConfigPath(industry: Vertical): string {\r\n  return `/src/data/${industry}/site.json`;\r\n}\r\n\r\n/**\r\n * Get industry-specific public assets path\r\n */\r\nexport function getIndustryAssetsPath(industry: Vertical): string {\r\n  return `/${industry}/images`;\r\n}\r\n\r\n/**\r\n * Get industry-specific data path\r\n */\r\nexport function getIndustryDataPath(industry: Vertical): string {\r\n  return `/${industry}/data`;\r\n}\r\n\r\n","/**\r\n * Tenant Data Hook\r\n * \r\n * Single responsibility: Fetch and cache tenant/business data\r\n * Wraps React Query with proper query keys and options\r\n */\r\n\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { fetchBusinessBySlug } from '@/shared/api/tenantApi';\r\nimport type { Business } from '@/shared/types/tenant-business.types';\r\n\r\ninterface UseTenantDataOptions {\r\n  /**\r\n   * Tenant slug to fetch data for\r\n   */\r\n  slug: string | undefined;\r\n  \r\n  /**\r\n   * Enable/disable the query\r\n   * @default true if slug is provided\r\n   */\r\n  enabled?: boolean;\r\n  \r\n  /**\r\n   * Stale time in milliseconds\r\n   * @default 10 minutes\r\n   */\r\n  staleTime?: number;\r\n  \r\n  /**\r\n   * Number of retry attempts\r\n   * @default 2\r\n   */\r\n  retry?: number;\r\n}\r\n\r\ninterface UseTenantDataReturn {\r\n  /**\r\n   * Business data from API\r\n   */\r\n  data: Business | undefined;\r\n  \r\n  /**\r\n   * Loading state\r\n   */\r\n  isLoading: boolean;\r\n  \r\n  /**\r\n   * Error state\r\n   */\r\n  error: Error | null;\r\n  \r\n  /**\r\n   * Refetch function\r\n   */\r\n  refetch: () => void;\r\n}\r\n\r\n/**\r\n * Fetch tenant/business data by slug with React Query caching\r\n * \r\n * @param options - Query options\r\n * @returns Business data with loading/error states\r\n * \r\n * @example\r\n * ```tsx\r\n * function TenantInfo() {\r\n *   const { data: business, isLoading } = useTenantData({ slug: 'jps' });\r\n *   \r\n *   if (isLoading) return <Spinner />;\r\n *   \r\n *   return <div>{business?.business_name}</div>;\r\n * }\r\n * ```\r\n */\r\nexport function useTenantData(options: UseTenantDataOptions): UseTenantDataReturn {\r\n  const {\r\n    slug,\r\n    enabled = true,\r\n    staleTime = 10 * 60 * 1000, // 10 minutes\r\n    retry = 2\r\n  } = options;\r\n  \r\n  const { data, isLoading, error, refetch } = useQuery({\r\n    queryKey: ['shared','business', slug],\r\n    queryFn: () => {\r\n      if (!slug) {\r\n        throw new Error('Slug is required to fetch business data');\r\n      }\r\n      return fetchBusinessBySlug(slug);\r\n    },\r\n    enabled: enabled && !!slug,\r\n    staleTime,\r\n    retry\r\n  });\r\n  \r\n  return {\r\n    data,\r\n    isLoading,\r\n    error: error || null,\r\n    refetch: () => {\r\n      void refetch();\r\n    }\r\n  };\r\n}\r\n\r\n","/**\r\n * Tenant Slug Hook\r\n * \r\n * Single responsibility: Resolve tenant slug from URL params or domain\r\n * Encapsulates routing logic and domain resolution\r\n */\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { env } from '@/shared/env';\r\nimport { getTenantFromDomain } from '@/shared/utils/domainUtils';\r\n\r\n/**\r\n * Get tenant slug from URL params (dev) or domain (production)\r\n * \r\n * @returns Tenant slug string or undefined\r\n * \r\n * @example\r\n * ```tsx\r\n * function MyComponent() {\r\n *   const slug = useTenantSlug();\r\n *   // In dev: slug from URL params (/jps -> 'jps')\r\n *   // In prod: slug from domain (jps.example.com -> 'jps')\r\n * }\r\n * ```\r\n */\r\nexport function useTenantSlug(): string | undefined {\r\n  const params = useParams();\r\n  \r\n  // First, try to get tenant from domain/subdomain (works in both dev and prod)\r\n  const domainSlug = getTenantFromDomain();\r\n  \r\n  \r\n  if (domainSlug && domainSlug !== 'main-site') {\r\n    return domainSlug;\r\n  }\r\n  \r\n  // Fallback: In development, get tenant from URL slug parameter\r\n  // Check multiple param names for flexibility across different routes\r\n  if (env.DEV) {\r\n    return params['businessSlug'] || params['tenantSlug'] || params['slug'];\r\n  }\r\n  \r\n  // No tenant found\r\n  return undefined;\r\n}\r\n\r\n","/**\r\n * Data Context\r\n * \r\n * Central data provider for tenant-based applications\r\n * \r\n * Single responsibility: Orchestrate and provide tenant + industry config data\r\n * Business logic is delegated to hooks, API clients, and utility functions\r\n */\r\n\r\nimport React, { createContext } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { fetchIndustryConfig } from '@/shared/api/industryConfigApi';\r\nimport { useTenantData } from '@/shared/hooks/useTenantData';\r\nimport { useTenantSlug } from '@/shared/hooks/useTenantSlug';\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\nimport {\r\n  getBusinessEmail,\r\n  getPrimaryLocation,\r\n  type SocialMediaLinks,\r\n  transformSocialMedia,\r\n} from '@/shared/utils/tenantDataTransform';\r\n\r\n/**\r\n * Data context type definition\r\n */\r\nexport interface DataContextType {\r\n  // Tenant data (from API)\r\n  businessName: string;\r\n  phone: string;\r\n  email: string;\r\n  owner: string;\r\n  location: string;\r\n  industry: string;\r\n  serviceAreas: Array<{\r\n    city: string;\r\n    state: string;\r\n    zip?: string;\r\n    primary?: boolean;\r\n    minimum?: number;\r\n    multiplier?: number;\r\n  }>;\r\n  socialMedia: SocialMediaLinks;\r\n  \r\n  // Industry config (from data files)\r\n  siteConfig: MainSiteConfig | null;\r\n  \r\n  // Status flags\r\n  isLoading: boolean;\r\n  isTenant: boolean;\r\n  isPreview?: boolean;\r\n}\r\n\r\nexport const DataContext = createContext<DataContextType | null>(null);\r\n\r\ninterface DataProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Data Provider Component\r\n * \r\n * Provides centralized access to tenant and industry configuration data\r\n * Uses composition of hooks and utilities for clean separation of concerns\r\n */\r\nexport const DataProvider: React.FC<DataProviderProps> = ({ children }) => {\r\n  // Step 1: Get tenant slug from URL or domain\r\n  const slug = useTenantSlug();\r\n  \r\n  // Step 2: Fetch tenant/business data\r\n  const { data: businessData, isLoading: isLoadingBusiness } = useTenantData({ \r\n    slug: slug \r\n  });\r\n  \r\n  // Step 3: Fetch industry config based on tenant's industry\r\n  const industry = businessData?.industry || 'mobile-detailing';\r\n  const { data: siteConfig, isLoading: isLoadingSiteConfig } = useQuery({\r\n    queryKey: ['shared','siteConfig', industry],\r\n    queryFn: () => fetchIndustryConfig(industry),\r\n    enabled: !!businessData?.industry,\r\n    staleTime: 10 * 60 * 1000, // 10 minutes\r\n    retry: 2\r\n  });\r\n  \r\n  // Step 4: Compute derived state\r\n  const isLoading = isLoadingBusiness || isLoadingSiteConfig;\r\n  \r\n  // Step 5: Transform and assemble context value\r\n  const transformedSocialMedia = businessData ? transformSocialMedia(businessData) : {};\r\n  \r\n  const contextValue: DataContextType = {\r\n    // Tenant data with fallbacks\r\n    businessName: businessData?.business_name || 'Loading...',\r\n    phone: businessData?.business_phone || '',\r\n    email: businessData ? getBusinessEmail(businessData) : 'service@thatsmartsite.com',\r\n    owner: businessData?.owner || '',\r\n    location: businessData ? getPrimaryLocation(businessData) : '',\r\n    industry: businessData?.industry || 'mobile-detailing',\r\n    serviceAreas: businessData?.service_areas || [],\r\n    \r\n    // Social media (filtered and transformed)\r\n    socialMedia: transformedSocialMedia,\r\n    \r\n    // Industry config\r\n    siteConfig: siteConfig || null,\r\n    \r\n    // Status\r\n    isLoading,\r\n    isTenant: true, // Always a tenant page\r\n    isPreview: false // Regular tenant page, not preview\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={contextValue}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\n// Note: useData and useDataOptional hooks have been moved to @/shared/hooks/useData\r\n// This keeps this file focused on the component provider (for Fast Refresh compatibility)\r\n","/**\r\n * Data Context Hooks\r\n * \r\n * Hooks for accessing DataContext from anywhere in the app\r\n */\r\n\r\nimport { useContext } from 'react';\r\n\r\nimport { DataContext, type DataContextType } from '@/shared/contexts/DataContext';\r\n\r\n/**\r\n * Hook to access tenant/business data from DataContext\r\n * Throws error if used outside DataProvider\r\n * \r\n * @example\r\n * ```tsx\r\n * function MyComponent() {\r\n *   const { businessName, industry, slug } = useData();\r\n *   return <div>{businessName}</div>;\r\n * }\r\n * ```\r\n */\r\nexport const useData = (): DataContextType => {\r\n  const context = useContext(DataContext);\r\n  if (!context) {\r\n    throw new Error('useData must be used within a DataProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Optional version of useData that returns null if not in a provider\r\n * Useful for components that may or may not be wrapped in DataProvider\r\n * \r\n * @example\r\n * ```tsx\r\n * function OptionalComponent() {\r\n *   const data = useDataOptional();\r\n *   if (!data) return <div>No tenant data available</div>;\r\n *   return <div>{data.businessName}</div>;\r\n * }\r\n * ```\r\n */\r\nexport const useDataOptional = (): DataContextType | null => {\r\n  const context = useContext(DataContext);\r\n  return context;\r\n};\r\n\r\n","import { useEffect } from 'react';\r\n\r\nimport { useTenantConfigLoader } from '@/shared/hooks';\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\nimport type { Vertical } from '@/shared/types';\r\nimport { getTenantAssetUrl } from '@/shared/utils';\r\n\r\nexport interface UseBrowserTabOptions {\r\n  /** Custom page title (overrides default business name) */\r\n  title?: string;\r\n  /** Custom favicon URL (overrides tenant logo) */\r\n  favicon?: string;\r\n  /** Whether to use business name as title (default: true) */\r\n  useBusinessName?: boolean;\r\n  /** Fallback title if no business name available */\r\n  fallbackTitle?: string;\r\n}\r\n\r\n/**\r\n * Hook to manage browser tab title and favicon\r\n * \r\n * Automatically sets:\r\n * - Browser tab title (uses business name by default)\r\n * - Favicon (uses tenant logo by default)\r\n * - Apple touch icon\r\n * \r\n * @example\r\n * // Use defaults (business name + tenant logo)\r\n * useBrowserTab();\r\n * \r\n * @example\r\n * // Custom title\r\n * useBrowserTab({ title: 'Contact Us - My Business' });\r\n * \r\n * @example\r\n * // Custom favicon\r\n * useBrowserTab({ favicon: '/custom-icon.png' });\r\n * \r\n * @example\r\n * // Preview mode with custom title\r\n * useBrowserTab({ \r\n *   title: `${businessName} - Preview`,\r\n *   useBusinessName: false \r\n * });\r\n */\r\nexport const useBrowserTab = (options: UseBrowserTabOptions = {}) => {\r\n  const {\r\n    title: customTitle,\r\n    favicon: customFavicon,\r\n    useBusinessName = true,\r\n    fallbackTitle = 'That Smart Site',\r\n  } = options;\r\n\r\n  // Try to get tenant context (may not exist for platform pages)\r\n  // useDataOptional returns null instead of throwing if not in context\r\n  const data = useDataOptional();\r\n  const businessName = data?.businessName || '';\r\n  const industry = data?.industry || '';\r\n  const isDataLoading = data?.isLoading || false;\r\n\r\n  // Tenant config hook - safe to call, will return defaults if no tenant\r\n  const { data: tenantConfig, isLoading: isConfigLoading } = useTenantConfigLoader();\r\n  const logoUrl = tenantConfig?.branding.logo.url;\r\n\r\n  // Determine the page title\r\n  const pageTitle = customTitle || (\r\n    useBusinessName && businessName && businessName !== 'Loading...' && businessName !== 'undefined'\r\n      ? businessName\r\n      : fallbackTitle\r\n  );\r\n\r\n  // Determine the favicon URL with proper fallbacks\r\n  const faviconUrl = customFavicon \r\n    || logoUrl \r\n    || (industry ? getTenantAssetUrl({ vertical: industry as Vertical, type: 'logo' }) : null)\r\n    || '/shared/icons/logo-white.svg'; // Platform logo fallback (white for clean favicon)\r\n\r\n  // Determine the manifest URL - use tenant-specific manifest if we're in a tenant context\r\n  const manifestUrl = data?.slug ? `/${data.slug}/manifest.json` : '/manifest.webmanifest';\r\n\r\n  useEffect(() => {\r\n    // Don't update if data is still loading (unless custom values provided)\r\n    if (!customTitle && !customFavicon && (isDataLoading || isConfigLoading)) {\r\n      return;\r\n    }\r\n\r\n    // Update page title\r\n    updateTitle(pageTitle);\r\n\r\n    // Update favicon\r\n    if (faviconUrl) {\r\n      updateFavicon(faviconUrl);\r\n    }\r\n\r\n    // Update manifest URL\r\n    updateManifest(manifestUrl);\r\n  }, [pageTitle, faviconUrl, manifestUrl, customTitle, customFavicon, isDataLoading, isConfigLoading]);\r\n\r\n  return {\r\n    title: pageTitle,\r\n    favicon: faviconUrl,\r\n    manifest: manifestUrl,\r\n  };\r\n};\r\n\r\n/**\r\n * Update the browser tab title\r\n */\r\nfunction updateTitle(title: string): void {\r\n  // Update <title> element text content\r\n  const titleElement = document.getElementById('meta-title');\r\n  if (titleElement) {\r\n    titleElement.textContent = title;\r\n  }\r\n\r\n  // Update document.title for better compatibility\r\n  document.title = title;\r\n}\r\n\r\n/**\r\n * Update the favicon\r\n */\r\nfunction updateFavicon(url: string): void {\r\n  // Update main favicon\r\n  const faviconElement = document.getElementById('favicon') as HTMLLinkElement | null;\r\n  if (faviconElement) {\r\n    faviconElement.href = url;\r\n\r\n    // Update the MIME type based on file extension\r\n    if (url.endsWith('.svg')) {\r\n      faviconElement.type = 'image/svg+xml';\r\n    } else if (url.endsWith('.png')) {\r\n      faviconElement.type = 'image/png';\r\n    } else if (url.endsWith('.ico')) {\r\n      faviconElement.type = 'image/x-icon';\r\n    } else if (url.endsWith('.webp')) {\r\n      faviconElement.type = 'image/webp';\r\n    }\r\n  }\r\n\r\n  // Update Apple touch icon\r\n  const appleTouchIcon = document.getElementById('apple-touch-icon') as HTMLLinkElement | null;\r\n  if (appleTouchIcon) {\r\n    appleTouchIcon.href = url;\r\n  }\r\n}\r\n\r\n/**\r\n * Update the PWA manifest URL\r\n */\r\nfunction updateManifest(url: string): void {\r\n  // Find existing manifest link or create new one\r\n  let manifestElement = document.querySelector('link[rel=\"manifest\"]');\r\n  \r\n  if (!manifestElement) {\r\n    // Create new manifest link if none exists\r\n    manifestElement = document.createElement('link');\r\n    manifestElement.rel = 'manifest';\r\n    document.head.appendChild(manifestElement);\r\n  }\r\n  \r\n  // Update the manifest URL\r\n  manifestElement.href = url;\r\n}\r\n\r\n/**\r\n * Utility function to manually set browser tab title\r\n * Use this for one-off updates outside of React components\r\n */\r\nexport const setBrowserTitle = (title: string): void => {\r\n  updateTitle(title);\r\n};\r\n\r\n/**\r\n * Utility function to manually set favicon\r\n * Use this for one-off updates outside of React components\r\n */\r\nexport const setFavicon = (url: string): void => {\r\n  updateFavicon(url);\r\n};\r\n\r\n/**\r\n * Utility function to set both title and favicon\r\n * Use this for one-off updates outside of React components\r\n */\r\nexport const setBrowserTab = (title: string, favicon?: string): void => {\r\n  updateTitle(title);\r\n  if (favicon) {\r\n    updateFavicon(favicon);\r\n  }\r\n};\r\n\r\n","import { useData } from '@/features/header/contexts/DataProvider';\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\n\r\n/**\r\n * Hook to access the correct site.json based on the tenant's industry\r\n * Site data is now centrally loaded and cached in DataProvider\r\n * \r\n * This hook provides a convenient interface for components that need site config\r\n */\r\nexport const useIndustrySiteData = (): {\r\n  siteData: MainSiteConfig | null;\r\n  industry: string;\r\n  isLoading: boolean;\r\n} => {\r\n  const { industry, siteConfig, isLoading } = useData();\r\n\r\n  return {\r\n    siteData: siteConfig,\r\n    industry,\r\n    isLoading\r\n  };\r\n};\r\n","import { useEffect } from 'react';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport { useIndustrySiteData } from '@/shared/hooks/useIndustrySiteData';\r\nimport { getAbsoluteUrl } from '@/shared/utils';\r\n\r\nexport interface UseMetaTagsOptions {\r\n  /** Custom page title (for OG/Twitter tags) */\r\n  title?: string;\r\n  /** Custom meta description */\r\n  description?: string;\r\n  /** Custom meta keywords */\r\n  keywords?: string[];\r\n  /** Custom Open Graph image */\r\n  ogImage?: string;\r\n  /** Custom Twitter image (defaults to ogImage if not provided) */\r\n  twitterImage?: string;\r\n  /** Custom canonical path */\r\n  canonicalPath?: string;\r\n}\r\n\r\n/**\r\n * Hook to manage SEO meta tags\r\n * \r\n * Automatically sets:\r\n * - Meta description\r\n * - Meta keywords\r\n * - Open Graph tags (title, description, image)\r\n * - Twitter Card tags (title, description, image)\r\n * - Canonical URL\r\n * \r\n * @example\r\n * // Use defaults from site config\r\n * useMetaTags();\r\n * \r\n * @example\r\n * // Custom description\r\n * useMetaTags({ \r\n *   description: 'Custom page description for this specific page' \r\n * });\r\n * \r\n * @example\r\n * // Full customization for a specific page\r\n * useMetaTags({\r\n *   title: 'Contact Us - Business Name',\r\n *   description: 'Get in touch with our team',\r\n *   ogImage: '/images/contact-hero.jpg',\r\n *   canonicalPath: '/contact'\r\n * });\r\n */\r\nexport const useMetaTags = (options: UseMetaTagsOptions = {}) => {\r\n  const { siteData } = useIndustrySiteData();\r\n  const { businessName } = useData();\r\n\r\n  const {\r\n    title: customTitle,\r\n    description: customDescription,\r\n    keywords: customKeywords,\r\n    ogImage: customOgImage,\r\n    twitterImage: customTwitterImage,\r\n    canonicalPath: customCanonicalPath,\r\n  } = options;\r\n\r\n  useEffect(() => {\r\n    if (!siteData) return;\r\n\r\n    // Determine the page title (for OG/Twitter, not browser tab)\r\n    const pageTitle = customTitle || businessName || siteData.seo.title;\r\n    const description = customDescription || siteData.seo.description;\r\n    const keywords = customKeywords || siteData.seo.keywords;\r\n    const ogImage = customOgImage || siteData.seo.ogImage;\r\n    const twitterImage = customTwitterImage || siteData.seo.twitterImage || ogImage;\r\n    const canonicalPath = customCanonicalPath || siteData.seo.canonicalPath;\r\n\r\n    // Update meta description\r\n    updateMetaTag('meta-desc', 'content', description);\r\n\r\n    // Update meta keywords\r\n    if (keywords && keywords.length > 0) {\r\n      updateMetaTag('meta-keywords', 'content', keywords.join(', '));\r\n    }\r\n\r\n    // Update Open Graph tags\r\n    updateMetaTag('og-title', 'content', pageTitle);\r\n    updateMetaTag('og-desc', 'content', description);\r\n    \r\n    if (ogImage) {\r\n      const absoluteImageUrl = getAbsoluteUrl(ogImage);\r\n      updateMetaTag('og-image', 'content', absoluteImageUrl);\r\n    }\r\n\r\n    // Update Twitter Card tags\r\n    updateMetaTag('tw-title', 'content', pageTitle);\r\n    updateMetaTag('tw-desc', 'content', description);\r\n    \r\n    if (twitterImage) {\r\n      const absoluteImageUrl = getAbsoluteUrl(twitterImage);\r\n      updateMetaTag('tw-image', 'content', absoluteImageUrl);\r\n    }\r\n\r\n    // Update canonical URL\r\n    if (canonicalPath) {\r\n      const canonicalElement = document.getElementById('canonical-link');\r\n      if (canonicalElement) {\r\n        const domain = window.location.host;\r\n        canonicalElement.setAttribute('href', `https://${domain}${canonicalPath}`);\r\n      }\r\n    }\r\n\r\n  }, [\r\n    siteData,\r\n    businessName,\r\n    customTitle,\r\n    customDescription,\r\n    customKeywords,\r\n    customOgImage,\r\n    customTwitterImage,\r\n    customCanonicalPath,\r\n  ]);\r\n\r\n  return {\r\n    title: customTitle || businessName || siteData?.seo.title,\r\n    description: customDescription || siteData?.seo.description,\r\n    keywords: customKeywords || siteData?.seo.keywords,\r\n  };\r\n};\r\n\r\n/**\r\n * Update a meta tag by element ID\r\n */\r\nfunction updateMetaTag(elementId: string, attribute: string, value: string): void {\r\n  const element = document.getElementById(elementId);\r\n  if (element) {\r\n    element.setAttribute(attribute, value);\r\n  }\r\n}\r\n\r\n/**\r\n * Utility function to manually update meta description\r\n * Use this for one-off updates outside of React components\r\n */\r\nexport const setMetaDescription = (description: string): void => {\r\n  updateMetaTag('meta-desc', 'content', description);\r\n};\r\n\r\n/**\r\n * Utility function to manually update Open Graph image\r\n * Use this for one-off updates outside of React components\r\n */\r\nexport const setOgImage = (imageUrl: string): void => {\r\n  const absoluteUrl = getAbsoluteUrl(imageUrl);\r\n  updateMetaTag('og-image', 'content', absoluteUrl);\r\n};\r\n\r\n","import { useBrowserTab } from './useBrowserTab';\r\nimport { useMetaTags } from './useMetaTags';\r\n\r\nexport interface UseSEOOptions {\r\n  /** Custom page title (overrides business name) */\r\n  title?: string;\r\n  /** Custom favicon URL */\r\n  favicon?: string;\r\n  /** Custom meta description */\r\n  description?: string;\r\n  /** Custom meta keywords */\r\n  keywords?: string[];\r\n  /** Custom Open Graph image */\r\n  ogImage?: string;\r\n  /** Custom Twitter image */\r\n  twitterImage?: string;\r\n  /** Custom canonical path */\r\n  canonicalPath?: string;\r\n  /** Skip browser tab updates (title + favicon) */\r\n  skipBrowserTab?: boolean;\r\n  /** Skip meta tag updates */\r\n  skipMetaTags?: boolean;\r\n}\r\n\r\n/**\r\n * Convenience hook that manages all SEO metadata\r\n * \r\n * This is a wrapper around useBrowserTab + useMetaTags for convenience.\r\n * For more granular control, use those hooks directly.\r\n * \r\n * Manages:\r\n * - Browser tab title and favicon\r\n * - Meta description, keywords\r\n * - Open Graph tags\r\n * - Twitter Card tags\r\n * - Canonical URL\r\n * \r\n * @example\r\n * // Use defaults (loads from site config + tenant data)\r\n * useSEO();\r\n * \r\n * @example\r\n * // Custom title and description\r\n * useSEO({\r\n *   title: 'Contact Us - Business Name',\r\n *   description: 'Get in touch with our team'\r\n * });\r\n * \r\n * @example\r\n * // Only update meta tags, skip browser tab\r\n * useSEO({\r\n *   description: 'Custom description',\r\n *   skipBrowserTab: true\r\n * });\r\n */\r\nexport const useSEO = (options: UseSEOOptions = {}) => {\r\n  const {\r\n    title,\r\n    favicon,\r\n    description,\r\n    keywords,\r\n    ogImage,\r\n    twitterImage,\r\n    canonicalPath,\r\n    skipBrowserTab = false,\r\n    skipMetaTags = false,\r\n  } = options;\r\n\r\n  // Update browser tab (title + favicon)\r\n  const browserTab = useBrowserTab(\r\n    skipBrowserTab\r\n      ? { useBusinessName: false }\r\n      : { title, favicon }\r\n  );\r\n\r\n  // Update meta tags (description, OG, Twitter, etc.)\r\n  const metaTags = useMetaTags(\r\n    skipMetaTags\r\n      ? {}\r\n      : {\r\n          title,\r\n          description,\r\n          keywords,\r\n          ogImage,\r\n          twitterImage,\r\n          canonicalPath,\r\n        }\r\n  );\r\n\r\n  return {\r\n    ...browserTab,\r\n    ...metaTags,\r\n  };\r\n};\r\n","/**\r\n * Tenant Configuration Zod Schemas\r\n * Runtime validation for tenant configs loaded from API/files\r\n * \r\n * Philosophy: Match the minimal TypeScript types\r\n * - Only 10 core fields are required\r\n * - Everything else is optional (for future features)\r\n * - Provides runtime safety at API boundaries\r\n */\r\n\r\nimport { z } from 'zod';\r\n\r\n// ============================================================================\r\n// Core Identification Schemas\r\n// ============================================================================\r\n\r\n/**\r\n * Vertical schema - uses kebab-case to match database and file paths\r\n */\r\nexport const VerticalSchema = z.enum([\r\n  'mobile-detailing',\r\n  'pet-grooming',\r\n  'lawn-care',\r\n  'maid-service',\r\n  'hvac',\r\n  'plumbing',\r\n  'electrical'\r\n]);\r\n\r\n/**\r\n * Legacy alias for backward compatibility\r\n * @deprecated Use VerticalSchema instead\r\n */\r\nexport const IndustryTypeSchema = VerticalSchema;\r\n\r\nexport const TenantStatusSchema = z.enum([\r\n  'pending',\r\n  'approved',\r\n  'active',\r\n  'suspended',\r\n  'rejected'\r\n]);\r\n\r\nexport const TenantUserRoleSchema = z.enum([\r\n  'owner',\r\n  'manager',\r\n  'tech',\r\n  'viewer'\r\n]);\r\n\r\n// ============================================================================\r\n// Service Catalog Schemas\r\n// ============================================================================\r\n\r\nexport const ServiceCategorySchema = z.enum([\r\n  'interior',\r\n  'exterior',\r\n  'service-packages',\r\n  'addons',\r\n  'ceramic-coating',\r\n  'paint-correction',\r\n  'paint-protection-film',\r\n  'auto',\r\n  'boat',\r\n  'rv',\r\n  'ppf',\r\n  'ceramic'\r\n]);\r\n\r\nexport const VehicleTypeSchema = z.enum([\r\n  'auto',\r\n  'boat',\r\n  'rv',\r\n  'truck',\r\n  'motorcycle',\r\n  'off-road'\r\n]);\r\n\r\nexport const SizeBucketSchema = z.enum(['xs', 's', 'm', 'l', 'xl']);\r\n\r\nexport const PricingUnitSchema = z.enum(['flat', 'hour']);\r\n\r\nexport const ServiceTierSchema = z.object({\r\n  id: z.union([z.string(), z.number()]),\r\n  name: z.string().min(1, 'Tier name is required'),\r\n  priceCents: z.number().int().nonnegative('Price must be non-negative'),\r\n  durationMinutes: z.number().int().positive('Duration must be positive'),\r\n  description: z.string(),\r\n  features: z.array(z.string()),\r\n  popular: z.boolean().optional(),\r\n  enabled: z.boolean().optional().default(true),\r\n  sortOrder: z.number().int().optional()\r\n});\r\n\r\nexport const ServiceSchema = z.object({\r\n  id: z.union([z.string(), z.number()]),\r\n  name: z.string().min(1, 'Service name is required'),\r\n  slug: z.string().optional(),\r\n  category: ServiceCategorySchema,\r\n  description: z.string().optional(),\r\n  vehicleTypes: z.array(VehicleTypeSchema).optional(),\r\n  basePriceCents: z.number().int().nonnegative().optional(),\r\n  pricingUnit: PricingUnitSchema.optional(),\r\n  minDurationMinutes: z.number().int().positive().optional(),\r\n  tiers: z.array(ServiceTierSchema).optional(),\r\n  active: z.boolean().optional().default(true),\r\n  featured: z.boolean().optional().default(false),\r\n  metadata: z.record(z.unknown()).optional()\r\n});\r\n\r\nexport const ServiceCatalogSchema = z.record(\r\n  z.string(),\r\n  z.array(ServiceSchema)\r\n);\r\n\r\n// ============================================================================\r\n// Branding Schemas\r\n// ============================================================================\r\n\r\nconst HexColorSchema = z.string().regex(/^#[0-9A-Fa-f]{6}$/, 'Must be a valid hex color');\r\n\r\nexport const BrandColorsSchema = z.object({\r\n  primary: HexColorSchema.optional(),\r\n  secondary: HexColorSchema.optional(),\r\n  accent: HexColorSchema.optional(),\r\n  background: HexColorSchema.optional(),\r\n  text: HexColorSchema.optional(),\r\n  textLight: HexColorSchema.optional()\r\n}).optional();\r\n\r\n// Logo Schema - REQUIRED: url\r\nexport const LogoSchema = z.object({\r\n  url: z.string().min(1, 'Logo URL is required'),  // ✓ REQUIRED\r\n  alt: z.string().optional(),\r\n  darkUrl: z.string().optional(),\r\n  lightUrl: z.string().optional(),\r\n  width: z.number().int().positive().optional(),\r\n  height: z.number().int().positive().optional()\r\n});\r\n\r\n// Branding Schema - REQUIRED: businessName, logo\r\nexport const TenantBrandingSchema = z.object({\r\n  businessName: z.string().min(1, 'Business name is required'),  // ✓ REQUIRED\r\n  logo: LogoSchema,  // ✓ REQUIRED (at least logo.url)\r\n  tagline: z.string().optional(),\r\n  favicon: z.string().optional(),\r\n  colors: z.object({\r\n    primary: z.string().optional(),\r\n    secondary: z.string().optional(),\r\n    accent: z.string().optional()\r\n  }).optional(),\r\n  theme: z.enum(['default', 'southwest', 'coastal', 'modern', 'classic']).optional()\r\n});\r\n\r\n// ============================================================================\r\n// Contact & Social Schemas\r\n// ============================================================================\r\n\r\n// Helper schemas for validation\r\nconst PhoneSchema = z.string().min(1, 'Phone number is required');\r\n// eslint-disable-next-line @typescript-eslint/no-deprecated -- z.string().email() is the correct modern Zod syntax despite deprecation warning\r\nconst EmailSchema = z.string().email('Must be a valid email address');\r\n// eslint-disable-next-line @typescript-eslint/no-deprecated -- z.string().url() is the correct modern Zod syntax despite deprecation warning\r\nconst URLSchema = z.string().url('Must be a valid URL');\r\n\r\nexport const PhoneNumbersSchema = z.object({\r\n  main: PhoneSchema,  // ✓ REQUIRED\r\n  sms: z.string().optional(),\r\n  twilio: z.string().optional()\r\n});\r\n\r\nexport const EmailAddressesSchema = z.object({\r\n  primary: EmailSchema,  // ✓ REQUIRED\r\n  support: EmailSchema.optional(),\r\n  billing: EmailSchema.optional()\r\n});\r\n\r\nexport const SocialMediaLinksSchema = z.object({\r\n  facebook: z.string(),  // ✓ REQUIRED (can be empty string)\r\n  instagram: z.string(),  // ✓ REQUIRED (can be empty string)\r\n  tiktok: z.string(),  // ✓ REQUIRED (can be empty string)\r\n  youtube: z.string(),  // ✓ REQUIRED (can be empty string)\r\n  twitter: z.string().optional(),\r\n  linkedin: z.string().optional(),\r\n  yelp: z.string().optional(),\r\n  gbp: z.string().optional()\r\n});\r\n\r\nexport const BaseLocationSchema = z.object({\r\n  city: z.string().min(1, 'City is required'),  // ✓ REQUIRED\r\n  state: z.string().min(1, 'State is required')  // ✓ REQUIRED\r\n});\r\n\r\nexport const ContactInfoSchema = z.object({\r\n  phones: PhoneNumbersSchema,  // ✓ REQUIRED\r\n  emails: EmailAddressesSchema,  // ✓ REQUIRED\r\n  socials: SocialMediaLinksSchema,  // ✓ REQUIRED\r\n  baseLocation: BaseLocationSchema,  // ✓ REQUIRED\r\n  address: z.object({\r\n    street: z.string().optional(),\r\n    city: z.string().optional(),\r\n    state: z.string().optional(),\r\n    zip: z.string().optional(),\r\n    country: z.string().optional()\r\n  }).optional()\r\n});\r\n\r\n// ============================================================================\r\n// Service Area Schemas\r\n// ============================================================================\r\n\r\nexport const ServiceAreaSchema = z.object({\r\n  id: z.union([z.string(), z.number()]).optional(),\r\n  city: z.string().min(1, 'City is required'),\r\n  citySlug: z.string().min(1, 'City slug is required'),\r\n  stateCode: z.string().length(2, 'State code must be 2 characters'),\r\n  stateName: z.string().min(1, 'State name is required'),\r\n  zipCodes: z.array(z.string()).optional(),\r\n  latitude: z.number().optional(),\r\n  longitude: z.number().optional(),\r\n  radiusMiles: z.number().int().positive().optional()\r\n});\r\n\r\nexport const ServiceAreaConfigSchema = z.record(\r\n  z.string().length(2), // State code\r\n  z.array(ServiceAreaSchema)\r\n);\r\n\r\n// ============================================================================\r\n// SEO & Page Configuration Schemas\r\n// ============================================================================\r\n\r\nexport const SEOMetadataSchema = z.object({\r\n  title: z.string().min(1, 'SEO title is required').max(60, 'SEO title should be under 60 characters'),\r\n  description: z.string().min(1, 'SEO description is required').max(160, 'SEO description should be under 160 characters'),\r\n  keywords: z.array(z.string()).optional(),\r\n  canonicalPath: z.string().optional(),\r\n  ogImage: URLSchema.optional(),\r\n  twitterImage: URLSchema.optional(),\r\n  robots: z.enum(['index,follow', 'noindex,nofollow']).optional()\r\n});\r\n\r\nexport const HeroContentSchema = z.object({\r\n  h1: z.string().min(1, 'Hero headline is required'),\r\n  subtitle: z.string().optional(),\r\n  ctas: z.array(z.object({\r\n    label: z.string().min(1),\r\n    href: z.string(),\r\n    variant: z.enum(['primary', 'secondary']).optional()\r\n  })).optional()\r\n});\r\n\r\nexport const FAQItemSchema = z.object({\r\n  question: z.string().min(1, 'Question is required'),\r\n  answer: z.string().min(1, 'Answer is required'),\r\n  category: z.string().optional()\r\n});\r\n\r\nexport const LocationPageSchema = z.object({\r\n  slug: z.string().min(1, 'Location slug is required'),\r\n  city: z.string().min(1, 'City is required'),\r\n  stateCode: z.string().length(2),\r\n  state: z.string().min(1),\r\n  postalCode: z.string().optional(),\r\n  latitude: z.number().optional(),\r\n  longitude: z.number().optional(),\r\n  urlPath: z.string().min(1, 'URL path is required'),\r\n  affiliateRef: z.string().optional(),\r\n  seo: SEOMetadataSchema,\r\n  hero: HeroContentSchema,\r\n  faqIntro: z.string().optional(),\r\n  faqs: z.array(FAQItemSchema).optional(),\r\n  neighborhoods: z.array(z.string()).optional(),\r\n  landmarks: z.array(z.string()).optional(),\r\n  localConditions: z.array(z.string()).optional(),\r\n  pricingModifierPct: z.number().min(-1).max(1).optional(),\r\n  images: z.array(z.object({\r\n    url: URLSchema,\r\n    alt: z.string().min(1),\r\n    role: z.enum(['hero', 'gallery', 'service']).optional(),\r\n    width: z.number().int().positive().optional(),\r\n    height: z.number().int().positive().optional(),\r\n    priority: z.boolean().optional()\r\n  })).optional(),\r\n  reviews: z.object({\r\n    ratingValue: z.number().min(0).max(5).optional(),\r\n    reviewCount: z.number().int().nonnegative().optional(),\r\n    featured: z.array(z.string()).optional()\r\n  }).optional(),\r\n  openingHours: z.union([z.string(), z.array(z.string())]).optional()\r\n});\r\n\r\n// ============================================================================\r\n// Integration Schemas\r\n// ============================================================================\r\n\r\nexport const AnalyticsConfigSchema = z.object({\r\n  ga4: z.string().optional(),\r\n  googleAdsId: z.string().optional(),\r\n  facebookPixelId: z.string().optional(),\r\n  hotjarId: z.string().optional()\r\n}).optional();\r\n\r\nexport const PaymentConfigSchema = z.object({\r\n  stripePublishableKey: z.string().optional(),\r\n  stripeAccountId: z.string().optional(),\r\n  acceptsPayments: z.boolean().optional().default(false),\r\n  depositRequired: z.boolean().optional().default(false),\r\n  depositPercentage: z.number().min(0).max(1).optional()\r\n}).optional();\r\n\r\nexport const FeatureFlagsSchema = z.object({\r\n  bookingEnabled: z.boolean().optional().default(false),\r\n  loginEnabled: z.boolean().optional().default(false),\r\n  reviewsEnabled: z.boolean().optional().default(true),\r\n  blogEnabled: z.boolean().optional().default(false),\r\n  referralProgramEnabled: z.boolean().optional().default(false),\r\n  loyaltyProgramEnabled: z.boolean().optional().default(false),\r\n  smsNotificationsEnabled: z.boolean().optional().default(false),\r\n  emailNotificationsEnabled: z.boolean().optional().default(true)\r\n}).optional();\r\n\r\n// ============================================================================\r\n// Complete Tenant Configuration Schema\r\n// ============================================================================\r\n\r\n// ============================================================================\r\n// Main Tenant Configuration Schema\r\n// ============================================================================\r\n\r\nexport const TenantConfigSchema = z.object({\r\n  // ============================================\r\n  // CORE IDENTITY (4 required)\r\n  // ============================================\r\n  id: z.union([z.string(), z.number()]),  // ✓ REQUIRED\r\n  slug: z.string().min(1, 'Tenant slug is required'),  // ✓ REQUIRED\r\n  vertical: VerticalSchema,  // ✓ REQUIRED\r\n  status: TenantStatusSchema,  // ✓ REQUIRED\r\n  \r\n  // ============================================\r\n  // BRANDING (2 required nested)\r\n  // ============================================\r\n  branding: TenantBrandingSchema,  // ✓ REQUIRED\r\n  \r\n  // ============================================\r\n  // CONTACT (4 required nested)\r\n  // ============================================\r\n  contact: ContactInfoSchema,  // ✓ REQUIRED\r\n  \r\n  // ============================================\r\n  // FUTURE FEATURES (all optional)\r\n  // ============================================\r\n  services: ServiceCatalogSchema.optional(),\r\n  enabledServiceCategories: z.array(ServiceCategorySchema).optional(),\r\n  \r\n  serviceAreas: ServiceAreaConfigSchema.optional(),\r\n  serviceRadiusMiles: z.number().int().positive().optional(),\r\n  \r\n  locationPages: z.array(LocationPageSchema).optional(),\r\n  mainSiteSEO: SEOMetadataSchema.optional(),\r\n  \r\n  analytics: AnalyticsConfigSchema.optional(),\r\n  payment: PaymentConfigSchema.optional(),\r\n  features: FeatureFlagsSchema.optional(),\r\n  \r\n  domains: z.array(z.string()).optional(),\r\n  primaryDomain: z.string().optional(),\r\n  \r\n  businessLicense: z.string().optional(),\r\n  insuranceProvider: z.string().optional(),\r\n  insuranceExpiry: z.string().optional(),\r\n  operatingHours: z.record(\r\n    z.string(),\r\n    z.object({\r\n      open: z.string(),\r\n      close: z.string(),\r\n      closed: z.boolean().optional()\r\n    })\r\n  ).optional(),\r\n  \r\n  rating: z.number().min(0).max(5).optional(),\r\n  reviewCount: z.number().int().nonnegative().optional(),\r\n  totalJobs: z.number().int().nonnegative().optional(),\r\n  \r\n  metadata: z.record(z.unknown()).optional(),\r\n  createdAt: z.string().optional(),\r\n  updatedAt: z.string().optional(),\r\n  approvedAt: z.string().optional()\r\n});\r\n\r\n// ============================================================================\r\n// Helper Schemas\r\n// ============================================================================\r\n\r\nexport const TenantConfigUpdateSchema = TenantConfigSchema.partial();\r\n\r\nexport const TenantSummarySchema = z.object({\r\n  id: z.union([z.string(), z.number()]),\r\n  slug: z.string(),\r\n  businessName: z.string(),\r\n  vertical: VerticalSchema,\r\n  status: TenantStatusSchema,\r\n  mainPhone: z.string(),\r\n  // eslint-disable-next-line @typescript-eslint/no-deprecated -- z.string().email() is the correct modern Zod syntax despite deprecation warning\r\n  email: z.string().email('Must be a valid email address'),\r\n  rating: z.number().min(0).max(5).optional(),\r\n  reviewCount: z.number().int().nonnegative().optional()\r\n});\r\n\r\nexport const TenantCreatePayloadSchema = TenantConfigSchema.omit({\r\n  id: true,\r\n  createdAt: true,\r\n  updatedAt: true,\r\n  approvedAt: true\r\n});\r\n\r\n// ============================================================================\r\n// Validation Helper Functions\r\n// ============================================================================\r\n\r\n/**\r\n * Validate tenant config with detailed error reporting\r\n */\r\nexport function validateTenantConfig(data: unknown): {\r\n  success: boolean;\r\n  data?: z.infer<typeof TenantConfigSchema>;\r\n  errors?: z.ZodError;\r\n} {\r\n  try {\r\n    const validated = TenantConfigSchema.parse(data);\r\n    return { success: true, data: validated };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return { success: false, errors: error };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Safe parse tenant config (returns null on error instead of throwing)\r\n */\r\nexport function safeParseTenantConfig(data: unknown) {\r\n  return TenantConfigSchema.safeParse(data);\r\n}\r\n\r\n/**\r\n * Validate service catalog\r\n */\r\nexport function validateServiceCatalog(data: unknown) {\r\n  return ServiceCatalogSchema.safeParse(data);\r\n}\r\n\r\n/**\r\n * Validate location page\r\n */\r\nexport function validateLocationPage(data: unknown) {\r\n  return LocationPageSchema.safeParse(data);\r\n}\r\n\r\n","import { z } from 'zod';\r\n\r\n/**\r\n * Zod schemas for booking data validation\r\n */\r\n\r\n// Feature schema\r\nexport const FeatureSchema = z.object({\r\n  name: z.string(),\r\n  description: z.string(),\r\n  explanation: z.string(),\r\n  image: z.string(),\r\n  duration: z.number(),\r\n  features: z.array(z.string())\r\n});\r\n\r\n// Service schema\r\nexport const ServiceSchema = z.object({\r\n  cost: z.number(),\r\n  features: z.array(z.string()),\r\n  popular: z.boolean().optional(),\r\n  description: z.string().optional()\r\n});\r\n\r\n// Service tier schema\r\nexport const ServiceTierSchema = z.object({\r\n  id: z.string(),\r\n  name: z.string(),\r\n  price: z.number(),\r\n  description: z.string(),\r\n  features: z.array(z.string()),\r\n  featureIds: z.array(z.string()),\r\n  popular: z.boolean().optional()\r\n});\r\n\r\n// Addon schema\r\nexport const AddonSchema = z.object({\r\n  id: z.string(),\r\n  name: z.string(),\r\n  price: z.number(),\r\n  description: z.string(),\r\n  features: z.array(z.string()),\r\n  featureIds: z.array(z.string()),\r\n  popular: z.boolean().optional()\r\n});\r\n\r\n// Vehicle details schema\r\nexport const VehicleDetailsSchema = z.object({\r\n  make: z.string(),\r\n  model: z.string(),\r\n  year: z.string(),\r\n  color: z.string(),\r\n  length: z.string()\r\n});\r\n\r\n// Schedule schema\r\nexport const ScheduleSchema = z.object({\r\n  date: z.string(),\r\n  time: z.string()\r\n});\r\n\r\n// Booking data schema\r\nexport const BookingDataSchema = z.object({\r\n  vehicle: z.string(),\r\n  vehicleDetails: VehicleDetailsSchema,\r\n  serviceTier: z.string(),\r\n  addons: z.array(z.string()),\r\n  schedule: ScheduleSchema,\r\n  paymentMethod: z.string()\r\n});\r\n\r\n// Booking state schema\r\nexport const BookingStateSchema = z.object({\r\n  currentStep: z.enum(['vehicle-selection', 'service-tier', 'addons', 'schedule', 'payment']),\r\n  bookingData: BookingDataSchema,\r\n  completedSteps: z.array(z.string()),\r\n  isLoading: z.boolean(),\r\n  errors: z.array(z.string())\r\n});\r\n\r\n// Type exports\r\nexport type Feature = z.infer<typeof FeatureSchema>;\r\nexport type Service = z.infer<typeof ServiceSchema>;\r\nexport type ServiceTier = z.infer<typeof ServiceTierSchema>;\r\nexport type Addon = z.infer<typeof AddonSchema>;\r\nexport type VehicleDetails = z.infer<typeof VehicleDetailsSchema>;\r\nexport type Schedule = z.infer<typeof ScheduleSchema>;\r\nexport type BookingData = z.infer<typeof BookingDataSchema>;\r\nexport type BookingState = z.infer<typeof BookingStateSchema>;\r\n\r\n// Validation helpers\r\nexport const validateServiceTier = (data: unknown): ServiceTier => {\r\n  return ServiceTierSchema.parse(data);\r\n};\r\n\r\nexport const validateAddon = (data: unknown): Addon => {\r\n  return AddonSchema.parse(data);\r\n};\r\n\r\nexport const validateBookingData = (data: unknown): BookingData => {\r\n  return BookingDataSchema.parse(data);\r\n};\r\n\r\nexport const validateServiceTiers = (data: unknown[]): ServiceTier[] => {\r\n  return z.array(ServiceTierSchema).parse(data);\r\n};\r\n\r\nexport const validateAddons = (data: unknown[]): Addon[] => {\r\n  return z.array(AddonSchema).parse(data);\r\n};\r\n","import { config } from '@/../config/env';\r\n\r\n// Types for the API client\r\nexport interface ApiResponse<T = unknown> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\nexport interface RefreshResponse {\r\n  success: boolean;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  user: unknown;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n  error?: string;\r\n  message?: string;\r\n  retryAfterSeconds?: number;\r\n  remainingAttempts?: number;\r\n  resetTime?: number;\r\n}\r\n\r\n// Extend Error interface for custom error codes\r\nexport interface CustomError extends Error {\r\n  code?: string;\r\n  retryAfterSeconds?: number;\r\n  remainingAttempts?: number;\r\n  resetTime?: number;\r\n}\r\n\r\n// One-flight guard for refresh token requests\r\nclass RefreshTokenGuard {\r\n  private isRefreshing = false;\r\n  private failedQueue: Array<{\r\n    resolve: (token: string) => void;\r\n    reject: (error: unknown) => void;\r\n  }> = [];\r\n\r\n  async executeRefresh(): Promise<string> {\r\n    if (this.isRefreshing) {\r\n      // If already refreshing, queue this request\r\n      return new Promise((resolve, reject) => {\r\n        this.failedQueue.push({ resolve, reject });\r\n      });\r\n    }\r\n\r\n    this.isRefreshing = true;\r\n\r\n    try {\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      if (!refreshToken) {\r\n        throw new Error('No refresh token available');\r\n      }\r\n\r\n      const response = await fetch(`${config.apiUrl}/api/auth/refresh`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ refreshToken }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Refresh token failed');\r\n      }\r\n\r\n      const data = await response.json() as RefreshResponse;\r\n      \r\n      // Update tokens in localStorage\r\n      localStorage.setItem('token', data.accessToken);\r\n      localStorage.setItem('refreshToken', data.refreshToken);\r\n\r\n      // Process queued requests\r\n      this.processQueue(null, data.accessToken);\r\n      \r\n      return data.accessToken;\r\n    } catch (error: unknown) {\r\n      // Process queued requests with error\r\n      this.processQueue(error, null);\r\n      throw error;\r\n    } finally {\r\n      this.isRefreshing = false;\r\n    }\r\n  }\r\n\r\n  private processQueue(error: unknown, token: string | null) {\r\n    this.failedQueue.forEach(({ resolve, reject }) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else if (token) {\r\n        resolve(token);\r\n      }\r\n    });\r\n\r\n    this.failedQueue = [];\r\n  }\r\n}\r\n\r\n// API Client with token refresh interceptor\r\nexport class ApiClient {\r\n  private refreshGuard = new RefreshTokenGuard();\r\n  private baseURL: string;\r\n\r\n  constructor(baseURL: string) {\r\n    this.baseURL = baseURL;\r\n  }\r\n\r\n  // Main request method with automatic token refresh\r\n  async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<T> {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    \r\n    // Add auth header if token exists\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      options.headers = {\r\n        ...options.headers,\r\n        'Authorization': `Bearer ${token}`,\r\n      };\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, options);\r\n      \r\n      // If unauthorized and we have a refresh token, try to refresh\r\n      if (response.status === 401 && localStorage.getItem('refreshToken')) {\r\n        try {\r\n          const newToken = await this.refreshGuard.executeRefresh();\r\n          \r\n          // Retry the original request with new token\r\n          const retryOptions = {\r\n            ...options,\r\n            headers: {\r\n              ...options.headers,\r\n              'Authorization': `Bearer ${newToken}`,\r\n            },\r\n          };\r\n          \r\n          const retryResponse = await fetch(url, retryOptions);\r\n          \r\n          if (!retryResponse.ok) {\r\n            throw new Error(`Request failed: ${retryResponse.status.toString()}`);\r\n          }\r\n          \r\n          return await retryResponse.json() as T;\r\n        } catch {\r\n          // Refresh failed, clear auth state and redirect\r\n          this.handleAuthFailure();\r\n          throw new Error('Authentication failed');\r\n        }\r\n      }\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({})) as ErrorResponse;\r\n        \r\n        // Handle rate limiting specifically\r\n        if (response.status === 429) {\r\n          const error: CustomError = new Error(errorData.error ?? 'Rate limited');\r\n          error.code = 'RATE_LIMITED';\r\n          error.retryAfterSeconds = errorData.retryAfterSeconds;\r\n          error.remainingAttempts = errorData.remainingAttempts;\r\n          error.resetTime = errorData.resetTime;\r\n          throw error;\r\n        }\r\n        \r\n        // Handle other error codes\r\n        if (response.status === 401) {\r\n          const error: CustomError = new Error(errorData.error ?? 'Unauthorized');\r\n          error.code = 'UNAUTHORIZED';\r\n          throw error;\r\n        }\r\n        \r\n        if (response.status === 403) {\r\n          const error: CustomError = new Error(errorData.error ?? 'Forbidden');\r\n          error.code = 'FORBIDDEN';\r\n          throw error;\r\n        }\r\n        \r\n        throw new Error(errorData.error ?? errorData.message ?? `Request failed: ${response.status.toString()}`);\r\n      }\r\n      \r\n      return await response.json() as T;\r\n    } catch (error: unknown) {\r\n      console.error('API request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Handle authentication failure\r\n  private handleAuthFailure() {\r\n    // Clear all auth data\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refreshToken');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Redirect to login or home page\r\n    if (window.location.pathname !== '/') {\r\n      window.location.href = '/';\r\n    }\r\n  }\r\n\r\n  // GET request\r\n  async get<T>(endpoint: string): Promise<T> {\r\n    return this.request<T>(endpoint, { method: 'GET' });\r\n  }\r\n\r\n  // POST request\r\n  async post<T>(endpoint: string, data?: unknown): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  // PUT request\r\n  async put<T>(endpoint: string, data?: unknown): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  // DELETE request\r\n  async delete<T>(endpoint: string): Promise<T> {\r\n    return this.request<T>(endpoint, { method: 'DELETE' });\r\n  }\r\n\r\n  // PATCH request\r\n  async patch<T>(endpoint: string, data?: unknown): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  // Upload file\r\n  async upload<T>(endpoint: string, formData: FormData): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      body: formData,\r\n      // Don't set Content-Type for FormData, let browser set it with boundary\r\n    });\r\n  }\r\n}\r\n\r\n// Create and export the API client instance\r\nexport const apiClient = new ApiClient(config.apiUrl);\r\n","/**\r\n * Tenant Configuration API\r\n * Handles fetching and validation of tenant configs\r\n */\r\n\r\nimport { validateTenantConfig } from '../schemas';\r\nimport { TenantConfig, Vertical } from '../types';\r\nimport { apiClient } from './client';\r\n\r\n/**\r\n * Affiliate API response structure\r\n */\r\ninterface AffiliateApiResponse {\r\n  id?: string | number;\r\n  slug?: string;\r\n  business_name: string;\r\n  business_phone?: string;\r\n  phone?: string;\r\n  business_email?: string;\r\n  email?: string;\r\n  facebook_url?: string;\r\n  instagram_url?: string;\r\n  youtube_url?: string;\r\n  tiktok_url?: string;\r\n  service_areas?: Array<{ city: string; state: string; primary?: boolean }>;\r\n  industry?: string;\r\n  logo_url?: string;\r\n}\r\n\r\n/**\r\n * Fetch tenant configuration by slug\r\n * \r\n * @param slug - Tenant slug (e.g., 'jps', 'johns-detailing')\r\n * @returns Validated TenantConfig\r\n */\r\nexport async function fetchTenantConfigBySlug(slug: string): Promise<TenantConfig> {\r\n  const response = await apiClient.get<{ data?: AffiliateApiResponse }>(`/api/tenants/${slug}`);\r\n  \r\n  // API returns affiliate data, needs conversion\r\n  const { data } = response;\r\n  \r\n  if (!data || !data.business_name) {\r\n    throw new Error(`Tenant not found: ${slug}`);\r\n  }\r\n  \r\n  // Import conversion helper dynamically to avoid circular deps\r\n  const { affiliateToTenantConfig } = await import('../utils/tenantConfigMigration');\r\n  \r\n  // Convert affiliate API response to TenantConfig\r\n  const config = affiliateToTenantConfig({\r\n    id: data.id,\r\n    slug: data.slug,\r\n    business_name: data.business_name,\r\n    business_phone: data.business_phone || data.phone,\r\n    business_email: data.business_email || data.email,\r\n    facebook_url: data.facebook_url,\r\n    instagram_url: data.instagram_url,\r\n    tiktok_url: data.tiktok_url,\r\n    youtube_url: data.youtube_url,\r\n    service_areas: data.service_areas,\r\n    industry: data.industry,\r\n    logo_url: data.logo_url\r\n  });\r\n  \r\n  // Validate\r\n  const result = validateTenantConfig(config);\r\n  \r\n  if (!result.success) {\r\n    console.error('Tenant config validation failed:', result.errors);\r\n    throw new Error('Invalid tenant configuration');\r\n  }\r\n  \r\n  return result.data;\r\n}\r\n\r\n/**\r\n * Fetch tenant configuration by ID\r\n * \r\n * @param tenantId - Tenant ID\r\n * @returns Validated TenantConfig\r\n */\r\nexport async function fetchTenantConfigById(tenantId: string | number): Promise<TenantConfig> {\r\n  const response = await apiClient.get<{ data?: AffiliateApiResponse }>(`/api/tenants/id/${tenantId}`);\r\n  \r\n  const { data } = response;\r\n  \r\n  if (!data || !data.business_name) {\r\n    throw new Error(`Tenant not found: ${tenantId}`);\r\n  }\r\n  \r\n  const { affiliateToTenantConfig } = await import('../utils/tenantConfigMigration');\r\n  \r\n  const config = affiliateToTenantConfig({\r\n    id: data.id,\r\n    slug: data.slug,\r\n    business_name: data.business_name,\r\n    business_phone: data.business_phone || data.phone,\r\n    business_email: data.business_email || data.email,\r\n    facebook_url: data.facebook_url,\r\n    instagram_url: data.instagram_url,\r\n    tiktok_url: data.tiktok_url,\r\n    youtube_url: data.youtube_url,\r\n    service_areas: data.service_areas,\r\n    industry: data.industry,\r\n    logo_url: data.logo_url\r\n  });\r\n  \r\n  const result = validateTenantConfig(config);\r\n  \r\n  if (!result.success) {\r\n    throw new Error('Invalid tenant configuration');\r\n  }\r\n  \r\n  return result.data;\r\n}\r\n\r\n/**\r\n * List all tenants (optionally filtered by vertical)\r\n * \r\n * @param vertical - Optional vertical filter\r\n * @returns Array of TenantConfig\r\n */\r\nexport async function fetchTenants(vertical?: Vertical): Promise<TenantConfig[]> {\r\n  const queryParams = vertical ? `?industry=${vertical}` : '';\r\n  const response = await apiClient.get<{ data: AffiliateApiResponse[] }>(`/api/tenants${queryParams}`);\r\n  \r\n  const { data } = response;\r\n  \r\n  if (!Array.isArray(data)) {\r\n    return [];\r\n  }\r\n  \r\n  const { affiliateToTenantConfig } = await import('../utils/tenantConfigMigration');\r\n  \r\n  // Convert and validate each tenant\r\n  const configs = data.map(affiliate => {\r\n    return affiliateToTenantConfig({\r\n      id: affiliate.id,\r\n      slug: affiliate.slug,\r\n      business_name: affiliate.business_name,\r\n      business_phone: affiliate.business_phone || affiliate.phone,\r\n      business_email: affiliate.business_email || affiliate.email,\r\n      facebook_url: affiliate.facebook_url,\r\n      instagram_url: affiliate.instagram_url,\r\n      tiktok_url: affiliate.tiktok_url,\r\n      youtube_url: affiliate.youtube_url,\r\n      service_areas: affiliate.service_areas,\r\n      industry: affiliate.industry,\r\n      logo_url: affiliate.logo_url\r\n    });\r\n  });\r\n  \r\n  return configs;\r\n}\r\n\r\n/**\r\n * Tenant config cache key factory\r\n * Provides consistent React Query cache keys\r\n */\r\nexport const tenantConfigKeys = {\r\n  all: ['tenant', 'config'] as const,\r\n  lists: () => [...tenantConfigKeys.all, 'list'] as const,\r\n  list: (vertical?: Vertical) => [...tenantConfigKeys.lists(), { vertical }] as const,\r\n  details: () => [...tenantConfigKeys.all, 'detail'] as const,\r\n  detail: (identifier: string | number) => [...tenantConfigKeys.details(), identifier] as const,\r\n  bySlug: (slug: string) => [...tenantConfigKeys.detail(slug), 'slug'] as const,\r\n  byId: (id: string | number) => [...tenantConfigKeys.detail(id), 'id'] as const,\r\n};\r\n\r\n","/**\r\n * Tenant Config Loader Hook\r\n * Centralized, DRY way to fetch and cache tenant configurations\r\n * \r\n * Uses React Query for caching, deduplication, and state management\r\n * Validates all configs with Zod schemas at the API boundary\r\n */\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { QueryClient, useQuery } from '@tanstack/react-query';\r\n\r\nimport { \r\n  fetchTenantConfigById,\r\n  fetchTenantConfigBySlug, \r\n  fetchTenants,\r\n  tenantConfigKeys \r\n} from '../api/tenantConfig.api';\r\nimport type { Vertical } from '../types';\r\nimport { useTenantSlug } from './useTenantSlug';\r\n\r\n/**\r\n * Options for tenant config loader\r\n */\r\nexport interface UseTenantConfigLoaderOptions {\r\n  tenantId?: string | number;\r\n  slug?: string;\r\n  vertical?: Vertical;\r\n  enabled?: boolean;  // Conditional fetching\r\n}\r\n\r\n/**\r\n * Load tenant configuration with React Query\r\n * \r\n * Automatically:\r\n * - Fetches from API\r\n * - Validates with Zod\r\n * - Caches with React Query\r\n * - Deduplicates requests\r\n * - Handles loading/error states\r\n * \r\n * @param options - Loader options\r\n * @returns React Query result with typed TenantConfig\r\n * \r\n * @example\r\n * ```tsx\r\n * // By slug (from URL params)\r\n * const { data: config, isLoading } = useTenantConfigLoader();\r\n * \r\n * // By specific slug\r\n * const { data: config } = useTenantConfigLoader({ slug: 'johns-detailing' });\r\n * \r\n * // By tenant ID\r\n * const { data: config } = useTenantConfigLoader({ tenantId: 123 });\r\n * ```\r\n */\r\nexport function useTenantConfigLoader(options: UseTenantConfigLoaderOptions = {}) {\r\n  // Get slug from URL params if not provided\r\n  const params = useParams<{ slug?: string; tenantSlug?: string; businessSlug?: string }>();\r\n  const urlSlug = params.slug || params.tenantSlug || params.businessSlug;\r\n  \r\n  // Use the proper tenant slug hook for domain-based resolution\r\n  const domainTenantSlug = useTenantSlug();\r\n  \r\n  const { \r\n    tenantId, \r\n    slug = domainTenantSlug || urlSlug, // Prioritize domain-based slug\r\n    enabled = true \r\n  } = options;\r\n  \r\n  // Determine which fetch method to use\r\n  const fetchFn = async () => {\r\n    if (tenantId) {\r\n      return fetchTenantConfigById(tenantId);\r\n    } else if (slug) {\r\n      return fetchTenantConfigBySlug(slug);\r\n    }\r\n    throw new Error('Either tenantId or slug must be provided');\r\n  };\r\n  \r\n  // Generate cache key\r\n  const queryKey = tenantId \r\n    ? tenantConfigKeys.byId(tenantId)\r\n    : slug \r\n    ? tenantConfigKeys.bySlug(slug)\r\n    : tenantConfigKeys.all;\r\n  \r\n  return useQuery({\r\n    queryKey,\r\n    queryFn: fetchFn,\r\n    enabled: enabled && (!!tenantId || !!slug),\r\n    staleTime: 5 * 60 * 1000,  // 5 minutes\r\n    gcTime: 10 * 60 * 1000,     // 10 minutes (cache time)\r\n    retry: 2,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n}\r\n\r\n/**\r\n * Load list of tenants (optionally filtered by vertical)\r\n * \r\n * @param vertical - Optional vertical filter\r\n * @returns React Query result with array of TenantConfig\r\n * \r\n * @example\r\n * ```tsx\r\n * // All tenants\r\n * const { data: tenants } = useTenantsList();\r\n * \r\n * // Only detailing tenants\r\n * const { data: detailers } = useTenantsList('mobile-detailing');\r\n * ```\r\n */\r\nexport function useTenantsList(vertical?: Vertical) {\r\n  return useQuery({\r\n    queryKey: tenantConfigKeys.list(vertical),\r\n    queryFn: () => fetchTenants(vertical),\r\n    staleTime: 5 * 60 * 1000,\r\n    gcTime: 10 * 60 * 1000,\r\n  });\r\n}\r\n\r\n/**\r\n * Prefetch a tenant config (for performance optimization)\r\n * \r\n * @param slug - Tenant slug to prefetch\r\n * \r\n * @example\r\n * ```tsx\r\n * import { useQueryClient } from '@tanstack/react-query';\r\n * import { prefetchTenantConfig } from '@/shared/hooks';\r\n * \r\n * function TenantLink({ slug }: { slug: string }) {\r\n *   const queryClient = useQueryClient();\r\n *   \r\n *   return (\r\n *     <Link \r\n *       to={`/${slug}`}\r\n *       onMouseEnter={() => prefetchTenantConfig(queryClient, slug)}\r\n *     >\r\n *       {slug}\r\n *     </Link>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nexport async function prefetchTenantConfig(\r\n  queryClient: QueryClient,\r\n  slug: string\r\n): Promise<void> {\r\n  await queryClient.prefetchQuery({\r\n    queryKey: tenantConfigKeys.bySlug(slug),\r\n    queryFn: () => fetchTenantConfigBySlug(slug),\r\n    staleTime: 5 * 60 * 1000,\r\n  });\r\n}\r\n\r\n","import { useEffect, useState } from 'react';\r\n\r\n/**\r\n * Responsive breakpoints matching Tailwind's default configuration\r\n */\r\nexport const BREAKPOINTS = {\r\n  sm: 640,\r\n  md: 768,\r\n  lg: 1024,\r\n  xl: 1280,\r\n  '2xl': 1536,\r\n} as const;\r\n\r\n/**\r\n * Hook for responsive media queries\r\n * @param query - Media query string (e.g., '(min-width: 768px)')\r\n * @returns boolean indicating if the media query matches\r\n * \r\n * @example\r\n * const isDesktop = useMediaQuery('(min-width: 768px)');\r\n * const prefersDark = useMediaQuery('(prefers-color-scheme: dark)');\r\n */\r\nexport const useMediaQuery = (query: string): boolean => {\r\n  const [matches, setMatches] = useState<boolean>(() => {\r\n    // SSR-safe initialization\r\n    if (typeof window === 'undefined') return false;\r\n    return window.matchMedia(query).matches;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    const mediaQuery = window.matchMedia(query);\r\n    \r\n    // Update state if initial value differs from current\r\n    if (mediaQuery.matches !== matches) {\r\n      setMatches(mediaQuery.matches);\r\n    }\r\n\r\n    // Event handler for media query changes\r\n    const handleChange = (event: MediaQueryListEvent) => {\r\n      setMatches(event.matches);\r\n    };\r\n\r\n    // Modern browsers support addEventListener\r\n    mediaQuery.addEventListener('change', handleChange);\r\n\r\n    return () => {\r\n      mediaQuery.removeEventListener('change', handleChange);\r\n    };\r\n  }, [query, matches]);\r\n\r\n  return matches;\r\n};\r\n\r\n/**\r\n * Hook to detect if viewport is mobile size (< 768px)\r\n * @returns boolean indicating if viewport is mobile\r\n * \r\n * @example\r\n * const isMobile = useIsMobile();\r\n * return isMobile ? <MobileMenu /> : <DesktopMenu />;\r\n */\r\nexport const useIsMobile = (): boolean => {\r\n  return useMediaQuery(`(max-width: ${BREAKPOINTS.md - 1}px)`);\r\n};\r\n\r\n/**\r\n * Hook to detect if viewport is tablet size (>= 768px and < 1024px)\r\n * @returns boolean indicating if viewport is tablet\r\n * \r\n * @example\r\n * const isTablet = useIsTablet();\r\n */\r\nexport const useIsTablet = (): boolean => {\r\n  const isAboveMobile = useMediaQuery(`(min-width: ${BREAKPOINTS.md}px)`);\r\n  const isBelowDesktop = useMediaQuery(`(max-width: ${BREAKPOINTS.lg - 1}px)`);\r\n  return isAboveMobile && isBelowDesktop;\r\n};\r\n\r\n/**\r\n * Hook to detect if viewport is desktop size (>= 768px)\r\n * @returns boolean indicating if viewport is desktop\r\n * \r\n * @example\r\n * const isDesktop = useIsDesktop();\r\n */\r\nexport const useIsDesktop = (): boolean => {\r\n  return useMediaQuery(`(min-width: ${BREAKPOINTS.md}px)`);\r\n};\r\n\r\n/**\r\n * Hook to detect if viewport is large desktop size (>= 1024px)\r\n * @returns boolean indicating if viewport is large desktop\r\n * \r\n * @example\r\n * const isLargeDesktop = useIsLargeDesktop();\r\n */\r\nexport const useIsLargeDesktop = (): boolean => {\r\n  return useMediaQuery(`(min-width: ${BREAKPOINTS.lg}px)`);\r\n};\r\n\r\n/**\r\n * Hook that returns current breakpoint name\r\n * @returns Current breakpoint ('sm' | 'md' | 'lg' | 'xl' | '2xl')\r\n * \r\n * @example\r\n * const breakpoint = useBreakpoint();\r\n * if (breakpoint === 'sm') { ... }\r\n */\r\nexport const useBreakpoint = (): keyof typeof BREAKPOINTS => {\r\n  const is2xl = useMediaQuery(`(min-width: ${BREAKPOINTS['2xl']}px)`);\r\n  const isXl = useMediaQuery(`(min-width: ${BREAKPOINTS.xl}px)`);\r\n  const isLg = useMediaQuery(`(min-width: ${BREAKPOINTS.lg}px)`);\r\n  const isMd = useMediaQuery(`(min-width: ${BREAKPOINTS.md}px)`);\r\n\r\n  if (is2xl) return '2xl';\r\n  if (isXl) return 'xl';\r\n  if (isLg) return 'lg';\r\n  if (isMd) return 'md';\r\n  return 'sm';\r\n};\r\n\r\n","import { create } from 'zustand';\r\n\r\nexport type SectionId = 'top' | 'services' | 'services-desktop' | 'reviews' | 'faq' | 'gallery' | 'footer' | 'gallery-desktop';\r\n\r\ninterface SectionState {\r\n  current: SectionId | null;\r\n  setCurrent: (id: SectionId | null) => void;\r\n}\r\n\r\n// Map actual section IDs to navigation IDs\r\nexport const getNavId = (sectionId: SectionId | null): SectionId | null => {\r\n  if (!sectionId) return null;\r\n  if (sectionId === 'services-desktop') return 'services';\r\n  if (sectionId === 'gallery-desktop' || sectionId === 'gallery') return 'footer';\r\n  return sectionId;\r\n};\r\n\r\nexport const useSectionStore = create<SectionState>((set) => ({\r\n  current: null,\r\n  setCurrent: (id) => { set({ current: id }); },\r\n}));\r\n\r\n","import { useEffect } from 'react';\r\n\r\nimport { type SectionId,useSectionStore } from '@/shared/state/sectionStore';\r\n\r\ntype Opts = {\r\n  ids: SectionId[];\r\n  headerPx?: number;       // sticky header height\r\n  threshold?: number;      // how much must be visible\r\n  updateHash?: boolean;    // keep URL hash in sync\r\n};\r\n\r\nexport function useScrollSpy({\r\n  ids,\r\n  headerPx = 88,\r\n  threshold = 0.55,\r\n  updateHash = false,\r\n}: Opts) {\r\n  const setCurrent = useSectionStore((s) => s.setCurrent);\r\n\r\n  useEffect(() => {\r\n    const els = ids\r\n      .map((id) => document.getElementById(id))\r\n      .filter((el): el is HTMLElement => !!el);\r\n    if (!els.length) return;\r\n\r\n    // Use multiple thresholds for more granular detection\r\n    const thresholds = Array.from({ length: 21 }, (_, i) => i * 0.05);\r\n\r\n    const io = new IntersectionObserver(\r\n      (entries) => {\r\n        // Only process if we have intersecting entries\r\n        const intersecting = entries.filter((e) => e.isIntersecting);\r\n        \r\n        if (intersecting.length === 0) return;\r\n\r\n        // Find the MOST visible section (highest intersection ratio)\r\n        const mostVisible = intersecting.reduce((best, current) => {\r\n          return current.intersectionRatio > best.intersectionRatio ? current : best;\r\n        });\r\n\r\n        // Only update if intersection ratio is significant (avoid brief overlaps during scroll)\r\n        if (mostVisible.intersectionRatio > 0.3) {\r\n          const id = mostVisible.target.id as SectionId | null;\r\n          setCurrent(id);\r\n\r\n          if (updateHash && id) {\r\n            const hash = `#${id}`;\r\n            if (location.hash !== hash) history.replaceState(null, '', hash);\r\n          }\r\n        }\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: `-${headerPx}px 0px -20% 0px`, // Account for header and bottom\r\n        threshold: thresholds,\r\n      }\r\n    );\r\n\r\n    els.forEach((el) => { io.observe(el); });\r\n    return () => { io.disconnect(); };\r\n  }, [ids, headerPx, threshold, updateHash, setCurrent]);\r\n}\r\n\r\n","import { useCallback,useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n  getNextImageIndex,\r\n  getPreviousImageIndex,\r\n  type ImageRotationActions,\r\n  type ImageRotationConfig, \r\n  type ImageRotationState, \r\n  preloadImages,\r\n  validateImageRotationConfig\r\n} from '@/shared/utils/imageRotation';\r\n\r\nexport interface UseImageRotationReturn extends ImageRotationState, ImageRotationActions {\r\n  /** Whether the carousel has multiple images */\r\n  hasMultipleImages: boolean;\r\n  /** Total number of images */\r\n  totalImages: number;\r\n  /** Whether the configuration is valid */\r\n  isValid: boolean;\r\n  /** Validation errors if any */\r\n  errors: string[];\r\n}\r\n\r\n/**\r\n * Hook for managing image rotation with automatic transitions\r\n */\r\nexport const useImageRotation = (config: ImageRotationConfig): UseImageRotationReturn => {\r\n  const { images, autoRotate, interval, preloadNext } = config;\r\n\r\n  // Validate config\r\n  const { isValid, errors } = validateImageRotationConfig(config);\r\n  const totalImages = images.length;\r\n  const hasMultipleImages = totalImages > 1;\r\n\r\n  // State\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [_prefersReducedMotion, setPrefersReducedMotion] = useState(false);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Check if user prefers reduced motion\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n    \r\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n    setPrefersReducedMotion(mediaQuery.matches);\r\n    \r\n    const handleChange = (e: MediaQueryListEvent) => {\r\n      setPrefersReducedMotion(e.matches);\r\n    };\r\n    \r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => { mediaQuery.removeEventListener('change', handleChange); };\r\n  }, []);\r\n\r\n  // Preload images\r\n  useEffect(() => {\r\n    if (preloadNext && totalImages > 1) {\r\n      void preloadImages(images);\r\n    }\r\n  }, [images, preloadNext, totalImages]);\r\n\r\n  // Auto-rotation effect\r\n  useEffect(() => {\r\n    // Disable auto-rotation if invalid or paused\r\n    // NOTE: prefersReducedMotion check disabled for development\r\n    // Re-enable in production by uncommenting: || prefersReducedMotion\r\n    if (!isValid || !autoRotate || !hasMultipleImages || isPaused) {\r\n      return;\r\n    }\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      setCurrentIndex(prevIndex => getNextImageIndex(prevIndex, totalImages));\r\n    }, interval);\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n    };\r\n  }, [isValid, autoRotate, hasMultipleImages, isPaused, interval, totalImages]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Navigation functions\r\n  const next = useCallback(() => {\r\n    if (!isValid || !hasMultipleImages) return;\r\n    setCurrentIndex(prevIndex => getNextImageIndex(prevIndex, totalImages));\r\n  }, [isValid, hasMultipleImages, totalImages]);\r\n\r\n  const previous = useCallback(() => {\r\n    if (!isValid || !hasMultipleImages) return;\r\n    setCurrentIndex(prevIndex => getPreviousImageIndex(prevIndex, totalImages));\r\n  }, [isValid, hasMultipleImages, totalImages]);\r\n\r\n  const goTo = useCallback((index: number) => {\r\n    if (!isValid || !hasMultipleImages || index < 0 || index >= totalImages) return;\r\n    setCurrentIndex(index);\r\n  }, [isValid, hasMultipleImages, totalImages]);\r\n\r\n  const togglePause = useCallback(() => {\r\n    setIsPaused(prev => !prev);\r\n  }, []);\r\n\r\n  const setPaused = useCallback((paused: boolean) => {\r\n    setIsPaused(paused);\r\n  }, []);\r\n\r\n  return {\r\n    currentIndex,\r\n    nextIndex: getNextImageIndex(currentIndex, totalImages),\r\n    isPaused,\r\n    hasMultipleImages,\r\n    totalImages,\r\n    isValid,\r\n    errors,\r\n    next,\r\n    previous,\r\n    goTo,\r\n    togglePause,\r\n    setPaused\r\n  };\r\n};\r\n\r\n/**\r\n * Hook for handling hover pause functionality\r\n */\r\nexport const useImageRotationHover = (rotation: UseImageRotationReturn) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    setIsHovered(true);\r\n  }, []);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    setIsHovered(false);\r\n  }, []);\r\n\r\n  // Pause rotation on hover\r\n  useEffect(() => {\r\n    if (isHovered && rotation.isValid) {\r\n      rotation.setPaused(true);\r\n    } else {\r\n      rotation.setPaused(false);\r\n    }\r\n  }, [isHovered, rotation]);\r\n\r\n  return {\r\n    isHovered,\r\n    onMouseEnter: handleMouseEnter,\r\n    onMouseLeave: handleMouseLeave\r\n  };\r\n};","// Reviews API client\r\nimport type { DatabaseReview, ReviewQueryParams, ReviewsResponse } from '../types';\r\n\r\nconst API_BASE_URL = '/api/reviews';\r\n\r\nexport const reviewsApi = {\r\n  // Get reviews with filtering\r\n  getReviews: async (params: ReviewQueryParams = {}): Promise<ReviewsResponse> => {\r\n    const searchParams = new URLSearchParams();\r\n    \r\n    Object.entries(params).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== '') {\r\n        searchParams.append(key, String(value));\r\n      }\r\n    });\r\n\r\n    const response = await fetch(`${API_BASE_URL}?${searchParams.toString()}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch reviews: ${response.statusText}`);\r\n    }\r\n\r\n    return response.json() as Promise<ReviewsResponse>;\r\n  },\r\n\r\n  // Get a specific review by ID\r\n  getReview: async (id: string): Promise<{ success: boolean; data: DatabaseReview }> => {\r\n    const response = await fetch(`${API_BASE_URL}/${id}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch review: ${response.statusText}`);\r\n    }\r\n\r\n    return response.json() as Promise<{ success: boolean; data: DatabaseReview }>;\r\n  },\r\n\r\n  // Submit a new review\r\n  submitReview: async (reviewData: {\r\n    tenant_slug: string;\r\n    customer_name: string;\r\n    rating: number;\r\n    comment: string;\r\n    reviewer_url?: string;\r\n    vehicle_type?: 'car' | 'truck' | 'suv' | 'boat' | 'rv' | 'motorcycle';\r\n    paint_correction?: boolean;\r\n    ceramic_coating?: boolean;\r\n    paint_protection_film?: boolean;\r\n    source?: 'website' | 'google' | 'yelp' | 'facebook';\r\n    avatar_filename?: string;\r\n  }): Promise<{ success: boolean; data: DatabaseReview }> => {\r\n    const response = await fetch(API_BASE_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(reviewData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to submit review: ${response.statusText}`);\r\n    }\r\n\r\n    return response.json() as Promise<{ success: boolean; data: DatabaseReview }>;\r\n  },\r\n\r\n};\r\n","// Hook for fetching reviews\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { reviewsApi } from '../api';\r\nimport type { DatabaseReview,Review, ReviewQueryParams } from '../types';\r\n\r\n// Convert database review to frontend review format\r\nconst convertDatabaseReviewToReview = (dbReview: DatabaseReview): Review => {\r\n  const review: Review = {\r\n    id: dbReview.id.toString(),\r\n    customerName: dbReview.customer_name,\r\n    rating: dbReview.rating,\r\n    reviewText: dbReview.comment,\r\n    date: dbReview.published_at || dbReview.created_at,\r\n    reviewSource: dbReview.source,\r\n  };\r\n\r\n  // Add optional fields only if they exist\r\n  if (dbReview.avatar_filename) {\r\n    review.profileImage = `/uploads/avatars/${dbReview.avatar_filename}`;\r\n  }\r\n  if (dbReview.reviewer_url) {\r\n    review.reviewerUrl = dbReview.reviewer_url;\r\n  }\r\n  if (dbReview.vehicle_type) {\r\n    review.serviceCategory = dbReview.vehicle_type;\r\n  }\r\n\r\n  return review;\r\n};\r\n\r\nexport const useReviews = (params: ReviewQueryParams = {}) => {\r\n  // Create a stable query key based on params\r\n  const queryKey = ['reviews', params];\r\n  \r\n  // Only fetch if we have meaningful params\r\n  const hasParams = Object.values(params).some(value => value !== undefined && value !== '');\r\n  \r\n  const {\r\n    data: response,\r\n    isLoading: loading,\r\n    error,\r\n    refetch\r\n  } = useQuery({\r\n    queryKey,\r\n    queryFn: async () => {\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => { controller.abort(); }, 5000); // 5 second timeout\r\n      \r\n      try {\r\n        const response = await reviewsApi.getReviews(params);\r\n        clearTimeout(timeoutId);\r\n        \r\n        if (!response.success) {\r\n          throw new Error(response.error || 'Failed to fetch reviews');\r\n        }\r\n        \r\n        return response;\r\n      } catch (err) {\r\n        clearTimeout(timeoutId);\r\n        throw err;\r\n      }\r\n    },\r\n    enabled: hasParams,\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    retry: 1\r\n  });\r\n\r\n  // Convert database reviews to frontend format\r\n  const reviews = response?.data ? response.data.map(convertDatabaseReviewToReview) : [];\r\n  const pagination = response?.pagination || null;\r\n  const errorMessage = error instanceof Error ? error.message : null;\r\n\r\n  const loadMore = () => {\r\n    if (pagination?.hasMore) {\r\n      // For now, just refetch with current params\r\n      // TODO: Implement proper pagination with offset\r\n      refetch();\r\n    }\r\n  };\r\n\r\n  return {\r\n    reviews,\r\n    loading,\r\n    error: errorMessage,\r\n    pagination,\r\n    refetch,\r\n    loadMore\r\n  };\r\n};\r\n","import { useReviews } from '@/features/reviews/hooks/useReviews';\r\nimport type { ReviewQueryParams } from '@/features/reviews/types';\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\n\r\n/**\r\n * Hook to check if reviews are available for the current site\r\n * Returns true if there are reviews, false otherwise\r\n */\r\nexport const useReviewsAvailability = (): boolean => {\r\n  const data = useDataOptional();\r\n  const isTenant = data?.isTenant || false;\r\n  \r\n  // Build query parameters for availability check only\r\n  const queryParams: ReviewQueryParams = {\r\n    limit: 1\r\n  };\r\n  \r\n  // For tenant sites, get the tenant slug from the URL\r\n  if (isTenant) {\r\n    const urlSlug = window.location.pathname.split('/')[1];\r\n    if (urlSlug) {\r\n      queryParams.tenant_slug = urlSlug;\r\n    }\r\n  }\r\n  \r\n  // Fetch reviews with tenant-specific filtering\r\n  const { reviews, loading } = useReviews(queryParams);\r\n  \r\n  // Only return true if we have reviews and are not loading\r\n  return !loading && reviews.length > 0;\r\n};\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nimport { Button } from './Button';\r\n\r\ninterface BookNowProps {\r\n  to?: string;\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  loading?: boolean;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst BookNow = React.forwardRef<HTMLButtonElement, BookNowProps>(\r\n  ({\r\n    to,\r\n    onClick,\r\n    variant = 'primary',\r\n    size = 'lg',\r\n    loading = false,\r\n    leftIcon,\r\n    rightIcon,\r\n    className = '',\r\n    children,\r\n    style,\r\n    ...props\r\n  }, ref) => {\r\n    const buttonText = children || 'Book Now';\r\n\r\n    // Determine destination based on context\r\n    const getDestination = () => {\r\n      if (to) return to; // Use custom destination if provided\r\n      \r\n      // Always go directly to booking for now\r\n      // TODO: Add location selection page if needed\r\n      return '/booking';\r\n    };\r\n\r\n    const buttonProps = {\r\n      variant,\r\n      size,\r\n      loading,\r\n      leftIcon,\r\n      rightIcon,\r\n      className: cn(\r\n        'whitespace-nowrap',\r\n        className\r\n      ),\r\n      style,\r\n      children: buttonText,\r\n      ref,\r\n      ...props\r\n    };\r\n\r\n    if (onClick) {\r\n      return (\r\n        <Button\r\n          onClick={onClick}\r\n          {...buttonProps}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Link to={getDestination()}>\r\n        <Button {...buttonProps} />\r\n      </Link>\r\n    );\r\n  }\r\n);\r\n\r\nBookNow.displayName = 'BookNow';\r\n\r\nexport default BookNow;\r\n","import React from 'react';\r\n\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nimport { Button } from './Button';\r\n\r\ninterface GetQuoteProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  loading?: boolean;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst GetQuote = React.forwardRef<HTMLButtonElement, GetQuoteProps>(\r\n  ({\r\n    variant = 'secondary',\r\n    size = 'lg',\r\n    loading = false,\r\n    leftIcon,\r\n    rightIcon,\r\n    className = '',\r\n    children,\r\n    style,\r\n    ...props\r\n  }, ref) => {\r\n    const buttonText = children || 'Request Quote';\r\n\r\n    return (\r\n      <Button\r\n        variant={variant}\r\n        size={size}\r\n        loading={loading}\r\n        leftIcon={leftIcon}\r\n        rightIcon={rightIcon}\r\n        className={cn(\r\n          'whitespace-nowrap',\r\n          className\r\n        )}\r\n        style={style}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n    );\r\n  }\r\n);\r\n\r\nGetQuote.displayName = 'GetQuote';\r\n\r\nexport default GetQuote;\r\n","import React from 'react';\r\n\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\nimport { cn } from '@/shared/utils/cn';\r\n\r\nimport BookNow from './BookNow';\r\nimport GetQuote from './GetQuote';\r\n\r\ninterface CTAButtonsProps {\r\n  layout?: 'horizontal' | 'vertical';\r\n  className?: string;\r\n  bookNowProps?: {\r\n    to?: string;\r\n    onClick?: () => void;\r\n    variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n    size?: 'sm' | 'md' | 'lg' | 'xl';\r\n    className?: string;\r\n    children?: React.ReactNode;\r\n  };\r\n  getQuoteProps?: {\r\n    variant?: 'primary' | 'secondary' | 'outline' | 'outline-white' | 'ghost' | 'destructive';\r\n    size?: 'sm' | 'md' | 'lg' | 'xl';\r\n    className?: string;\r\n    children?: React.ReactNode;\r\n    onClick?: () => void;\r\n  };\r\n}\r\n\r\nconst CTAButtons: React.FC<CTAButtonsProps> = ({\r\n  layout = 'horizontal',\r\n  className = '',\r\n  bookNowProps = {},\r\n  getQuoteProps = {}\r\n}) => {\r\n  const data = useDataOptional();\r\n  const isPreview = data?.isPreview || false;\r\n\r\n  // Default both to the same size unless overridden\r\n  const buttonSize = bookNowProps.size ?? getQuoteProps.size ?? 'lg';\r\n\r\n  const containerClasses =\r\n    layout === 'vertical'\r\n      ? // Single column, centered, consistent width\r\n        'flex flex-col gap-3 w-full max-w-[28rem] md:max-w-[32rem] mx-auto px-6'\r\n      : // 1 col on mobile, 2 equal cols ≥ sm\r\n        'grid grid-cols-1 sm:grid-cols-2 gap-3 w-full max-w-[28rem] md:max-w-[32rem] mx-auto px-6';\r\n\r\n  const commonBtnClasses = 'w-full justify-center'; // fill column, equal widths\r\n\r\n  const handleBookNowClick = (e: React.MouseEvent) => {\r\n    if (isPreview) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      alert('📋 Preview Mode\\n\\nBooking is disabled in preview mode.\\n\\nThis is a demonstration site to showcase features to potential clients.');\r\n      return;\r\n    }\r\n    bookNowProps.onClick?.();\r\n  };\r\n\r\n  return (\r\n    <div className={cn(containerClasses, className)}>\r\n      <BookNow\r\n        variant={bookNowProps.variant ?? 'primary'}\r\n        size={buttonSize}\r\n        className={cn(commonBtnClasses, isPreview && 'cursor-pointer', bookNowProps.className)}\r\n        onClick={isPreview ? handleBookNowClick : bookNowProps.onClick}\r\n        {...(bookNowProps.to && !isPreview && { to: bookNowProps.to })}\r\n      >\r\n        {bookNowProps.children ?? 'Book Now'}\r\n      </BookNow>\r\n\r\n      <GetQuote\r\n        variant={getQuoteProps.variant ?? 'outline-white'}\r\n        size={buttonSize}\r\n        className={cn(commonBtnClasses, getQuoteProps.className)}\r\n        onClick={getQuoteProps.onClick}\r\n      >\r\n        {getQuoteProps.children ?? 'Request Quote'}\r\n      </GetQuote>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CTAButtons;","/**\r\n * Enhanced Error Monitoring System\r\n * Catches all frontend errors including console errors, unhandled promises, and React errors\r\n */\r\n\r\ninterface ReactErrorInfo {\r\n  componentStack?: string;\r\n}\r\n\r\n// Type guard to safely extract error properties\r\nfunction getErrorStack(error: unknown): string | undefined {\r\n  if (error && typeof error === 'object' && 'stack' in error) {\r\n    return String((error as { stack: unknown }).stack);\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction getErrorMessage(error: unknown): string {\r\n  if (error && typeof error === 'object' && 'message' in error) {\r\n    return String((error as { message: unknown }).message);\r\n  }\r\n  return String(error);\r\n}\r\n\r\ninterface ErrorEvent {\r\n  id: string;\r\n  timestamp: Date;\r\n  type: 'console' | 'unhandled' | 'promise' | 'react' | 'network';\r\n  message: string;\r\n  stack?: string;\r\n  url?: string;\r\n  line?: number;\r\n  column?: number;\r\n  userAgent?: string;\r\n  userId?: string;\r\n  sessionId?: string;\r\n  componentStack?: string;\r\n  errorBoundary?: string;\r\n  networkInfo?: {\r\n    url: string;\r\n    method: string;\r\n    status?: number;\r\n    responseTime?: number;\r\n  };\r\n}\r\n\r\nclass ErrorMonitor {\r\n  private errors: ErrorEvent[] = [];\r\n  private maxErrors = 1000; // Keep last 1000 errors\r\n  private sessionId: string;\r\n  private userId?: string;\r\n  private isEnabled = false; // Disabled to see actual console errors\r\n  private listeners: ((error: ErrorEvent) => void)[] = [];\r\n\r\n  constructor() {\r\n    this.sessionId = this.generateSessionId();\r\n    this.setupGlobalErrorHandlers();\r\n    this.setupConsoleErrorHandling();\r\n    this.setupNetworkErrorHandling();\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`;\r\n  }\r\n\r\n  private setupGlobalErrorHandlers(): void {\r\n    // Catch all unhandled errors\r\n    window.addEventListener('error', (event) => {\r\n      const stack = getErrorStack(event.error);\r\n      this.captureError({\r\n        type: 'unhandled',\r\n        message: event.message,\r\n        ...(stack ? { stack } : {}),\r\n        url: event.filename,\r\n        line: event.lineno,\r\n        column: event.colno,\r\n      });\r\n    });\r\n\r\n    // Catch unhandled promise rejections\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      const stack = getErrorStack(event.reason);\r\n      this.captureError({\r\n        type: 'promise',\r\n        message: getErrorMessage(event.reason),\r\n        ...(stack ? { stack } : {}),\r\n      });\r\n    });\r\n\r\n    // Catch resource loading errors\r\n    window.addEventListener('error', (event) => {\r\n      if (event.target !== window) {\r\n        const target = event.target;\r\n        const targetName = target instanceof Element ? target.tagName.toLowerCase() : 'unknown';\r\n        \r\n        let url = 'unknown';\r\n        if (target && typeof target === 'object') {\r\n          if ('src' in target && typeof target.src === 'string') {\r\n            url = target.src;\r\n          } else if ('href' in target && typeof target.href === 'string') {\r\n            url = target.href;\r\n          }\r\n        }\r\n        \r\n        this.captureError({\r\n          type: 'network',\r\n          message: `Resource loading error: ${targetName}`,\r\n          networkInfo: {\r\n            url,\r\n            method: 'GET',\r\n          },\r\n        });\r\n      }\r\n    }, true);\r\n  }\r\n\r\n  private setupConsoleErrorHandling(): void {\r\n    // Override console methods to catch all console errors\r\n    const originalConsoleError = console.error;\r\n    const originalConsoleWarn = console.warn;\r\n\r\n    console.error = (...args: unknown[]) => {\r\n      const stack = new Error().stack;\r\n      this.captureError({\r\n        type: 'console',\r\n        message: args.map(arg => typeof arg === 'string' ? arg : JSON.stringify(arg)).join(' '),\r\n        ...(stack ? { stack } : {}),\r\n      });\r\n      originalConsoleError.apply(console, args);\r\n    };\r\n\r\n    console.warn = (...args: unknown[]) => {\r\n      const stack = new Error().stack;\r\n      this.captureError({\r\n        type: 'console',\r\n        message: `WARNING: ${args.map(arg => typeof arg === 'string' ? arg : JSON.stringify(arg)).join(' ')}`,\r\n        ...(stack ? { stack } : {}),\r\n      });\r\n      originalConsoleWarn.apply(console, args);\r\n    };\r\n  }\r\n\r\n  private setupNetworkErrorHandling(): void {\r\n    // Override fetch to catch network errors\r\n    const originalFetch = window.fetch;\r\n    window.fetch = async (...args: Parameters<typeof fetch>) => {\r\n      const startTime = Date.now();\r\n      const requestInput = args[0];\r\n      // Extract URL from request input - either string or Request object\r\n      let url: string;\r\n      if (typeof requestInput === 'string') {\r\n        url = requestInput;\r\n      } else {\r\n        url = (requestInput as Request).url;\r\n      }\r\n      const method = args[1]?.method || 'GET';\r\n\r\n      try {\r\n        const response = await originalFetch(...args);\r\n        const responseTime = Date.now() - startTime;\r\n\r\n        // Log failed requests (but ignore localhost connection refused errors)\r\n        if (!response.ok && !(url.includes('localhost:5173') && response.status === 0)) {\r\n          this.captureError({\r\n            type: 'network',\r\n            message: `HTTP ${response.status}: ${response.statusText}`,\r\n            networkInfo: {\r\n              url,\r\n              method,\r\n              status: response.status,\r\n              responseTime,\r\n            },\r\n          });\r\n        }\r\n\r\n        return response;\r\n      } catch (error: unknown) {\r\n        const responseTime = Date.now() - startTime;\r\n        const errorMessage = getErrorMessage(error);\r\n        \r\n        // Check if it's a connection refused error to localhost\r\n        const isLocalConnectionError = \r\n          url.includes('localhost:5173') && \r\n          error instanceof TypeError && \r\n          errorMessage.includes('ERR_CONNECTION_REFUSED');\r\n        \r\n        // Don't log connection refused errors to localhost:5173 (Vite dev server pings)\r\n        if (!isLocalConnectionError) {\r\n          this.captureError({\r\n            type: 'network',\r\n            message: `Network error: ${errorMessage}`,\r\n            networkInfo: {\r\n              url,\r\n              method,\r\n              responseTime,\r\n            },\r\n          });\r\n        }\r\n        \r\n        throw error;\r\n      }\r\n    };\r\n  }\r\n\r\n  private captureError(errorData: Partial<ErrorEvent>): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    const error: ErrorEvent = {\r\n      id: `error_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`,\r\n      timestamp: new Date(),\r\n      type: 'console',\r\n      message: '',\r\n      url: window.location.href,\r\n      userAgent: navigator.userAgent,\r\n      sessionId: this.sessionId,\r\n      ...(this.userId ? { userId: this.userId } : {}),\r\n      ...errorData,\r\n    };\r\n\r\n    this.errors.push(error);\r\n\r\n    // Keep only the last maxErrors\r\n    if (this.errors.length > this.maxErrors) {\r\n      this.errors = this.errors.slice(-this.maxErrors);\r\n    }\r\n\r\n    // Notify listeners\r\n    this.listeners.forEach(listener => { listener(error); });\r\n\r\n    // Log to console in development\r\n    if (import.meta.env.DEV) {\r\n      console.group(`🚨 Error Captured (${error.type.toUpperCase()})`);\r\n      console.error('Message:', error.message);\r\n      console.error('Timestamp:', error.timestamp.toISOString());\r\n      console.error('URL:', error.url);\r\n      if (error.stack) console.error('Stack:', error.stack);\r\n      if (error.componentStack) console.error('Component Stack:', error.componentStack);\r\n      if (error.networkInfo) console.error('Network Info:', error.networkInfo);\r\n      console.groupEnd();\r\n    }\r\n  }\r\n\r\n  // Public methods\r\n  public captureReactError(error: Error, errorInfo: ReactErrorInfo, componentStack?: string): void {\r\n    const stack = error.stack;\r\n    const component = componentStack || errorInfo.componentStack;\r\n    this.captureError({\r\n      type: 'react',\r\n      message: error.message,\r\n      ...(stack ? { stack } : {}),\r\n      ...(component ? { componentStack: component } : {}),\r\n    });\r\n  }\r\n\r\n  public setUserId(userId: string): void {\r\n    this.userId = userId;\r\n  }\r\n\r\n  public enable(): void {\r\n    this.isEnabled = true;\r\n  }\r\n\r\n  public disable(): void {\r\n    this.isEnabled = false;\r\n  }\r\n\r\n  public getErrors(): ErrorEvent[] {\r\n    return [...this.errors];\r\n  }\r\n\r\n  public getErrorsByType(type: ErrorEvent['type']): ErrorEvent[] {\r\n    return this.errors.filter(error => error.type === type);\r\n  }\r\n\r\n  public getRecentErrors(count: number = 10): ErrorEvent[] {\r\n    return this.errors.slice(-count);\r\n  }\r\n\r\n  public clearErrors(): void {\r\n    this.errors = [];\r\n  }\r\n\r\n  public addListener(listener: (error: ErrorEvent) => void): () => void {\r\n    this.listeners.push(listener);\r\n    return () => {\r\n      const index = this.listeners.indexOf(listener);\r\n      if (index > -1) {\r\n        this.listeners.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  public exportErrors(): string {\r\n    return JSON.stringify({\r\n      sessionId: this.sessionId,\r\n      userId: this.userId,\r\n      timestamp: new Date().toISOString(),\r\n      errors: this.errors,\r\n    }, null, 2);\r\n  }\r\n\r\n  public printErrorsToConsole(): void {\r\n    console.group('🔍 Error Monitor - All Captured Errors');\r\n    console.log(`Session ID: ${this.sessionId}`);\r\n    console.log(`Total Errors: ${this.errors.length}`);\r\n    console.log(`User ID: ${this.userId || 'Not set'}`);\r\n    \r\n    this.errors.forEach((error, index) => {\r\n      console.group(`Error ${index + 1} (${error.type})`);\r\n      console.log('Time:', error.timestamp.toISOString());\r\n      console.log('Message:', error.message);\r\n      console.log('URL:', error.url);\r\n      if (error.stack) console.log('Stack:', error.stack);\r\n      if (error.componentStack) console.log('Component Stack:', error.componentStack);\r\n      if (error.networkInfo) console.log('Network Info:', error.networkInfo);\r\n      console.groupEnd();\r\n    });\r\n    \r\n    console.groupEnd();\r\n  }\r\n\r\n  public getErrorSummary(): {\r\n    total: number;\r\n    byType: Record<string, number>;\r\n    recent: ErrorEvent[];\r\n  } {\r\n    const byType = this.errors.reduce<Record<string, number>>((acc, error) => {\r\n      acc[error.type] = (acc[error.type] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    return {\r\n      total: this.errors.length,\r\n      byType,\r\n      recent: this.getRecentErrors(5),\r\n    };\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nexport const errorMonitor = new ErrorMonitor();\r\n\r\n// Export types for use in other files\r\nexport type { ErrorEvent, ReactErrorInfo };\r\n\r\n// Global error handler for React errors\r\nexport const handleReactError = (error: Error, errorInfo: ReactErrorInfo, componentStack?: string) => {\r\n  errorMonitor.captureReactError(error, errorInfo, componentStack);\r\n};\r\n\r\n// Extend Window interface for debugging commands\r\ndeclare global {\r\n  interface Window {\r\n    errorMonitor: ErrorMonitor;\r\n    printErrors: () => void;\r\n    getErrors: () => ErrorEvent[];\r\n    clearErrors: () => void;\r\n    exportErrors: () => string;\r\n  }\r\n}\r\n\r\n// Console commands for debugging\r\nif (typeof window !== 'undefined') {\r\n  window.errorMonitor = errorMonitor;\r\n  window.printErrors = () => { errorMonitor.printErrorsToConsole(); };\r\n  window.getErrors = () => errorMonitor.getErrors();\r\n  window.clearErrors = () => { errorMonitor.clearErrors(); };\r\n  window.exportErrors = () => errorMonitor.exportErrors();\r\n}\r\n","import type { ErrorInfo, ReactNode } from 'react';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { env } from '@/shared/env';\r\nimport { handleReactError } from '@/shared/utils/errorMonitoring';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\r\n    \r\n    // Capture error in our monitoring system\r\n    handleReactError(error, errorInfo, errorInfo.componentStack);\r\n    \r\n    // Call custom error handler if provided\r\n    if (this.props.onError) {\r\n      this.props.onError(error, errorInfo);\r\n    }\r\n\r\n    // Log to external service in production\r\n    if (env.PROD) {\r\n      // You can integrate with services like Sentry, LogRocket, etc.\r\n      console.error('Production error:', { error, errorInfo });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // Custom fallback UI\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      // Default error UI\r\n      return (\r\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\r\n          <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-6 text-center\">\r\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n              <svg className=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n              Something went wrong\r\n            </h2>\r\n            <p className=\"text-gray-600 mb-4\">\r\n              We&apos;re sorry, but something unexpected happened. Please try refreshing the page.\r\n            </p>\r\n            <button\r\n              onClick={() => { window.location.reload(); }}\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Refresh Page\r\n            </button>\r\n            {env.DEV && this.state.error && (\r\n              <details className=\"mt-4 text-left\">\r\n                <summary className=\"cursor-pointer text-sm text-gray-500 hover:text-gray-700\">\r\n                  Error Details (Development)\r\n                </summary>\r\n                <pre className=\"mt-2 text-xs text-red-600 bg-red-50 p-2 rounded overflow-auto\">\r\n                  {this.state.error.toString()}\r\n                </pre>\r\n              </details>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  fallback: PropTypes.node,\r\n  onError: PropTypes.func,\r\n};\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const [email, setEmail] = useState('admin@thatsmartsite.com');\r\n  const [password, setPassword] = useState('');\r\n  const { login, loading, error } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const success = await login({ email, password });\r\n    \r\n    if (success) {\r\n      // Add a small delay to ensure state is updated\r\n      setTimeout(() => {\r\n        navigate('/admin-dashboard');\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n      <div className=\"max-w-md w-full bg-gray-800 rounded-lg shadow-lg p-8\">\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-white mb-2\">Admin Login</h1>\r\n          <p className=\"text-gray-400\">Sign in to access the admin dashboard</p>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"admin@thatsmartsite.com\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"Enter your password\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {loading ? 'Signing In...' : 'Sign In'}\r\n          </button>\r\n        </form>\r\n        \r\n        <div className=\"mt-6 text-center\">\r\n          <p className=\"text-gray-400 text-sm\">\r\n            Don't have an account?{' '}\r\n            <Link to=\"/tenant-onboarding\" className=\"text-blue-400 hover:text-blue-300\">\r\n              Apply for tenant access\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nimport { env } from '@/shared/env';\r\nimport { useAuth } from '@/shared/hooks/useAuth';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  requiredRole?: 'admin' | 'tenant' | 'user' | ('admin' | 'tenant' | 'user')[];\r\n  fallbackPath?: string;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \r\n  children, \r\n  requiredRole = 'user',\r\n  fallbackPath = '/login'\r\n}) => {\r\n  const { user, loading, isAuthenticated, isAdmin } = useAuth();\r\n  \r\n  // Allow admin access in development mode only (commented out for testing)\r\n  // if (env.DEV) {\r\n  //   // Allow tenant access\r\n  //   if (Array.isArray(requiredRole) && requiredRole.includes('tenant')) {\r\n  //     return <>{children}</>;\r\n  //   }\r\n  //   if (requiredRole === 'tenant') {\r\n  //     return <>{children}</>;\r\n  //   }\r\n  //   // Allow admin access\r\n  //   if (Array.isArray(requiredRole) && requiredRole.includes('admin')) {\r\n  //     return <>{children}</>;\r\n  //   }\r\n  //   if (requiredRole === 'admin') {\r\n  //     return <>{children}</>;\r\n  //   }\r\n  // }\r\n  \r\n  // Show loading while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"text-white text-2xl mb-4\">Loading...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Check if user is authenticated\r\n  if (!isAuthenticated) {\r\n    return <Navigate to={fallbackPath} replace />;\r\n  }\r\n  \r\n  // Check if user has required role\r\n  if (Array.isArray(requiredRole)) {\r\n    if (requiredRole.includes('admin') && !isAdmin) {\r\n      return <Navigate to={fallbackPath} replace />;\r\n    }\r\n    if (requiredRole.includes('tenant') && isAdmin) {\r\n      return <Navigate to={fallbackPath} replace />;\r\n    }\r\n  } else {\r\n    if (requiredRole === 'admin' && !isAdmin) {\r\n      return <Navigate to={fallbackPath} replace />;\r\n    }\r\n    \r\n    if (requiredRole === 'tenant' && isAdmin) {\r\n      return <Navigate to={fallbackPath} replace />;\r\n    }\r\n  }\r\n  \r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","/**\r\n * Zod validation schemas for location data\r\n * Ensures data integrity and provides clear error messages\r\n */\r\n\r\nimport { z } from 'zod';\r\n\r\n// Image schema with performance optimization fields\r\nconst ImageSchema = z.object({\r\n  url: z.string().min(1, 'Image URL is required'),\r\n  alt: z.string().min(1, 'Image alt text is required'),\r\n  caption: z.string().optional(),\r\n  role: z.enum(['hero', 'gallery', 'process', 'result', 'auto', 'marine', 'rv'], {\r\n    errorMap: () => ({ message: 'Image role must be one of: hero, gallery, process, result, auto, marine, rv' })\r\n  }),\r\n  width: z.number().positive('Image width must be positive').optional(),\r\n  height: z.number().positive('Image height must be positive').optional(),\r\n  priority: z.boolean().optional(),\r\n  sources: z.array(z.object({\r\n    srcset: z.string(),\r\n    type: z.string()\r\n  })).optional()\r\n});\r\n\r\n// Header schema for business information\r\nconst HeaderSchema = z.object({\r\n  businessName: z.string().min(1, 'Business name is required').optional(),\r\n  phoneDisplay: z.string().min(1, 'Phone display format is required').optional(),\r\n  phoneE164: z.string().regex(/^\\+[1-9]\\d{1,14}$/, 'Phone must be in E.164 format (e.g., +1234567890)').optional(),\r\n  cityStateLabel: z.string().min(1, 'City state label is required').optional()\r\n});\r\n\r\n// SEO schema\r\nconst SEOSchema = z.object({\r\n  title: z.string().min(1, 'SEO title is required'),\r\n  description: z.string().min(1, 'SEO description is required'),\r\n  keywords: z.array(z.string()).optional(),\r\n  canonicalPath: z.string().regex(/^\\/.*\\/?$/, 'Canonical path must start with /').optional(),\r\n  ogImage: z.string().optional(),\r\n  twitterImage: z.string().optional(),\r\n  robots: z.enum(['index,follow', 'noindex,nofollow']).optional()\r\n});\r\n\r\n// Hero schema\r\nconst HeroSchema = z.object({\r\n  h1: z.string().min(1, 'Hero H1 is required'),\r\n  sub: z.string().optional()\r\n});\r\n\r\n// Operations schema\r\nconst OpsSchema = z.object({\r\n  acceptsSameDay: z.boolean().optional(),\r\n  leadTimeDays: z.number().int().min(0, 'Lead time days must be non-negative').max(30, 'Lead time days must be reasonable').optional(),\r\n  serviceRadiusMiles: z.number().positive('Service radius must be positive').max(100, 'Service radius must be reasonable').optional()\r\n});\r\n\r\n// Service area schema\r\nconst ServiceAreaSchema = z.object({\r\n  postalCodes: z.array(z.string().regex(/^\\d{5}(-\\d{4})?$/, 'Postal codes must be valid ZIP format')).min(1, 'At least one postal code is required')\r\n});\r\n\r\n// FAQ schema\r\nconst FAQSchema = z.object({\r\n  id: z.string().optional(),\r\n  q: z.string().min(1, 'FAQ question is required'),\r\n  a: z.string().min(1, 'FAQ answer is required')\r\n});\r\n\r\n// Reviews section schema\r\nconst ReviewsSectionSchema = z.object({\r\n  heading: z.string().min(1, 'Reviews heading is required').optional(),\r\n  intro: z.string().min(1, 'Reviews intro is required').optional(),\r\n  feedKey: z.string().optional()\r\n});\r\n\r\n// Schema.org schema (minimal validation since most fields are auto-generated)\r\nconst SchemaOrgSchema = z.object({\r\n  // Manual fields only\r\n  aggregateRating: z.object({\r\n    '@type': z.string().optional(),\r\n    ratingValue: z.string().optional(),\r\n    reviewCount: z.string().optional(),\r\n    bestRating: z.string().optional(),\r\n    worstRating: z.string().optional()\r\n  }).optional(),\r\n  review: z.array(z.object({\r\n    '@type': z.string().optional(),\r\n    author: z.object({\r\n      '@type': z.string().optional(),\r\n      name: z.string().optional()\r\n    }).optional(),\r\n    reviewRating: z.object({\r\n      '@type': z.string().optional(),\r\n      ratingValue: z.string().optional(),\r\n      bestRating: z.string().optional(),\r\n      worstRating: z.string().optional()\r\n    }).optional(),\r\n    reviewBody: z.string().optional()\r\n  })).optional(),\r\n  openingHours: z.union([z.string(), z.array(z.string())]).optional(),\r\n  // Allow additional schema properties\r\n  // eslint-disable-next-line @typescript-eslint/no-deprecated -- passthrough is correct for this zod version\r\n}).passthrough();\r\n\r\n// Main LocationPage schema\r\nexport const LocationPageSchema = z.object({\r\n  // Core identification\r\n  slug: z.string().min(1, 'Slug is required').regex(/^[a-z0-9-]+$/, 'Slug must contain only lowercase letters, numbers, and hyphens'),\r\n  city: z.string().min(1, 'City is required'),\r\n  stateCode: z.string().length(2, 'State code must be 2 characters').regex(/^[A-Z]{2}$/, 'State code must be uppercase'),\r\n  state: z.string().min(1, 'State name is required'),\r\n  postalCode: z.string().regex(/^\\d{5}(-\\d{4})?$/, 'Postal code must be valid ZIP format'),\r\n  latitude: z.number().min(-90).max(90, 'Latitude must be between -90 and 90'),\r\n  longitude: z.number().min(-180).max(180, 'Longitude must be between -180 and 180'),\r\n  openingHours: z.union([z.string(), z.array(z.string())]).optional(),\r\n  urlPath: z.string().regex(/^\\/.*\\/$/, 'URL path must start and end with /'),\r\n  \r\n  // Affiliate/employee references\r\n  affiliateRef: z.string().optional(),\r\n  employee: z.string().optional(),\r\n  \r\n  // Header information\r\n  header: HeaderSchema.optional(),\r\n  \r\n  // SEO\r\n  seo: SEOSchema,\r\n  \r\n  // Hero\r\n  hero: HeroSchema,\r\n  \r\n  // Content\r\n  faqIntro: z.string().optional(),\r\n  neighborhoods: z.array(z.string()).optional(),\r\n  landmarks: z.array(z.string()).optional(),\r\n  localConditions: z.array(z.string()).optional(),\r\n  \r\n  // Pricing\r\n  pricingModifierPct: z.number().min(-0.5, 'Pricing modifier cannot be less than -50%').max(1.0, 'Pricing modifier cannot be more than +100%').optional(),\r\n  \r\n  // Images\r\n  images: z.array(ImageSchema).optional(),\r\n  \r\n  // FAQs\r\n  faqs: z.array(FAQSchema).optional(),\r\n  \r\n  // Reviews\r\n  reviewsSection: ReviewsSectionSchema.optional(),\r\n  \r\n  // Operations\r\n  ops: OpsSchema.optional(),\r\n  \r\n  // Service area\r\n  serviceArea: ServiceAreaSchema.optional(),\r\n  \r\n  // Schema.org\r\n  schemaOrg: SchemaOrgSchema.optional()\r\n});\r\n\r\n// Main site configuration schema\r\nexport const MainSiteConfigSchema = z.object({\r\n  brand: z.string().min(1, 'Brand name is required'),\r\n  slug: z.string().min(1, 'Slug is required'),\r\n  urlPath: z.string().regex(/^\\/.*\\/?$/, 'URL path must start with /'),\r\n  \r\n  logo: z.object({\r\n    url: z.string().min(1, 'Logo URL is required'),\r\n    alt: z.string().min(1, 'Logo alt text is required'),\r\n    darkUrl: z.string().optional(),\r\n    lightUrl: z.string().optional()\r\n  }),\r\n  \r\n  seo: SEOSchema,\r\n  \r\n  hero: HeroSchema.extend({\r\n    images: z.array(ImageSchema).optional(),\r\n    ctas: z.array(z.object({\r\n      label: z.string(),\r\n      href: z.string()\r\n    })).optional()\r\n  }),\r\n  \r\n  servicesGrid: z.array(z.object({\r\n    slug: z.string(),\r\n    title: z.string(),\r\n    image: z.string(),\r\n    alt: z.string(),\r\n    href: z.string(),\r\n    width: z.number().positive().optional(),\r\n    height: z.number().positive().optional(),\r\n    priority: z.boolean().optional()\r\n  })).optional(),\r\n  \r\n  reviews: z.object({\r\n    title: z.string(),\r\n    subtitle: z.string(),\r\n    ratingValue: z.string(),\r\n    reviewCount: z.number(),\r\n    source: z.string()\r\n  }).optional(),\r\n  \r\n  faq: z.object({\r\n    title: z.string(),\r\n    subtitle: z.string()\r\n  }).optional(),\r\n  \r\n  contact: z.object({\r\n    email: z.email('Valid email is required'),\r\n    phone: z.string().min(1, 'Phone is required')\r\n  }).optional(),\r\n  \r\n  socials: z.object({\r\n    facebook: z.url().optional(),\r\n    instagram: z.url().optional(),\r\n    tiktok: z.url().optional(),\r\n    youtube: z.url().optional(),\r\n    googleBusiness: z.url().optional()\r\n  }).optional(),\r\n  \r\n  jsonLd: z.object({\r\n    organization: z.record(z.any()).optional(),\r\n    website: z.record(z.any()).optional()\r\n  }).optional()\r\n});\r\n\r\n// Validation helper functions\r\nexport function validateLocationData(data: unknown) {\r\n  try {\r\n    return {\r\n      success: true,\r\n      data: LocationPageSchema.parse(data),\r\n      errors: null\r\n    };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        errors: error.issues.map((issue) => ({\r\n          path: issue.path.join('.'),\r\n          message: issue.message,\r\n          code: issue.code\r\n        }))\r\n      };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function validateMainSiteConfig(data: unknown) {\r\n  try {\r\n    return {\r\n      success: true,\r\n      data: MainSiteConfigSchema.parse(data),\r\n      errors: null\r\n    };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        errors: error.issues.map((issue) => ({\r\n          path: issue.path.join('.'),\r\n          message: issue.message,\r\n          code: issue.code\r\n        }))\r\n      };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Type exports for use in other files\r\nexport type LocationPageData = z.infer<typeof LocationPageSchema>;\r\nexport type MainSiteConfigData = z.infer<typeof MainSiteConfigSchema>;\r\nexport type ValidationResult<T> = {\r\n  success: boolean;\r\n  data: T | null;\r\n  errors: Array<{\r\n    path: string;\r\n    message: string;\r\n    code: string;\r\n  }> | null;\r\n};\r\n","// Website content API calls\r\n\r\nexport interface FAQItem {\r\n  question: string;\r\n  answer: string;\r\n  category: string;\r\n}\r\n\r\nexport interface WebsiteContentData {\r\n  hero_title?: string;\r\n  hero_subtitle?: string;\r\n  reviews_title?: string;\r\n  reviews_subtitle?: string;\r\n  reviews_avg_rating?: number;\r\n  reviews_total_count?: number;\r\n  faq_title?: string;\r\n  faq_subtitle?: string;\r\n  faq_items?: FAQItem[];\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface WebsiteContentResponse {\r\n  success: boolean;\r\n  content?: WebsiteContentData;\r\n  message?: string;\r\n}\r\n\r\nexport const websiteContentApi = {\r\n  // Get website content for a specific tenant\r\n  getWebsiteContent: async (tenantSlug: string): Promise<WebsiteContentData> => {\r\n    const response = await fetch(`/api/website-content/${tenantSlug}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch website content: ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json() as WebsiteContentResponse;\r\n    \r\n    if (!data.success || !data.content) {\r\n      throw new Error(data.message || 'Failed to fetch website content');\r\n    }\r\n\r\n    return data.content;\r\n  },\r\n\r\n  // Get website content for the main site (no tenant slug)\r\n  getMainSiteContent: async (): Promise<WebsiteContentData> => {\r\n    const response = await fetch('/api/website-content/main', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch main site content: ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json() as WebsiteContentResponse;\r\n    \r\n    if (!data.success || !data.content) {\r\n      throw new Error(data.message || 'Failed to fetch main site content');\r\n    }\r\n\r\n    return data.content;\r\n  }\r\n};\r\n","// Website Content Context\r\n// Loads website content from database once on page load\r\n\r\nimport React, { createContext, ReactNode, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport { websiteContentApi, WebsiteContentData } from '../api/websiteContent.api';\r\n\r\ninterface WebsiteContentContextType {\r\n  content: WebsiteContentData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  refetch: () => void;\r\n}\r\n\r\nconst WebsiteContentContext = createContext<WebsiteContentContextType | null>(null);\r\n\r\ninterface WebsiteContentProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const WebsiteContentProvider: React.FC<WebsiteContentProviderProps> = ({ children }) => {\r\n  // Get tenant slug from URL params (same logic as DataProvider)\r\n  const params = useParams();\r\n  const slug = params.businessSlug || params.tenantSlug || params.slug;\r\n\r\n  // Skip fetching for non-tenant routes (admin, onboarding, login, etc.)\r\n  const currentPath = window.location.pathname;\r\n  const isNonTenantRoute = \r\n    currentPath.startsWith('/admin-dashboard') ||\r\n    currentPath.startsWith('/tenant-dashboard') ||\r\n    currentPath.startsWith('/tenant-onboarding') ||\r\n    currentPath.startsWith('/login') ||\r\n    currentPath.startsWith('/booking') ||\r\n    currentPath.startsWith('/preview-generator') ||\r\n    currentPath.startsWith('/preview');\r\n\r\n  const {\r\n    data: content,\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n  } = useQuery({\r\n    queryKey: ['shared','websiteContent', slug],\r\n    queryFn: async () => {\r\n      // Only fetch if we have a valid slug\r\n      if (!slug) {\r\n        return null;\r\n      }\r\n      const result = await websiteContentApi.getWebsiteContent(slug);\r\n      return result;\r\n    },\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    cacheTime: 10 * 60 * 1000, // 10 minutes\r\n    retry: 2,\r\n    enabled: !!slug && !isNonTenantRoute,\r\n  });\r\n\r\n  const contextValue: WebsiteContentContextType = {\r\n    content: content || null,\r\n    isLoading,\r\n    error: error?.message ?? null,\r\n    refetch: () => { void refetch(); },\r\n  };\r\n\r\n  return (\r\n    <WebsiteContentContext.Provider value={contextValue}>\r\n      {children}\r\n    </WebsiteContentContext.Provider>\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line react-refresh/only-export-components -- Standard context pattern: hook and provider together\r\nexport const useWebsiteContent = (): WebsiteContentContextType => {\r\n  const context = useContext(WebsiteContentContext);\r\n  if (!context) {\r\n    throw new Error('useWebsiteContent must be used within a WebsiteContentProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { useWebsiteContent } from '@/shared/contexts/WebsiteContentContext';\r\nimport { useIndustrySiteData } from '@/shared/hooks/useIndustrySiteData';\r\n\r\ninterface UseReviewsContentReturn {\r\n  title: string;\r\n  subtitle: string;\r\n}\r\n\r\ninterface UseReviewsContentProps {\r\n  locationData?: unknown;\r\n  customHeading?: string;\r\n  customIntro?: string;\r\n}\r\n\r\nexport const useReviewsContent = (props?: UseReviewsContentProps): UseReviewsContentReturn => {\r\n  // Get industry-specific site data\r\n  const { siteData } = useIndustrySiteData();\r\n  \r\n  // Always call hooks unconditionally\r\n  const { content: websiteContent } = useWebsiteContent();\r\n  \r\n  // Use passed locationData as fallback (reserved for future use)\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- Reserved for future location-specific data\r\n  const _locationData = props?.locationData;\r\n  \r\n  // All sites are now tenant-based, so use database content or industry-specific site data\r\n  // Priority: Custom props > Database content > Industry-specific site data > Fallback\r\n  const title = props?.customHeading\r\n    || websiteContent?.reviews_title\r\n    || (siteData?.reviews?.title ?? 'Customer Reviews');\r\n    \r\n  const subtitle = props?.customIntro\r\n    || websiteContent?.reviews_subtitle\r\n    || (siteData?.reviews?.subtitle ?? 'What our customers say');\r\n\r\n  return {\r\n    title,\r\n    subtitle\r\n  };\r\n};\r\n\r\n","import { useWebsiteContent } from '@/shared/contexts/WebsiteContentContext';\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\n\r\ninterface UseReviewsRatingReturn {\r\n  averageRating: number;\r\n  totalReviews: number;\r\n  googleBusinessUrl: string;\r\n}\r\n\r\nexport const useReviewsRating = (): UseReviewsRatingReturn => {\r\n  // Always call hooks unconditionally (hooks rules)\r\n  const data = useDataOptional();\r\n  const { content: websiteContent } = useWebsiteContent();\r\n  \r\n  const isPreview = data?.isPreview || false;\r\n  \r\n  // In preview mode, return impressive stats\r\n  if (isPreview) {\r\n    return {\r\n      averageRating: 4.9,\r\n      totalReviews: 863,\r\n      googleBusinessUrl: '#', // Dead link in preview\r\n    };\r\n  }\r\n  \r\n  // Pull reviews data from database, with sensible defaults\r\n  const averageRating = websiteContent?.reviews_avg_rating ?? 4.9;\r\n  const totalReviews = websiteContent?.reviews_total_count ?? 112;\r\n  \r\n  // Get Google Business URL from tenant's social media data (from DataContext)\r\n  // Fall back to legacy site.json if available, then to a default placeholder\r\n  const googleBusinessUrl = \r\n    data?.socialMedia.googleBusiness\r\n    ?? data?.siteConfig?.socials?.googleBusiness\r\n    ?? '#';\r\n\r\n  return {\r\n    averageRating,\r\n    totalReviews,\r\n    googleBusinessUrl\r\n  };\r\n};\r\n\r\n","import { useEffect,useState } from 'react';\r\n\r\nimport { useImageRotation } from '@/shared/hooks';\r\n\r\nimport type { Review } from '../types';\r\n\r\n// Fisher-Yates shuffle algorithm\r\nfunction shuffleArray<T>(array: T[]): T[] {\r\n  const shuffled = [...array];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = shuffled[i];\r\n    if (temp !== undefined && shuffled[j] !== undefined) {\r\n      shuffled[i] = shuffled[j];\r\n      shuffled[j] = temp;\r\n    }\r\n  }\r\n  return shuffled;\r\n}\r\n\r\nexport function useRotatingReviews(reviews: Review[]) {\r\n  const [reviewImages, setReviewImages] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Load gallery images for background rotation (no avatar images)\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    void (async (): Promise<void> => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        let images: string[] = [];\r\n\r\n        // Load gallery images for background rotation (no avatar images)\r\n        try {\r\n          const res = await fetch('/mobile-detailing/data/gallery.json');\r\n          if (!res.ok) throw new Error(`Failed to fetch gallery data: ${res.status}`);\r\n          const galleryData: unknown = await res.json();\r\n          const galleryImages = Array.isArray(galleryData) \r\n            ? galleryData.map((img: unknown) => {\r\n                if (typeof img === 'object' && img !== null && 'src' in img) {\r\n                  return (img as { src: unknown }).src;\r\n                }\r\n                return null;\r\n              }).filter((src): src is string => typeof src === 'string')\r\n            : [];\r\n          \r\n          // Use only gallery images for background rotation\r\n          images = shuffleArray(galleryImages);\r\n          \r\n          // If we still don't have enough images, add some defaults\r\n          if (images.length < 3) {\r\n            const defaultImages = [\r\n              '/mobile-detailing/images/gallery/dodge-viper-gts-grigio-telesto-studio.png',\r\n              '/mobile-detailing/images/gallery/bmw-m4-competition-grigio-telesto-studio.png'\r\n            ];\r\n            images = shuffleArray([...images, ...defaultImages]);\r\n          }\r\n        } catch (galleryError: unknown) {\r\n          // Fallback to default images only\r\n          console.warn('Failed to load gallery images:', galleryError);\r\n          images = ['/mobile-detailing/images/gallery/dodge-viper-gts-grigio-telesto-studio.png'];\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- Prevents state updates after component unmount\r\n        if (!cancelled) {\r\n          setReviewImages(images);\r\n          setLoading(false);\r\n          setError(null);\r\n        }\r\n      } catch (err: unknown) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- Prevents state updates after component unmount\r\n        if (!cancelled) {\r\n          setLoading(false);\r\n          setError(err instanceof Error ? err.message : 'Failed to load review images');\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, [reviews]);\r\n\r\n  // Use the image rotation utility\r\n  const rotation = useImageRotation({\r\n    images: reviewImages,\r\n    autoRotate: true,\r\n    interval: 8000, // Match FAQ interval\r\n    fadeDuration: 2000, // 2 seconds fade duration\r\n    preloadNext: true,\r\n    pauseOnHover: false // Background doesn't need hover pause\r\n  });\r\n\r\n  const { currentIndex, hasMultipleImages } = rotation;\r\n  \r\n  return {\r\n    images: reviewImages,\r\n    currentIndex,\r\n    loading,\r\n    error,\r\n    hasMultipleImages,\r\n    ...rotation\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Star, Users } from 'lucide-react';\r\n\r\nimport { useReviewsRating } from '@/features/reviews/hooks';\r\nimport { useReviewsAvailability } from '@/shared/hooks';\r\nimport { useDataOptional } from '@/shared/hooks/useData';\r\nimport type { ReviewsSummaryProps } from '@/shared/types/reviews';\r\n\r\nconst ReviewsSummary: React.FC<ReviewsSummaryProps> = ({ \r\n  averageRating: propAverageRating, \r\n  totalReviews: propTotalReviews,\r\n  googleBusinessUrl: propGoogleBusinessUrl,\r\n  className = '',\r\n  variant = 'default'\r\n}) => {\r\n  // Check if in preview mode\r\n  const data = useDataOptional();\r\n  const isPreview = data?.isPreview || false;\r\n  \r\n  // Check if reviews are available (unless in preview mode)\r\n  const hasReviews = useReviewsAvailability();\r\n  \r\n  // Get data from database (with fallbacks to site.json)\r\n  const dbData = useReviewsRating();\r\n  \r\n  // Use props if provided, otherwise use database/site data\r\n  // Ensure averageRating is a number (convert if string)\r\n  const averageRating = typeof propAverageRating === 'number' \r\n    ? propAverageRating \r\n    : (typeof dbData.averageRating === 'number' \r\n      ? dbData.averageRating \r\n      : parseFloat(String(dbData.averageRating)) || 4.9);\r\n      \r\n  // Ensure totalReviews is a number (convert if string)\r\n  const totalReviews = typeof propTotalReviews === 'number'\r\n    ? propTotalReviews\r\n    : (typeof dbData.totalReviews === 'number'\r\n      ? dbData.totalReviews\r\n      : parseInt(String(dbData.totalReviews), 10) || 112);\r\n      \r\n  const googleBusinessUrl = propGoogleBusinessUrl ?? dbData.googleBusinessUrl;\r\n  const isCompact = variant === 'compact';\r\n  \r\n  // Don't render if there are no reviews (unless in preview mode)\r\n  if (!isPreview && !hasReviews) {\r\n    return null;\r\n  }\r\n  \r\n  const containerClasses = isCompact \r\n    ? 'flex items-center justify-center gap-4'\r\n    : 'flex items-center justify-center gap-8';\r\n    \r\n  const textSize = isCompact ? 'text-lg' : 'text-2xl';\r\n  const iconSize = isCompact ? 'w-4 h-4' : 'w-6 h-6';\r\n  const usersIconSize = isCompact ? 'w-4 h-4' : 'w-5 h-5';\r\n  const dividerHeight = isCompact ? 'h-6' : 'h-8';\r\n\r\n  return (\r\n    <div className={`${containerClasses} ${className}`}>\r\n      {/* Rating Section - Clickable (or span in preview mode) */}\r\n      {isPreview ? (\r\n        <span className=\"flex items-center gap-2 cursor-pointer\">\r\n          <Star className={`${iconSize} text-orange-400 fill-current`} />\r\n          <span className={`${textSize} font-bold text-white`}>\r\n            {averageRating.toFixed(1)}\r\n          </span>\r\n          <span className=\"text-gray-300\">average</span>\r\n        </span>\r\n      ) : (\r\n        <a \r\n          href={googleBusinessUrl}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"flex items-center gap-2 hover:opacity-80 transition-opacity duration-200 cursor-pointer\"\r\n        >\r\n          <Star className={`${iconSize} text-orange-400 fill-current`} />\r\n          <span className={`${textSize} font-bold text-white`}>\r\n            {averageRating.toFixed(1)}\r\n          </span>\r\n          <span className=\"text-gray-300\">average</span>\r\n        </a>\r\n      )}\r\n      \r\n      {/* Vertical Divider */}\r\n      <div className={`w-px ${dividerHeight} bg-stone-600`}></div>\r\n      \r\n      {/* Reviews Count Section - Clickable (or span in preview mode) */}\r\n      {isPreview ? (\r\n        <span className=\"flex items-center gap-2 cursor-pointer\">\r\n          <Users className={`${usersIconSize} text-orange-400`} />\r\n          <span className={`${textSize} font-bold text-white`}>\r\n            {totalReviews.toLocaleString()}\r\n          </span>\r\n          <span className=\"text-gray-300\">reviews</span>\r\n        </span>\r\n      ) : (\r\n        <a \r\n          href={googleBusinessUrl}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"flex items-center gap-2 hover:opacity-80 transition-opacity duration-200 cursor-pointer\"\r\n        >\r\n          <Users className={`${usersIconSize} text-orange-400`} />\r\n          <span className={`${textSize} font-bold text-white`}>\r\n            {totalReviews.toLocaleString()}\r\n          </span>\r\n          <span className=\"text-gray-300\">reviews</span>\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsSummary;\r\n","import React from 'react';\r\nimport { BarChart3, TrendingUp } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\nexport const AnalyticsTab: React.FC = () => {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-gray-800 rounded-lg shadow-sm border border-gray-700\">\r\n        <div className=\"px-6 py-4 border-b border-gray-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-lg font-semibold text-white flex items-center gap-2\">\r\n              <BarChart3 className=\"w-5 h-5 text-blue-400\" />\r\n              Analytics Dashboard\r\n            </h2>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button \r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                className=\"flex items-center gap-2 px-3 py-1.5 bg-gray-600 hover:bg-gray-700 text-white rounded-md\"\r\n                leftIcon={<TrendingUp className=\"w-4 h-4\" />}\r\n              >\r\n                Export Report\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"p-6\">\r\n          <div className=\"text-center text-gray-300\">\r\n            <BarChart3 className=\"w-16 h-16 mx-auto mb-4 text-gray-600\" />\r\n            <h3 className=\"text-lg font-semibold mb-2\">Analytics Coming Soon</h3>\r\n            <p>This section will provide comprehensive analytics and reporting capabilities.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","interface ReviewFormData {\r\n  name: string;\r\n  stars: number;\r\n  title: string;\r\n  content: string;\r\n  type: 'affiliate' | 'mdh';\r\n  businessSlug?: string;\r\n  source: 'website' | 'google' | 'yelp' | 'facebook';\r\n  daysAgo: number;\r\n  weeksAgo: number;\r\n  specificDate: string;\r\n  serviceCategory: 'car' | 'truck' | 'boat' | 'rv' | 'motorcycle' | 'ceramic' | 'none';\r\n  avatarFile?: File;\r\n  reviewerUrl?: string;\r\n}\r\n\r\ninterface SeedReviewsResponse {\r\n  errorDetails?: unknown[];\r\n  count?: number;\r\n  reviewIds?: string[];\r\n}\r\n\r\n/**\r\n * Seed reviews via the admin API\r\n */\r\nexport const seedReviews = async (\r\n  reviews: ReviewFormData[],\r\n  signal?: AbortSignal\r\n): Promise<SeedReviewsResponse> => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    throw new Error('No authentication token found');\r\n  }\r\n\r\n  const response = await fetch('/api/admin/seed-reviews', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ reviews }),\r\n    signal\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    throw new Error(`Server error: ${String(response.status)} - ${errorText}`);\r\n  }\r\n\r\n  return await response.json() as SeedReviewsResponse;\r\n};\r\n\r\n/**\r\n * Upload a reviewer avatar via the admin API\r\n */\r\nexport const uploadReviewerAvatar = async (\r\n  avatarFile: File,\r\n  reviewerName: string,\r\n  reviewId: string\r\n): Promise<unknown> => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    throw new Error('No authentication token found');\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append('avatar', avatarFile);\r\n  formData.append('reviewerName', reviewerName);\r\n  formData.append('reviewId', reviewId);\r\n\r\n  const response = await fetch('/api/avatar/upload', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: formData\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Avatar upload failed');\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\n","import { useState } from 'react';\r\n\r\nimport { seedReviews, uploadReviewerAvatar } from '../api/admin.api';\r\n\r\ninterface ReviewFormData {\r\n  name: string;\r\n  stars: number;\r\n  title: string;\r\n  content: string;\r\n  type: 'affiliate' | 'mdh';\r\n  businessSlug?: string;\r\n  source: 'website' | 'google' | 'yelp' | 'facebook';\r\n  daysAgo: number;\r\n  weeksAgo: number;\r\n  specificDate: string;\r\n  serviceCategory: 'car' | 'truck' | 'boat' | 'rv' | 'motorcycle' | 'ceramic' | 'none';\r\n  avatarFile?: File;\r\n  reviewerUrl?: string;\r\n}\r\n\r\ntype SubmitStatus = 'idle' | 'success' | 'error';\r\n\r\n/**\r\n * Hook for seeding reviews via the admin API\r\n */\r\nexport const useSeedReview = () => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState<SubmitStatus>('idle');\r\n  const [submitMessage, setSubmitMessage] = useState('');\r\n\r\n  const submitReview = async (formData: ReviewFormData) => {\r\n    if (!formData.name || !formData.title || !formData.content) {\r\n      setSubmitMessage('Please fill in all required fields');\r\n      setSubmitStatus('error');\r\n      return false;\r\n    }\r\n\r\n    if (formData.type === 'affiliate' && !formData.businessSlug) {\r\n      setSubmitMessage('Please select a business for affiliate reviews');\r\n      setSubmitStatus('error');\r\n      return false;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setSubmitStatus('idle');\r\n    setSubmitMessage('Sending request...');\r\n\r\n    try {\r\n      // Add timeout to prevent infinite hanging\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => {\r\n        controller.abort();\r\n      }, 10000); // 10 second timeout\r\n\r\n      const result = await seedReviews([formData], controller.signal);\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      // Log error details if there are any\r\n      if (result.errorDetails && result.errorDetails.length > 0) {\r\n        console.error('Review creation errors:', result.errorDetails);\r\n      }\r\n\r\n      // If there's an avatar file and the review was created successfully, upload the avatar\r\n      if (formData.avatarFile && result.count && result.count > 0) {\r\n        setSubmitMessage('Review created! Uploading avatar...');\r\n\r\n        try {\r\n          await uploadReviewerAvatar(\r\n            formData.avatarFile,\r\n            formData.name,\r\n            result.reviewIds?.[0] ?? '1'\r\n          );\r\n          setSubmitMessage(`Successfully added review with avatar: \"${formData.title}\"`);\r\n          setSubmitStatus('success');\r\n        } catch (avatarError) {\r\n          console.warn('Avatar upload error:', avatarError);\r\n          setSubmitMessage(`Review created (avatar upload failed): \"${formData.title}\"`);\r\n          setSubmitStatus('success');\r\n        }\r\n      } else {\r\n        setSubmitMessage(`Successfully added review: \"${formData.title}\"`);\r\n        setSubmitStatus('success');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Submit error:', error);\r\n      setSubmitStatus('error');\r\n\r\n      if (error instanceof Error && error.name === 'AbortError') {\r\n        setSubmitMessage(\r\n          'Request timed out after 10 seconds. Please check if the backend server is running.'\r\n        );\r\n      } else {\r\n        setSubmitMessage(error instanceof Error ? error.message : 'Failed to seed review');\r\n      }\r\n\r\n      return false;\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetStatus = () => {\r\n    setSubmitStatus('idle');\r\n    setSubmitMessage('');\r\n  };\r\n\r\n  return {\r\n    isSubmitting,\r\n    submitStatus,\r\n    submitMessage,\r\n    submitReview,\r\n    resetStatus\r\n  };\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { AlertCircle, CheckCircle, Star } from 'lucide-react';\r\n\r\nimport { useSeedReview } from '@/features/adminDashboard/hooks/useSeedReview';\r\n\r\ninterface ReviewFormData {\r\n  name: string;\r\n  stars: number;\r\n  title: string;\r\n  content: string;\r\n  type: 'affiliate' | 'mdh';\r\n  businessSlug?: string;\r\n  source: 'website' | 'google' | 'yelp' | 'facebook';\r\n  daysAgo: number;\r\n  weeksAgo: number;\r\n  specificDate: string;\r\n  serviceCategory: 'car' | 'truck' | 'boat' | 'rv' | 'motorcycle' | 'ceramic' | 'none';\r\n  avatarFile?: File;\r\n  reviewerUrl?: string;\r\n}\r\n\r\n\r\nconst ReviewsTab: React.FC = () => {\r\n  const [formData, setFormData] = useState<ReviewFormData>({\r\n    name: '',\r\n    stars: 5,\r\n    title: '',\r\n    content: '',\r\n    type: 'mdh',\r\n    businessSlug: '',\r\n    source: 'website',\r\n    daysAgo: 0,\r\n    weeksAgo: 0,\r\n    specificDate: '',\r\n    serviceCategory: 'none',\r\n    reviewerUrl: ''\r\n  });\r\n\r\n  const { isSubmitting, submitStatus, submitMessage, submitReview } = useSeedReview();\r\n\r\n  // Sample business slugs for affiliate reviews\r\n  const businessSlugs = [\r\n    { value: 'jps', label: 'JP\\'s Mobile Detailing' },\r\n    { value: 'premium-auto-spa', label: 'Premium Auto Spa' },\r\n    { value: 'elite-mobile-detail', label: 'Elite Mobile Detail' },\r\n    { value: 'quick-clean-mobile', label: 'Quick Clean Mobile' }\r\n  ];\r\n\r\n  const handleInputChange = (field: keyof ReviewFormData, value: string | number | File | undefined) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmitReview = async () => {\r\n    const success = await submitReview(formData);\r\n\r\n    if (success) {\r\n      // Reset form\r\n      setFormData({\r\n        name: '',\r\n        stars: 5,\r\n        title: '',\r\n        content: '',\r\n        type: 'mdh',\r\n        businessSlug: '',\r\n        source: 'website',\r\n        daysAgo: 0,\r\n        weeksAgo: 0,\r\n        specificDate: '',\r\n        serviceCategory: 'none',\r\n        reviewerUrl: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderStars = (rating: number, interactive: boolean = false) => {\r\n    return (\r\n      <div className=\"flex space-x-1\">\r\n        {[1, 2, 3, 4, 5].map((star) => (\r\n          <Star\r\n            key={star}\r\n            className={`w-5 h-5 ${\r\n              star <= rating\r\n                ? 'text-yellow-400 fill-current'\r\n                : 'text-gray-300'\r\n            } ${interactive ? 'cursor-pointer hover:text-yellow-300' : ''}`}\r\n            onClick={() => { if (interactive) handleInputChange('stars', star); }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Google Reviews Integration */}\r\n      <div className=\"bg-blue-900 rounded-lg p-6 border border-blue-700\">\r\n        <h2 className=\"text-xl font-semibold text-white mb-4 flex items-center gap-2\">\r\n          <Star className=\"w-5 h-5 text-yellow-400\" />\r\n          Google Reviews Integration\r\n        </h2>\r\n        <p className=\"text-blue-200 mb-4\">\r\n          Connect your Google Business Profile to automatically fetch and display reviews on your website.\r\n        </p>\r\n        <a \r\n          href=\"http://localhost:3001/api/google/auth\"\r\n          className=\"inline-flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\"\r\n        >\r\n          <Star className=\"w-4 h-4\" />\r\n          Connect Google Reviews\r\n        </a>\r\n        <p className=\"text-xs text-blue-300 mt-2\">\r\n          This will open Google's authorization screen to connect your business profile.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"bg-gray-800 rounded-lg p-6\">\r\n        <h2 className=\"text-xl font-semibold text-white mb-4\">Seed Reviews</h2>\r\n        <p className=\"text-gray-300 mb-6\">\r\n          Add reviews to the system. Just fill in the 4 required fields and the rest will be handled automatically.\r\n        </p>\r\n\r\n        {/* Form */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n          <div>\r\n            <label htmlFor=\"reviewer-name\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Reviewer Name *\r\n            </label>\r\n            <input\r\n              id=\"reviewer-name\"\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => { handleInputChange('name', e.target.value); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"e.g., John Smith\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"rating\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Rating *\r\n            </label>\r\n            <div id=\"rating\">\r\n              {renderStars(formData.stars, true)}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"md:col-span-2\">\r\n            <label htmlFor=\"review-title\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Review Title *\r\n            </label>\r\n            <input\r\n              id=\"review-title\"\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => { handleInputChange('title', e.target.value); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"e.g., Amazing service!\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"md:col-span-2\">\r\n            <label htmlFor=\"review-content\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Review Content *\r\n            </label>\r\n            <textarea\r\n              id=\"review-content\"\r\n              value={formData.content}\r\n              onChange={(e) => { handleInputChange('content', e.target.value); }}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"Write your review here...\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"review-type\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Review Type\r\n            </label>\r\n            <select\r\n              id=\"review-type\"\r\n              value={formData.type}\r\n              onChange={(e) => { handleInputChange('type', e.target.value as 'affiliate' | 'mdh'); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"mdh\">MDH Site Review</option>\r\n              <option value=\"affiliate\">Affiliate Review</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"business-slug\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Business {formData.type === 'affiliate' && <span className=\"text-red-400\">*</span>}\r\n            </label>\r\n            <select\r\n              id=\"business-slug\"\r\n              value={formData.businessSlug}\r\n              onChange={(e) => { handleInputChange('businessSlug', e.target.value); }}\r\n              className={`w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                formData.type === 'affiliate' ? '' : 'opacity-50 cursor-not-allowed'\r\n              }`}\r\n              disabled={formData.type !== 'affiliate'}\r\n            >\r\n              <option value=\"\">{formData.type === 'affiliate' ? 'Select a business' : 'N/A for MDH reviews'}</option>\r\n              {businessSlugs.map((business) => (\r\n                <option key={business.value} value={business.value}>\r\n                  {business.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {formData.type !== 'affiliate' && (\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                Business selection only applies to affiliate reviews\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"review-source\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Review Source\r\n            </label>\r\n            <select\r\n              id=\"review-source\"\r\n              value={formData.source}\r\n              onChange={(e) => { handleInputChange('source', e.target.value as 'website' | 'google' | 'yelp' | 'facebook'); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"website\">Website</option>\r\n              <option value=\"google\">Google</option>\r\n              <option value=\"yelp\">Yelp</option>\r\n              <option value=\"facebook\">Facebook</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"days-ago\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Days Ago (0-6 for recent reviews)\r\n            </label>\r\n            <input\r\n              id=\"days-ago\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"6\"\r\n              value={formData.daysAgo}\r\n              onChange={(e) => {\r\n                const days = parseInt(e.target.value) || 0;\r\n                handleInputChange('daysAgo', days);\r\n                if (days > 0) {\r\n                  handleInputChange('weeksAgo', 0); // Clear weeks if days is set\r\n                }\r\n              }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"weeks-ago\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Weeks Ago (1+ for older reviews)\r\n            </label>\r\n            <input\r\n              id=\"weeks-ago\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"52\"\r\n              value={formData.weeksAgo}\r\n              onChange={(e) => {\r\n                const weeks = parseInt(e.target.value) || 0;\r\n                handleInputChange('weeksAgo', weeks);\r\n                if (weeks > 0) {\r\n                  handleInputChange('daysAgo', 0); // Clear days if weeks is set\r\n                  handleInputChange('specificDate', ''); // Clear date if weeks is set\r\n                }\r\n              }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"specific-date\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Specific Date (for reviews older than 52 weeks)\r\n            </label>\r\n            <input\r\n              id=\"specific-date\"\r\n              type=\"date\"\r\n              value={formData.specificDate}\r\n              onChange={(e) => {\r\n                handleInputChange('specificDate', e.target.value);\r\n                if (e.target.value) {\r\n                  handleInputChange('daysAgo', 0); // Clear days if date is set\r\n                  handleInputChange('weeksAgo', 0); // Clear weeks if date is set\r\n                }\r\n              }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <p className=\"text-xs text-gray-400 mt-1\">\r\n              Use this for reviews older than 52 weeks (Google switches to date mode)\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"service-category\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Service Category\r\n            </label>\r\n            <select\r\n              id=\"service-category\"\r\n              value={formData.serviceCategory}\r\n              onChange={(e) => { handleInputChange('serviceCategory', e.target.value as 'car' | 'truck' | 'boat' | 'rv' | 'motorcycle' | 'ceramic' | 'none'); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"none\">None</option>\r\n              <option value=\"car\">Car</option>\r\n              <option value=\"truck\">Truck</option>\r\n              <option value=\"boat\">Boat</option>\r\n              <option value=\"rv\">RV</option>\r\n              <option value=\"motorcycle\">Motorcycle</option>\r\n              <option value=\"ceramic\">Ceramic</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"avatar-file\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Avatar Image (Optional)\r\n            </label>\r\n            <input\r\n              id=\"avatar-file\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={(e) => {\r\n                const file = e.target.files?.[0];\r\n                if (file) {\r\n                  // Validate file size (5MB limit)\r\n                  if (file.size > 5 * 1024 * 1024) {\r\n                    alert('Avatar file must be less than 5MB');\r\n                    e.target.value = ''; // Clear the file input\r\n                    return;\r\n                  }\r\n                  handleInputChange('avatarFile', file);\r\n                }\r\n              }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-blue-600 file:text-white hover:file:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            {formData.avatarFile && (\r\n              <div className=\"mt-2 text-sm text-gray-400\">\r\n                Selected: {formData.avatarFile.name} ({(formData.avatarFile.size / 1024 / 1024).toFixed(2)} MB)\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"reviewer-url\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Reviewer Profile URL (Optional)\r\n            </label>\r\n            <input\r\n              id=\"reviewer-url\"\r\n              type=\"url\"\r\n              value={formData.reviewerUrl}\r\n              onChange={(e) => { handleInputChange('reviewerUrl', e.target.value); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"e.g., https://www.google.com/maps/contrib/123456789\"\r\n            />\r\n            <p className=\"text-xs text-gray-400 mt-1\">\r\n              Link to reviewer&rsquo;s profile page (Google, Yelp, etc.)\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-4\">\r\n          <button\r\n            onClick={() => { void handleSubmitReview(); }}\r\n            disabled={isSubmitting}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {isSubmitting ? (\r\n              <>\r\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                Saving...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <CheckCircle className=\"w-4 h-4\" />\r\n                Save Review\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Status Message */}\r\n        {submitMessage && (\r\n          <div className={`mt-4 p-3 rounded-md flex items-center gap-2 ${\r\n            submitStatus === 'success' \r\n              ? 'bg-green-900 text-green-300' \r\n              : 'bg-red-900 text-red-300'\r\n          }`}>\r\n            {submitStatus === 'success' ? (\r\n              <CheckCircle className=\"w-4 h-4\" />\r\n            ) : (\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n            )}\r\n            {submitMessage}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsTab;\r\n","import React from 'react';\r\nimport { Settings, Shield } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\nexport const SettingsTab: React.FC = () => {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-gray-800 rounded-lg shadow-sm border border-gray-700\">\r\n        <div className=\"px-6 py-4 border-b border-gray-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-lg font-semibold text-white flex items-center gap-2\">\r\n              <Settings className=\"w-5 h-5 text-blue-400\" />\r\n              System Settings\r\n            </h2>\r\n            <Button \r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              className=\"flex items-center gap-2 px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white rounded-md\"\r\n              leftIcon={<Shield className=\"w-4 h-4\" />}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"p-6\">\r\n          <div className=\"text-center text-gray-300\">\r\n            <Settings className=\"w-16 h-16 mx-auto mb-4 text-gray-600\" />\r\n            <h3 className=\"text-lg font-semibold mb-2\">Settings Coming Soon</h3>\r\n            <p>This section will allow you to configure system settings and preferences.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CheckCircle, X, XCircle } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\ninterface ApplicationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: { slug?: string; reason?: string; notes: string }) => Promise<void>;\r\n  type: 'approve' | 'reject';\r\n  businessName: string;\r\n  isLoading?: boolean;\r\n}\r\n\r\nexport const ApplicationModal: React.FC<ApplicationModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n  type,\r\n  businessName,\r\n  isLoading = false\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    slug: '',\r\n    reason: '',\r\n    notes: ''\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent): void => {\r\n    e.preventDefault();\r\n    \r\n    // Validate slug format for approval\r\n    if (type === 'approve' && formData.slug) {\r\n      if (formData.slug.length < 3) {\r\n        alert('Slug must be at least 3 characters long');\r\n        return;\r\n      }\r\n      if (formData.slug.length > 50) {\r\n        alert('Slug must be less than 50 characters long');\r\n        return;\r\n      }\r\n      if (!/^[a-z0-9-]+$/.test(formData.slug)) {\r\n        alert('Slug must contain only lowercase letters, numbers, and hyphens');\r\n        return;\r\n      }\r\n      if (formData.slug.startsWith('-') || formData.slug.endsWith('-')) {\r\n        alert('Slug cannot start or end with a hyphen');\r\n        return;\r\n      }\r\n      if (formData.slug.includes('--')) {\r\n        alert('Slug cannot contain consecutive hyphens');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Validate rejection reason\r\n    if (type === 'reject' && formData.reason) {\r\n      if (formData.reason.trim().length < 10) {\r\n        alert('Rejection reason must be at least 10 characters long');\r\n        return;\r\n      }\r\n      if (formData.reason.trim().length > 500) {\r\n        alert('Rejection reason must be less than 500 characters long');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Validate admin notes length\r\n    if (formData.notes && formData.notes.trim().length > 1000) {\r\n      alert('Admin notes must be less than 1000 characters long');\r\n      return;\r\n    }\r\n    \r\n    void onSubmit(formData);\r\n    setFormData({ slug: '', reason: '', notes: '' });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData({ slug: '', reason: '', notes: '' });\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-md mx-4\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            {type === 'approve' ? (\r\n              <CheckCircle className=\"w-6 h-6 text-green-400\" />\r\n            ) : (\r\n              <XCircle className=\"w-6 h-6 text-red-400\" />\r\n            )}\r\n            <h3 className=\"text-lg font-semibold text-white\">\r\n              {type === 'approve' ? 'Approve' : 'Reject'} Application\r\n            </h3>\r\n          </div>\r\n          <Button\r\n            onClick={handleClose}\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-gray-400 hover:text-white p-1\"\r\n          >\r\n            <X className=\"w-5 h-5\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <p className=\"text-gray-300 text-sm\">\r\n            {type === 'approve' ? 'Approving' : 'Rejecting'} application for{' '}\r\n            <span className=\"font-medium text-white\">{businessName}</span>\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {type === 'approve' && (\r\n            <div>\r\n              <label htmlFor=\"slug\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                Approved Slug *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"slug\"\r\n                value={formData.slug}\r\n                onChange={(e) => { setFormData({ ...formData, slug: e.target.value }); }}\r\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"e.g., my-business-name\"\r\n                required\r\n              />\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                This will be the URL slug for the affiliate&rsquo;s business page\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {type === 'reject' && (\r\n            <div>\r\n              <label htmlFor=\"reason\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                Rejection Reason *\r\n              </label>\r\n              <textarea\r\n                id=\"reason\"\r\n                value={formData.reason}\r\n                onChange={(e) => { setFormData({ ...formData, reason: e.target.value }); }}\r\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Please provide a reason for rejection...\"\r\n                rows={3}\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Admin Notes\r\n            </label>\r\n            <textarea\r\n              id=\"notes\"\r\n              value={formData.notes}\r\n              onChange={(e) => { setFormData({ ...formData, notes: e.target.value }); }}\r\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"Additional notes (optional)...\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex gap-3 pt-2\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={handleClose}\r\n              variant=\"secondary\"\r\n              size=\"md\"\r\n              className=\"flex-1 px-4 py-2 bg-gray-600 hover:bg-gray-700\"\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant={type === 'approve' ? 'primary' : 'destructive'}\r\n              size=\"md\"\r\n              className={`flex-1 px-4 py-2 ${\r\n                type === 'approve'\r\n                  ? 'bg-green-600 hover:bg-green-700'\r\n                  : 'bg-red-600 hover:bg-red-700'\r\n              }`}\r\n              loading={isLoading}\r\n              disabled={isLoading}\r\n            >\r\n              {type === 'approve' ? 'Approve' : 'Reject'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { AlertTriangle, X } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\ninterface DeleteConfirmationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n  title: string;\r\n  message: string;\r\n  itemName: string;\r\n  isLoading?: boolean;\r\n  isTenant?: boolean;\r\n}\r\n\r\nexport const DeleteConfirmationModal: React.FC<DeleteConfirmationModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  title,\r\n  message,\r\n  itemName,\r\n  isLoading = false,\r\n  isTenant = false\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-md mx-4\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <AlertTriangle className=\"w-6 h-6 text-red-400\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">\r\n              {title}\r\n            </h3>\r\n          </div>\r\n          <Button\r\n            onClick={onClose}\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-gray-400 hover:text-white\"\r\n            disabled={isLoading}\r\n          >\r\n            <X className=\"w-4 h-4\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <p className=\"text-gray-300 mb-4\">\r\n            {message}\r\n          </p>\r\n          \r\n          <div className=\"bg-gray-700 rounded-lg p-3 mb-4\">\r\n            <p className=\"text-white font-medium\">\r\n              {itemName}\r\n            </p>\r\n          </div>\r\n\r\n          {isTenant && (\r\n            <div className=\"bg-red-900/20 border border-red-700 rounded-lg p-4 mb-4\">\r\n              <p className=\"text-red-200 text-sm font-medium mb-2\">⚠️ This will permanently delete:</p>\r\n              <ul className=\"text-red-300 text-xs space-y-1 ml-4\">\r\n                <li>• Tenant business record</li>\r\n                <li>• User account</li>\r\n                <li>• All reviews</li>\r\n                <li>• Website content</li>\r\n                <li>• Images and gallery</li>\r\n                <li>• Services and pricing</li>\r\n                <li>• Bookings and quotes</li>\r\n                <li>• Schedule and appointments</li>\r\n                <li>• Subscriptions</li>\r\n                <li>• Health monitoring data</li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          <p className=\"text-red-400 text-sm font-medium\">\r\n            This action cannot be undone!\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"flex gap-3\">\r\n          <Button\r\n            onClick={onClose}\r\n            variant=\"secondary\"\r\n            className=\"flex-1\"\r\n            disabled={isLoading}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={onConfirm}\r\n            variant=\"destructive\"\r\n            className=\"flex-1 bg-red-600 hover:bg-red-700\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? 'Deleting...' : 'Delete'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { CheckCircle, X,XCircle } from 'lucide-react';\r\n\r\ninterface ToastProps {\r\n  message: string;\r\n  type: 'success' | 'error';\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  duration?: number;\r\n}\r\n\r\nexport const Toast: React.FC<ToastProps> = ({\r\n  message,\r\n  type,\r\n  isVisible,\r\n  onClose,\r\n  duration = 5000\r\n}) => {\r\n  useEffect(() => {\r\n    if (isVisible && duration > 0) {\r\n      const timer = setTimeout(() => {\r\n        onClose();\r\n      }, duration);\r\n      return () => { clearTimeout(timer); };\r\n    }\r\n  }, [isVisible, duration, onClose]);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const bgColor = type === 'success' ? 'bg-green-600' : 'bg-red-600';\r\n  const Icon = type === 'success' ? CheckCircle : XCircle;\r\n\r\n  return (\r\n    <div className={`fixed top-4 right-4 z-50 ${bgColor} text-white px-6 py-4 rounded-lg shadow-lg max-w-sm`}>\r\n      <div className=\"flex items-center gap-3\">\r\n        <Icon className=\"w-5 h-5\" />\r\n        <span className=\"flex-1\">{message}</span>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"text-white hover:text-gray-200 transition-colors\"\r\n        >\r\n          <X className=\"w-4 h-4\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// import { config } from '@/../config/env';\r\n\r\n// Extend Error interface for custom error codes\r\ninterface CustomError extends Error {\r\n  code?: string;\r\n  retryAfterSeconds?: number;\r\n  remainingAttempts?: number;\r\n  resetTime?: number;\r\n}\r\n\r\n// API error response interface\r\ninterface ApiErrorResponse {\r\n  message?: string;\r\n  error?: string;\r\n  retryAfterSeconds?: number;\r\n  remainingAttempts?: number;\r\n  resetTime?: number;\r\n}\r\n\r\n// Generic API response interface for unknown responses\r\ninterface UnknownApiResponse {\r\n  success?: boolean;\r\n  message?: string;\r\n  error?: string;\r\n  data?: unknown;\r\n  [key: string]: unknown;\r\n}\r\n\r\nconst API_BASE_URL = ''; // Always use relative URLs to leverage Vite proxy\r\n\r\nexport interface QuoteFormData {\r\n  name: string;\r\n  email: string;\r\n  phone?: string;\r\n  vehicle: string;\r\n  services: string[];\r\n  additionalInfo?: string;\r\n  preferredDate?: string;\r\n}\r\n\r\n// User interface for admin operations\r\nexport interface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  role?: 'admin' | 'affiliate' | 'customer' | 'tenant';\r\n  is_admin?: boolean;\r\n  created_at: string;\r\n  business_name?: string;\r\n  application_status?: string;\r\n  slug?: string;\r\n}\r\n\r\n// Affiliate application interface\r\nexport interface AffiliateApplication {\r\n  id: number;\r\n  slug: string;\r\n  business_name: string;\r\n  owner: string;\r\n  phone: string;\r\n  email: string;\r\n  has_insurance: boolean;\r\n  source: string;\r\n  notes?: string;\r\n  application_date: string;\r\n  created_at: string;\r\n  city?: string;\r\n  state_code?: string;\r\n  postal_code?: string;\r\n}\r\n\r\n// Generic API response interface\r\nexport interface ApiResponse<T = unknown> {\r\n  success: boolean;\r\n  message?: string;\r\n  data?: T;\r\n}\r\n\r\n// Specific response interfaces\r\nexport interface UsersResponse extends ApiResponse {\r\n  users: User[];\r\n  count: number;\r\n}\r\n\r\nexport interface ApplicationsResponse extends ApiResponse {\r\n  applications: AffiliateApplication[];\r\n  count: number;\r\n}\r\n\r\nexport interface LoginResponse extends ApiResponse {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  user: {\r\n    id: number;\r\n    email: string;\r\n    role: string;\r\n    name: string;\r\n    phone?: string;\r\n    is_admin?: boolean;\r\n  };\r\n}\r\n\r\nexport interface AffiliateApprovalResponse extends ApiResponse {\r\n  affiliate: AffiliateApplication & {\r\n    user_id: number;\r\n    temp_password: string;\r\n  };\r\n  note: string;\r\n}\r\n\r\nexport interface AffiliateRejectionResponse extends ApiResponse {\r\n  affiliate: AffiliateApplication;\r\n}\r\n\r\nexport interface AffiliateDeletionResponse extends ApiResponse {\r\n  deletedAffiliate?: {\r\n    id: number;\r\n    business_name: string;\r\n    slug: string;\r\n    email: string;\r\n  };\r\n  deletedUser?: {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n  };\r\n}\r\n\r\nclass ApiService {\r\n  private async makeRequest<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    \r\n    const defaultOptions: RequestInit = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, defaultOptions);\r\n      const data = await response.json() as UnknownApiResponse;\r\n      \r\n      if (!response.ok) {\r\n        const errorMessage = data.message || data.error || 'Network response was not ok';\r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      return data as T;\r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw new Error(error instanceof Error ? error.message : 'An error occurred');\r\n    }\r\n  }\r\n\r\n  async submitQuoteRequest(data: QuoteFormData): Promise<ApiResponse> {\r\n    return this.makeRequest<ApiResponse>('/api/quote', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  async checkHealth(): Promise<ApiResponse> {\r\n    return this.makeRequest<ApiResponse>('/api/health');\r\n  }\r\n\r\n  async login(email: string, password: string): Promise<LoginResponse> {\r\n    // Use relative URL to leverage Vite proxy\r\n    const url = '/api/auth/login';\r\n    try {\r\n      // Create an AbortController for timeout\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => { controller.abort(); }, 10000); // 10 second timeout\r\n      \r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n        signal: controller.signal\r\n      });\r\n      \r\n      clearTimeout(timeoutId);\r\n      \r\n      const data = await response.json() as ApiErrorResponse & LoginResponse;\r\n      \r\n      if (!response.ok) {\r\n        // Handle rate limiting specifically\r\n        if (response.status === 429) {\r\n          const error: CustomError = new Error(data.error || 'Rate limited');\r\n          error.code = 'RATE_LIMITED';\r\n          error.retryAfterSeconds = data.retryAfterSeconds;\r\n          error.remainingAttempts = data.remainingAttempts;\r\n          error.resetTime = data.resetTime;\r\n          throw error;\r\n        }\r\n        \r\n        // Handle other error codes\r\n        if (response.status === 401) {\r\n          const error: CustomError = new Error(data.error || 'Invalid credentials');\r\n          error.code = 'INVALID_CREDENTIALS';\r\n          throw error;\r\n        }\r\n        \r\n        if (response.status === 403) {\r\n          const error: CustomError = new Error(data.error || 'Access denied');\r\n          error.code = 'FORBIDDEN';\r\n          throw error;\r\n        }\r\n        \r\n        const errorMessage = data.message || data.error || 'Login failed';\r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      \r\n      // Handle timeout specifically\r\n      if (error instanceof Error && error.name === 'AbortError') {\r\n        const timeoutError: CustomError = new Error('Login request timed out. Please check your connection and try again.');\r\n        timeoutError.code = 'TIMEOUT';\r\n        throw timeoutError;\r\n      }\r\n      \r\n      // Handle network errors\r\n      if (error instanceof TypeError && error.message.includes('fetch')) {\r\n        const networkError: CustomError = new Error('Network error. Please check your connection and try again.');\r\n        networkError.code = 'NETWORK_ERROR';\r\n        throw networkError;\r\n      }\r\n      \r\n      // Re-throw with additional context if it's not already an Error\r\n      if (error instanceof Error) {\r\n        throw error;\r\n      }\r\n      throw new Error(error instanceof Error ? error.message : 'Login failed');\r\n    }\r\n  }\r\n\r\n  async register(email: string, password: string, name: string, phone?: string): Promise<LoginResponse> {\r\n    // Use relative URL to leverage Vite proxy\r\n    const url = '/api/auth/register';\r\n    \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password, name, phone }),\r\n      });\r\n      \r\n      const data = await response.json() as ApiErrorResponse & LoginResponse;\r\n      \r\n      if (!response.ok) {\r\n        // Handle rate limiting specifically\r\n        if (response.status === 429) {\r\n          const error: CustomError = new Error(data.error || 'Rate limited');\r\n          error.code = 'RATE_LIMITED';\r\n          error.retryAfterSeconds = data.retryAfterSeconds;\r\n          error.remainingAttempts = data.remainingAttempts;\r\n          error.resetTime = data.resetTime;\r\n          throw error;\r\n        }\r\n        \r\n        // Handle other error codes\r\n        if (response.status === 400) {\r\n          const errorMessage = data.message || data.error || 'Registration failed';\r\n          const error: CustomError = new Error(errorMessage);\r\n          error.code = 'VALIDATION_ERROR';\r\n          throw error;\r\n        }\r\n        \r\n        const errorMessage = data.message || data.error || 'Registration failed';\r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      // Re-throw with additional context if it's not already an Error\r\n      if (error instanceof Error) {\r\n        throw error;\r\n      }\r\n      throw new Error(error instanceof Error ? error.message : 'Registration failed');\r\n    }\r\n  }\r\n\r\n  async getUsers(status?: string): Promise<UsersResponse> {\r\n    const endpoint = status && status !== 'all-users' \r\n      ? `/api/admin/users?status=${status}`\r\n      : '/api/admin/users';\r\n    \r\n    // Get token from localStorage (optional in development mode)\r\n    const token = localStorage.getItem('token');\r\n    \r\n    const headers: HeadersInit = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    \r\n    // Only add Authorization header if token exists\r\n    if (token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    \r\n    return this.makeRequest<UsersResponse>(endpoint, {\r\n      headers,\r\n    });\r\n  }\r\n\r\n  async getPendingApplications(): Promise<ApplicationsResponse> {\r\n    // Use relative URL to leverage Vite proxy\r\n    const url = '/api/admin/pending-applications';\r\n    \r\n    // Get token from localStorage (optional in development mode)\r\n    const token = localStorage.getItem('token');\r\n    \r\n    try {\r\n      const headers: HeadersInit = {\r\n        'Content-Type': 'application/json',\r\n      };\r\n      \r\n      // Only add Authorization header if token exists\r\n      if (token) {\r\n        headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      \r\n      const response = await fetch(url, {\r\n        headers,\r\n      });\r\n      \r\n      const data = await response.json() as ApplicationsResponse;\r\n      \r\n      if (!response.ok) {\r\n        const errorMessage = data.message || 'Network response was not ok';\r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw new Error(error instanceof Error ? error.message : 'An error occurred');\r\n    }\r\n  }\r\n\r\n  async approveApplication(applicationId: number, approvedSlug: string, adminNotes: string, serviceAreas?: Array<{city: string, state: string, zip?: string}>): Promise<AffiliateApprovalResponse> {\r\n    // Use relative URL to leverage Vite proxy\r\n    const url = `/api/admin/approve-application/${applicationId.toString()}`;\r\n    \r\n    // Get token from localStorage (optional in development mode)\r\n    const token = localStorage.getItem('token');\r\n    \r\n    try {\r\n      const headers: HeadersInit = {\r\n        'Content-Type': 'application/json',\r\n      };\r\n      \r\n      // Only add Authorization header if token exists\r\n      if (token) {\r\n        headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      \r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify({\r\n          approved_slug: approvedSlug,\r\n          admin_notes: adminNotes,\r\n          ...(serviceAreas && serviceAreas.length > 0 && { service_areas: serviceAreas })\r\n        }),\r\n      });\r\n      \r\n      const data = await response.json() as AffiliateApprovalResponse;\r\n      \r\n      if (!response.ok) {\r\n        const errorMessage = data.message || 'Network response was not ok';\r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw new Error(error instanceof Error ? error.message : 'An error occurred');\r\n    }\r\n  }\r\n\r\n  async rejectApplication(applicationId: number, rejectionReason: string, adminNotes: string): Promise<AffiliateRejectionResponse> {\r\n    // Use relative URL to leverage Vite proxy\r\n    const url = `/api/admin/reject-application/${applicationId.toString()}`;\r\n    \r\n    // Get token from localStorage (optional in development mode)\r\n    const token = localStorage.getItem('token');\r\n    \r\n    try {\r\n      const headers: HeadersInit = {\r\n        'Content-Type': 'application/json',\r\n      };\r\n      \r\n      // Only add Authorization header if token exists\r\n      if (token) {\r\n        headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      \r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify({\r\n          rejection_reason: rejectionReason,\r\n          admin_notes: adminNotes\r\n        }),\r\n      });\r\n      \r\n      const data = await response.json() as AffiliateRejectionResponse;\r\n      \r\n      if (!response.ok) {\r\n        const errorMessage = data.message || 'Network response was not ok';\r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw new Error(error instanceof Error ? error.message : 'An error occurred');\r\n    }\r\n  }\r\n\r\n  async deleteAffiliate(affiliateId: number): Promise<AffiliateDeletionResponse> {\r\n    // Use relative URL to leverage Vite proxy\r\n    const url = `/api/admin/tenants/${affiliateId.toString()}`;\r\n    \r\n    // Get token from localStorage (optional in development mode)\r\n    const token = localStorage.getItem('token');\r\n    \r\n    try {\r\n      const headers: HeadersInit = {\r\n        'Content-Type': 'application/json',\r\n      };\r\n      \r\n      // Only add Authorization header if token exists\r\n      if (token) {\r\n        headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      \r\n      const response = await fetch(url, {\r\n        method: 'DELETE',\r\n        headers,\r\n      });\r\n      \r\n      const data = await response.json() as AffiliateDeletionResponse;\r\n      \r\n      if (!response.ok) {\r\n        const errorMessage = data.message || 'Network response was not ok';\r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw new Error(error instanceof Error ? error.message : 'An error occurred');\r\n    }\r\n  }\r\n}\r\n\r\nexport const apiService = new ApiService(); ","// Simple event system for tenant updates\r\n// Shared utility for cross-feature communication\r\n\r\ntype TenantEventListener = () => void;\r\n\r\nclass TenantEventManager {\r\n  private listeners: TenantEventListener[] = [];\r\n\r\n  subscribe(listener: TenantEventListener) {\r\n    this.listeners.push(listener);\r\n    \r\n    // Return unsubscribe function\r\n    return () => {\r\n      const index = this.listeners.indexOf(listener);\r\n      if (index > -1) {\r\n        this.listeners.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  notify() {\r\n    this.listeners.forEach(listener => { listener(); });\r\n  }\r\n}\r\n\r\nexport const tenantEventManager = new TenantEventManager();\r\n\r\n// Event types (currently unused, but defined for future use)\r\nexport const TENANT_EVENTS = {\r\n  TENANT_DELETED: 'tenant_deleted',\r\n  TENANT_APPROVED: 'tenant_approved',\r\n  TENANT_REJECTED: 'tenant_rejected',\r\n  TENANT_UPDATED: 'tenant_updated'\r\n} as const;\r\n\r\n","/* eslint-disable max-lines -- Complex component with multiple sub-tabs, refactoring planned */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { ExternalLink, Loader2, Plus, Settings, Trash2, UserCheck, UserCog, UserPlus, Users, UserX } from 'lucide-react';\n\nimport { ApplicationModal, DeleteConfirmationModal, Toast } from '@/features/adminDashboard/components/shared';\nimport type { UserSubTab } from '@/features/adminDashboard/types';\nimport { apiService } from '@/shared/api/api';\nimport { Button } from '@/shared/ui';\nimport { tenantEventManager } from '@/shared/utils/tenantEventManager';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  role?: string;\n  is_admin?: boolean;\n  created_at: string;\n  business_name?: string;\n  slug?: string;\n  tenant_id?: number;\n}\n\ninterface PendingApplication {\n  id: number;\n  slug: string;\n  business_name: string;\n  owner: string;\n  phone: string;\n  email: string;\n  city: string;\n  state_code: string;\n  postal_code: string;\n  has_insurance: boolean;\n  source: string;\n  notes?: string;\n  application_date: string;\n  created_at: string;\n}\n\nexport const UsersTab: React.FC = () => {\n  const [activeSubTab, setActiveSubTab] = useState<UserSubTab>('all-users');\n  const [users, setUsers] = useState<User[]>([]);\n  const [pendingApplications, setPendingApplications] = useState<PendingApplication[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [modalState, setModalState] = useState<{\n    isOpen: boolean;\n    type: 'approve' | 'reject';\n    applicationId: number;\n    businessName: string;\n  } | null>(null);\n  const [deleteModalState, setDeleteModalState] = useState<{\n    isOpen: boolean;\n    userId: number;\n    name: string;\n    isTenant: boolean;\n  } | null>(null);\n  const [processingApplication, setProcessingApplication] = useState(false);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: 'success' | 'error';\n    isVisible: boolean;\n  } | null>(null);\n  const [deletingAffiliate, setDeletingAffiliate] = useState<number | null>(null);\n\n  // Add debouncing to prevent rapid API calls\n  const debounceTimer = useRef<number | null>(null);\n  const lastFetchRef = useRef<{ status: UserSubTab; timestamp: number } | null>(null);\n\n  const subTabs = [\n    { id: 'all-users' as UserSubTab, label: 'All Users', icon: Users },\n    { id: 'admin' as UserSubTab, label: 'Admin', icon: UserCog },\n    { id: 'tenant' as UserSubTab, label: 'Tenants', icon: UserCheck },\n    { id: 'customer' as UserSubTab, label: 'Customers', icon: UserX },\n    { id: 'pending' as UserSubTab, label: 'Pending', icon: UserPlus },\n  ];\n\n  const fetchUsers = useCallback((status: UserSubTab, force = false) => {\n    // Debouncing: prevent rapid successive calls for the same status\n    const now = Date.now();\n    const lastFetch = lastFetchRef.current;\n    \n    if (!force && lastFetch && lastFetch.status === status && now - lastFetch.timestamp < 1000) {\n      // Skip if the same request was made within the last second\n      return;\n    }\n    \n    // Clear any existing debounce timer\n    if (debounceTimer.current) {\n      clearTimeout(debounceTimer.current);\n    }\n    \n    // Set a debounce timer for rapid successive calls\n    debounceTimer.current = setTimeout(() => {\n      void (async () => {\n        setLoading(true);\n        setError(null);\n        lastFetchRef.current = { status, timestamp: now };\n        \n        try {\n          if (status === 'pending') {\n            // Fetch pending tenant applications\n            const response = await apiService.getPendingApplications();\n            setPendingApplications(response.applications);\n          } else {\n            // Fetch regular users with roles\n            const response = await apiService.getUsers(status);\n            // Users now come with role already assigned from the backend\n            setUsers(response.users);\n          }\n        } catch (err) {\n          setError(err instanceof Error ? err.message : 'An error occurred');\n        } finally {\n          setLoading(false);\n        }\n      })();\n    }, 200); // 200ms debounce delay\n  }, []); // Empty dependency array is correct here\n\n  useEffect(() => {\n    fetchUsers(activeSubTab);\n  }, [activeSubTab, fetchUsers]); // Include fetchUsers in dependencies\n\n  // Cleanup timer on unmount\n  useEffect(() => {\n    return () => {\n      if (debounceTimer.current) {\n        clearTimeout(debounceTimer.current);\n      }\n    };\n  }, []);\n\n  const handleSubTabChange = (subTab: UserSubTab) => {\n    setActiveSubTab(subTab);\n  };\n\n  const handleApproveApplication = (applicationId: number, businessName: string) => {\n    // Check if application is still pending\n    const application = pendingApplications.find(app => app.id === applicationId);\n    if (!application) {\n      setToast({\n        message: 'Application not found or already processed',\n        type: 'error',\n        isVisible: true\n      });\n      return;\n    }\n    \n    setModalState({\n      isOpen: true,\n      type: 'approve',\n      applicationId,\n      businessName\n    });\n  };\n\n  const handleRejectApplication = (applicationId: number, businessName: string) => {\n    // Check if application is still pending\n    const application = pendingApplications.find(app => app.id === applicationId);\n    if (!application) {\n      setToast({\n        message: 'Application not found or already processed',\n        type: 'error',\n        isVisible: true\n      });\n      return;\n    }\n    \n    setModalState({\n      isOpen: true,\n      type: 'reject',\n      applicationId,\n      businessName\n    });\n  };\n\n  const handleModalSubmit = async (data: { slug?: string; reason?: string; notes: string }) => {\n    if (!modalState) return;\n    \n    setProcessingApplication(true);\n    try {\n      let response;\n      \n      if (modalState.type === 'approve') {\n        if (!data.slug) {\n          throw new Error('Slug is required for approval');\n        }\n        response = await apiService.approveApplication(modalState.applicationId, data.slug, data.notes);\n      } else {\n        if (!data.reason) {\n          throw new Error('Rejection reason is required');\n        }\n        response = await apiService.rejectApplication(modalState.applicationId, data.reason, data.notes);\n      }\n      \n      // Check if the API call was successful\n      if (!response.success) {\n        throw new Error(response.message || 'Operation failed');\n      }\n      \n      // Refresh the pending applications list\n      fetchUsers('pending', true);\n      \n      // Notify other components that a tenant was updated\n      tenantEventManager.notify();\n      \n      // Close modal\n      setModalState(null);\n      \n      // Show success message\n      setToast({\n        message: `Application ${modalState.type === 'approve' ? 'approved' : 'rejected'} successfully`,\n        type: 'success',\n        isVisible: true\n      });\n      \n    } catch (err) {\n      console.error(`Error ${modalState.type === 'approve' ? 'approving' : 'rejecting'} application:`, err);\n      \n      let errorMessage = 'An error occurred';\n      if (err instanceof Error) {\n        errorMessage = err.message;\n      } else if (typeof err === 'string') {\n        errorMessage = err;\n      } else if (err && typeof err === 'object' && 'message' in err) {\n        errorMessage = String(err.message);\n      }\n      \n      setToast({\n        message: errorMessage,\n        type: 'error',\n        isVisible: true\n      });\n    } finally {\n      setProcessingApplication(false);\n    }\n  };\n\n  const closeModal = () => {\n    setModalState(null);\n  };\n\n  const handleDeleteClick = (userId: number, name: string, isTenant: boolean) => {\n    setDeleteModalState({\n      isOpen: true,\n      userId,\n      name,\n      isTenant\n    });\n  };\n\n  const handleDeleteConfirm = async () => {\n    if (!deleteModalState) return;\n    \n    setDeletingAffiliate(deleteModalState.userId);\n    try {\n      const response = await apiService.deleteAffiliate(deleteModalState.userId);\n      if (response.success) {\n        setToast({\n          message: `\"${deleteModalState.name}\" deleted successfully. All associated data has been removed.`,\n          type: 'success',\n          isVisible: true\n        });\n        fetchUsers(activeSubTab, true); // Refresh current tab\n        \n        // Notify other components that a tenant was deleted\n        tenantEventManager.notify();\n        \n        // Close modal\n        setDeleteModalState(null);\n      } else {\n        throw new Error(response.message || 'Failed to delete');\n      }\n    } catch (err) {\n      console.error('Error deleting:', err);\n      let errorMessage = 'An error occurred';\n      if (err instanceof Error) {\n        errorMessage = err.message;\n      } else if (typeof err === 'string') {\n        errorMessage = err;\n      } else if (err && typeof err === 'object' && 'message' in err) {\n        errorMessage = String(err.message);\n      }\n      setToast({\n        message: errorMessage,\n        type: 'error',\n        isVisible: true\n      });\n      setDeleteModalState(null);\n    } finally {\n      setDeletingAffiliate(null);\n    }\n  };\n\n  const renderSubTabContent = (subTab: UserSubTab) => {\n    if (loading) {\n      return (\n        <div className=\"text-center text-gray-300\">\n          <Loader2 className=\"w-16 h-16 mx-auto mb-4 text-blue-400 animate-spin\" />\n          <h3 className=\"text-lg font-semibold mb-2\">Loading Users...</h3>\n        </div>\n      );\n    }\n\n    if (error) {\n      // Check if it's an authentication error\n      if (error.includes('401') || error.includes('Unauthorized') || error.includes('Forbidden')) {\n        return (\n          <div className=\"text-center text-gray-300\">\n            <div className=\"w-16 h-16 mx-auto mb-4 text-yellow-400\">🔒</div>\n            <h3 className=\"text-lg font-semibold mb-2 text-yellow-400\">Authentication Required</h3>\n            <p className=\"text-yellow-300\">You need to be logged in as an admin to view users.</p>\n            <p className=\"text-sm text-gray-400 mt-2\">\n              Please log in with an admin account or check your authentication status.\n            </p>\n          </div>\n        );\n      }\n      \n      return (\n        <div className=\"text-center text-gray-300\">\n          <div className=\"w-16 h-16 mx-auto mb-4 text-red-400\">⚠️</div>\n          <h3 className=\"text-lg font-semibold mb-2 text-red-400\">Error</h3>\n          <p className=\"text-red-300\">{error}</p>\n          <button \n            onClick={() => { fetchUsers(subTab, true); }}\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      );\n    }\n\n      if (activeSubTab === 'pending') {\n        if (pendingApplications.length === 0) {\n          return (\n            <div className=\"text-center text-gray-300\">\n              <UserPlus className=\"w-16 h-16 mx-auto mb-4 text-gray-600\" />\n              <h3 className=\"text-lg font-semibold mb-2\">No Pending Applications</h3>\n              <p>All affiliate applications have been processed.</p>\n              <button \n                onClick={() => { fetchUsers('pending', true); }}\n                className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                Refresh\n              </button>\n            </div>\n          );\n        }\n        \n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between text-sm text-gray-400 mb-4\">\n              <span>\n                Showing {pendingApplications.length} pending application{pendingApplications.length !== 1 ? 's' : ''}\n              </span>\n              <button \n                onClick={() => { fetchUsers('pending', true); }}\n                className=\"px-3 py-1 bg-gray-600 text-white text-xs rounded hover:bg-gray-700 transition-colors\"\n              >\n                Refresh\n              </button>\n            </div>\n            <div className=\"grid gap-4\">\n            {pendingApplications.map((app) => (\n              <div key={app.id} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-white\">{app.business_name}</h4>\n                    <p className=\"text-gray-300 text-sm\">Owner: {app.owner}</p>\n                    <p className=\"text-gray-300 text-sm\">{app.email}</p>\n                    <p className=\"text-gray-300 text-sm\">{app.phone}</p>\n                    <p className=\"text-gray-400 text-xs mt-2\">\n                      Location: {app.city}, {app.state_code} {app.postal_code}\n                    </p>\n                    {app.has_insurance && (\n                      <p className=\"text-green-400 text-xs mt-2\">✓ Has Insurance</p>\n                    )}\n                    {app.source && (\n                      <p className=\"text-gray-400 text-xs mt-1\">Source: {app.source}</p>\n                        )}\n                    <p className=\"text-gray-400 text-xs mt-2\">\n                      Applied: {new Date(app.application_date).toLocaleDateString()}\n                    </p>\n                  </div>\n                  <div className=\"ml-4 flex flex-col gap-2\">\n                    <button \n                      onClick={() => { handleApproveApplication(app.id, app.business_name); }}\n                      disabled={processingApplication}\n                      className={`px-3 py-1.5 text-white text-xs rounded transition-colors ${\n                        processingApplication \n                          ? 'bg-gray-500 cursor-not-allowed' \n                          : 'bg-green-600 hover:bg-green-700'\n                      }`}\n                    >\n                      {processingApplication ? 'Processing...' : 'Approve'}\n                    </button>\n                    <button \n                      onClick={() => { handleRejectApplication(app.id, app.business_name); }}\n                      disabled={processingApplication}\n                      className={`px-3 py-1.5 text-white text-xs rounded transition-colors ${\n                        processingApplication \n                          ? 'bg-gray-500 cursor-not-allowed' \n                          : 'bg-red-600 hover:bg-red-700'\n                      }`}\n                    >\n                      {processingApplication ? 'Processing...' : 'Reject'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    if (users.length === 0) {\n      return (\n        <div className=\"text-center text-gray-300\">\n          <Users className=\"w-16 h-16 mx-auto mb-4 text-gray-600\" />\n          <h3 className=\"text-lg font-semibold mb-2\">No Users Found</h3>\n          <p>No users match the current filter criteria.</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between text-sm text-gray-400 mb-4\">\n          <span>\n            Showing {users.length} user{users.length !== 1 ? 's' : ''}\n          </span>\n          <button \n            onClick={() => { fetchUsers(activeSubTab, true); }}\n            className=\"px-3 py-1 bg-gray-600 text-white text-xs rounded hover:bg-gray-700 transition-colors\"\n          >\n            Refresh\n          </button>\n        </div>\n        <div className=\"grid gap-4\">\n          {users.map((user) => (\n            <div key={user.id} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center gap-3 mb-2\">\n                    <h4 className=\"font-medium text-white text-lg\">{user.name}</h4>\n                    {user.role && (\n                      <span className={`px-2 py-1 text-xs font-semibold rounded-full ${\n                        user.role === 'admin' \n                          ? 'bg-purple-600 text-purple-100' \n                          : user.role === 'tenant'\n                          ? 'bg-green-600 text-green-100'\n                          : 'bg-blue-600 text-blue-100'\n                      }`}>\n                        {user.role.toUpperCase()}\n                      </span>\n                    )}\n                  </div>\n                  <p className=\"text-gray-300 text-sm mb-1\">{user.email}</p>\n                  {user.business_name && (\n                    <p className=\"text-gray-300 text-sm mb-1\">\n                      <span className=\"text-gray-400\">Business:</span> {user.business_name}\n                    </p>\n                  )}\n                  {user.slug && (\n                    <p className=\"text-gray-400 text-xs\">\n                      <span className=\"text-gray-500\">Slug:</span> {user.slug}\n                    </p>\n                  )}\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"text-right text-xs text-gray-400\">\n                    <p>ID: {user.id}</p>\n                    <p>Created: {new Date(user.created_at).toLocaleDateString()}</p>\n                  </div>\n                  \n                  {/* Action buttons for tenants */}\n                  {user.role === 'tenant' && user.slug && (\n                    <div className=\"flex items-center gap-2\">\n                      <a\n                        href={`http://${user.slug}.lvh.me:${window.location.port}/`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex items-center gap-1 px-3 py-1.5 text-white text-xs rounded transition-colors bg-blue-600 hover:bg-blue-700\"\n                        title=\"View tenant website\"\n                      >\n                        <ExternalLink className=\"w-3 h-3\" />\n                        Website\n                      </a>\n                      <a\n                        href={`http://${user.slug}.lvh.me:${window.location.port}/dashboard`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex items-center gap-1 px-3 py-1.5 text-white text-xs rounded transition-colors bg-green-600 hover:bg-green-700\"\n                        title=\"View tenant dashboard\"\n                      >\n                        <Settings className=\"w-3 h-3\" />\n                        Dashboard\n                      </a>\n                    </div>\n                  )}\n                  \n                  {/* Delete button for tenants */}\n                  {user.role === 'tenant' && (\n                    <button\n                      onClick={() => { handleDeleteClick(user.tenant_id || user.id, user.business_name || user.name, true); }}\n                      disabled={deletingAffiliate === (user.tenant_id || user.id)}\n                      className={`flex items-center gap-2 px-3 py-1.5 text-white text-xs rounded transition-colors ${\n                        deletingAffiliate === (user.tenant_id || user.id)\n                          ? 'bg-gray-500 cursor-not-allowed'\n                          : 'bg-red-600 hover:bg-red-700'\n                      }`}\n                      title=\"Delete tenant and all associated data\"\n                    >\n                      <Trash2 className=\"w-3 h-3\" />\n                      {deletingAffiliate === (user.tenant_id || user.id) ? 'Deleting...' : 'Delete'}\n                    </button>\n                  )}\n                  {/* Delete button for regular users (customers/admins) */}\n                  {(user.role === 'customer' || user.role === 'admin') && user.id !== 1 && (\n                    <button\n                      onClick={() => { handleDeleteClick(user.id, user.name, false); }}\n                      disabled={deletingAffiliate === user.id}\n                      className={`flex items-center gap-2 px-3 py-1.5 text-white text-xs rounded transition-colors ${\n                        deletingAffiliate === user.id\n                          ? 'bg-gray-500 cursor-not-allowed'\n                          : 'bg-red-600 hover:bg-red-700'\n                      }`}\n                      title=\"Delete user\"\n                    >\n                      <Trash2 className=\"w-3 h-3\" />\n                      {deletingAffiliate === user.id ? 'Deleting...' : 'Delete'}\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-gray-800 rounded-lg shadow-sm border border-gray-700\">\n        <div className=\"px-6 py-4 border-b border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n              <Users className=\"w-5 h-5 text-blue-400\" />\n              User Management\n            </h2>\n            <Button \n              variant=\"primary\" \n              size=\"sm\"\n              className=\"flex items-center gap-2 px-3 py-1.5 bg-blue-600 hover:bg-blue-700\"\n              leftIcon={<UserPlus className=\"w-4 h-4\" />}\n            >\n              Add User\n            </Button>\n          </div>\n        </div>\n        \n        {/* Sub-tabs */}\n        <div className=\"px-6 py-3 border-b border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            <nav className=\"flex space-x-6\">\n              {subTabs.map((subTab) => {\n                const Icon = subTab.icon;\n                return (\n                  <button\n                    key={subTab.id}\n                    onClick={() => { handleSubTabChange(subTab.id); }}\n                    className={`flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${\n                      activeSubTab === subTab.id\n                        ? 'bg-blue-900 text-blue-300 border-b-2 border-blue-400'\n                        : 'text-gray-300 hover:text-white hover:bg-gray-700'\n                    }`}\n                  >\n                    <Icon className=\"w-4 h-4\" />\n                    {subTab.label}\n                  </button>\n                );\n              })}\n            </nav>\n            \n            {/* Tenant Onboarding Button */}\n            <a\n              href=\"/tenant-onboarding\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center gap-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-md transition-colors\"\n              title=\"Open tenant onboarding form\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              New Tenant\n            </a>\n          </div>\n        </div>\n        \n        <div className=\"p-6\">\n          {renderSubTabContent(activeSubTab)}\n        </div>\n      </div>\n      \n      {/* Application Modal */}\n      {modalState && (\n        <ApplicationModal\n          isOpen={modalState.isOpen}\n          onClose={closeModal}\n          onSubmit={handleModalSubmit}\n          type={modalState.type}\n          applicationId={modalState.applicationId}\n          businessName={modalState.businessName}\n          isLoading={processingApplication}\n        />\n      )}\n      \n      {/* Delete Confirmation Modal */}\n      {deleteModalState && (\n        <DeleteConfirmationModal\n          isOpen={deleteModalState.isOpen}\n          onClose={() => { setDeleteModalState(null); }}\n          onConfirm={() => { void handleDeleteConfirm(); }}\n          title={deleteModalState.isTenant ? 'Delete Tenant' : 'Delete User'}\n          message={deleteModalState.isTenant \n            ? `Are you sure you want to delete this tenant and all associated data?`\n            : `Are you sure you want to delete this user account?`\n          }\n          itemName={deleteModalState.name}\n          isLoading={deletingAffiliate === deleteModalState.userId}\n          isTenant={deleteModalState.isTenant}\n        />\n      )}\n      \n      {/* Toast Notifications */}\n      {toast && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          isVisible={toast.isVisible}\n          onClose={() => { setToast(null); }}\n        />\n      )}\n    </div>\n  );\n};\n/* eslint-enable max-lines -- Re-enabled after complex multi-tab component */\n","import React from 'react';\r\n\r\nimport type { AdminTab } from '@/features/adminDashboard/types';\r\n\r\nimport { AnalyticsTab } from './tabs/analytics/AnalyticsTab';\r\nimport ReviewsTab from './tabs/reviews/ReviewsTab';\r\nimport { SettingsTab } from './tabs/settings/SettingsTab';\r\nimport { UsersTab } from './tabs/users/UsersTab';\r\n\r\ninterface TabContentProps {\r\n  activeTab: AdminTab;\r\n}\r\n\r\nexport const TabContent: React.FC<TabContentProps> = ({ activeTab }) => {\r\n  return (\r\n    <main>\r\n      {activeTab === 'users' && <UsersTab />}\r\n      {activeTab === 'reviews' && <ReviewsTab />}\r\n      {activeTab === 'analytics' && <AnalyticsTab />}\r\n      {activeTab === 'settings' && <SettingsTab />}\r\n    </main>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport type { AdminTab } from '@/features/adminDashboard/types';\r\nimport { useBrowserTab } from '@/shared/hooks';\r\n\r\nimport { AdminLayout, AdminTabs, TabContent } from './';\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<AdminTab>('users');\r\n\r\n  // Set browser tab title and favicon for admin dashboard\r\n  useBrowserTab({\r\n    title: 'Admin Dashboard - That Smart Site',\r\n    useBusinessName: false,\r\n  });\r\n\r\n  const handleTabChange = (tab: AdminTab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <AdminTabs \r\n        activeTab={activeTab}\r\n        onTabChange={handleTabChange}\r\n      />\r\n      \r\n      <TabContent \r\n        activeTab={activeTab}\r\n      />\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","import React from 'react';\nimport { MapPin } from 'lucide-react';\n\nimport { formatPhoneNumber } from '@/shared/utils/phoneFormatter';\n\nimport { useData } from '../contexts/DataProvider';\n\nconst BusinessInfo: React.FC = () => {\n  const { businessName, phone, location, isTenant } = useData();\n  \n  const handleClick = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // All sites are now tenant-based, so show business info\n  if (!isTenant) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-1 md:space-y-1 md:ml-2 min-w-0 flex-1\">\n      {/* Business Name - Full width on mobile, larger on desktop */}\n      <button \n        onClick={handleClick}\n        className=\"hover:opacity-80 transition-opacity text-left min-w-0\"\n      >\n        <h1 className=\"text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold text-white leading-tight truncate\">\n          {businessName}\n        </h1>\n      </button>\n      \n      {/* Phone + Location - side by side on mobile, horizontal on desktop */}\n      <div className=\"flex items-center gap-2 md:gap-2 min-w-0 flex-wrap\">\n        <a \n          href={`tel:${phone || '5551234580'}`}\n          className=\"text-sm md:text-sm lg:text-base text-stone-300 hover:text-orange-400 transition-colors truncate flex-shrink-0\"\n        >\n          {formatPhoneNumber(phone || '(555) 123-4580')}\n        </a>\n        <span className=\"text-stone-400 flex-shrink-0 text-sm\">•</span>\n        <div className=\"flex items-center gap-1 min-w-0\">\n          <MapPin className=\"h-4 w-4 md:h-4 md:w-4 text-orange-400 flex-shrink-0\" />\n          <span className=\"text-sm md:text-sm lg:text-base text-orange-400 truncate\">\n            {location || 'Service Area'}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BusinessInfo;","import React, { createContext, useContext } from 'react';\r\n\r\ninterface TenantContextType {\r\n  slug: string | null;\r\n}\r\n\r\nconst TenantContext = createContext<TenantContextType | null>(null);\r\n\r\ninterface TenantProviderProps {\r\n  children: React.ReactNode;\r\n  slug: string | null;\r\n}\r\n\r\nexport const TenantProvider: React.FC<TenantProviderProps> = ({ children, slug }) => {\r\n  return (\r\n    <TenantContext.Provider value={{ slug }}>\r\n      {children}\r\n    </TenantContext.Provider>\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line react-refresh/only-export-components -- Context hook must be in same file as provider\r\nexport const useTenant = (): TenantContextType => {\r\n  const context = useContext(TenantContext);\r\n  if (!context) {\r\n    throw new Error('useTenant must be used within a TenantProvider');\r\n  }\r\n  return context;\r\n};\r\n","// Header-specific constants\r\nimport { NavLink } from '../types';\r\n\r\nexport const NAV_LINKS: NavLink[] = [\r\n  { name: 'Home', href: '#top' },\r\n  { name: 'Services', href: '#services' },\r\n  { name: 'Reviews', href: '#reviews' },\r\n  { name: 'FAQ', href: '#faq', isFAQ: true },\r\n  { name: 'Gallery', href: '#gallery', isGallery: true }\r\n];\r\n","/**\r\n * Navigation utility functions\r\n */\r\n\r\n/**\r\n * Smoothly scrolls to a section by its ID\r\n * @param sectionId - The ID of the section to scroll to (with or without #)\r\n */\r\nexport const scrollToSection = (sectionId: string): void => {\r\n  const cleanId = sectionId.replace('#', '');\r\n  // NOTE: Using inline window.innerWidth check here is intentional\r\n  // This is a utility function (not a React component), so hooks can't be used\r\n  // We need the current viewport width at the time this function is called\r\n  const isDesktop = window.innerWidth >= 768;\r\n  \r\n  // Map nav ID to actual section ID based on screen size\r\n  let targetId = cleanId;\r\n  if (cleanId === 'services') {\r\n    targetId = isDesktop ? 'services-desktop' : 'services';\r\n  } else if (cleanId === 'footer') {\r\n    targetId = isDesktop ? 'gallery-desktop' : 'footer';\r\n  }\r\n  \r\n  const element = document.getElementById(targetId);\r\n  \r\n  if (element) {\r\n    // Temporarily disable snap scrolling for smooth navigation\r\n    const scrollContainer = document.querySelector('.snap-container');\r\n    \r\n    if (scrollContainer) {\r\n      scrollContainer.classList.remove('snap-y', 'snap-mandatory');\r\n      \r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n      \r\n      // Re-enable snap scrolling after a delay\r\n      setTimeout(() => {\r\n        scrollContainer.classList.add('snap-y', 'snap-mandatory');\r\n      }, 1000);\r\n    } else {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles section click events with smooth scrolling\r\n * @param sectionId - The ID of the section to scroll to\r\n */\r\nexport const handleSectionClick = (sectionId: string): void => {\r\n  scrollToSection(sectionId);\r\n};\r\n","import React from 'react';\r\n\r\nimport { useData, useTenantConfigLoader } from '@/shared/hooks';\r\nimport type { Vertical } from '@/shared/types';\r\nimport { getTenantAssetUrl } from '@/shared/utils';\r\n\r\nconst Logo: React.FC = () => {\r\n  const { industry, isLoading: isDataLoading } = useData();\r\n  const { data: tenantConfig, isLoading: isConfigLoading } = useTenantConfigLoader();\r\n  \r\n  const isLoading = isDataLoading || isConfigLoading;\r\n  const logoUrl = tenantConfig?.branding.logo.url;\r\n  \r\n  const handleClick = () => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n  \r\n  // Use tenant config logo, fallback to industry default via asset locator\r\n  const src = logoUrl || getTenantAssetUrl({\r\n    vertical: industry as Vertical,\r\n    type: 'logo',\r\n  });\r\n  const alt = tenantConfig?.branding.businessName || `${industry} Logo`;\r\n\r\n  // During loading (including HMR), show a minimal placeholder\r\n  if (isLoading && !src) {\r\n    return (\r\n      <div className=\"h-10 w-10 sm:h-12 sm:w-12 md:h-14 md:w-14 lg:h-16 lg:w-16 bg-gray-200 animate-pulse rounded flex-shrink-0\" />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button \r\n      onClick={handleClick}\r\n      className=\"flex items-center hover:opacity-80 transition-opacity flex-shrink-0\"\r\n      aria-label={`${industry} home`}\r\n    >\r\n      <picture>\r\n        {/* Prefer WebP when available; fall back to original */}\r\n        <source srcSet={src.endsWith('.webp') ? src : src.replace(/\\.(png|jpg|jpeg)$/i, '.webp')} type=\"image/webp\" />\r\n        <img \r\n          src={src} \r\n          alt={alt} \r\n          className=\"h-10 w-10 sm:h-12 sm:w-12 md:h-14 md:w-14 lg:h-16 lg:w-16\"\r\n          width={64}\r\n          height={64}\r\n          decoding=\"async\"\r\n          loading=\"eager\"\r\n        />\r\n      </picture>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nimport { NAV_LINKS } from '@/features/header/utils/constants';\r\nimport { handleSectionClick } from '@/features/header/utils/navigation';\r\nimport { useReviewsAvailability } from '@/shared/hooks';\r\n\r\ninterface NavigationProps {\r\n  activeSection: string;\r\n}\r\n\r\nconst Navigation: React.FC<NavigationProps> = ({ activeSection }) => {\r\n  // Check if reviews are available\r\n  const hasReviews = useReviewsAvailability();\r\n\r\n  // Filter navigation links based on reviews availability\r\n  const filteredNavLinks = NAV_LINKS.filter(link => {\r\n    if (link.name === 'Reviews') {\r\n      return hasReviews; // Only show reviews if there are reviews available\r\n    }\r\n    return true; // Show all other links\r\n  });\r\n\r\n  // Determine if a nav item is active based on visible section\r\n  const isActive = (link: typeof NAV_LINKS[0]) => {\r\n    const isLinkActive = (\r\n      (link.name === 'Home' && activeSection === 'top') ||\r\n      (link.name === 'Services' && activeSection === 'services') ||\r\n      (link.name === 'Reviews' && activeSection === 'reviews') ||\r\n      (link.name === 'FAQ' && activeSection === 'faq') ||\r\n      (link.name === 'Gallery' && activeSection === 'footer')\r\n    );\r\n    \r\n    return isLinkActive;\r\n  };\r\n\r\n  // Base classes for nav items\r\n  const getNavItemClasses = (link: typeof NAV_LINKS[0]) => {\r\n    const isLinkActive = isActive(link);\r\n    \r\n    const baseClasses = \"nav-link hover:text-orange-400 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200 p-2 font-inherit cursor-pointer rounded\";\r\n    \r\n    const finalClasses = isLinkActive \r\n      ? `${baseClasses} text-orange-400 bg-transparent border-none ring-2 ring-orange-400 ring-offset-2 ring-offset-black/20` \r\n      : `${baseClasses} text-white bg-transparent border-none`;\r\n    \r\n    return finalClasses;\r\n  };\r\n\r\n  return (\r\n    <nav aria-label=\"Primary navigation\" className=\"hidden xl:flex space-x-6\">\r\n      {filteredNavLinks.map(link => (\r\n        link.isFAQ ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#faq'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : link.isGallery ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#footer'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : link.name === 'Reviews' ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#reviews'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : link.name === 'Home' ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#top'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : link.name === 'Services' ? (\r\n          <button\r\n            key={link.name}\r\n            onClick={(e) => { handleSectionClick('#services'); e.currentTarget.blur(); }}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Scroll to ${link.name} section`}\r\n          >\r\n            {link.name}\r\n          </button>\r\n        ) : (\r\n          <a\r\n            key={link.name}\r\n            href={link.href}\r\n            className={getNavItemClasses(link)}\r\n            aria-label={`Navigate to ${link.name} page`}\r\n          >\r\n            {link.name}\r\n          </a>\r\n        )\r\n      ))}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { SiFacebook, SiInstagram, SiYoutube } from 'react-icons/si';\r\n\r\nimport { useData } from '../contexts/DataProvider';\r\n\r\n// Custom TikTok icon component\r\nconst TikTokIcon: React.FC<{ className?: string }> = ({ className }) => (\r\n  <svg \r\n    className={className} \r\n    viewBox=\"0 0 24 24\" \r\n    fill=\"none\" \r\n    stroke=\"currentColor\" \r\n    strokeWidth=\"2\" \r\n    strokeLinecap=\"round\" \r\n    strokeLinejoin=\"round\"\r\n  >\r\n    <path d=\"M9 12a4 4 0 1 0 4 4V4a5 5 0 0 0 5 5\" />\r\n  </svg>\r\n);\r\n\r\nconst SocialMediaIcons: React.FC = () => {\r\n  // Always call hooks unconditionally\r\n  const { isTenant, socialMedia, siteConfig, isPreview } = useData();\r\n  \r\n  // Use tenant social media if available, otherwise use site config\r\n  const socials = isTenant ? socialMedia : siteConfig?.socials;\r\n  \r\n  const socialLinks = [\r\n    {\r\n      platform: 'Facebook',\r\n      url: socials?.facebook,\r\n      icon: SiFacebook,\r\n      ariaLabel: 'Visit our Facebook page'\r\n    },\r\n    {\r\n      platform: 'Instagram',\r\n      url: socials?.instagram,\r\n      icon: SiInstagram,\r\n      ariaLabel: 'Visit our Instagram page'\r\n    },\r\n    {\r\n      platform: 'TikTok',\r\n      url: socials?.tiktok,\r\n      icon: TikTokIcon,\r\n      ariaLabel: 'Visit our TikTok page'\r\n    },\r\n    {\r\n      platform: 'YouTube',\r\n      url: socials?.youtube,\r\n      icon: SiYoutube,\r\n      ariaLabel: 'Visit our YouTube channel'\r\n    }\r\n  ];\r\n\r\n  const visibleLinks = socialLinks.filter(link => {\r\n    const url = link.url;\r\n    return typeof url === 'string'; // Show if URL exists (even if empty)\r\n  });\r\n\r\n  if (visibleLinks.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-3 ml-4\">\r\n      {visibleLinks.map(({ platform, url, icon: Icon, ariaLabel }) => {\r\n        const href = url as string;\r\n        const hasUrl = href && href.trim() !== '';\r\n        \r\n        // In preview mode, render as span instead of link\r\n        if (isPreview) {\r\n          return (\r\n            <span\r\n              key={platform}\r\n              className=\"text-white hover:text-orange-400 transition-colors duration-200 cursor-pointer\"\r\n              aria-label={ariaLabel}\r\n              title=\"Social media links available in your live site\"\r\n            >\r\n              <Icon className=\"h-5 w-5\" />\r\n            </span>\r\n          );\r\n        }\r\n        \r\n        // If no URL, render as span (non-clickable)\r\n        if (!hasUrl) {\r\n          return (\r\n            <span\r\n              key={platform}\r\n              className=\"text-white hover:text-orange-400 transition-colors duration-200 cursor-pointer\"\r\n              aria-label={ariaLabel}\r\n              title=\"Social media link not configured\"\r\n            >\r\n              <Icon className=\"h-5 w-5\" />\r\n            </span>\r\n          );\r\n        }\r\n        \r\n        // If has URL, render as clickable link\r\n        return (\r\n          <a \r\n            key={platform}\r\n            href={href} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            className=\"text-white hover:text-orange-400 transition-colors duration-200\"\r\n            aria-label={ariaLabel}\r\n          >\r\n            <Icon className=\"h-5 w-5\" />\r\n          </a>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialMediaIcons;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Menu, X } from 'lucide-react';\r\n\r\nimport { NAV_LINKS } from '@/features/header/utils/constants';\r\nimport { handleSectionClick } from '@/features/header/utils/navigation';\r\nimport { useReviewsAvailability } from '@/shared/hooks';\r\nimport { getNavId,useSectionStore } from '@/shared/state/sectionStore';\r\n\r\nimport BusinessInfo from './BusinessInfo';\r\nimport Logo from './Logo';\r\nimport Navigation from './Navigation';\r\nimport SocialMediaIcons from './SocialMediaIcons';\r\n\r\nexport default function Header() {\r\n  const [open, setOpen] = useState(false);\r\n  const hasReviews = useReviewsAvailability();\r\n  \r\n  // Subscribe to the section store and map to navigation ID\r\n  const currentSection = useSectionStore((s) => s.current);\r\n  const activeSection = getNavId(currentSection) || 'top';\r\n\r\n  // Prevent background scroll when mobile menu open\r\n  useEffect(() => {\r\n    document.documentElement.style.overflow = open ? \"hidden\" : \"\";\r\n    return () => { document.documentElement.style.overflow = \"\"; };\r\n  }, [open]);\r\n\r\n  return (\r\n    <header\r\n      role=\"banner\"\r\n      className=\"fixed top-0 left-0 right-0 z-50 bg-black/40 backdrop-blur supports-[backdrop-filter]:backdrop-blur w-full\"\r\n    >\r\n      {/* Skip link */}\r\n      <a\r\n        href=\"#main\"\r\n        className=\"sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:px-4 focus:py-2 focus:bg-orange-500 focus:text-white focus:rounded-md\"\r\n      >\r\n        Skip to content\r\n      </a>\r\n\r\n      {/* Bar */}\r\n      <div className=\"py-3 sm:py-4 md:py-4\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-4 md:px-6 min-w-0\">\r\n          {/* Mobile row (< md 768px) */}\r\n          <div className=\"flex md:hidden items-center justify-between gap-3 min-w-0\">\r\n            <div className=\"flex items-center gap-2 flex-1 min-w-0 overflow-hidden\">\r\n              <Logo />\r\n              <BusinessInfo />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              aria-label={open ? \"Close menu\" : \"Open menu\"}\r\n              aria-expanded={open}\r\n              aria-controls=\"mobile-menu\"\r\n              onClick={() => { setOpen(v => !v); }}\r\n              className=\"flex-shrink-0 inline-flex items-center justify-center p-2 rounded-md text-white hover:bg-white/10 focus:outline-none focus:ring-2 focus:ring-orange-400\"\r\n            >\r\n              {open ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Desktop row (≥ md 768px) */}\r\n          <div className=\"hidden md:flex items-center gap-4 lg:gap-6 min-w-0\">\r\n            <Logo />\r\n            <BusinessInfo />\r\n            <div className=\"flex items-center gap-4 lg:gap-6 ml-auto flex-shrink-0\">\r\n              <Navigation activeSection={activeSection} />\r\n              <SocialMediaIcons />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile overlay menu */}\r\n      <div\r\n        id=\"mobile-menu\"\r\n        role=\"dialog\"\r\n        aria-modal=\"true\"\r\n        className={`md:hidden absolute inset-x-0 top-full z-50 bg-black/90 transition-opacity duration-200\r\n          ${open ? \"opacity-100 pointer-events-auto\" : \"opacity-0 pointer-events-none\"}`}\r\n        aria-hidden={!open}\r\n      >\r\n        <div className=\"px-4 py-6 space-y-4 max-w-7xl mx-auto\">\r\n          <h2 className=\"sr-only\">Mobile Navigation Menu</h2>\r\n          \r\n          {/* Mobile Navigation Links */}\r\n          <nav aria-label=\"Mobile navigation\" className=\"space-y-2\">\r\n            {(() => {\r\n              const handleClick = () => {\r\n                document.documentElement.style.overflow = '';\r\n                setOpen(false);\r\n              };\r\n              \r\n              return NAV_LINKS.filter(link => {\r\n                if (link.name === 'Reviews') return hasReviews;\r\n                return true;\r\n              }).map(link => {\r\n              \r\n              return link.isFAQ ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#faq'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : link.isGallery ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#gallery'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : link.name === 'Reviews' ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#reviews'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : link.name === 'Home' ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#top'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : link.name === 'Services' ? (\r\n                <button\r\n                  key={link.name}\r\n                  onClick={() => { \r\n                    handleSectionClick('#services'); \r\n                    handleClick();\r\n                  }}\r\n                  className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Scroll to ${link.name} section`}\r\n                >\r\n                  {link.name}\r\n                </button>\r\n              ) : (\r\n                <a\r\n                  key={link.name}\r\n                  href={link.href}\r\n                  onClick={handleClick}\r\n                  className=\"nav-link block w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n                  aria-label={`Navigate to ${link.name} page`}\r\n                >\r\n                  {link.name}\r\n                </a>\r\n              );\r\n              });\r\n            })()}\r\n            \r\n            {/* Mobile-only Contact link */}\r\n            <button\r\n              onClick={() => { \r\n                handleSectionClick('#footer'); \r\n                const closeMobileMenu = () => {\r\n                  document.documentElement.style.overflow = '';\r\n                  setOpen(false);\r\n                };\r\n                closeMobileMenu();\r\n              }}\r\n              className=\"nav-link w-full text-left px-4 py-3 rounded-lg text-base sm:text-lg text-white bg-transparent hover:text-orange-400 hover:bg-orange-500/10 focus:text-orange-400 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-black/20 transition-colors duration-200\"\r\n              aria-label=\"Scroll to Contact section\"\r\n            >\r\n              Contact\r\n            </button>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","/**\r\n * FAQ Data Loader - Shared Utility\r\n * \r\n * Dynamically loads FAQ data from industry-specific JSON files.\r\n * Shared across features to avoid boundary violations.\r\n */\r\n\r\nexport interface FAQItem {\r\n  question: string;\r\n  answer: string;\r\n  category: string;\r\n}\r\n\r\n/**\r\n * Load all FAQ categories for a specific industry\r\n * \r\n * @param industry - Industry slug (e.g., 'mobile-detailing')\r\n * @returns Array of FAQ items with unique IDs\r\n */\r\nexport async function loadIndustryFAQs(industry: string): Promise<FAQItem[]> {\r\n  const categories = [\r\n    'services',\r\n    'pricing',\r\n    'scheduling',\r\n    'locations',\r\n    'preparation',\r\n    'payments',\r\n    'warranty',\r\n    'aftercare',\r\n    'general',\r\n  ];\r\n  \r\n  try {\r\n    const faqArrays = await Promise.all(\r\n      categories.map(async (category) => {\r\n        try {\r\n          const module = await import(`@/data/${industry}/faq/${category}.json`) as { default: FAQItem[] };\r\n          return module.default;\r\n        } catch {\r\n          console.warn(`FAQ category ${category} not found for ${industry}, skipping`);\r\n          return [];\r\n        }\r\n      })\r\n    );\r\n    \r\n    // Flatten and add unique IDs\r\n    const allFAQs = faqArrays.flat();\r\n    return allFAQs.map((faq, index) => ({\r\n      ...faq,\r\n      id: `${industry}-${String(index)}`\r\n    }));\r\n  } catch (error) {\r\n    console.error(`Failed to load FAQs for ${industry}:`, error);\r\n    return [];\r\n  }\r\n}\r\n\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { useData } from '@/shared/hooks';\r\n\r\nimport type { FAQItem } from '../types';\r\nimport { loadIndustryFAQs } from '../utils';\r\n\r\nexport const useFAQData = () => {\r\n  const [openItems, setOpenItems] = useState<Set<string>>(new Set());\r\n  const [faqData, setFaqData] = useState<FAQItem[]>([]);\r\n  const { industry } = useData();\r\n\r\n  // Load industry-specific FAQs\r\n  useEffect(() => {\r\n    if (!industry) return;\r\n    \r\n    loadIndustryFAQs(industry)\r\n      .then(setFaqData)\r\n      .catch((error: unknown) => {\r\n        console.error('Failed to load FAQs:', error);\r\n        setFaqData([]);\r\n      });\r\n  }, [industry]);\r\n\r\n  const toggleItem = (question: string) => {\r\n    setOpenItems(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(question)) {\r\n        newSet.delete(question);\r\n      } else {\r\n        newSet.add(question);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const resetState = () => {\r\n    setOpenItems(new Set());\r\n  };\r\n\r\n  return {\r\n    faqData,\r\n    openItems,\r\n    toggleItem,\r\n    resetState,\r\n  };\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nimport { useWebsiteContent } from '@/shared/contexts/WebsiteContentContext';\r\nimport { useIndustrySiteData } from '@/shared/hooks/useIndustrySiteData';\r\n\r\nimport type { FAQItem as BaseFAQItem } from '../types';\r\nimport { useFAQData } from './useFAQData';\r\n\r\n// Extended FAQ Item that allows any category string\r\nexport interface FAQItem extends Omit<BaseFAQItem, 'category'> {\r\n  category: string;\r\n}\r\n\r\ninterface UseFAQContentReturn {\r\n  faqTitle: string;\r\n  faqSubtitle: string;\r\n  faqItems: FAQItem[];\r\n  categories: string[];\r\n}\r\n\r\ninterface UseFAQContentProps {\r\n  locationData?: {\r\n    faqIntro?: string;\r\n    city?: string;\r\n    faqs?: Array<{ q: string; a: string }>;\r\n  };\r\n}\r\n\r\nexport const useFAQContent = (props?: UseFAQContentProps): UseFAQContentReturn => {\r\n  // Get industry-specific site data\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- siteData is dynamically imported JSON\r\n  const { siteData } = useIndustrySiteData();\r\n  const locationData = props?.locationData;\r\n  \r\n  // Get website content - hooks must be called unconditionally\r\n  const { content: websiteContent } = useWebsiteContent();\r\n  \r\n  // Get industry-specific FAQ items\r\n  const { faqData: industryFAQs } = useFAQData();\r\n  \r\n  // Get FAQ title and subtitle from database or industry-specific fallbacks\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- siteData is dynamically imported JSON\r\n  const faqTitle = websiteContent?.faq_title \r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access -- siteData is dynamically imported JSON\r\n    ?? siteData?.faq?.title \r\n    ?? 'Frequently Asked Questions';\r\n    \r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- siteData is dynamically imported JSON\r\n  const faqSubtitle = websiteContent?.faq_subtitle \r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access -- siteData is dynamically imported JSON\r\n    ?? siteData?.faq?.subtitle \r\n    ?? locationData?.faqIntro \r\n    ?? 'Find answers to common questions about our services';\r\n  \r\n  // Get FAQ items from database or fallback to industry-specific FAQs\r\n  const databaseFAQs: FAQItem[] = useMemo(() => {\r\n    if (!websiteContent?.faq_items || !Array.isArray(websiteContent.faq_items)) {\r\n      return [];\r\n    }\r\n    \r\n    return websiteContent.faq_items.map((faq, index) => ({\r\n      id: `db-${String(index)}`,\r\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- faq properties from database might be null\r\n      question: String(faq.question ?? ''),\r\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- faq properties from database might be null\r\n      answer: String(faq.answer ?? ''),\r\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- faq properties from database might be null\r\n      category: String(faq.category ?? 'General')\r\n    }));\r\n  }, [websiteContent?.faq_items]);\r\n  \r\n  // Convert location FAQs to FAQItem format if available\r\n  const locationFAQs: FAQItem[] = useMemo(() => {\r\n    if (!locationData?.faqs) return [];\r\n    \r\n    return locationData.faqs.map((faq, index) => ({\r\n      id: `location-${String(index)}`,\r\n      question: faq.q,\r\n      answer: faq.a,\r\n      category: locationData.city ?? 'Location'\r\n    }));\r\n  }, [locationData]);\r\n  \r\n  // Priority: Database FAQs > Industry FAQs > Location FAQs\r\n  const faqItems = useMemo(() => {\r\n    if (databaseFAQs.length > 0) {\r\n      // Use ONLY database FAQs (tenant has customized)\r\n      return [...databaseFAQs, ...locationFAQs];\r\n    }\r\n    // Fallback to industry-specific FAQs if no database FAQs\r\n    return [...industryFAQs, ...locationFAQs];\r\n  }, [databaseFAQs, industryFAQs, locationFAQs]);\r\n  \r\n  // Extract unique categories\r\n  const categories = useMemo(() => {\r\n    const uniqueCategories = Array.from(new Set(faqItems.map(faq => faq.category)));\r\n    return ['All', ...uniqueCategories];\r\n  }, [faqItems]);\r\n\r\n  return {\r\n    faqTitle: String(faqTitle),\r\n    faqSubtitle: String(faqSubtitle),\r\n    faqItems,\r\n    categories\r\n  };\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { useImageRotation } from '@/shared/hooks';\r\nimport { GalleryImage } from '@/shared/types';\r\n\r\n// Fisher-Yates shuffle algorithm\r\nfunction shuffleArray<T>(array: T[]): T[] {\r\n  const shuffled = [...array];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = shuffled[i];\r\n    const itemAtJ = shuffled[j];\r\n    if (temp !== undefined && itemAtJ !== undefined) {\r\n      shuffled[i] = itemAtJ;\r\n      shuffled[j] = temp;\r\n    }\r\n  }\r\n  return shuffled;\r\n}\r\n\r\nexport function useRotatingBackground() {\r\n  const [galleryImages, setGalleryImages] = useState<GalleryImage[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Load gallery data\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    void (async () => {\r\n      try {\r\n        const res = await fetch('/mobile-detailing/data/gallery.json');\r\n        if (!res.ok) throw new Error(`Failed to fetch gallery data: ${String(res.status)}`);\r\n        const data = await res.json() as GalleryImage[];\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- cancelled flag is set in cleanup\r\n        if (cancelled) return;\r\n\r\n        // Shuffle the images for random order\r\n        const shuffledData = shuffleArray(data);\r\n        setGalleryImages(shuffledData);\r\n        setLoading(false);\r\n        setError(null);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        setError(err instanceof Error ? err.message : 'Failed to load gallery data');\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  // Extract image URLs for the rotation utility\r\n  const imageUrls = galleryImages.map(img => img.src);\r\n\r\n  // Use the new image rotation utility\r\n  const rotation = useImageRotation({\r\n    images: imageUrls,\r\n    autoRotate: true,\r\n    interval: 7000, // 7 seconds to match original\r\n    fadeDuration: 2000, // 2 seconds fade duration\r\n    preloadNext: true,\r\n    pauseOnHover: false // Background doesn't need hover pause\r\n  });\r\n\r\n  const { currentIndex, hasMultipleImages } = rotation;\r\n\r\n  return {\r\n    images: galleryImages,\r\n    currentIndex,\r\n    loading,\r\n    error,\r\n    hasMultipleImages\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Car, CreditCard, MapPin,Settings, Shield } from 'lucide-react';\r\n\r\nimport { FilterChip } from '@/shared/ui';\r\n\r\ninterface FAQCategoryFilterProps {\r\n  selectedCategory: string;\r\n  onCategoryChange: (category: string) => void;\r\n  categories: string[];\r\n}\r\n\r\nconst categoryIcons: Record<string, React.ComponentType<{ className?: string }>> = {\r\n  All: Car,\r\n  General: Car,\r\n  Services: Car,\r\n  Scheduling: Settings,\r\n  Pricing: CreditCard,\r\n  Preparation: Shield,\r\n  RV: Car,\r\n  Locations: MapPin,\r\n  Payments: CreditCard,\r\n  Warranty: Shield,\r\n  Aftercare: Shield,\r\n};\r\n\r\nconst FAQCategoryFilter: React.FC<FAQCategoryFilterProps> = ({ \r\n  selectedCategory, \r\n  onCategoryChange,\r\n  categories\r\n}) => {\r\n  const renderChip = (categoryName: string) => {\r\n    const isSelected = selectedCategory === categoryName;\r\n    const IconComponent = categoryIcons[categoryName] || MapPin;\r\n    \r\n    return (\r\n      <FilterChip\r\n        key={categoryName}\r\n        onClick={() => {\r\n          onCategoryChange(categoryName);\r\n        }}\r\n        isSelected={isSelected}\r\n        icon={IconComponent}\r\n        className=\"transform hover:scale-105 backdrop-blur-sm text-sm md:text-base\"\r\n      >\r\n        {categoryName}\r\n      </FilterChip>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div className=\"flex flex-wrap justify-center gap-2 md:gap-3 max-w-3xl mx-auto\">\r\n      {categories.map(renderChip)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQCategoryFilter;\r\n","import React from 'react';\r\nimport { Search } from 'lucide-react';\r\n\r\nconst FAQEmptyState: React.FC = () => {\r\n  return (\r\n    <div className=\"text-center py-12\">\r\n      <div className=\"bg-stone-800/80 backdrop-blur-sm rounded-lg p-8 border border-stone-700/50 shadow-xl\">\r\n        <Search className=\"h-12 w-12 text-stone-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-xl font-semibold text-white mb-2\">No FAQs Found</h3>\r\n        <p className=\"text-stone-400\">\r\n          Try adjusting your search or selecting a different category.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQEmptyState;\r\n","import React, { useMemo } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MapPin,X } from 'lucide-react';\r\n\r\ninterface ServiceArea {\r\n  city: string;\r\n  state: string;\r\n  zip?: string;\r\n  primary?: boolean;\r\n  minimum?: number;\r\n  multiplier?: number;\r\n}\r\n\r\ninterface ServiceAreasModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  serviceAreas: ServiceArea[];\r\n  businessName?: string;\r\n}\r\n\r\nconst ServiceAreasModal: React.FC<ServiceAreasModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  serviceAreas,\r\n  businessName = 'Our Business'\r\n}) => {\r\n  // Group service areas by state\r\n  const areasByState = useMemo(() => {\r\n    const grouped: Record<string, ServiceArea[]> = {};\r\n    \r\n    serviceAreas.forEach(area => {\r\n      if (!grouped[area.state]) {\r\n        grouped[area.state] = [];\r\n      }\r\n      grouped[area.state].push(area);\r\n    });\r\n    \r\n    // Sort states alphabetically\r\n    const sortedStates = Object.keys(grouped).sort();\r\n    const result: Record<string, ServiceArea[]> = {};\r\n    sortedStates.forEach(state => {\r\n      // Sort cities within each state, with primary first\r\n      result[state] = grouped[state].sort((a, b) => {\r\n        if (a.primary && !b.primary) return -1;\r\n        if (!a.primary && b.primary) return 1;\r\n        return a.city.localeCompare(b.city);\r\n      });\r\n    });\r\n    \r\n    return result;\r\n  }, [serviceAreas]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const modalContent = (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/70 backdrop-blur-sm\">\r\n      <div className=\"bg-stone-800 rounded-lg shadow-2xl max-w-4xl w-full max-h-[80vh] overflow-hidden border border-stone-700\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-stone-700\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-white\">Service Areas</h2>\r\n            <p className=\"text-gray-400 mt-1\">Where {businessName} provides mobile detailing services</p>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-white transition-colors p-2 hover:bg-stone-700 rounded-lg\"\r\n            aria-label=\"Close modal\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6 overflow-y-auto max-h-[calc(80vh-120px)]\">\r\n          {Object.entries(areasByState).map(([state, areas]) => (\r\n            <div key={state} className=\"mb-8 last:mb-0\">\r\n              {/* State Header */}\r\n              <div className=\"flex items-center gap-2 mb-4\">\r\n                <MapPin className=\"h-5 w-5 text-orange-400\" />\r\n                <h3 className=\"text-xl font-semibold text-orange-400\">\r\n                  {state}\r\n                </h3>\r\n                <span className=\"text-gray-400 text-sm\">\r\n                  ({areas.length} {areas.length === 1 ? 'city' : 'cities'})\r\n                </span>\r\n              </div>\r\n\r\n              {/* Cities Grid */}\r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 ml-7\">\r\n                {areas.map((area, index) => (\r\n                  <div\r\n                    key={`${area.state}-${area.city}-${index}`}\r\n                    className=\"flex items-center gap-2 text-gray-300 hover:text-white transition-colors\"\r\n                  >\r\n                    <div className=\"w-1.5 h-1.5 rounded-full bg-orange-400 flex-shrink-0\"></div>\r\n                    <span className=\"text-sm\">\r\n                      {area.city}\r\n                      {area.primary && (\r\n                        <span className=\"ml-2 text-xs text-orange-400 font-medium\">\r\n                          Primary\r\n                        </span>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {serviceAreas.length === 0 && (\r\n            <div className=\"text-center py-12\">\r\n              <MapPin className=\"h-12 w-12 text-gray-600 mx-auto mb-4\" />\r\n              <p className=\"text-gray-400\">No service areas configured</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"p-6 border-t border-stone-700 bg-stone-900\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <p className=\"text-sm text-gray-400\">\r\n              {serviceAreas.length} total service {serviceAreas.length === 1 ? 'area' : 'areas'}\r\n            </p>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 bg-orange-600 hover:bg-orange-700 text-white rounded-lg transition-colors font-medium\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return createPortal(modalContent, document.body);\r\n};\r\n\r\nexport default ServiceAreasModal;\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport ServiceAreasModal from '@/shared/ui/modals/ServiceAreasModal';\r\n\r\ninterface ServiceAreasLinkProps {\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst ServiceAreasLink: React.FC<ServiceAreasLinkProps> = ({ \r\n  children = 'view our service areas',\r\n  className = ''\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  \r\n  // Get tenant data for service areas - hooks must be called unconditionally\r\n  const tenantData = useData();\r\n\r\n  // If no service areas, just render as plain text\r\n  if (tenantData.serviceAreas.length === 0) {\r\n    return <span>{children}</span>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}\r\n        className={`text-orange-400 hover:text-orange-300 underline transition-colors cursor-pointer bg-transparent border-none p-0 font-inherit ${className}`}\r\n      >\r\n        {children}\r\n      </button>\r\n      \r\n      <ServiceAreasModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => {\r\n          setIsModalOpen(false);\r\n        }}\r\n        serviceAreas={tenantData.serviceAreas}\r\n        businessName={tenantData.businessName}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceAreasLink;\r\n\r\n","import React from 'react';\r\nimport { ChevronDown } from 'lucide-react';\r\n\r\nimport type { FAQItem as FAQItemType } from '@/features/faq/types';\r\n\r\nimport ServiceAreasLink from './ServiceAreasLink';\r\n\r\ninterface FAQItemProps {\r\n  faq: FAQItemType;\r\n  isExpanded: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nconst FAQItem: React.FC<FAQItemProps> = ({ faq, isExpanded, onToggle }) => {\r\n  const handleToggle = () => {\r\n    // Analytics tracking for FAQ interactions\r\n    if (faq.id && !isExpanded) {\r\n      // Track FAQ expansion for analytics and A/B testing\r\n      if (typeof window !== 'undefined' && window.gtag) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call -- gtag is from external Google Analytics script\r\n        window.gtag('event', 'faq_expanded', {\r\n          faq_id: faq.id,\r\n          faq_question: faq.question,\r\n          faq_category: faq.category\r\n        });\r\n      }\r\n    }\r\n    onToggle();\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"bg-stone-800/80 backdrop-blur-sm rounded-lg border border-stone-700/50 overflow-hidden hover:shadow-xl hover:shadow-black/30 transition-all duration-300 h-fit\"\r\n      data-faq-id={faq.id}\r\n      data-faq-category={faq.category}\r\n    >\r\n      <button\r\n        onClick={handleToggle}\r\n        className=\"w-full px-4 py-4 text-left flex justify-between items-start hover:bg-stone-700/40 transition-colors duration-200 group\"\r\n      >\r\n        <div className=\"flex-1 pr-2\">\r\n          <h3 className=\"text-white font-semibold text-base group-hover:text-orange-400 transition-colors duration-200 leading-tight\">\r\n            {faq.question}\r\n          </h3>\r\n        </div>\r\n        <ChevronDown\r\n          className={`h-4 w-4 text-stone-400 transition-transform duration-200 flex-shrink-0 mt-1 ${\r\n            isExpanded ? 'rotate-180 text-orange-400' : ''\r\n          }`}\r\n        />\r\n      </button>\r\n      \r\n      <div\r\n        className={`overflow-hidden transition-all duration-300 ease-in-out ${\r\n          isExpanded ? 'max-h-48 opacity-100' : 'max-h-0 opacity-0'\r\n        }`}\r\n      >\r\n        <div className=\"px-4 pb-4 border-t border-stone-700/30\">\r\n          <div className=\"pt-3\">\r\n            <div className=\"text-stone-300 text-sm leading-relaxed\">\r\n              {faq.question === 'What areas do you service?' ? (\r\n                <>\r\n                  {faq.answer.split('We proudly serve')[0]}\r\n                  We proudly serve{' '}\r\n                  <ServiceAreasLink>our service areas</ServiceAreasLink>\r\n                  {faq.answer.includes('We proudly serve.') \r\n                    ? faq.answer.split('We proudly serve.')[1]\r\n                    : faq.answer.split('We proudly serve')[1] || ''}\r\n                </>\r\n              ) : (\r\n                faq.answer\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQItem;\r\n","import React from 'react';\r\n\r\nimport type { FAQItem as FAQItemType } from '@/features/faq/types';\r\n\r\nimport FAQItem from './FAQItem';\r\n\r\ninterface FAQListProps {\r\n  faqs: FAQItemType[];\r\n  expandedFaq: number | string | null;\r\n  onToggleFaq: (id: number | string) => void;\r\n}\r\n\r\nconst FAQList: React.FC<FAQListProps> = ({ faqs, expandedFaq, onToggleFaq }) => {\r\n  return (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-5 lg:gap-6\">\r\n      {faqs.map((faq, index) => {\r\n        // Use id if available, otherwise fall back to question or index\r\n        const key = faq.id ?? `faq-${String(index)}`;\r\n        return (\r\n          <FAQItem\r\n            key={key}\r\n            faq={faq}\r\n            isExpanded={expandedFaq === key}\r\n            onToggle={() => {\r\n              onToggleFaq(key);\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQList;\r\n","import React from 'react';\r\nimport { Search } from 'lucide-react';\r\n\r\ninterface FAQSearchBarProps {\r\n  searchTerm: string;\r\n  onSearchChange: (term: string) => void;\r\n}\r\n\r\nconst FAQSearchBar: React.FC<FAQSearchBarProps> = ({ searchTerm, onSearchChange }) => {\r\n  return (\r\n    <div className=\"relative max-w-md mx-auto mb-6\">\r\n      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-stone-400 h-5 w-5\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search FAQs...\"\r\n        value={searchTerm}\r\n        onChange={(e) => {\r\n          onSearchChange(e.target.value);\r\n        }}\r\n        className=\"w-full pl-10 pr-4 py-3 bg-stone-800/80 backdrop-blur-sm border border-stone-600/50 rounded-lg text-white placeholder-stone-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all duration-200 shadow-lg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQSearchBar;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useFAQContent,useRotatingBackground } from '@/features/faq/hooks';\r\nimport { getImageOpacityClasses, getTransitionStyles } from '@/shared/utils';\r\n\r\nimport FAQCategoryFilter from './FAQCategoryFilter';\r\nimport FAQEmptyState from './FAQEmptyState';\r\nimport FAQList from './FAQList';\r\nimport FAQSearchBar from './FAQSearchBar';\r\n\r\ninterface FAQProps {\r\n  locationData?: {\r\n    faqIntro?: string;\r\n    city?: string;\r\n    faqs?: Array<{ q: string; a: string }>;\r\n  };\r\n}\r\n\r\nconst FAQ: React.FC<FAQProps> = ({ locationData }) => {\r\n  const [selectedCategory, setSelectedCategory] = useState('Services');\r\n  const [expandedFaq, setExpandedFaq] = useState<string | number | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n  // Get FAQ content from database (with fallbacks)\r\n  const { faqTitle, faqSubtitle, faqItems, categories } = useFAQContent({ locationData });\r\n  \r\n  // Rotating background\r\n  const { images, currentIndex, loading: backgroundLoading } = useRotatingBackground();\r\n\r\n  // Filter FAQs based on category and search\r\n  const filteredFaqs = faqItems.filter(faq => {\r\n    const matchesCategory = selectedCategory === 'All' || faq.category === selectedCategory;\r\n    const matchesSearch = faq.question.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         faq.answer.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesCategory && matchesSearch;\r\n  });\r\n\r\n  const toggleFaq = (id: string | number) => {\r\n    setExpandedFaq(expandedFaq === id ? null : id);\r\n  };\r\n\r\n  return (\r\n    <section id=\"faq\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n      {/* Rotating Background Images with Overlay */}\r\n      <div className=\"absolute inset-0 z-0\">\r\n        {/* Render all images to test if performance optimization causes the pop */}\r\n        {images.map((image, index) => {\r\n          return (\r\n            <img\r\n              key={image.id}\r\n              src={image.src}\r\n              alt={image.alt || `FAQ background image ${String(index + 1)}`}\r\n              className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n              style={getTransitionStyles(2000)}\r\n              decoding={index === 0 ? 'sync' : 'async'}\r\n              loading={index === 0 ? 'eager' : 'lazy'}\r\n            />\r\n          );\r\n        })}\r\n        \r\n        {/* Fallback background if no images loaded */}\r\n        {!images.length && !backgroundLoading && (\r\n          <div\r\n            className=\"absolute inset-0\"\r\n            style={{\r\n              backgroundImage: 'url(/images/gallery/dodge-viper-gts-grigio-telesto-studio.png)',\r\n              backgroundSize: 'cover',\r\n              backgroundPosition: 'center',\r\n              backgroundAttachment: 'fixed'\r\n            }}\r\n          />\r\n        )}\r\n        \r\n        {/* Dark overlay */}\r\n        <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"relative z-10 h-full overflow-y-auto pt-[72px] md:pt-[88px]\">\r\n        <div className=\"max-w-6xl mx-auto w-full px-4 py-8\">\r\n          {/* Header */}\r\n          <div className=\"text-center mb-8\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold text-white mb-3 drop-shadow-lg\">\r\n              {faqTitle}\r\n            </h1>\r\n            <p className=\"text-stone-200 text-lg max-w-2xl mx-auto drop-shadow-md\">\r\n              {faqSubtitle}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Search and Filter Controls */}\r\n          <div className=\"mb-8\">\r\n            <FAQSearchBar \r\n              searchTerm={searchTerm}\r\n              onSearchChange={setSearchTerm}\r\n            />\r\n\r\n            <FAQCategoryFilter\r\n              selectedCategory={selectedCategory}\r\n              onCategoryChange={setSelectedCategory}\r\n              categories={categories}\r\n            />\r\n          </div>\r\n\r\n          {/* FAQ Content */}\r\n          <div className=\"max-w-4xl mx-auto\">\r\n            {filteredFaqs.length === 0 ? (\r\n              <FAQEmptyState />\r\n            ) : (\r\n              <FAQList\r\n                faqs={filteredFaqs}\r\n                expandedFaq={expandedFaq}\r\n                onToggleFaq={toggleFaq}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n/* eslint-disable react-refresh/only-export-components -- Both named and default export needed for compatibility */\r\nexport { FAQ };\r\nexport default FAQ;\r\n/* eslint-enable react-refresh/only-export-components -- End of multi-export section */\r\n","import React from 'react';\r\n\r\ninterface DisclaimerProps {\r\n  businessInfo: {\r\n    name: string;\r\n  };\r\n}\r\n\r\nconst Disclaimer: React.FC<DisclaimerProps> = ({ businessInfo }) => {\r\n  return (\r\n    <div className=\"border-t border-stone-600 pt-4 md:pt-8\">\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-300 text-sm md:text-base\">\r\n            © 2024 {businessInfo.name}. All rights reserved.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Disclaimer;\r\n","import React from 'react';\r\nimport { SiFacebook, SiInstagram, SiTiktok, SiYoutube } from 'react-icons/si';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\n\r\ninterface FollowUsProps {\r\n  socialMedia?: {\r\n    facebook?: string;\r\n    instagram?: string;\r\n    tiktok?: string;\r\n    youtube?: string;\r\n  };\r\n}\r\n\r\nconst FollowUs: React.FC<FollowUsProps> = ({ socialMedia }) => {\r\n  const { isPreview } = useData();\r\n  \r\n  const socialLinks = [\r\n    {\r\n      platform: 'Facebook',\r\n      url: socialMedia?.facebook,\r\n      icon: SiFacebook,\r\n      label: 'Facebook'\r\n    },\r\n    {\r\n      platform: 'Instagram',\r\n      url: socialMedia?.instagram,\r\n      icon: SiInstagram,\r\n      label: 'Instagram'\r\n    },\r\n    {\r\n      platform: 'TikTok',\r\n      url: socialMedia?.tiktok,\r\n      icon: SiTiktok,\r\n      label: 'TikTok'\r\n    },\r\n    {\r\n      platform: 'YouTube',\r\n      url: socialMedia?.youtube,\r\n      icon: SiYoutube,\r\n      label: 'YouTube'\r\n    }\r\n  ];\r\n\r\n  const visibleLinks = socialLinks.filter(link => link.url !== undefined); // Show if URL field exists (even if empty)\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h3 className=\"font-bold text-orange-400 text-xl mb-6\">Follow Us</h3>\r\n      <div className=\"inline-flex flex-col space-y-3 items-start\">\r\n        {visibleLinks.map(({ platform, url, icon: Icon, label }) => {\r\n          const hasUrl = url && url.trim() !== '';\r\n          \r\n          // In preview mode, render as span instead of link\r\n          if (isPreview) {\r\n            return (\r\n              <span\r\n                key={platform}\r\n                className=\"text-white hover:text-orange-400 transition-colors duration-200 flex items-center space-x-2 md:space-x-3 cursor-pointer\"\r\n                title=\"Social media links available in your live site\"\r\n              >\r\n                <Icon className=\"h-4 w-4 md:h-5 md:w-5 flex-shrink-0\" />\r\n                <span className=\"text-sm md:text-lg\">{label}</span>\r\n              </span>\r\n            );\r\n          }\r\n          \r\n          // If no URL, render as span (non-clickable)\r\n          if (!hasUrl) {\r\n            return (\r\n              <span\r\n                key={platform}\r\n                className=\"text-white hover:text-orange-400 transition-colors duration-200 flex items-center space-x-2 md:space-x-3 cursor-pointer\"\r\n                title=\"Social media link not configured\"\r\n              >\r\n                <Icon className=\"h-4 w-4 md:h-5 md:w-5 flex-shrink-0\" />\r\n                <span className=\"text-sm md:text-lg\">{label}</span>\r\n              </span>\r\n            );\r\n          }\r\n          \r\n          // If has URL, render as clickable link\r\n          return (\r\n            <a \r\n              key={platform}\r\n              href={url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"text-white hover:text-orange-400 transition-colors duration-200 flex items-center space-x-3\"\r\n            >\r\n              <Icon className=\"h-5 w-5 flex-shrink-0\" />\r\n              <span className=\"text-lg\">{label}</span>\r\n            </a>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowUs;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useData } from '@/features/header';\r\n\r\nimport ServiceAreasModal from '../modals/ServiceAreasModal';\r\n\r\ninterface ServiceArea {\r\n  city: string;\r\n  state: string;\r\n  zip?: string;\r\n  primary?: boolean;\r\n  minimum?: number;\r\n  multiplier?: number;\r\n}\r\n\r\ninterface FooterLocationsProps {\r\n  serviceAreas?: ServiceArea[];\r\n}\r\n\r\nconst FooterLocations: React.FC<FooterLocationsProps> = ({ serviceAreas }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  \r\n  // Get tenant data - component should always be used in a valid context\r\n  const tenantData = useData();\r\n  \r\n  // Use tenant service areas if available, otherwise show default message\r\n  const shouldUseTenantData = tenantData.isTenant && serviceAreas && serviceAreas.length > 0;\r\n  \r\n  // Always show first 4 cities\r\n  const displayAreas = shouldUseTenantData ? serviceAreas.slice(0, 4) : [];\r\n  const hasMore = shouldUseTenantData && serviceAreas.length > 4;\r\n  \r\n  const handleViewMore = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"text-center md:text-right\">\r\n        <h3 className=\"font-bold text-orange-400 text-xl mb-6\">Service Areas</h3>\r\n        <div className=\"flex flex-col space-y-3\">\r\n          {shouldUseTenantData ? (\r\n            <>\r\n              {displayAreas.map((area, index) => (\r\n                <div key={index} className=\"text-white text-lg\">\r\n                  {area.city}, {area.state}\r\n                </div>\r\n              ))}\r\n              {hasMore && (\r\n                <div className=\"flex justify-center md:justify-end\">\r\n                  <button\r\n                    onClick={handleViewMore}\r\n                    className=\"text-orange-400 hover:text-orange-300 transition-colors duration-200 text-lg bg-transparent border-none p-0 font-inherit cursor-pointer\"\r\n                  >\r\n                    View More\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"text-white text-lg\">\r\n              Multiple Service Areas\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Service Areas Modal */}\r\n      {shouldUseTenantData && (\r\n        <ServiceAreasModal\r\n          isOpen={isModalOpen}\r\n          onClose={() => { setIsModalOpen(false); }}\r\n          serviceAreas={serviceAreas}\r\n          businessName={tenantData.businessName}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FooterLocations;\r\n","import React from 'react';\r\nimport { Mail, MapPin, Phone } from 'lucide-react';\r\n\r\ninterface GetInTouchProps {\r\n  config?: {\r\n    phone?: string;\r\n    email?: string;\r\n    base_location?: {\r\n      city?: string;\r\n      state_name?: string;\r\n    };\r\n  };\r\n  onRequestQuote?: () => void;\r\n  showLocationSetter?: boolean;\r\n}\r\n\r\nconst GetInTouch: React.FC<GetInTouchProps> = ({ \r\n  config, \r\n  onRequestQuote,\r\n  showLocationSetter = false\r\n}) => {\r\n  const contactInfo = {\r\n    phone: config?.phone ?? '(555) 123-4567',\r\n    email: config?.email ?? 'hello@thatsmartsite.com',\r\n    location: config?.base_location?.city && config.base_location.state_name \r\n      ? `${config.base_location.city}, ${config.base_location.state_name}`\r\n      : null // Don't show location for main site\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center md:text-left\">\r\n      <h3 className=\"font-bold text-orange-400 text-xl mb-6\">Get in Touch</h3>\r\n      <div className=\"flex flex-col space-y-3\">\r\n        <div className=\"flex items-center justify-center md:justify-start space-x-3\">\r\n          <Phone className=\"h-5 w-5 flex-shrink-0 text-orange-400\" />\r\n          <a \r\n            href={`tel:${contactInfo.phone}`}\r\n            className=\"text-lg text-white hover:text-orange-400 transition-colors duration-200\"\r\n          >\r\n            {contactInfo.phone}\r\n          </a>\r\n        </div>\r\n        <div className=\"flex items-center justify-center md:justify-start space-x-3\">\r\n          <Mail className=\"h-5 w-5 flex-shrink-0 text-orange-400\" />\r\n          <button\r\n            onClick={onRequestQuote}\r\n            className=\"text-lg text-white hover:text-orange-400 transition-colors duration-200 bg-transparent border-none p-0 font-inherit cursor-pointer text-left\"\r\n          >\r\n            {contactInfo.email}\r\n          </button>\r\n        </div>\r\n        {contactInfo.location && (\r\n          <div className=\"hidden md:flex items-center justify-center md:justify-start space-x-3\">\r\n            <MapPin className=\"h-5 w-5 flex-shrink-0 text-orange-400\" />\r\n            <span className=\"text-lg text-white\">\r\n              {contactInfo.location}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {showLocationSetter && !contactInfo.location && (\r\n          <div className=\"flex items-center justify-center md:justify-start space-x-3\">\r\n            <MapPin className=\"h-5 w-5 flex-shrink-0 text-orange-400\" />\r\n            <a \r\n              href=\"/locations\" \r\n              className=\"text-lg text-orange-400 hover:text-orange-300 transition-colors duration-200\"\r\n            >\r\n              Set Your Location\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetInTouch;\r\n","import React from 'react';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport CTAButtons from '@/shared/ui/buttons/CTAButtons';\r\nimport FooterLocations from '@/shared/ui/navigation/FooterLocations';\r\nimport { formatPhoneNumber } from '@/shared/utils/phoneFormatter';\r\n\r\nimport Disclaimer from './Disclaimer';\r\nimport FollowUs from './FollowUs';\r\nimport GetInTouch from './GetInTouch';\r\n\r\ninterface FooterProps {\r\n  onRequestQuote?: () => void;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ onRequestQuote }) => {\r\n  const tenantData = useData();\r\n  \r\n  // All sites are now tenant-based, so use tenant data\r\n  const config = {\r\n    phone: formatPhoneNumber(tenantData.phone),\r\n    email: tenantData.email,\r\n    base_location: {\r\n      city: tenantData.location.split(', ')[0] ?? '',\r\n      state_name: tenantData.location.split(', ')[1] ?? ''\r\n    }\r\n  };\r\n\r\n  // Use tenant social media\r\n  const socialMedia = {\r\n    facebook: tenantData.socialMedia.facebook,\r\n    instagram: tenantData.socialMedia.instagram,\r\n    tiktok: tenantData.socialMedia.tiktok,\r\n    youtube: tenantData.socialMedia.youtube\r\n  };\r\n\r\n  const businessInfo = {\r\n    name: tenantData.businessName\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto w-full px-4 md:px-6 lg:px-8\">\r\n      {/* Mobile Layout: Vertical stack */}\r\n      <div className=\"md:hidden space-y-6 mb-6\">\r\n        <GetInTouch \r\n          config={config}\r\n          onRequestQuote={onRequestQuote || (() => {})}\r\n          showLocationSetter={false}\r\n        />\r\n        <FollowUs socialMedia={socialMedia} />\r\n        <FooterLocations serviceAreas={tenantData.serviceAreas} />\r\n      </div>\r\n\r\n      {/* Desktop Layout: 3 equal columns */}\r\n      <div className=\"hidden md:grid md:grid-cols-3 gap-6 md:gap-7 lg:gap-8 mb-6 md:mb-7 lg:mb-8\">\r\n        <GetInTouch \r\n          config={config}\r\n          onRequestQuote={onRequestQuote || (() => {})}\r\n          showLocationSetter={false}\r\n        />\r\n        <FollowUs socialMedia={socialMedia} />\r\n        <FooterLocations serviceAreas={tenantData.serviceAreas} />\r\n      </div>\r\n      \r\n      {/* CTA Buttons - Centered above line break */}\r\n      <div className=\"flex justify-center mb-4 md:mb-8\">\r\n        <CTAButtons \r\n          getQuoteProps={{ onClick: onRequestQuote }}\r\n          bookNowProps={{ size: 'md' }}\r\n        />\r\n      </div>\r\n      \r\n      {/* Footer Bottom */}\r\n      <Disclaimer \r\n        businessInfo={businessInfo}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/**\r\n * Gallery API Layer\r\n * Handles all gallery-related API calls\r\n */\r\n\r\nimport { GalleryImage } from '@/shared/types/gallery';\r\n\r\nconst GALLERY_DATA_URL = '/mobile-detailing/data/gallery.json';\r\n\r\n// Type guard to ensure we have a valid GalleryImage\r\nconst isValidGalleryImage = (item: unknown): item is GalleryImage => {\r\n  return typeof item === 'object' && item !== null && 'src' in item && 'tags' in item;\r\n};\r\n\r\nexport interface GalleryApiResponse {\r\n  success: boolean;\r\n  data: GalleryImage[];\r\n  error?: string;\r\n}\r\n\r\nexport const galleryApi = {\r\n  /**\r\n   * Fetch gallery images\r\n   */\r\n  getGalleryImages: async (): Promise<GalleryImage[]> => {\r\n    try {\r\n      const response = await fetch(GALLERY_DATA_URL);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch gallery data: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json() as GalleryImage[];\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Gallery API Error:', error);\r\n      throw new Error(`Failed to load gallery images: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get random gallery images for background rotation\r\n   */\r\n  getRandomGalleryImages: async (count: number = 5): Promise<GalleryImage[]> => {\r\n    try {\r\n      // Call the getGalleryImages function directly to avoid circular reference\r\n      const response = await fetch(GALLERY_DATA_URL);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch gallery data: ${response.status}`);\r\n      }\r\n      \r\n      const allImages = await response.json() as GalleryImage[];\r\n      \r\n      // Filter out images that might be used for avatars (you can customize this logic)\r\n      const backgroundImages = allImages.filter((img) => {\r\n        if (!isValidGalleryImage(img)) return false;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access -- TypeScript type inference issue with GalleryImage interface\r\n        const src = img.src.toLowerCase();\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access -- TypeScript type inference issue with GalleryImage interface\r\n        return !src.includes('avatar') && !src.includes('profile');\r\n      });\r\n      \r\n      // Shuffle and take the requested count\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- TypeScript type inference issue with filter result\r\n      const shuffled = [...backgroundImages].sort(() => Math.random() - 0.5);\r\n      return shuffled.slice(0, Math.min(count, shuffled.length));\r\n    } catch (error) {\r\n      console.error('Random Gallery API Error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to load random gallery images: ${errorMessage}`);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get gallery images for a specific category\r\n   */\r\n  getGalleryImagesByCategory: async (category: string): Promise<GalleryImage[]> => {\r\n    try {\r\n      // Call the getGalleryImages function directly to avoid circular reference\r\n      const response = await fetch(GALLERY_DATA_URL);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch gallery data: ${response.status}`);\r\n      }\r\n      \r\n      const allImages = await response.json() as GalleryImage[];\r\n      return allImages.filter((img) => {\r\n        if (!isValidGalleryImage(img)) return false;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access -- TypeScript type inference issue with GalleryImage interface\r\n        return img.tags.some((tag: string) => tag.toLowerCase().includes(category.toLowerCase()));\r\n      });\r\n    } catch (error) {\r\n      console.error('Gallery Category API Error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to load gallery images for category ${category}: ${errorMessage}`);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get featured gallery images\r\n   */\r\n  getFeaturedGalleryImages: async (): Promise<GalleryImage[]> => {\r\n    try {\r\n      const allImages = await galleryApi.getGalleryImages();\r\n      // For now, return all images since there's no featured property\r\n      // In the future, you could add a featured property to the data or use tags\r\n      return allImages;\r\n    } catch (error) {\r\n      console.error('Featured Gallery API Error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to load featured gallery images: ${errorMessage}`);\r\n    }\r\n  }\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { galleryApi } from '../api/gallery.api';\r\nimport { GalleryImage } from '../types';\r\n\r\nexport const useGallery = () => {\r\n  const [images, setImages] = useState<GalleryImage[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchGalleryData = async (): Promise<void> => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        const galleryImages = await galleryApi.getGalleryImages();\r\n        setImages(galleryImages);\r\n      } catch (err: unknown) {\r\n        setError(err instanceof Error ? err.message : 'Failed to load gallery data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    void fetchGalleryData();\r\n  }, []);\r\n\r\n  return {\r\n    images,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n","import { useCallback,useEffect, useRef, useState } from 'react';\r\n\r\nimport { galleryApi } from '../api/gallery.api';\r\nimport { GalleryImage } from '../types';\r\n\r\n// Fisher-Yates shuffle algorithm\r\nfunction shuffleArray<T>(array: T[]): T[] {\r\n  const shuffled = [...array];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    // Safe swap - indices are guaranteed to be valid by loop bounds\r\n    const temp = shuffled[i];\r\n    const itemJ = shuffled[j];\r\n    if (temp !== undefined && itemJ !== undefined) {\r\n      shuffled[i] = itemJ;\r\n      shuffled[j] = temp;\r\n    }\r\n  }\r\n  return shuffled;\r\n}\r\n\r\ntype RotatingState = {\r\n  currentImages: GalleryImage[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  fadingIndex: number | null; // which card is currently fading (0,1,2)\r\n  nextImages: GalleryImage[]; // next images for crossfade\r\n};\r\n\r\nexport function useRotatingGallery() {\r\n  const [allImages, setAllImages] = useState<GalleryImage[]>([]);\r\n  const [state, setState] = useState<RotatingState>({\r\n    currentImages: [],\r\n    loading: true,\r\n    error: null,\r\n    fadingIndex: null,\r\n    nextImages: [],\r\n  });\r\n\r\n  // Refs to avoid stale closures inside timers\r\n  const allImagesRef = useRef<GalleryImage[]>([]);\r\n  const currentRef = useRef<GalleryImage[]>([]);\r\n  const fadingIndexRef = useRef<number>(-1);\r\n  const nextPtrRef = useRef<number>(0); // next index in allImages to try\r\n  const intervalRef = useRef<number | null>(null);\r\n  const fadeTimeoutRef = useRef<number | null>(null);\r\n  const unFadeTimeoutRef = useRef<{ timeout: number | null; raf: number | null }>({ \r\n    timeout: null, \r\n    raf: null \r\n  });\r\n\r\n  // Load data\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    void (async (): Promise<void> => {\r\n        try {\r\n          const data = await galleryApi.getGalleryImages();\r\n\r\n          // Check if component is still mounted before updating state\r\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- cancelled can be set to true by cleanup function before async completes\r\n          if (cancelled) return;\r\n          \r\n          const shuffledData = shuffleArray(data) as GalleryImage[];\r\n          setAllImages(shuffledData);\r\n          allImagesRef.current = shuffledData;\r\n\r\n          const initial = shuffledData.slice(0, Math.min(3, shuffledData.length));\r\n          currentRef.current = initial;\r\n\r\n          // set nextPtr to first unseen image\r\n          nextPtrRef.current = initial.length % shuffledData.length;\r\n\r\n          setState(s => ({\r\n            ...s,\r\n            currentImages: initial,\r\n            nextImages: initial,\r\n            loading: false,\r\n            error: null,\r\n          }));\r\n      } catch (err: unknown) {\r\n        // Check if component is still mounted before updating state\r\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- cancelled can be set to true by cleanup function before async completes\r\n        if (cancelled) return;\r\n        \r\n        setState(s => ({\r\n          ...s,\r\n          loading: false,\r\n          error: err instanceof Error ? err.message : 'Failed to load gallery data',\r\n        }));\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  // Helper: advance nextPtr to an image not currently displayed (avoid dupes)\r\n  const getNextUniqueImage = useCallback((): GalleryImage | null => {\r\n    const all = allImagesRef.current;\r\n    const current = currentRef.current;\r\n    if (all.length === 0) return null;\r\n\r\n    const visibleIds = new Set(current.map(i => i.id));\r\n    let tries = 0;\r\n    let ptr = nextPtrRef.current;\r\n\r\n    while (tries < all.length) {\r\n      const candidate = all[ptr];\r\n      ptr = (ptr + 1) % all.length;\r\n      tries++;\r\n\r\n      if (!candidate) continue;\r\n      if (!visibleIds.has(candidate.id)) {\r\n        // lock in the advanced ptr\r\n        nextPtrRef.current = ptr;\r\n        return candidate;\r\n      }\r\n    }\r\n\r\n    // Fallback: if everything is visible (e.g., all.length <= 3), just cycle anyway\r\n    const fallback = all[nextPtrRef.current];\r\n    nextPtrRef.current = (nextPtrRef.current + 1) % all.length;\r\n    return fallback ?? null;\r\n  }, []);\r\n\r\n  // One-step rotation: fade one card, swap only that card, un-fade, move to next card index\r\n  const rotateOneCard = useCallback(() => {\r\n    const all = allImagesRef.current;\r\n    if (all.length === 0) return;\r\n\r\n    const current = currentRef.current;\r\n    if (current.length === 0) return;\r\n\r\n    // if only 1–3 images total, we can still fade them one-by-one but replacement may repeat\r\n    const nextFadeIndex = (fadingIndexRef.current + 1) % Math.min(current.length, 3);\r\n    fadingIndexRef.current = nextFadeIndex;\r\n\r\n    // Get replacement image\r\n    const replacement = getNextUniqueImage();\r\n    if (replacement) {\r\n      // Create next images array with replacement\r\n      const nextImages = currentRef.current.slice();\r\n      nextImages[nextFadeIndex] = replacement;\r\n      \r\n      // 1) Set next images first (paint baseline)\r\n      setState(s => ({ ...s, nextImages }));\r\n      \r\n      // 2) Flip the fade flag on the next frame so CSS transitions fire\r\n      const raf = window.requestAnimationFrame(() => {\r\n        setState(s => ({ ...s, fadingIndex: nextFadeIndex }));\r\n      });\r\n\r\n      // Store raf id to clean up if needed\r\n      unFadeTimeoutRef.current.raf = raf;\r\n\r\n      // After 1000ms (CSS duration), commit nextImages -> currentImages\r\n      const timeout = window.setTimeout(() => {\r\n        // Update current images to the new ones\r\n        currentRef.current = nextImages;\r\n        setState(s => ({ \r\n          ...s, \r\n          currentImages: nextImages,\r\n          fadingIndex: null \r\n        }));\r\n      }, 1000 + 50); // + small buffer\r\n      \r\n      unFadeTimeoutRef.current.timeout = timeout;\r\n    }\r\n  }, [getNextUniqueImage]);\r\n\r\n  // Interval: every 7s rotate one card\r\n  useEffect(() => {\r\n    if (allImages.length === 0) return;\r\n\r\n    // Clear any existing\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n\r\n    intervalRef.current = window.setInterval(rotateOneCard, 7000);\r\n\r\n    return () => {\r\n      // Clean up interval\r\n      if (intervalRef.current) clearInterval(intervalRef.current);\r\n      \r\n      // Clean up fade timeouts - capture ref values at cleanup time\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- We intentionally capture current ref values at cleanup time, not at effect setup\r\n      const fadeTimeout = fadeTimeoutRef.current;\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- We intentionally capture current ref values at cleanup time, not at effect setup\r\n      const unFadeTimeouts = unFadeTimeoutRef.current;\r\n      \r\n      if (fadeTimeout !== null) {\r\n        clearTimeout(fadeTimeout);\r\n      }\r\n      if (unFadeTimeouts.timeout !== null) {\r\n        clearTimeout(unFadeTimeouts.timeout);\r\n      }\r\n      if (unFadeTimeouts.raf !== null) {\r\n        cancelAnimationFrame(unFadeTimeouts.raf);\r\n      }\r\n    };\r\n  }, [allImages.length, rotateOneCard]);\r\n\r\n  return {\r\n    currentImages: state.currentImages,   // render these 3\r\n    nextImages: state.nextImages,         // next images for crossfade\r\n    loading: state.loading,\r\n    error: state.error,\r\n    fadingIndex: state.fadingIndex,       // which card should have the fade class\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport { GalleryImage } from '../types';\r\n\r\ninterface GalleryItemProps {\r\n  image: GalleryImage;\r\n}\r\n\r\nconst GalleryItem: React.FC<GalleryItemProps> = ({ image }) => {\r\n  try {\r\n    return (\r\n    <li>\r\n      <div className=\"group relative block rounded-lg overflow-hidden shadow-lg transition-transform duration-300 hover:-translate-y-2 hover:shadow-xl\">\r\n        <div className=\"aspect-[3/2]\">\r\n          <img\r\n            src={image.src}\r\n            alt={image.alt}\r\n            width={image.width}\r\n            height={image.height}\r\n            loading={image.loading || 'lazy'}\r\n            className=\"absolute inset-0 w-full h-full object-cover\"\r\n            onError={(e) => {\r\n              // Show a simple placeholder if image fails to load\r\n              const target = e.target as HTMLImageElement;\r\n              target.style.display = 'none';\r\n              const parent = target.parentElement;\r\n              if (parent) {\r\n                parent.innerHTML = `\r\n                  <div class=\"absolute inset-0 w-full h-full bg-stone-700 flex items-center justify-center\">\r\n                    <div class=\"text-center text-stone-400\">\r\n                      <div class=\"text-4xl mb-2\">📷</div>\r\n                      <div class=\"text-sm\">Add ${image.src.split('/').pop()}</div>\r\n                    </div>\r\n                  </div>\r\n                `;\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent\">\r\n          <div className=\"absolute bottom-0 left-0 right-0 p-4\">\r\n            <h3 className=\"text-white font-semibold text-sm mb-1 truncate\">\r\n              {image.title || 'Untitled'}\r\n            </h3>\r\n            <p className=\"text-stone-300 text-xs overflow-hidden\" style={{ display: '-webkit-box', WebkitLineClamp: 2, WebkitBoxOrient: 'vertical' }}>\r\n              {image.caption || 'No description available'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    );\r\n  } catch (error) {\r\n    console.error('Error rendering gallery item:', error);\r\n    return (\r\n      <li>\r\n        <div className=\"group relative block rounded-lg overflow-hidden shadow-lg bg-stone-700\">\r\n          <div className=\"aspect-[3/2] flex items-center justify-center\">\r\n            <span className=\"text-stone-400\">Error loading image</span>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nexport default GalleryItem;\r\n","import React from 'react';\r\n\r\nimport { GalleryImage } from '../types';\r\n\r\n// Gallery item component with crossfade support\r\ninterface RotatingGalleryItemProps {\r\n  image: GalleryImage;\r\n  nextImage?: GalleryImage;\r\n  isTransitioning: boolean;\r\n  index: number;\r\n}\r\n\r\nconst RotatingGalleryItem: React.FC<RotatingGalleryItemProps> = ({ image, nextImage, isTransitioning, index: _index }) => {\r\n  // Fallback to current image if no next image\r\n  const next = nextImage ?? image;\r\n  \r\n  return (\r\n    <li>\r\n      <div className={`group relative block rounded-lg overflow-hidden shadow-lg transition-all duration-1000 hover:-translate-y-2 hover:shadow-xl ${isTransitioning ? 'is-fading' : ''}`}>\r\n        <div className=\"aspect-[3/2] relative\">\r\n          {/* Base layer: current image */}\r\n          <img\r\n            src={image.src}\r\n            alt={image.alt}\r\n            width={image.width}\r\n            height={image.height}\r\n            loading={image.loading || 'lazy'}\r\n            className={`absolute inset-0 w-full h-full object-cover transition-opacity will-change-opacity ${\r\n              isTransitioning ? 'opacity-0' : 'opacity-100'\r\n            }`}\r\n            style={{ transitionDuration: '1000ms' }}\r\n            onError={(e) => {\r\n              // Show a simple placeholder if image fails to load\r\n              const target = e.target as HTMLImageElement;\r\n              target.style.display = 'none';\r\n              const parent = target.parentElement;\r\n              if (parent) {\r\n                parent.innerHTML = `\r\n                  <div class=\"absolute inset-0 w-full h-full bg-stone-700 flex items-center justify-center\">\r\n                    <div class=\"text-center text-stone-400\">\r\n                      <div class=\"text-4xl mb-2\">📷</div>\r\n                      <div class=\"text-sm\">Add ${image.src.split('/').pop()}</div>\r\n                    </div>\r\n                  </div>\r\n                `;\r\n              }\r\n            }}\r\n          />\r\n          {/* Overlay layer: next image */}\r\n          <img\r\n            src={next.src}\r\n            alt={next.alt}\r\n            width={next.width}\r\n            height={next.height}\r\n            loading=\"lazy\"\r\n            className={`absolute inset-0 w-full h-full object-cover transition-opacity will-change-opacity ${\r\n              isTransitioning ? 'opacity-100' : 'opacity-0'\r\n            }`}\r\n            style={{ transitionDuration: '1000ms' }}\r\n          />\r\n        </div>\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent transition-opacity will-change-opacity\"\r\n        style={{ transitionDuration: '1000ms' }}>\r\n          <div className=\"absolute bottom-0 left-0 right-0 p-4\">\r\n            <h3 className=\"text-white font-semibold text-sm mb-1 truncate\">\r\n              {isTransitioning ? (next.title || 'Untitled') : (image.title || 'Untitled')}\r\n            </h3>\r\n            <p className=\"text-stone-300 text-xs overflow-hidden\" style={{ display: '-webkit-box', WebkitLineClamp: 2, WebkitBoxOrient: 'vertical' }}>\r\n              {isTransitioning ? (next.caption || 'No description available') : (image.caption || 'No description available')}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default RotatingGalleryItem;\r\n","import React, { useRef, useState } from 'react';\r\n\r\n// Gallery section includes footer as part of its display\r\n// This is intentional and part of the gallery feature's design\r\n// eslint-disable-next-line no-restricted-imports -- Gallery displays footer as bottom half of section\r\nimport { Footer } from '@/features/footer';\r\n\r\nimport { useGallery } from '../hooks/useGallery';\r\nimport { useRotatingGallery } from '../hooks/useRotatingGallery';\r\nimport { GalleryProps } from '../types';\r\nimport GalleryItem from './GalleryItem';\r\nimport RotatingGalleryItem from './RotatingGalleryItem';\r\n\r\nconst Gallery: React.FC<GalleryProps> = ({ onRequestQuote, locationData: _locationData }) => {\r\n  // Mobile: manual swipe carousel\r\n  const { images, loading, error } = useGallery();\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const touchStartX = useRef<number | null>(null);\r\n  const touchEndX = useRef<number | null>(null);\r\n\r\n  // Desktop: auto-rotating gallery\r\n  const { currentImages, nextImages, loading: rotatingLoading, error: rotatingError, fadingIndex } = useRotatingGallery();\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentIndex((prev) => (prev > 0 ? prev - 1 : images.length - 1));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentIndex((prev) => (prev < images.length - 1 ? prev + 1 : 0));\r\n  };\r\n\r\n  // Touch/swipe handlers\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    touchStartX.current = e.touches[0]?.clientX ?? null;\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    touchEndX.current = e.touches[0]?.clientX ?? null;\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    if (touchStartX.current === null || touchEndX.current === null) return;\r\n    \r\n    const diff = touchStartX.current - touchEndX.current;\r\n    const minSwipeDistance = 50;\r\n    \r\n    if (Math.abs(diff) > minSwipeDistance) {\r\n      if (diff > 0) {\r\n        handleNext();\r\n      } else {\r\n        handlePrevious();\r\n      }\r\n    }\r\n    \r\n    touchStartX.current = null;\r\n    touchEndX.current = null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* MOBILE: Separate full-screen gallery section */}\r\n      <section id=\"gallery\" className=\"md:hidden relative h-screen snap-start snap-always flex items-center justify-center bg-stone-900 px-4\">\r\n        <div className=\"h-full w-full flex items-center justify-center pt-[72px]\">\r\n        {loading ? (\r\n          <div className=\"text-stone-400\">Loading gallery...</div>\r\n        ) : error ? (\r\n          <div className=\"text-red-400\">Error loading gallery: {error}</div>\r\n        ) : images.length === 0 ? (\r\n          <div className=\"text-stone-400\">No images available</div>\r\n        ) : (\r\n          <div className=\"relative w-full mx-auto flex flex-col h-full justify-center\">\r\n            <h2 className=\"text-3xl font-bold text-white text-center mb-8\">Gallery</h2>\r\n            \r\n            {/* Swipeable gallery - full width on mobile */}\r\n            <div\r\n              onTouchStart={handleTouchStart}\r\n              onTouchMove={handleTouchMove}\r\n              onTouchEnd={handleTouchEnd}\r\n              className=\"w-full\"\r\n            >\r\n              {/* Main large image */}\r\n              <ul className=\"w-full mb-6\">\r\n                {images[currentIndex] && <GalleryItem image={images[currentIndex]} />}\r\n              </ul>\r\n\r\n              {/* Next 2 thumbnails preview */}\r\n              {images.length > 1 && (\r\n                <div className=\"grid grid-cols-2 gap-4 px-4\">\r\n                  {images[(currentIndex + 1) % images.length] && (\r\n                    <button\r\n                      onClick={() => { setCurrentIndex((currentIndex + 1) % images.length); }}\r\n                      className=\"rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow\"\r\n                    >\r\n                      <img\r\n                        src={images[(currentIndex + 1) % images.length].src}\r\n                        alt={images[(currentIndex + 1) % images.length].alt}\r\n                        className=\"w-full h-24 object-cover\"\r\n                      />\r\n                    </button>\r\n                  )}\r\n                  {images[(currentIndex + 2) % images.length] && (\r\n                    <button\r\n                      onClick={() => { setCurrentIndex((currentIndex + 2) % images.length); }}\r\n                      className=\"rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow\"\r\n                    >\r\n                      <img\r\n                        src={images[(currentIndex + 2) % images.length].src}\r\n                        alt={images[(currentIndex + 2) % images.length].alt}\r\n                        className=\"w-full h-24 object-cover\"\r\n                      />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Dots Indicator */}\r\n            {images.length > 1 && (\r\n              <div className=\"flex justify-center mt-6 space-x-2\">\r\n                {images.map((_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => { setCurrentIndex(index); }}\r\n                    className={`w-3 h-3 rounded-full transition-colors ${\r\n                      currentIndex === index\r\n                        ? 'bg-orange-500'\r\n                        : 'bg-gray-400 hover:bg-gray-300'\r\n                    }`}\r\n                    aria-label={`Go to image ${index + 1}`}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        </div>\r\n      </section>\r\n\r\n      {/* MOBILE: Separate footer section */}\r\n      <section id=\"footer\" className=\"md:hidden relative snap-start snap-always bg-stone-900\">\r\n        <div className=\"pt-[72px] py-12\">\r\n        <Footer onRequestQuote={onRequestQuote || (() => { /* noop */ })} />\r\n        </div>\r\n      </section>\r\n\r\n      {/* DESKTOP: Combined gallery + footer in one section (original) */}\r\n      <section id=\"gallery-desktop\" className=\"hidden md:block relative h-screen snap-start snap-always overflow-hidden bg-stone-900\">\r\n        <div className=\"h-full pt-[88px]\">\r\n        <div className=\"relative z-10 h-full px-4 pt-20\">\r\n          {/* Top Half - Gallery */}\r\n          <div className=\"h-1/2 flex items-center justify-center px-4 sm:px-6 lg:px-8 relative\">\r\n            {rotatingLoading ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"text-stone-400\">Loading gallery...</div>\r\n              </div>\r\n            ) : rotatingError ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"text-red-400\">Error loading gallery: {rotatingError}</div>\r\n              </div>\r\n            ) : currentImages.length === 0 ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"text-stone-400\">No images available</div>\r\n              </div>\r\n            ) : (\r\n              <ul className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-5 lg:gap-6 w-full\">\r\n                {currentImages.map((image, index) => (\r\n                  <RotatingGalleryItem \r\n                    key={image.id} \r\n                    image={image} \r\n                    {...(nextImages[index] && { nextImage: nextImages[index] })}\r\n                    isTransitioning={fadingIndex === index}\r\n                    index={index}\r\n                  />\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          {/* Bottom Half - Footer Content */}\r\n          <div className=\"h-1/2 flex flex-col justify-center border-t border-stone-700\">\r\n            <Footer onRequestQuote={onRequestQuote || (() => { /* noop */ })} />\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\n\r\nimport { CTAButtons } from '@/shared/ui';\r\n\r\ninterface CTAProps {\r\n  className?: string;\r\n  onRequestQuote?: () => void;\r\n}\r\n\r\nconst CTA: React.FC<CTAProps> = ({ \r\n  className = \"\",\r\n  onRequestQuote \r\n}) => {\r\n  return (\r\n    <CTAButtons \r\n      className={className}\r\n      bookNowProps={{}}\r\n      getQuoteProps={{\r\n        onClick: onRequestQuote\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line react-refresh/only-export-components -- Default export required for component\r\nexport default CTA;\r\n","import React from 'react';\r\n\r\ninterface TextDisplayProps {\r\n  title: string;\r\n  subtitle: string;\r\n  className?: string;\r\n}\r\n\r\nconst TextDisplay: React.FC<TextDisplayProps> = ({ \r\n  title, \r\n  subtitle,\r\n  className = \"\" \r\n}) => {\r\n  return (\r\n    <div className={`text-center text-white max-w-4xl mx-auto px-4 sm:px-6 ${className}`}>\r\n      <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold mb-1 sm:mb-4 md:mb-6 [text-wrap:balance] leading-tight\">\r\n        {title}\r\n      </h1>\r\n      <p className=\"text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl text-gray-200 leading-relaxed\">\r\n        {subtitle}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextDisplay;\r\n","import React from 'react';\r\n\r\nimport { ReviewsSummary } from '@/shared/ui';\r\n\r\nimport CTA from './CTA';\r\nimport TextDisplay from './TextDisplay';\r\n\r\ninterface ContentContainerProps {\r\n  title: string;\r\n  subtitle: string;\r\n  onRequestQuote?: () => void;\r\n  className?: string;\r\n}\r\n\r\nconst ContentContainer: React.FC<ContentContainerProps> = ({ \r\n  title, \r\n  subtitle,\r\n  onRequestQuote,\r\n  className = \"\" \r\n}) => {\r\n  return (\r\n    <div className={`flex flex-col items-center justify-end h-full ${className}`}>\r\n      <TextDisplay \r\n        title={title} \r\n        subtitle={subtitle}\r\n        className=\"mb-0 sm:mb-8\" \r\n      />\r\n      <CTA onRequestQuote={onRequestQuote} />\r\n      <ReviewsSummary \r\n        variant=\"compact\" \r\n        className=\"mt-0 sm:mt-6 text-base sm:text-lg md:text-xl\" \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","import { useWebsiteContent } from '@/shared/contexts/WebsiteContentContext';\r\nimport { useIndustrySiteData } from '@/shared/hooks/useIndustrySiteData';\r\nimport type { LocationPage } from '@/shared/types/location';\r\n\r\ninterface UseHeroContentReturn {\r\n  title: string;\r\n  subtitle: string;\r\n  isLocation: boolean;\r\n  locationName: string;\r\n}\r\n\r\ninterface UseHeroContentProps {\r\n  locationData?: LocationPage;\r\n}\r\n\r\nexport const useHeroContent = (props?: UseHeroContentProps): UseHeroContentReturn => {\r\n  // Get industry-specific site data\r\n  const { siteData } = useIndustrySiteData();\r\n  \r\n  // Always call hooks unconditionally\r\n  const { content: websiteContent } = useWebsiteContent();\r\n  \r\n  // Use passed locationData as fallback\r\n  const locationData = props?.locationData;\r\n  \r\n  // All sites are now tenant-based, so use database content or industry-specific site data\r\n  // Priority: Database content > Industry-specific site data > Fallback\r\n  const title = String(websiteContent?.hero_title || siteData?.hero.h1 || 'Professional Services');\r\n  const subtitle = String(websiteContent?.hero_subtitle || siteData?.hero.sub || 'Quality service for your needs');\r\n\r\n  return {\r\n    title,\r\n    subtitle,\r\n    isLocation: false, // All sites are now tenant-based\r\n    locationName: locationData?.city ?? ''\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport { useImageRotation } from '@/shared/hooks';\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport { getTransitionStyles } from '@/shared/utils/imageRotation';\r\n// Available when needed: toAvif, toWebp for modern image format support\r\n\r\ninterface HeroImage {\r\n  url: string;\r\n  mobileUrl?: string; // Optional mobile-specific image (portrait orientation)\r\n  alt: string;\r\n  width?: number;\r\n  height?: number;\r\n  priority?: boolean;\r\n}\r\n\r\ninterface ImageCarouselProps {\r\n  autoRotate?: boolean;\r\n  interval?: number;\r\n}\r\n\r\nconst ImageCarousel: React.FC<ImageCarouselProps> = ({ \r\n  autoRotate = true, \r\n  interval = 7000\r\n}) => {\r\n  const { siteConfig } = useData();\r\n  \r\n  // Get hero images from main site config\r\n  const heroImages = (siteConfig?.hero as { Images?: HeroImage[] } | undefined)?.Images || [];\r\n  const imageData: HeroImage[] = heroImages;\r\n  const images: string[] = imageData.map(img => img.url);\r\n\r\n  // Use the new image rotation utility (must be called unconditionally)\r\n  const rotation = useImageRotation({\r\n    images: images.length > 0 ? images : [''], // Provide dummy array if empty\r\n    autoRotate,\r\n    interval,\r\n    fadeDuration: 2000, // 2s fade duration to match original\r\n    preloadNext: true,\r\n    pauseOnHover: false // Hero doesn't need hover pause\r\n  });\r\n\r\n  const { currentIndex } = rotation;\r\n  \r\n  // Guard: nothing to render (must be after ALL hooks)\r\n  if (images.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 pointer-events-none\" aria-hidden=\"true\">\r\n      {images.map((image, index) => {\r\n        const imgData: HeroImage | undefined = imageData[index];\r\n        const desktopUrl = image;\r\n        const mobileUrl = imgData?.mobileUrl;\r\n\r\n        return (\r\n          <div\r\n            key={index}\r\n            className=\"absolute inset-0\"\r\n            style={getTransitionStyles(2000)}\r\n          >\r\n            {mobileUrl ? (\r\n              <>\r\n                {/* Mobile portrait (≤640px) */}\r\n                <img\r\n                  src={mobileUrl}\r\n                  alt={imgData.alt || ''}\r\n                  className=\"absolute inset-0 w-full h-full object-cover object-top sm:hidden\"\r\n                  style={{\r\n                    opacity: index === currentIndex ? 1 : 0,\r\n                    transition: 'opacity 2s ease-in-out',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    zIndex: index === currentIndex ? 2 : 1\r\n                  }}\r\n                  loading={index === 0 ? 'eager' : 'lazy'}\r\n                  decoding=\"async\"\r\n                />\r\n                {/* Tablet/Desktop (≥640px) */}\r\n                <img\r\n                  src={desktopUrl}\r\n                  alt={imgData.alt || ''}\r\n                  className=\"absolute inset-0 w-full h-full object-cover object-center hidden sm:block\"\r\n                  style={{\r\n                    opacity: index === currentIndex ? 1 : 0,\r\n                    transition: 'opacity 2s ease-in-out',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    zIndex: index === currentIndex ? 2 : 1\r\n                  }}\r\n                  loading={index === 0 ? 'eager' : 'lazy'}\r\n                  decoding=\"async\"\r\n                />\r\n              </>\r\n            ) : (\r\n              <img\r\n                src={desktopUrl}\r\n                alt={imgData?.alt || ''}\r\n                className=\"absolute inset-0 w-full h-full object-cover object-top sm:object-center\"\r\n                style={{\r\n                  opacity: index === currentIndex ? 1 : 0,\r\n                  transition: 'opacity 2s ease-in-out',\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  zIndex: index === currentIndex ? 2 : 1\r\n                }}\r\n                loading={index === 0 ? 'eager' : 'lazy'}\r\n                decoding=\"async\"\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/40 to-black/30 pointer-events-none\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","import React from 'react';\r\n\r\nimport { useHeroContent } from '@/features/hero/hooks/useHeroContent';\r\nimport { BREAKPOINTS, useMediaQuery } from '@/shared/hooks';\r\n\r\nimport ContentContainer from './ContentContainer';\r\nimport ImageCarousel from './ImageCarousel';\r\n\r\ninterface HeroProps {\r\n  onRequestQuote?: () => void;\r\n}\r\n\r\nconst Hero: React.FC<HeroProps> = ({ onRequestQuote }) => {\r\n  const { title, subtitle } = useHeroContent({});\r\n  const isSmallMobile = useMediaQuery(`(max-width: ${BREAKPOINTS.sm - 1}px)`);\r\n\r\n  return (\r\n    <section \r\n      id=\"top\" \r\n      className=\"relative isolate overflow-hidden h-[100dvh] sm:h-screen flex items-end justify-center snap-start snap-always\"\r\n    >\r\n      {/* Background layer - carousel */}\r\n      <div className=\"absolute inset-0 -z-10\" style={{ top: '-72px', height: 'calc(100% + 72px)' }}>\r\n        <ImageCarousel />\r\n      </div>\r\n      \r\n      {/* Foreground content */}\r\n      <main\r\n        id=\"main\"\r\n        className=\"relative z-10 w-full\"\r\n        style={{ \r\n          marginTop: '72px',\r\n          paddingBottom: isSmallMobile ? '56px' : '7rem'\r\n        }}\r\n      >\r\n        <ContentContainer \r\n          title={title} \r\n          subtitle={subtitle}\r\n          {...(onRequestQuote && { onRequestQuote })}\r\n          className=\"\"\r\n        />\r\n      </main>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\n\r\nimport type { Review } from '../types';\r\n\r\ninterface ReviewCardProps {\r\n  review: Review;\r\n  onReviewClick?: (review: Review) => void;\r\n}\r\n\r\nconst ReviewCard: React.FC<ReviewCardProps> = ({ review, onReviewClick }) => {\r\n  const handleClick = () => {\r\n    onReviewClick?.(review);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      onReviewClick?.(review);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"relative bg-white/10 backdrop-blur-sm rounded-lg p-6 md:p-8 lg:p-9 cursor-pointer hover:bg-white/20 transition-colors\"\r\n      onClick={handleClick}\r\n      onKeyDown={handleKeyDown}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      aria-label={`Review by ${review.customerName}`}\r\n    >\r\n      <div className=\"flex items-center mb-4 md:mb-5 lg:mb-6\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center text-white font-semibold overflow-hidden\">\r\n            {review.profileImage ? (\r\n              <picture>\r\n                <source\r\n                  type=\"image/webp\"\r\n                  srcSet={`${review.profileImage.replace(/\\.(png|jpg|jpeg)$/i, '.webp')} 64w`}\r\n                  sizes=\"64px\"\r\n                />\r\n                <img \r\n                  src={review.profileImage} \r\n                  alt={review.customerName}\r\n                  className=\"w-full h-full object-cover rounded-full\"\r\n                  width={64}\r\n                  height={64}\r\n                  loading=\"lazy\"\r\n                  decoding=\"async\"\r\n                />\r\n              </picture>\r\n            ) : (\r\n              review.customerName.charAt(0).toUpperCase()\r\n            )}\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-white font-semibold text-lg\">{review.customerName}</h3>\r\n            <div className=\"flex items-center\">\r\n              {Array.from({ length: 5 }).map((_, i) => (\r\n                <span\r\n                  key={i}\r\n                  className={`text-2xl ${\r\n                    i < review.rating ? 'text-yellow-400' : 'text-gray-400'\r\n                  }`}\r\n                >\r\n                  ★\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Review Content - Word Count Based */}\r\n      <div className=\"flex flex-col justify-start pb-16\">\r\n        {/* Review Title */}\r\n        {review.title && (\r\n          <h5 className=\"text-white font-medium mb-2 text-base\">\r\n            {review.title.split(' ').slice(0, 8).join(' ')}\r\n            {review.title.split(' ').length > 8 && '...'}\r\n          </h5>\r\n        )}\r\n\r\n        <p className=\"text-gray-300 text-base leading-relaxed\">\r\n          {review.reviewText.split(' ').slice(0, 25).join(' ')}\r\n          {review.reviewText.split(' ').length > 25 && '...'}\r\n        </p>\r\n      </div>\r\n\r\n      {/* Service Category and Review Source Icon - Fixed Bottom */}\r\n      <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between\">\r\n        <div>\r\n          {review.serviceCategory && (\r\n            <span className=\"text-sm bg-white/20 text-white px-3 py-2 rounded-full\">\r\n              {review.serviceCategory}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {review.reviewSource && (\r\n            <picture>\r\n              <source\r\n                type=\"image/webp\"\r\n                srcSet={`/shared/icons/${review.reviewSource}.webp`}\r\n                sizes=\"20px\"\r\n              />\r\n              <img \r\n                src={`/shared/icons/${review.reviewSource}.png`}\r\n                alt={review.reviewSource}\r\n                className=\"w-5 h-5 rounded\"\r\n                width={20}\r\n                height={20}\r\n                loading=\"lazy\"\r\n                decoding=\"async\"\r\n              />\r\n            </picture>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewCard;\r\n","import React from 'react';\r\n\r\nimport type { Review } from '../types/types';\r\n\r\ninterface ReviewModalProps {\r\n  review: Review | null;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ReviewModal: React.FC<ReviewModalProps> = ({ review, isOpen, onClose }) => {\r\n  if (!isOpen || !review) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-stone-900 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto border border-stone-700\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-between items-start mb-4\">\r\n            <h3 className=\"text-2xl font-bold text-white\">Review Details</h3>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-orange-400 text-2xl transition-colors\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              {review.reviewerUrl ? (\r\n                <a \r\n                  href={review.reviewerUrl}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center text-white font-semibold text-xl overflow-hidden hover:bg-orange-600 transition-colors\"\r\n                >\r\n                  {review.profileImage ? (\r\n                    <picture>\r\n                      <source\r\n                        type=\"image/webp\"\r\n                        srcSet={`${review.profileImage.replace(/\\.(png|jpg|jpeg)$/i, '.webp')} 64w`}\r\n                        sizes=\"64px\"\r\n                      />\r\n                      <img \r\n                        src={review.profileImage} \r\n                        alt={review.customerName}\r\n                        className=\"w-full h-full object-cover rounded-full\"\r\n                        width={64}\r\n                        height={64}\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                      />\r\n                    </picture>\r\n                  ) : (\r\n                    review.customerName.charAt(0).toUpperCase()\r\n                  )}\r\n                </a>\r\n              ) : (\r\n                <div className=\"w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center text-white font-semibold text-xl overflow-hidden\">\r\n                  {review.profileImage ? (\r\n                    <picture>\r\n                      <source\r\n                        type=\"image/webp\"\r\n                        srcSet={`${review.profileImage.replace(/\\.(png|jpg|jpeg)$/i, '.webp')} 64w`}\r\n                        sizes=\"64px\"\r\n                      />\r\n                      <img \r\n                        src={review.profileImage} \r\n                        alt={review.customerName}\r\n                        className=\"w-full h-full object-cover rounded-full\"\r\n                        width={64}\r\n                        height={64}\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                      />\r\n                    </picture>\r\n                  ) : (\r\n                    review.customerName.charAt(0).toUpperCase()\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div>\r\n                {review.reviewerUrl ? (\r\n                  <a \r\n                    href={review.reviewerUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-xl font-semibold text-white hover:text-orange-400 transition-colors\"\r\n                  >\r\n                    {review.customerName}\r\n                  </a>\r\n                ) : (\r\n                  <h4 className=\"text-xl font-semibold text-white\">{review.customerName}</h4>\r\n                )}\r\n                <div className=\"flex items-center\">\r\n                  {Array.from({ length: 5 }, (_, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className={`text-xl ${\r\n                        i < review.rating ? 'text-yellow-400' : 'text-gray-300'\r\n                      }`}\r\n                    >\r\n                      ★\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              {review.reviewSource && review.reviewerUrl && (\r\n                <a \r\n                  href={review.reviewerUrl}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"hover:opacity-80 transition-opacity\"\r\n                >\r\n                  <picture>\r\n                    <source\r\n                      type=\"image/webp\"\r\n                      srcSet={`/shared/icons/${review.reviewSource}.webp`}\r\n                      sizes=\"32px\"\r\n                    />\r\n                    <img \r\n                      src={`/shared/icons/${review.reviewSource}.png`}\r\n                      alt={review.reviewSource}\r\n                      className=\"w-8 h-8 rounded\"\r\n                      width={32}\r\n                      height={32}\r\n                      loading=\"lazy\"\r\n                      decoding=\"async\"\r\n                    />\r\n                  </picture>\r\n                </a>\r\n              )}\r\n              {review.reviewSource && !review.reviewerUrl && (\r\n                <picture>\r\n                  <source\r\n                    type=\"image/webp\"\r\n                    srcSet={`/shared/icons/${review.reviewSource}.webp`}\r\n                    sizes=\"32px\"\r\n                  />\r\n                  <img \r\n                    src={`/shared/icons/${review.reviewSource}.png`}\r\n                    alt={review.reviewSource}\r\n                    className=\"w-8 h-8 rounded\"\r\n                    width={32}\r\n                    height={32}\r\n                    loading=\"lazy\"\r\n                    decoding=\"async\"\r\n                  />\r\n                </picture>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Review Title */}\r\n          {review.title && (\r\n            <h5 className=\"text-lg font-medium text-white mb-3\">\r\n              {review.title}\r\n            </h5>\r\n          )}\r\n          \r\n          <p className=\"text-gray-300 leading-relaxed mb-4\">\r\n            {review.reviewText}\r\n          </p>\r\n\r\n          {/* Additional Info */}\r\n          <div className=\"flex flex-wrap gap-2 mb-4\">\r\n            {review.serviceCategory && (\r\n              <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-orange-500/20 text-orange-400 border border-orange-500/30\">\r\n                {review.serviceCategory}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewModal;\r\n","import React, { useRef, useState } from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\n\r\nimport { useIsMobile, useIsTablet } from '@/shared/hooks';\r\n\r\nimport type { Review } from '../types';\r\nimport ReviewCard from './ReviewCard';\r\n\r\ninterface ReviewsCarouselProps {\r\n  reviews: Review[];\r\n  onReviewClick?: (review: Review) => void;\r\n  maxVisible?: number;\r\n}\r\n\r\nconst ReviewsCarousel: React.FC<ReviewsCarouselProps> = ({ \r\n  reviews, \r\n  onReviewClick,\r\n  maxVisible = 3\r\n}) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const touchStartX = useRef<number | null>(null);\r\n  const touchEndX = useRef<number | null>(null);\r\n\r\n  // Determine how many reviews to show based on screen size\r\n  // Mobile: 1, Tablet: 2, Desktop: 3\r\n  const isMobile = useIsMobile();\r\n  const isTablet = useIsTablet();\r\n  const visibleCount = isMobile ? 1 : isTablet ? 2 : maxVisible;\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentIndex((prev) => (prev > 0 ? prev - 1 : reviews.length - 1));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentIndex((prev) => (prev < reviews.length - 1 ? prev + 1 : 0));\r\n  };\r\n\r\n  // Touch/swipe handlers\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    touchStartX.current = e.touches[0]?.clientX ?? null;\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    touchEndX.current = e.touches[0]?.clientX ?? null;\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    if (touchStartX.current === null || touchEndX.current === null) return;\r\n    \r\n    const diff = touchStartX.current - touchEndX.current;\r\n    const minSwipeDistance = 50;\r\n    \r\n    if (Math.abs(diff) > minSwipeDistance) {\r\n      if (diff > 0) {\r\n        // Swiped left - show next\r\n        handleNext();\r\n      } else {\r\n        // Swiped right - show previous\r\n        handlePrevious();\r\n      }\r\n    }\r\n    \r\n    touchStartX.current = null;\r\n    touchEndX.current = null;\r\n  };\r\n\r\n  const getVisibleReviews = () => {\r\n    // Mobile: show 1 review only\r\n    if (isMobile) {\r\n      return [reviews[currentIndex]].filter(Boolean);\r\n    }\r\n    \r\n    // Desktop/Tablet: show multiple reviews\r\n    const visible: Review[] = [];\r\n    for (let i = 0; i < visibleCount; i++) {\r\n      const index = (currentIndex + i) % reviews.length;\r\n      const review = reviews[index];\r\n      if (review) {\r\n        visible.push(review);\r\n      }\r\n    }\r\n    return visible;\r\n  };\r\n\r\n  if (reviews.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <p className=\"text-gray-300 text-lg\">No reviews available</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative w-full max-w-6xl mx-auto\">\r\n      {/* Navigation Arrows - Hidden on mobile, shown on desktop */}\r\n      {reviews.length > 1 && (\r\n        <>\r\n          <button\r\n            onClick={handlePrevious}\r\n            className=\"hidden md:flex absolute -left-12 top-1/2 -translate-y-1/2 z-20 bg-orange-500 hover:bg-orange-600 text-white p-3 rounded-full transition-colors shadow-lg items-center justify-center\"\r\n            aria-label=\"Previous review\"\r\n          >\r\n            <ChevronLeft className=\"h-5 w-5\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleNext}\r\n            className=\"hidden md:flex absolute -right-12 top-1/2 -translate-y-1/2 z-20 bg-orange-500 hover:bg-orange-600 text-white p-3 rounded-full transition-colors shadow-lg items-center justify-center\"\r\n            aria-label=\"Next review\"\r\n          >\r\n            <ChevronRight className=\"h-5 w-5\" />\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {/* Reviews Container - Swipeable on mobile */}\r\n      <div \r\n        className=\"px-4 md:px-0\"\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n      >\r\n        {/* Mobile: 1 review, Tablet: 2 reviews, Desktop: 3 reviews */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {getVisibleReviews().map((review) => (\r\n            <ReviewCard\r\n              key={review.id}\r\n              review={review}\r\n              onReviewClick={onReviewClick}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Dots Indicator - Show on mobile for swipe feedback */}\r\n      {reviews.length > 1 && (\r\n        <div className=\"flex justify-center mt-4 md:mt-8 space-x-2\">\r\n          {reviews.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => { setCurrentIndex(index); }}\r\n              className={`w-2 h-2 md:w-3 md:h-3 rounded-full transition-colors ${\r\n                currentIndex === index\r\n                  ? 'bg-orange-500'\r\n                  : 'bg-gray-400 hover:bg-gray-300'\r\n              }`}\r\n              aria-label={`Go to review ${index + 1}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsCarousel;\r\n","import React from 'react';\r\n\r\ninterface ReviewsHeaderProps {\r\n  title?: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst ReviewsHeader: React.FC<ReviewsHeaderProps> = ({\r\n  title = \"Customer Reviews\",\r\n  subtitle = \"See what our customers are saying about our mobile detailing services\"\r\n}) => {\r\n  return (\r\n    <div className=\"text-center mb-12\">\r\n      <h2 className=\"text-4xl md:text-5xl font-bold text-white mb-4\">\r\n        {title}\r\n      </h2>\r\n      <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\r\n        {subtitle}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsHeader;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport ReviewsSummary from '@/shared/ui/ReviewsSummary';\r\nimport { getImageOpacityClasses, getTransitionStyles } from '@/shared/utils';\r\n\r\nimport { useReviews, useReviewsContent, useRotatingReviews } from '../hooks';\r\nimport type { Review, ReviewQueryParams, ReviewsProps } from '../types/types';\r\nimport ReviewModal from './ReviewModal';\r\nimport ReviewsCarousel from './ReviewsCarousel';\r\nimport ReviewsHeader from './ReviewsHeader';\r\n\r\nconst Reviews: React.FC<ReviewsProps> = ({\r\n  maxReviews = 50,\r\n  tenantSlug,\r\n  customHeading,\r\n  customIntro,\r\n  feedKey,\r\n  locationData\r\n}) => {\r\n  const [selectedReview, setSelectedReview] = useState<Review | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  \r\n  // Get content from database (with fallbacks)\r\n  const { title, subtitle } = useReviewsContent({ locationData, customHeading, customIntro });\r\n  \r\n  // Get tenant context\r\n  let isTenant = false;\r\n  try {\r\n    const tenantData = useData();\r\n    isTenant = tenantData.isTenant || false;\r\n  } catch {\r\n    // Not in tenant context, so it's main site\r\n    isTenant = false;\r\n  }\r\n\r\n  // Build query parameters based on props and site context\r\n  const queryParams: ReviewQueryParams = {\r\n    limit: maxReviews\r\n  };\r\n\r\n  // Add tenant slug if provided\r\n  if (tenantSlug) {\r\n    queryParams.tenant_slug = tenantSlug;\r\n  }\r\n\r\n  // TODO: Implement feedKey for GBP/Yelp integration\r\n  // The feedKey prop is available for future implementation of external review feeds\r\n  // Example: feedKey: \"gbp:bullhead-city-az\" for Google Business Profile\r\n  // Example: feedKey: \"yelp:las-vegas-nv\" for Yelp integration\r\n  const finalFeedKey = feedKey || (locationData as { reviewsSection?: { feedKey?: string } } | undefined)?.reviewsSection?.feedKey;\r\n  // FeedKey available for future implementation\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- Reserved for future use\r\n  const _feedKey = finalFeedKey;\r\n\r\n  if (isTenant) {\r\n    // For tenant sites, use the tenant slug from the URL\r\n    const urlSlug = window.location.pathname.split('/')[1];\r\n    if (urlSlug) {\r\n      queryParams.tenant_slug = urlSlug;\r\n    }\r\n  }\r\n\r\n  // Fetch reviews from database\r\n  const { reviews, loading, error } = useReviews(queryParams);\r\n  \r\n\r\n  // Use rotating review images as background\r\n  const { images: backgroundImages, currentIndex, loading: _backgroundLoading } = useRotatingReviews(reviews);\r\n\r\n  const handleReviewClick = (review: Review) => {\r\n    setSelectedReview(review);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedReview(null);\r\n  };\r\n\r\n  // Show loading state\r\n  if (loading) {\r\n    return (\r\n      <section id=\"reviews\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n        {/* Rotating Background Images with Overlay */}\r\n        <div className=\"absolute inset-0 z-0\">\r\n          {backgroundImages.map((image, index) => (\r\n            <img\r\n              key={image}\r\n              src={image}\r\n              alt={`Customer reviews background ${index + 1}`}\r\n              className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n              style={getTransitionStyles(2000)}\r\n              decoding={index === 0 ? 'sync' : 'async'}\r\n              loading={index === 0 ? 'eager' : 'lazy'}\r\n            />\r\n          ))}\r\n          {/* Dark overlay */}\r\n          <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n        </div>\r\n        <div className=\"relative z-10 h-full flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto mb-4\"></div>\r\n            <p className=\"text-white text-lg\">Loading reviews...</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // Show error state\r\n  if (error) {\r\n    return (\r\n      <section id=\"reviews\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n        {/* Rotating Background Images with Overlay */}\r\n        <div className=\"absolute inset-0 z-0\">\r\n          {backgroundImages.map((image, index) => (\r\n            <img\r\n              key={image}\r\n              src={image}\r\n              alt={`Customer reviews background ${index + 1}`}\r\n              className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n              style={getTransitionStyles(2000)}\r\n              decoding={index === 0 ? 'sync' : 'async'}\r\n              loading={index === 0 ? 'eager' : 'lazy'}\r\n            />\r\n          ))}\r\n          {/* Dark overlay */}\r\n          <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n        </div>\r\n        <div className=\"relative z-10 h-full flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-red-400 text-lg mb-4\">Error loading reviews</p>\r\n            <p className=\"text-white text-sm\">{error}</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // Show empty state\r\n  if (!reviews.length) {\r\n    return (\r\n      <section id=\"reviews\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n        {/* Rotating Background Images with Overlay */}\r\n        <div className=\"absolute inset-0 z-0\">\r\n          {backgroundImages.map((image, index) => (\r\n            <img\r\n              key={image}\r\n              src={image}\r\n              alt={`Customer reviews background ${index + 1}`}\r\n              className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n              style={getTransitionStyles(2000)}\r\n              decoding={index === 0 ? 'sync' : 'async'}\r\n              loading={index === 0 ? 'eager' : 'lazy'}\r\n            />\r\n          ))}\r\n          {/* Dark overlay */}\r\n          <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n        </div>\r\n        <div className=\"relative z-10 h-full flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-white text-lg\">No reviews available</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section id=\"reviews\" className=\"relative h-screen snap-start snap-always overflow-hidden\">\r\n      <div className=\"h-full pt-[80px] md:pt-[88px]\">\r\n      {/* Rotating Background Images with Overlay */}\r\n      <div className=\"absolute inset-0 z-0\">\r\n        {backgroundImages.map((image, index) => (\r\n          <img\r\n            key={image}\r\n            src={image}\r\n            alt={`Customer reviews background ${index + 1}`}\r\n            className={`absolute inset-0 w-full h-full object-cover ${getImageOpacityClasses(index, currentIndex, 2000)}`}\r\n            style={getTransitionStyles(2000)}\r\n            decoding={index === 0 ? 'sync' : 'async'}\r\n            loading={index === 0 ? 'eager' : 'lazy'}\r\n          />\r\n        ))}\r\n        {/* Dark overlay */}\r\n        <div className=\"absolute inset-0 bg-stone-900/85\"></div>\r\n      </div>\r\n      \r\n      {/* Content */}\r\n      <div className=\"relative z-10 h-full flex flex-col items-center justify-start md:justify-center px-4 pt-[20px] md:pt-0\">\r\n        <div className=\"max-w-6xl mx-auto w-full\">\r\n          <ReviewsHeader \r\n            title={title}\r\n            subtitle={subtitle}\r\n          />\r\n          <ReviewsSummary className=\"mb-8\" />\r\n          <ReviewsCarousel \r\n            reviews={reviews}\r\n            onReviewClick={handleReviewClick}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <ReviewModal\r\n        review={selectedReview}\r\n        isOpen={isModalOpen}\r\n        onClose={handleCloseModal}\r\n      />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\ninterface BeforeAfterSliderProps {\r\n  beforeImage: string;\r\n  afterImage: string;\r\n  beforeLabel?: string;\r\n  afterLabel?: string;\r\n  className?: string;\r\n}\r\n\r\nconst BeforeAfterSlider: React.FC<BeforeAfterSliderProps> = ({\r\n  beforeImage,\r\n  afterImage,\r\n  beforeLabel = \"BEFORE\",\r\n  afterLabel = \"AFTER\",\r\n  className = \"\"\r\n}) => {\r\n  const [sliderPosition, setSliderPosition] = useState(50);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleMouseMove = (e: React.MouseEvent) => {\r\n    if (!isDragging || !containerRef.current) return;\r\n    \r\n    const rect = containerRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const percentage = (x / rect.width) * 100;\r\n    setSliderPosition(Math.max(0, Math.min(100, percentage)));\r\n  };\r\n\r\n  const handleMouseDown = () => {\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    if (!containerRef.current || !e.touches[0]) return;\r\n    \r\n    const rect = containerRef.current.getBoundingClientRect();\r\n    const x = e.touches[0].clientX - rect.left;\r\n    const percentage = (x / rect.width) * 100;\r\n    setSliderPosition(Math.max(0, Math.min(100, percentage)));\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    switch (e.key) {\r\n      case 'ArrowLeft':\r\n        e.preventDefault();\r\n        setSliderPosition(Math.max(0, sliderPosition - 1));\r\n        break;\r\n      case 'ArrowRight':\r\n        e.preventDefault();\r\n        setSliderPosition(Math.min(100, sliderPosition + 1));\r\n        break;\r\n      case 'Home':\r\n        e.preventDefault();\r\n        setSliderPosition(0);\r\n        break;\r\n      case 'End':\r\n        e.preventDefault();\r\n        setSliderPosition(100);\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGlobalMouseUp = () => { setIsDragging(false); };\r\n    const handleGlobalMouseMove = (e: MouseEvent) => {\r\n      if (!isDragging || !containerRef.current) return;\r\n      \r\n      const rect = containerRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const percentage = (x / rect.width) * 100;\r\n      setSliderPosition(Math.max(0, Math.min(100, percentage)));\r\n    };\r\n\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', handleGlobalMouseMove);\r\n      document.addEventListener('mouseup', handleGlobalMouseUp);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\r\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\r\n    };\r\n  }, [isDragging]);\r\n\r\n  return (\r\n    <div className={`relative w-full aspect-[3/2] rounded-2xl overflow-hidden bg-stone-700 ring-1 ring-white/10 ${className}`}>\r\n      <div \r\n        ref={containerRef}\r\n        className=\"relative w-full h-full cursor-col-resize select-none\"\r\n        role=\"slider\"\r\n        tabIndex={0}\r\n        aria-label=\"Before and after image slider\"\r\n        aria-valuenow={sliderPosition}\r\n        aria-valuemin={0}\r\n        aria-valuemax={100}\r\n        aria-valuetext={`${Math.round(sliderPosition)}% - showing ${sliderPosition < 50 ? 'before' : 'after'} image`}\r\n        aria-orientation=\"horizontal\"\r\n        onMouseMove={handleMouseMove}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseUp={handleMouseUp}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchStart={() => { setIsDragging(true); }}\r\n        onTouchEnd={() => { setIsDragging(false); }}\r\n        onKeyDown={handleKeyDown}\r\n      >\r\n        {/* Before Image (Background) */}\r\n        <div className=\"absolute inset-0\">\r\n          <img \r\n            src={beforeImage} \r\n            alt={`${beforeLabel}: original state`}\r\n            width={600}\r\n            height={400}\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n          <div className=\"absolute top-4 left-4 bg-black/70 text-white px-3 py-1 rounded-full text-sm font-medium\">\r\n            {beforeLabel}\r\n          </div>\r\n        </div>\r\n\r\n        {/* After Image (Clipped) */}\r\n        <div \r\n          className=\"absolute inset-0 overflow-hidden\"\r\n          style={{ clipPath: `inset(0 ${String(100 - sliderPosition)}% 0 0)` }}\r\n        >\r\n          <img \r\n            src={afterImage} \r\n            alt={`${afterLabel}: improved state`}\r\n            width={600}\r\n            height={400}\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n          <div className=\"absolute top-4 right-4 bg-black/70 text-white px-3 py-1 rounded-full text-sm font-medium\">\r\n            {afterLabel}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Slider Line */}\r\n        <div \r\n          className=\"absolute top-0 bottom-0 w-1 bg-white shadow-lg z-10\"\r\n          style={{ left: `${String(sliderPosition)}%` }}\r\n        >\r\n          {/* Slider Handle */}\r\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-8 h-8 bg-white rounded-full shadow-lg flex items-center justify-center cursor-col-resize\">\r\n            <div className=\"w-1 h-4 bg-stone-300\"></div>\r\n            <div className=\"w-1 h-4 bg-stone-300 ml-1\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeforeAfterSlider;\r\n","import React from 'react';\r\n\r\nimport type { ProcessStep as ProcessStepType, ServiceData } from '@/features/services/types/service-data';\r\n\r\ninterface ProcessProps {\r\n  serviceData: ServiceData;\r\n}\r\n\r\nconst ProcessStep = ({ \r\n  step, \r\n  isReversed = false \r\n}: { \r\n  step: ProcessStepType; \r\n  isReversed?: boolean;\r\n}) => (\r\n  <div className={`grid gap-8 lg:grid-cols-2 items-start ${isReversed ? 'lg:grid-flow-col-dense' : ''}`}>\r\n    {/* Text Content */}\r\n    <div className={`${isReversed ? 'lg:col-start-2' : ''} space-y-4`}>\r\n      <div className=\"flex items-center mb-6\">\r\n        <div className=\"flex h-12 w-12 items-center justify-center rounded-full bg-orange-500 text-white text-xl font-bold mr-4 flex-shrink-0\">\r\n          {step.number}\r\n        </div>\r\n        <h3 className=\"text-xl font-semibold text-white\">{step.title}</h3>\r\n      </div>\r\n      {Array.isArray(step.bullets) ? (\r\n        <ul className=\"text-slate-300 leading-relaxed space-y-2 pl-6\">\r\n          {step.bullets.map((item: string, index: number) => (\r\n            <li key={index} className=\"flex items-start\">\r\n              <span className=\"text-orange-400 mr-3 text-lg flex-shrink-0\" aria-hidden=\"true\">•</span>\r\n              <span className=\"text-slate-300 text-lg\">{item}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"text-slate-300 leading-relaxed pl-6\">{step.description}</p>\r\n      )}\r\n    </div>\r\n    \r\n    {/* Image */}\r\n    <div className={`${isReversed ? 'lg:col-start-1' : ''} flex justify-center lg:justify-start`}>\r\n      <div className=\"aspect-[4/3] rounded-2xl bg-stone-700 ring-1 ring-white/10 overflow-hidden w-full max-w-md\">\r\n        {step.image?.src ? (\r\n          <img \r\n            src={step.image.src} \r\n            alt={step.image.alt || step.title}\r\n            width={600}\r\n            height={450}\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n        ) : (\r\n          <div className=\"w-full h-full flex items-center justify-center text-white/50\">\r\n            Step {step.number} Image\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Process: React.FC<ProcessProps> = ({ serviceData }) => {\r\n  const steps = serviceData.process?.steps || [];\r\n\r\n  return (\r\n    <section className=\"bg-stone-900 py-16\">\r\n      <div className=\"container mx-auto max-w-6xl px-4 sm:px-6 lg:px-8\">\r\n        <h2 className=\"text-2xl sm:text-3xl font-bold text-white mb-12\">\r\n          {serviceData.process?.title || \"Process\"}\r\n        </h2>\r\n        <div className=\"space-y-20\">\r\n          {steps.map((step: ProcessStepType, index: number) => (\r\n            <ProcessStep \r\n              key={step.number} \r\n              step={step} \r\n              isReversed={index % 2 === 1} \r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Process;\r\n","/**\r\n * Protection comparison utilities for mobile detailing services\r\n * Used to compare wax, sealant, ceramic coating, and PPF protection options\r\n */\r\n\r\nexport type MetricKey = 'protection' | 'longevity' | 'ease' | 'chipResistance';\r\n\r\nexport type ProductKey = 'wax' | 'sealant' | 'ceramic' | 'ppf';\r\n\r\nexport type Ratings = Record<ProductKey, Record<MetricKey, 1|2|3|4|5>>;\r\n\r\nexport const DEFAULT_RATINGS: Ratings = {\r\n  wax:      { protection: 1, longevity: 1, ease: 2, chipResistance: 1 },\r\n  sealant:  { protection: 2, longevity: 2, ease: 2, chipResistance: 1 },\r\n  ceramic:  { protection: 4, longevity: 4, ease: 4, chipResistance: 1 },\r\n  ppf:      { protection: 5, longevity: 5, ease: 3, chipResistance: 5 },\r\n};\r\n\r\nexport const METRIC_LABELS: Record<MetricKey, string> = {\r\n  protection: 'Protection',\r\n  longevity: 'Longevity',\r\n  ease: 'Ease of Wash',\r\n  chipResistance: 'Rock-Chip Resistance',\r\n};\r\n\r\nexport const PRODUCT_LABELS: Record<ProductKey, string> = {\r\n  wax: 'Wax',\r\n  sealant: 'Sealant',\r\n  ceramic: 'Ceramic',\r\n  ppf: 'PPF',\r\n};\r\n\r\nexport const PRODUCT_COLORS: Record<ProductKey, string> = {\r\n  wax: 'bg-amber-500',\r\n  sealant: 'bg-blue-500',\r\n  ceramic: 'bg-purple-500',\r\n  ppf: 'bg-emerald-500',\r\n};\r\n\r\n","import React from 'react';\r\n\r\nimport {\r\n  DEFAULT_RATINGS,\r\n  METRIC_LABELS,\r\n  type MetricKey,\r\n  PRODUCT_LABELS,\r\n  type ProductKey,\r\n  type Ratings\r\n} from '@/features/services/utils/protectionComparison';\r\n\r\nexport interface ProtectionComparisonChartProps {\r\n  ratings?: Ratings;\r\n  title?: string;\r\n  description?: string;\r\n  className?: string;\r\n}\r\n\r\nconst StarIcon: React.FC<{ filled: boolean; className?: string }> = ({ filled, className = '' }) => (\r\n  <svg \r\n    viewBox=\"0 0 16 16\" \r\n    className={`w-4 h-4 ${className}`}\r\n    fill={filled ? 'currentColor' : 'none'}\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"1\"\r\n  >\r\n    <path d=\"M8 1l2 4h4l-3 3 1 4-4-2-4 2 1-4-3-3h4l2-4z\" />\r\n  </svg>\r\n);\r\n\r\n// Helper functions for type-safe access\r\nconst getProductLabel = (product: ProductKey): string => PRODUCT_LABELS[product];\r\nconst getMetricLabel = (metric: MetricKey): string => METRIC_LABELS[metric];\r\n\r\nconst RatingStars: React.FC<{ \r\n  rating: number; \r\n  product: ProductKey; \r\n  metric: MetricKey;\r\n  className?: string;\r\n}> = ({ rating, product, metric, className = '' }) => {\r\n  return (\r\n    <div \r\n      className={`flex items-center gap-1 ${className}`}\r\n      role=\"img\"\r\n      aria-label={`${getProductLabel(product)} — ${getMetricLabel(metric)}: ${String(rating)} out of 5 stars`}\r\n    >\r\n      {[1, 2, 3, 4, 5].map((star) => (\r\n        <StarIcon \r\n          key={star}\r\n          filled={star <= rating}\r\n          className={star <= rating ? 'text-orange-500' : 'text-stone-600'}\r\n        />\r\n      ))}\r\n      <span className=\"sr-only\">{rating}/5</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ProtectionComparisonChart: React.FC<ProtectionComparisonChartProps> = ({\r\n  ratings = DEFAULT_RATINGS,\r\n  title = 'Protection Options Compared',\r\n  description,\r\n  className = ''\r\n}) => {\r\n  const metrics: MetricKey[] = ['protection', 'longevity', 'ease', 'chipResistance'];\r\n  const products: ProductKey[] = ['wax', 'sealant', 'ceramic', 'ppf'];\r\n  \r\n  // Type-safe accessor for ratings\r\n  const getRating = (product: ProductKey, metric: MetricKey): number => ratings[product][metric];\r\n\r\n  return (\r\n    <figure className={`rounded-2xl border border-stone-600 p-4 md:p-6 bg-stone-800 shadow-sm ${className}`}>\r\n      <div className=\"mb-6 text-center\">\r\n        <figcaption className=\"text-lg md:text-xl font-semibold text-white\">\r\n          {title}\r\n        </figcaption>\r\n        {description && (\r\n          <p className=\"text-sm text-slate-300 mt-2\">{description}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Mobile: Stacked layout */}\r\n      <div className=\"block md:hidden space-y-4\">\r\n        {metrics.map((metric) => (\r\n          <div key={metric} className=\"border border-stone-600 rounded-lg p-3\">\r\n            <h3 className=\"text-sm font-medium text-white mb-3\">\r\n              {getMetricLabel(metric)}\r\n            </h3>\r\n            <div className=\"space-y-3\">\r\n              {products.map((product) => (\r\n                <div key={product} className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-slate-300 min-w-0 flex-shrink-0 mr-3\">\r\n                    {getProductLabel(product)}\r\n                  </span>\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <RatingStars \r\n                      rating={getRating(product, metric)} \r\n                      product={product} \r\n                      metric={metric}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Desktop: Grid layout */}\r\n      <div className=\"hidden md:block\">\r\n        {/* Header row */}\r\n        <div className=\"grid grid-cols-5 gap-6 mb-4\">\r\n          <div className=\"text-sm font-medium text-slate-400\"></div>\r\n          {products.map((product) => (\r\n            <div \r\n              key={product}\r\n              className=\"text-sm font-medium text-center text-white\"\r\n            >\r\n              {getProductLabel(product)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Metric rows */}\r\n        {metrics.map((metric) => (\r\n          <div key={metric} className=\"grid grid-cols-5 gap-6 items-center py-3 border-b border-stone-600 last:border-b-0\">\r\n            <div className=\"text-sm font-medium text-slate-300\">\r\n              {getMetricLabel(metric)}\r\n            </div>\r\n            {products.map((product) => (\r\n              <div key={product} className=\"flex justify-center\">\r\n                <RatingStars \r\n                  rating={getRating(product, metric)} \r\n                  product={product} \r\n                  metric={metric}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </figure>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { ServiceData } from '@/features/services/types/service.types';\r\n\r\nimport BeforeAfterSlider from './BeforeAfterSlider';\r\n\r\ninterface ResultsProps {\r\n  serviceData: ServiceData;\r\n}\r\n\r\nconst Results: React.FC<ResultsProps> = ({ serviceData }) => {\r\n  const before = serviceData.results?.images?.before?.src;\r\n  const after = serviceData.results?.images?.after?.src;\r\n\r\n  return (\r\n    <section className=\"bg-stone-800 py-16\">\r\n      <div className=\"container mx-auto max-w-6xl px-4 sm:px-6 lg:px-8\">\r\n        <h2 className=\"text-2xl sm:text-3xl font-bold text-white mb-12 text-center\">\r\n          Results\r\n        </h2>\r\n        \r\n        <div className=\"grid gap-8 lg:grid-cols-2 items-center\">\r\n          {/* Before/After Images or Video */}\r\n          {serviceData.results?.video ? (\r\n            <div className=\"text-center\">\r\n              <div className=\"rounded-2xl bg-stone-700 ring-1 ring-white/10 overflow-hidden w-80 sm:w-[22.4rem] lg:w-[25.6rem] mx-auto\">\r\n                <video \r\n                  src={serviceData.results.video.src}\r\n                  controls\r\n                  className=\"w-full h-full object-cover\"\r\n                  aria-label={serviceData.results.video.alt || \"Results video\"}\r\n                  playsInline\r\n                  style={{ aspectRatio: '2/3' }}\r\n                >\r\n                  <track kind=\"captions\" />\r\n                  Your browser does not support the video tag.\r\n                </video>\r\n              </div>\r\n            </div>\r\n          ) : before && after ? (\r\n            <div className=\"w-full\">\r\n              <BeforeAfterSlider\r\n                beforeImage={before}\r\n                afterImage={after}\r\n                beforeLabel=\"BEFORE\"\r\n                afterLabel=\"AFTER\"\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n          ) : null}\r\n          \r\n          {/* Results List */}\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold text-white mb-6\">What You&apos;ll Get</h3>\r\n            <ul className=\"space-y-4 text-slate-300\">\r\n              {serviceData.results?.bullets?.map((bullet: string, index: number) => (\r\n                <li key={index} className=\"flex items-start\">\r\n                  <span className=\"text-orange-400 mr-3 text-lg\">•</span>\r\n                  <span className=\"text-lg text-slate-300\">{bullet}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { ServiceCardProps } from '@/features/services/types/service.types';\n\nconst ServiceCard: React.FC<ServiceCardProps> = ({ \n  service, \n  className = \"\" \n}) => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  \n  const handleClick = () => {\n    // Preserve preview token if present\n    const token = searchParams.get('t');\n    const route = token ? `${service.route}?t=${token}` : service.route;\n    void navigate(route);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      const token = searchParams.get('t');\n      const route = token ? `${service.route}?t=${token}` : service.route;\n      void navigate(route);\n    }\n  };\n  \n  return (\n    <li>\n      <div\n        onClick={handleClick}\n        onKeyDown={handleKeyDown}\n        role=\"button\"\n        tabIndex={0}\n        aria-label={`View ${service.title}`}\n        className={`group relative block rounded-lg overflow-hidden shadow-lg transition-transform duration-300 hover:-translate-y-2 hover:shadow-xl cursor-pointer ${className}`}\n      >\n        <div className=\"h-40 sm:h-64 lg:h-[24rem] xl:h-[28rem]\">\n          <img \n            src={service.imageUrl} \n            alt=\"\" /* decorative; title is visible text */\n            loading={service.imagePriority ? \"eager\" : \"lazy\"}\n            decoding={service.imagePriority ? \"sync\" : \"async\"}\n            // eslint-disable-next-line react/no-unknown-property -- fetchPriority is a valid HTML attribute\n            {...(service.imagePriority && { fetchPriority: 'high' as const })}\n            width={service.imageWidth || 600}\n            height={service.imageHeight || 400}\n            className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n          />\n        </div>\n        \n        {/* Content Overlay */}\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent\">\n          <div className=\"absolute bottom-0 left-0 right-0 p-3 sm:p-6 lg:p-8 text-white text-center\">\n            <h3 className=\"text-base sm:text-xl lg:text-2xl font-semibold\">\n              {service.title}\n            </h3>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ServiceCard;\n","import React from 'react';\r\n\r\nimport { ServiceData } from '@/features/services/types/service.types';\r\nimport { CTAButtons } from '@/shared/ui';\r\n\r\ninterface ServiceCTAProps {\r\n  serviceData: ServiceData;\r\n  onRequestQuote?: () => void;\r\n}\r\n\r\nconst ServiceCTA: React.FC<ServiceCTAProps> = ({ serviceData, onRequestQuote }) => {\r\n  return (\r\n    <section className=\"bg-stone-900 py-16\">\r\n      <div className=\"container mx-auto max-w-4xl px-4 sm:px-6 lg:px-8 text-center\">\r\n        <h2 className=\"text-2xl sm:text-3xl font-bold text-white mb-4\">\r\n          {serviceData.cta?.title || \"Ready to get started?\"}\r\n        </h2>\r\n        {serviceData.cta?.description && (\r\n          <p className=\"text-slate-300 mb-8\">\r\n            {serviceData.cta.description}\r\n          </p>\r\n        )}\r\n        \r\n        <CTAButtons \r\n          layout=\"horizontal\"\r\n          bookNowProps={{\r\n            children: serviceData.cta?.primary?.label || serviceData.hero.ctas?.[0]?.label || \"Book Now\"\r\n          }}\r\n          getQuoteProps={{\r\n            children: serviceData.cta?.secondary?.label || serviceData.hero.ctas?.[1]?.label || \"Request Quote\",\r\n            variant: \"outline-white\",\r\n            onClick: onRequestQuote || (() => { /* No handler provided */ })\r\n          }}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ServiceCTA;\r\n","import React from 'react';\r\n\r\nimport { ServiceData } from '@/features/services/types/service.types';\r\nimport { CTAButtons } from '@/shared/ui';\r\n\r\ninterface ServiceHeroProps {\r\n  serviceData: ServiceData;\r\n  onRequestQuote?: () => void;\r\n}\r\n\r\nconst ServiceHero: React.FC<ServiceHeroProps> = ({ serviceData, onRequestQuote }) => {\r\n  return (\r\n    <section className=\"bg-stone-900 py-16 sm:py-24\">\r\n      <div className=\"container mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\r\n        {/* Image and Content Grid */}\r\n        <div className=\"grid gap-8 lg:grid-cols-[3fr_2fr] items-center mb-8\">\r\n          {/* Service Image */}\r\n          <div className=\"aspect-[3/2] rounded-2xl bg-stone-800/80 ring-1 ring-white/10 overflow-hidden\">\r\n            {serviceData.hero.image?.src ? (\r\n              <img \r\n                src={serviceData.hero.image.src} \r\n                alt={serviceData.hero.image.alt}\r\n                width={800}\r\n                height={533}\r\n                loading=\"lazy\"\r\n                decoding=\"async\"\r\n                className=\"w-full h-full object-cover\"\r\n              />\r\n            ) : (\r\n              <div className=\"w-full h-full flex items-center justify-center text-white/50\">\r\n                Image Placeholder\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Content */}\r\n          <div>\r\n            <h1 className=\"text-3xl sm:text-4xl font-extrabold text-white\">\r\n              {serviceData.hero.headline || serviceData.title || \"Service Title\"}\r\n            </h1>\r\n            <p className=\"mt-3 text-slate-300 text-xl md:text-2xl\">\r\n              {serviceData.hero.subheadline || serviceData.shortDescription || \"Short subhead that sells the value. Placeholder copy.\"}\r\n            </p>\r\n            \r\n            {/* CTA Buttons */}\r\n            <div className=\"mt-6\">\r\n              <CTAButtons \r\n                layout=\"horizontal\"\r\n                bookNowProps={{\r\n                  children: serviceData.hero.ctas?.[0]?.label || \"Book Now\"\r\n                }}\r\n                getQuoteProps={{\r\n                  children: serviceData.hero.ctas?.[1]?.label || \"Request Quote\",\r\n                  variant: \"outline-white\",\r\n                  onClick: onRequestQuote\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ServiceHero;\r\n","/**\r\n * Utility functions for generating Schema.org structured data\r\n * from location configuration data\r\n * \r\n * Industry-agnostic: All functions accept site config as parameter\r\n */\r\n\r\nimport type { LocationPage, MainSiteConfig } from '@/shared/types/location';\r\n\r\n/**\r\n * Automatically generate Schema.org image array from location images\r\n * Filters images by role and returns their URLs\r\n */\r\nexport function generateSchemaImages(\r\n  locationData: LocationPage, \r\n  roles: string[] = ['hero']\r\n): string[] {\r\n  if (!locationData.images) {\r\n    return [];\r\n  }\r\n\r\n  return locationData.images\r\n    .filter(img => roles.includes(img.role))\r\n    .map(img => img.url);\r\n}\r\n\r\n/**\r\n * Generate complete Schema.org LocalBusiness structure\r\n * from location data with automatic image population and enhanced fields\r\n */\r\nexport function generateLocationSchema(\r\n  locationData: LocationPage,\r\n  siteConfig: MainSiteConfig\r\n): Record<string, unknown> {\r\n  // Get hero images automatically\r\n  const heroImages = generateSchemaImages(locationData, ['hero']);\r\n  \r\n  // Auto-generate area served from postal codes, neighborhoods, and city\r\n  const areaServed = [\r\n    locationData.city,\r\n    ...(locationData.serviceArea?.postalCodes || []),\r\n    ...(locationData.neighborhoods || []).map(n => `${n}, ${locationData.stateCode}`)\r\n  ];\r\n\r\n  // Base schema structure with auto-generated fields\r\n  const domain = window.location.host;\r\n  \r\n  const baseSchema = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"LocalBusiness\",\r\n    \"name\": locationData.header?.businessName || `${locationData.city} ${siteConfig.brand}`,\r\n    \"url\": `https://${domain}${locationData.urlPath}`,\r\n    \"telephone\": locationData.header?.phoneE164 || siteConfig.contact?.phone,\r\n    \"address\": {\r\n      \"@type\": \"PostalAddress\",\r\n      \"addressLocality\": locationData.city,  // Auto-generated\r\n      \"addressRegion\": locationData.stateCode,  // Auto-generated\r\n      \"postalCode\": locationData.postalCode || \"\"  // Auto-generated from location data\r\n    },\r\n    \"areaServed\": areaServed,  // Auto-generated\r\n    \"geo\": {\r\n      \"@type\": \"GeoCoordinates\",\r\n      \"latitude\": locationData.latitude,\r\n      \"longitude\": locationData.longitude\r\n    },\r\n    \"sameAs\": [\r\n      siteConfig.socials?.facebook,\r\n      siteConfig.socials?.instagram,\r\n      siteConfig.socials?.youtube,\r\n      siteConfig.socials?.googleBusiness\r\n    ].filter(Boolean),\r\n    \"description\": locationData.seo.description || `Professional ${siteConfig.brand} services in ${locationData.city}, ${locationData.stateCode}`,\r\n    \"priceRange\": \"$$\",\r\n    \"currenciesAccepted\": \"USD\",\r\n    \"paymentAccepted\": [\"Cash\", \"Credit Card\", \"Debit Card\", \"Check\"],\r\n    \"serviceType\": siteConfig.servicesGrid?.map(s => s.title) || []\r\n  };\r\n\r\n  // Add images if available\r\n  let schema = { ...baseSchema };\r\n  if (heroImages.length > 0) {\r\n    schema.image = heroImages;\r\n  }\r\n\r\n  // Add aggregate rating from site.json (global reviews)\r\n  if (siteConfig.reviews?.ratingValue && siteConfig.reviews.reviewCount) {\r\n    schema.aggregateRating = {\r\n      \"@type\": \"AggregateRating\",\r\n      \"ratingValue\": siteConfig.reviews.ratingValue,\r\n      \"reviewCount\": siteConfig.reviews.reviewCount.toString(),\r\n      \"bestRating\": \"5\",\r\n      \"worstRating\": \"1\"\r\n    };\r\n  }\r\n\r\n  // Note: Individual reviews are handled globally, not per location\r\n  // Reviews are managed through the main Reviews component and site.json\r\n\r\n  // Add business hours from top-level openingHours field\r\n  if (locationData.openingHours) {\r\n    schema.openingHours = locationData.openingHours;\r\n  }\r\n\r\n  // Add operational information for better service understanding\r\n  if (locationData.ops) {\r\n    const operationalInfo = getOperationalInfo(locationData);\r\n    \r\n    // Add service area information\r\n    schema.hasOfferCatalog = {\r\n      \"@type\": \"OfferCatalog\",\r\n      \"name\": \"Mobile Detailing Services\",\r\n      \"itemListElement\": [\r\n        {\r\n          \"@type\": \"Offer\",\r\n          \"itemOffered\": {\r\n            \"@type\": \"Service\",\r\n            \"name\": \"Mobile Auto Detailing\",\r\n            \"description\": `Professional mobile detailing within ${operationalInfo.serviceRadiusMiles} miles`,\r\n            \"areaServed\": {\r\n              \"@type\": \"GeoCircle\",\r\n              \"geoMidpoint\": {\r\n                \"@type\": \"GeoCoordinates\",\r\n                \"latitude\": locationData.latitude,\r\n                \"longitude\": locationData.longitude\r\n              },\r\n              \"geoRadius\": `${operationalInfo.serviceRadiusMiles * 1609.34}` // Convert miles to meters\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    // Add availability information\r\n    if (operationalInfo.acceptsSameDay) {\r\n      schema.availability = \"https://schema.org/InStock\";\r\n    }\r\n  }\r\n\r\n  // Add pricing information if available\r\n  if (locationData.pricingModifierPct !== undefined) {\r\n    const pricingValidation = validatePricingModifier(locationData.pricingModifierPct);\r\n    if (pricingValidation.isValid) {\r\n      schema.priceRange = pricingValidation.value === 0 \r\n        ? \"$$\" \r\n        : pricingValidation.value > 0 \r\n          ? \"$$$\" \r\n          : \"$\";\r\n    }\r\n  }\r\n\r\n  return schema;\r\n}\r\n\r\n/**\r\n * Generate FAQ Schema from location FAQs\r\n */\r\nexport function generateFAQSchema(faqs: Array<{ id?: string; q: string; a: string }>): Record<string, unknown> {\r\n  return {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"FAQPage\",\r\n    \"mainEntity\": faqs.map(faq => ({\r\n      \"@type\": \"Question\",\r\n      \"name\": faq.q,\r\n      \"acceptedAnswer\": {\r\n        \"@type\": \"Answer\",\r\n        \"text\": faq.a\r\n      }\r\n    }))\r\n  };\r\n}\r\n\r\n/**\r\n * Convert FAQItem format to generateFAQSchema format\r\n */\r\nexport function convertFAQItemsToSchemaFormat(faqItems: Array<{ \r\n  id?: string; \r\n  question: string; \r\n  answer: string; \r\n  category?: string; \r\n}>): Array<{ id?: string; q: string; a: string }> {\r\n  return faqItems.map(item => ({\r\n    id: item.id,\r\n    q: item.question,\r\n    a: item.answer\r\n  }));\r\n}\r\n\r\n/**\r\n * Get service-specific image from location data with fallback\r\n */\r\nexport function getServiceImageFromLocation(\r\n  locationData: LocationPage | null, \r\n  serviceRole: \"auto\" | \"marine\" | \"rv\", \r\n  fallbackImage: string\r\n): {\r\n  url: string;\r\n  alt: string;\r\n  width?: number;\r\n  height?: number;\r\n  priority?: boolean;\r\n} {\r\n  if (!locationData?.images || locationData.images.length === 0) {\r\n    return {\r\n      url: fallbackImage,\r\n      alt: \"Service image\",\r\n      width: 400,\r\n      height: 300,\r\n      priority: false\r\n    };\r\n  }\r\n\r\n  const serviceImage = locationData.images.find(img => img.role === serviceRole);\r\n  \r\n  if (serviceImage) {\r\n    return {\r\n      url: serviceImage.url,\r\n      alt: serviceImage.alt,\r\n      width: serviceImage.width || 400,\r\n      height: serviceImage.height || 300,\r\n      priority: serviceImage.priority || false\r\n    };\r\n  }\r\n\r\n  // Fallback to default image\r\n  return {\r\n    url: fallbackImage,\r\n    alt: \"Service image\",\r\n    width: 400,\r\n    height: 300,\r\n    priority: false\r\n  };\r\n}\r\n\r\n/**\r\n * Get operational information for a location\r\n */\r\nexport function getOperationalInfo(locationData: LocationPage): {\r\n  acceptsSameDay: boolean;\r\n  leadTimeDays: number;\r\n  serviceRadiusMiles: number;\r\n  leadTimeText: string;\r\n  serviceAreaText: string;\r\n} {\r\n  const ops = locationData.ops || {};\r\n  \r\n  return {\r\n    acceptsSameDay: ops.acceptsSameDay || false,\r\n    leadTimeDays: ops.leadTimeDays || 2,\r\n    serviceRadiusMiles: ops.serviceRadiusMiles || 25,\r\n    leadTimeText: ops.acceptsSameDay ? 'Same day available' : `${ops.leadTimeDays || 2} day lead time`,\r\n    serviceAreaText: `${ops.serviceRadiusMiles || 25} mile service radius`\r\n  };\r\n}\r\n\r\n/**\r\n * Check if a postal code is served by a location\r\n */\r\nexport function isPostalCodeServed(locationData: LocationPage, postalCode: string): boolean {\r\n  if (!locationData.serviceArea?.postalCodes) {\r\n    return false;\r\n  }\r\n  \r\n  return locationData.serviceArea.postalCodes.includes(postalCode);\r\n}\r\n\r\n/**\r\n * Get service area information for a location\r\n */\r\nexport function getServiceAreaInfo(locationData: LocationPage): {\r\n  postalCodes: string[];\r\n  postalCodeCount: number;\r\n  serviceAreaText: string;\r\n  primaryPostalCode: string;\r\n} {\r\n  const postalCodes = locationData.serviceArea?.postalCodes || [];\r\n  \r\n  return {\r\n    postalCodes,\r\n    postalCodeCount: postalCodes.length,\r\n    serviceAreaText: postalCodes.length > 0 \r\n      ? `We serve ${postalCodes.length} ZIP code${postalCodes.length === 1 ? '' : 's'} in ${locationData.city}`\r\n      : `Service area: ${locationData.city}`,\r\n    primaryPostalCode: postalCodes[0] || locationData.postalCode\r\n  };\r\n}\r\n\r\n/**\r\n * Validate and format pricing modifier\r\n */\r\nexport function validatePricingModifier(pricingModifierPct?: number): {\r\n  isValid: boolean;\r\n  value: number;\r\n  percentage: number;\r\n  displayText: string;\r\n  error?: string;\r\n} {\r\n  // Default to no markup if not provided\r\n  const value = pricingModifierPct ?? 0;\r\n  const percentage = value * 100;\r\n\r\n  // Validate range (reasonable limits: -50% to +100%)\r\n  if (value < -0.5 || value > 1.0) {\r\n    return {\r\n      isValid: false,\r\n      value,\r\n      percentage,\r\n      displayText: `${percentage.toFixed(1)}%`,\r\n      error: 'Pricing modifier must be between -0.50 (-50%) and 1.00 (+100%)'\r\n    };\r\n  }\r\n\r\n  // Format display text\r\n  let displayText: string;\r\n  if (value === 0) {\r\n    displayText = 'Standard pricing';\r\n  } else if (value > 0) {\r\n    displayText = `+${percentage.toFixed(1)}% markup`;\r\n  } else {\r\n    displayText = `${percentage.toFixed(1)}% discount`;\r\n  }\r\n\r\n  return {\r\n    isValid: true,\r\n    value,\r\n    percentage,\r\n    displayText\r\n  };\r\n}\r\n\r\n/**\r\n * Apply pricing modifier to a base price\r\n */\r\nexport function applyPricingModifier(basePrice: number, pricingModifierPct?: number): {\r\n  originalPrice: number;\r\n  modifier: number;\r\n  finalPrice: number;\r\n  difference: number;\r\n  displayText: string;\r\n} {\r\n  const validation = validatePricingModifier(pricingModifierPct);\r\n  \r\n  if (!validation.isValid) {\r\n    throw new Error(`Invalid pricing modifier: ${validation.error}`);\r\n  }\r\n\r\n  const finalPrice = basePrice * (1 + validation.value);\r\n  const difference = finalPrice - basePrice;\r\n\r\n  return {\r\n    originalPrice: basePrice,\r\n    modifier: validation.value,\r\n    finalPrice: Math.round(finalPrice * 100) / 100, // Round to 2 decimal places\r\n    difference: Math.round(difference * 100) / 100,\r\n    displayText: validation.displayText\r\n  };\r\n}\r\n\r\n/**\r\n * Generate BreadcrumbList Schema for location pages\r\n */\r\nexport function generateBreadcrumbSchema(locationData: LocationPage): Record<string, unknown> {\r\n  return {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"BreadcrumbList\",\r\n    \"itemListElement\": [\r\n      {\r\n        \"@type\": \"ListItem\",\r\n        \"position\": 1,\r\n        \"name\": \"Home\",\r\n        \"item\": \"https://thatsmartsite.com/\"\r\n      },\r\n      {\r\n        \"@type\": \"ListItem\",\r\n        \"position\": 2,\r\n        \"name\": locationData.state,\r\n        \"item\": `https://thatsmartsite.com/${locationData.stateCode.toLowerCase()}/`\r\n      },\r\n      {\r\n        \"@type\": \"ListItem\",\r\n        \"position\": 3,\r\n        \"name\": locationData.city,\r\n        \"item\": `https://thatsmartsite.com${locationData.urlPath}`\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\n/**\r\n * Generate Organization Schema for main site\r\n */\r\nexport function generateOrganizationSchema(siteConfig: MainSiteConfig): Record<string, unknown> {\r\n  const domain = window.location.host;\r\n  \r\n  const schema: Record<string, unknown> = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"Organization\",\r\n    \"name\": siteConfig.brand,\r\n    \"url\": `https://${domain}/`,\r\n    \"logo\": `https://${domain}${siteConfig.logo.url}`,\r\n    \"sameAs\": [\r\n      siteConfig.socials?.facebook,\r\n      siteConfig.socials?.instagram,\r\n      siteConfig.socials?.youtube,\r\n      siteConfig.socials?.googleBusiness\r\n    ].filter(Boolean),\r\n    \"contactPoint\": [{\r\n      \"@type\": \"ContactPoint\",\r\n      \"contactType\": \"customer service\",\r\n      \"telephone\": siteConfig.contact?.phone || \"\",\r\n      \"areaServed\": \"US\"\r\n    }]\r\n  };\r\n  \r\n  // Add aggregate rating if available\r\n  if (siteConfig.reviews?.ratingValue && siteConfig.reviews.reviewCount) {\r\n    schema.aggregateRating = {\r\n      \"@type\": \"AggregateRating\",\r\n      \"ratingValue\": siteConfig.reviews.ratingValue,\r\n      \"reviewCount\": siteConfig.reviews.reviewCount.toString(),\r\n      \"bestRating\": \"5\",\r\n      \"worstRating\": \"1\"\r\n    };\r\n  }\r\n  \r\n  return schema;\r\n}\r\n\r\n/**\r\n * Generate Website Schema for main site\r\n */\r\nexport function generateWebsiteSchema(siteConfig: MainSiteConfig): Record<string, unknown> {\r\n  const domain = window.location.host;\r\n  \r\n  return {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"WebSite\",\r\n    \"url\": `https://${domain}/`,\r\n    \"name\": siteConfig.brand,\r\n    \"potentialAction\": {\r\n      \"@type\": \"SearchAction\",\r\n      \"target\": `https://${domain}/search?q={query}`,\r\n      \"query-input\": \"required name=query\"\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Generate WebPage Schema for any page\r\n */\r\nexport function generateWebPageSchema(\r\n  pageData: MainSiteConfig | LocationPage, \r\n  siteConfig: MainSiteConfig,\r\n  pageType: 'home' | 'location' = 'home'\r\n): Record<string, unknown> {\r\n  const domain = window.location.host;\r\n  const baseUrl = `https://${domain}`;\r\n  \r\n  const schema: Record<string, unknown> = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"WebPage\",\r\n    \"url\": `${baseUrl}${'urlPath' in pageData ? pageData.urlPath : '/'}`,\r\n    \"name\": pageData.seo.title || siteConfig.brand,\r\n    \"description\": pageData.seo.description,\r\n    \"isPartOf\": {\r\n      \"@type\": \"WebSite\",\r\n      \"name\": siteConfig.brand,\r\n      \"url\": baseUrl\r\n    }\r\n  };\r\n\r\n  if (pageData.seo.keywords && Array.isArray(pageData.seo.keywords)) {\r\n    schema.keywords = pageData.seo.keywords.join(', ');\r\n  }\r\n\r\n  if (pageData.seo.ogImage) {\r\n    schema.image = pageData.seo.ogImage;\r\n  }\r\n\r\n  if (pageType === 'location' && 'city' in pageData) {\r\n    schema.about = {\r\n      \"@type\": \"LocalBusiness\",\r\n      \"name\": pageData.header?.businessName || `${pageData.city} ${siteConfig.brand}`,\r\n      \"address\": {\r\n        \"@type\": \"PostalAddress\",\r\n        \"addressLocality\": pageData.city,\r\n        \"addressRegion\": pageData.stateCode,\r\n        \"postalCode\": pageData.postalCode\r\n      }\r\n    };\r\n  }\r\n\r\n  return schema;\r\n}\r\n\r\n/**\r\n * Generate all JSON-LD schemas for a page\r\n */\r\nexport function generateAllSchemas(\r\n  pageData: MainSiteConfig | LocationPage,\r\n  siteConfig: MainSiteConfig,\r\n  pageType: 'home' | 'location' = 'home',\r\n  additionalFAQs?: Array<{ id?: string; q: string; a: string }>\r\n): Record<string, unknown>[] {\r\n  const schemas: Record<string, unknown>[] = [];\r\n\r\n  if (pageType === 'home') {\r\n    // Main site gets Organization and Website schemas\r\n    schemas.push(generateOrganizationSchema(siteConfig));\r\n    schemas.push(generateWebsiteSchema(siteConfig));\r\n    schemas.push(generateWebPageSchema(pageData, siteConfig, 'home'));\r\n    \r\n    // Add FAQPage schema if additional FAQs are provided (from general FAQ utils)\r\n    if (additionalFAQs && additionalFAQs.length > 0) {\r\n      schemas.push(generateFAQSchema(additionalFAQs));\r\n    }\r\n  } else {\r\n    // Location pages get LocalBusiness, FAQPage, BreadcrumbList, and WebPage schemas\r\n    if ('city' in pageData) {\r\n      schemas.push(generateLocationSchema(pageData, siteConfig));\r\n      schemas.push(generateWebPageSchema(pageData, siteConfig, 'location'));\r\n      schemas.push(generateBreadcrumbSchema(pageData));\r\n      \r\n      if (pageData.faqs && pageData.faqs.length > 0) {\r\n        schemas.push(generateFAQSchema(pageData.faqs));\r\n      }\r\n    }\r\n  }\r\n\r\n  return schemas;\r\n}\r\n\r\n/**\r\n * Inject all schemas into document head\r\n */\r\nexport function injectAllSchemas(schemas: Record<string, unknown>[]): void {\r\n  // Remove existing schema scripts\r\n  const existingSchemas = document.querySelectorAll('script[type=\"application/ld+json\"]');\r\n  existingSchemas.forEach(schema => { schema.remove(); });\r\n\r\n  // Inject new schemas\r\n  schemas.forEach((schema, index) => {\r\n    const script = document.createElement('script');\r\n    script.type = 'application/ld+json';\r\n    script.textContent = JSON.stringify(schema);\r\n    script.setAttribute('data-schema-index', index.toString());\r\n    document.head.appendChild(script);\r\n  });\r\n}\r\n","import { useNavigate } from 'react-router-dom';\r\n\r\nimport assetsData from '@/data/mobile-detailing/assets.json';\r\nimport autoDetailingData from '@/data/mobile-detailing/services/auto-detailing.json';\r\nimport ceramicCoatingData from '@/data/mobile-detailing/services/ceramic-coating.json';\r\nimport marineDetailingData from '@/data/mobile-detailing/services/marine-detailing.json';\r\nimport paintCorrectionData from '@/data/mobile-detailing/services/paint-correction.json';\r\nimport ppfData from '@/data/mobile-detailing/services/ppf.json';\r\nimport rvDetailingData from '@/data/mobile-detailing/services/rv-detailing.json';\r\nimport { Service } from '@/features/services/types/service.types';\r\nimport { env } from '@/shared/env';\r\nimport { useTenantSlug } from '@/shared/hooks/useTenantSlug';\r\nimport type { LocationPage } from '@/shared/types/location';\r\nimport { getServiceImageFromLocation } from '@/shared/utils/schemaUtils';\r\n\r\n// Transform assets.json services.grid data to Service format with location-specific images\r\nconst getServicesFromSiteData = (locationData: LocationPage | null | undefined, tenantSlug?: string): Service[] => {\r\n  return assetsData.services.grid.map((service, index) => {\r\n    // Get thumbnail data for this service\r\n    const thumbnail = assetsData.services.thumbnails[service.slug as keyof typeof assetsData.services.thumbnails];\r\n    // Determine service role for location-specific images\r\n    let serviceRole: \"auto\" | \"marine\" | \"rv\" | null = null;\r\n    if (service.slug.includes('auto-detailing')) {\r\n      serviceRole = 'auto';\r\n    } else if (service.slug.includes('marine-detailing')) {\r\n      serviceRole = 'marine';\r\n    } else if (service.slug.includes('rv-detailing')) {\r\n      serviceRole = 'rv';\r\n    }\r\n\r\n    // Get location-specific image if available, otherwise use default thumbnail\r\n    const imageData = serviceRole && locationData \r\n      ? getServiceImageFromLocation(locationData, serviceRole, thumbnail.url || '')\r\n      : {\r\n          url: thumbnail.url || '',\r\n          alt: thumbnail.alt || '',\r\n          width: thumbnail.width || 400,\r\n          height: thumbnail.height || 300,\r\n          priority: service.priority\r\n        };\r\n\r\n    // Construct route based on environment\r\n    // Development: /{tenantSlug}/services/{serviceSlug}\r\n    // Production: /service/{serviceSlug}\r\n    const route = env.DEV && tenantSlug\r\n      ? `/${tenantSlug}/services/${service.slug}`\r\n      : `/service/${service.slug}`;\r\n    \r\n\r\n    const serviceData = {\r\n      id: (index + 1).toString(),\r\n      title: service.title,\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- service.alt from JSON, type refinement planned\r\n      description: service.alt, // Using alt text as description\r\n      imageUrl: imageData.url,\r\n      route: route,\r\n      category: service.slug.split('-')[0] || 'general', // Extract category from slug\r\n      imageWidth: imageData.width,\r\n      imageHeight: imageData.height,\r\n      imagePriority: imageData.priority\r\n    };\r\n    \r\n    \r\n    return serviceData;\r\n  });\r\n};\r\n\r\nexport const useServices = (locationData: LocationPage | null | undefined) => {\r\n  const navigate = useNavigate();\r\n  const tenantSlug = useTenantSlug(); // Use the proper tenant slug hook\r\n\r\n  const handleServiceClick = (service: Service) => {\r\n    void navigate(service.route);\r\n  };\r\n\r\n  const getServices = () => {\r\n    return getServicesFromSiteData(locationData, tenantSlug);\r\n  };\r\n\r\n  const getServiceById = (id: string) => {\r\n    return getServicesFromSiteData(locationData, tenantSlug).find(service => service.id === id);\r\n  };\r\n\r\n  const getServicesByCategory = (category: string) => {\r\n    return getServicesFromSiteData(locationData, tenantSlug).filter(service => service.category === category);\r\n  };\r\n\r\n  const getAutoDetailingData = () => {\r\n    return autoDetailingData;\r\n  };\r\n\r\n  const getMarineDetailingData = () => {\r\n    return marineDetailingData;\r\n  };\r\n\r\n  const getRvDetailingData = () => {\r\n    return rvDetailingData;\r\n  };\r\n\r\n  const getCeramicCoatingData = () => {\r\n    return ceramicCoatingData;\r\n  };\r\n\r\n  const getPaintCorrectionData = () => {\r\n    return paintCorrectionData;\r\n  };\r\n\r\n  const getPpfData = () => {\r\n    return ppfData;\r\n  };\r\n\r\n\r\n  return {\r\n    services: getServices(),\r\n    handleServiceClick,\r\n    getServiceById,\r\n    getServicesByCategory,\r\n    getAutoDetailingData,\r\n    getMarineDetailingData,\r\n    getRvDetailingData,\r\n    getCeramicCoatingData,\r\n    getPaintCorrectionData,\r\n    getPpfData,\r\n  };\r\n};\r\n","import React from 'react';\n\nimport { useServices } from '@/features/services/hooks/useServices';\nimport { ServicesGridProps } from '@/features/services/types/service.types';\n\nimport ServiceCard from './ServiceCard';\n\nconst ServicesGrid: React.FC<ServicesGridProps> = ({ locationData }) => {\n  const { services } = useServices(locationData);\n\n  // Split services for mobile: first 3 and last 3\n  const firstThreeServices = services.slice(0, 3);\n  const lastThreeServices = services.slice(3, 6);\n\n  return (\n    <>\n      {/* MOBILE: First 3 services with header */}\n      <section \n        id=\"services\" \n        className=\"md:hidden relative z-0 h-screen snap-start snap-always bg-stone-800 px-4 py-4\"\n      >\n        <div className=\"mx-auto w-full h-full flex flex-col justify-center\">\n          <h2 className=\"text-3xl font-bold text-white text-center mb-4\">\n            Our Services\n          </h2>\n          \n          <ul className=\"grid grid-cols-1 gap-4\">\n            {firstThreeServices.map((service) => (\n              <ServiceCard\n                key={service.id}\n                service={service}\n              />\n            ))}\n          </ul>\n        </div>\n      </section>\n\n      {/* MOBILE: Last 3 services */}\n      <section \n        className=\"md:hidden relative z-0 h-screen snap-start snap-always bg-stone-800 px-4 py-2\"\n      >\n        <div className=\"mx-auto w-full h-full flex flex-col justify-start pt-[80px]\">\n          <ul className=\"grid grid-cols-1 gap-4 [&>li>div>div]:h-[calc((100vh-200px)/3)]\">\n            {lastThreeServices.map((service) => (\n              <ServiceCard\n                key={service.id}\n                service={service}\n              />\n            ))}\n          </ul>\n        </div>\n      </section>\n\n      {/* DESKTOP: All services in one section */}\n      <section \n        id=\"services-desktop\" \n        className=\"hidden md:block relative z-0 min-h-screen snap-start snap-always bg-stone-800 px-4 sm:px-6 md:px-8 lg:px-10 xl:px-12 py-8 md:py-12 pt-[100px] md:pt-[120px]\"\n      >\n        <div className=\"mx-auto w-full\">\n          <h2 className=\"text-3xl md:text-4xl lg:text-5xl font-bold text-white text-center mb-4 md:mb-6 lg:mb-8\">\n            Our Services\n          </h2>\n          \n          {/* Mobile: 1 column, Tablet: 2 columns, Desktop: 3 columns */}\n          <ul className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6 lg:gap-8\">\n            {services.map((service) => (\n              <ServiceCard\n                key={service.id}\n                service={service}\n              />\n            ))}\n          </ul>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ServicesGrid;\n","import React from 'react';\r\n\r\nimport { ServiceData } from '@/features/services/types/service.types';\r\n\r\nimport { ProtectionComparisonChart } from './ProtectionComparisonChart';\r\n\r\ninterface WhatItIsProps {\r\n  serviceData: ServiceData;\r\n}\r\n\r\nconst WhatItIs: React.FC<WhatItIsProps> = ({ serviceData }) => {\r\n  const hasChart = serviceData.whatItIs?.chart?.type === 'protection-comparison';\r\n  const isPaintCorrection = serviceData.slug === 'paint-correction';\r\n  const isCeramicCoating = serviceData.slug === 'ceramic-coating';\r\n  \r\n  return (\r\n    <section className=\"bg-stone-800 py-16\">\r\n      <div className=\"container mx-auto max-w-6xl px-4 sm:px-6 lg:px-8\">\r\n        {/* Protection Comparison Chart - First */}\r\n        {hasChart && serviceData.whatItIs?.chart && (\r\n          <div className=\"mb-12\">\r\n            <ProtectionComparisonChart\r\n              ratings={serviceData.whatItIs.chart.data}\r\n              title={serviceData.whatItIs.chart.title}\r\n              description={serviceData.whatItIs.chart.description}\r\n            />\r\n          </div>\r\n        )}\r\n        \r\n        {/* Text Content - Second */}\r\n        {isPaintCorrection ? (\r\n          // Special two-column layout for paint correction\r\n          <div className=\"grid gap-10 lg:grid-cols-2\">\r\n            <div className=\"space-y-10\">\r\n              <div>\r\n                <h2 className=\"text-3xl sm:text-4xl font-bold text-white mb-4\">What It Is</h2>\r\n                <p className=\"text-slate-300 mb-6 text-lg\">\r\n                  {serviceData.whatItIs?.description || \"Explain what the service is. Placeholder text.\"}\r\n                </p>\r\n              </div>\r\n              \r\n              <div>\r\n                <ul className=\"space-y-2 text-slate-300\">\r\n                  {serviceData.whatItIs?.benefits?.map((benefit: string, index: number) => (\r\n                    <li key={index} className=\"flex items-start\">\r\n                      <span className=\"text-orange-400 mr-3 text-lg\" aria-hidden=\"true\">•</span>\r\n                      <span className=\"text-lg\">{benefit}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col justify-center\">\r\n              {serviceData.whatItIs?.image?.src && (\r\n                <div className=\"rounded-2xl bg-stone-700 ring-1 ring-white/10 overflow-hidden w-full max-w-lg mx-auto\">\r\n                  <img \r\n                    src={serviceData.whatItIs.image.src} \r\n                    alt={serviceData.whatItIs.image.alt || \"Service illustration\"}\r\n                    width={500}\r\n                    height={400}\r\n                    loading=\"lazy\"\r\n                    decoding=\"async\"\r\n                    className=\"w-full h-full object-contain\"\r\n                  />\r\n                </div>\r\n              )}\r\n              {serviceData.whatItIs?.video?.src && (\r\n                <div className=\"rounded-2xl bg-stone-700 ring-1 ring-white/10 overflow-hidden w-80 sm:w-[22.4rem] lg:w-[25.6rem] mx-auto\">\r\n                  <video \r\n                    src={serviceData.whatItIs.video.src}\r\n                    controls\r\n                    className=\"w-full h-full object-cover\"\r\n                    aria-label={serviceData.whatItIs.video.alt || \"Service video\"}\r\n                    playsInline\r\n                    style={{ aspectRatio: '2/3' }}\r\n                  >\r\n                    <track kind=\"captions\" />\r\n                    Your browser does not support the video tag.\r\n                  </video>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : isCeramicCoating ? (\r\n          // Two column layout for ceramic coating (after chart)\r\n          <div className=\"grid gap-10 lg:grid-cols-2\">\r\n            <div>\r\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-white mb-4\">What It Is</h2>\r\n              <p className=\"text-slate-300 mb-6\">\r\n                {serviceData.whatItIs?.description || \"Explain what the service is. Placeholder text.\"}\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col justify-center\">\r\n              <ul className=\"space-y-2 text-slate-300\">\r\n                {serviceData.whatItIs?.benefits?.map((benefit: string, index: number) => (\r\n                  <li key={index} className=\"flex items-start\">\r\n                    <span className=\"text-orange-400 mr-3 text-lg\" aria-hidden=\"true\">•</span>\r\n                    <span className=\"text-lg\">{benefit}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          // Two column layout for other services\r\n          <div className=\"grid gap-10 lg:grid-cols-2\">\r\n            <div className={`space-y-6 ${serviceData.whatItIs?.video?.src ? 'flex flex-col justify-center' : ''}`}>\r\n              <div>\r\n                <h2 className=\"text-3xl sm:text-4xl font-bold text-white mb-4\">What It Is</h2>\r\n                <p className=\"text-slate-300 mb-6 text-lg\">\r\n                  {serviceData.whatItIs?.description || \"Explain what the service is. Placeholder text.\"}\r\n                </p>\r\n              </div>\r\n              \r\n              <div>\r\n                <ul className=\"space-y-2 text-slate-300\">\r\n                  {serviceData.whatItIs?.benefits?.map((benefit: string, index: number) => (\r\n                    <li key={index} className=\"flex items-start\">\r\n                      <span className=\"text-orange-400 mr-3 text-lg\" aria-hidden=\"true\">•</span>\r\n                      <span className=\"text-lg\">{benefit}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col justify-center\">\r\n              {serviceData.whatItIs?.image?.src && (\r\n                <div className=\"rounded-2xl bg-stone-700 ring-1 ring-white/10 overflow-hidden w-full max-w-lg mx-auto\">\r\n                  <img \r\n                    src={serviceData.whatItIs.image.src} \r\n                    alt={serviceData.whatItIs.image.alt || \"Service illustration\"}\r\n                    width={500}\r\n                    height={400}\r\n                    loading=\"lazy\"\r\n                    decoding=\"async\"\r\n                    className=\"w-full h-full object-contain\"\r\n                  />\r\n                </div>\r\n              )}\r\n              {serviceData.whatItIs?.video?.src && (\r\n                <div className=\"rounded-2xl bg-stone-700 ring-1 ring-white/10 overflow-hidden w-80 sm:w-[22.4rem] lg:w-[25.6rem] mx-auto\">\r\n                  <video \r\n                    src={serviceData.whatItIs.video.src}\r\n                    controls\r\n                    className=\"w-full h-full object-cover\"\r\n                    aria-label={serviceData.whatItIs.video.alt || \"Service video\"}\r\n                    playsInline\r\n                    style={{ aspectRatio: '2/3' }}\r\n                  >\r\n                    <track kind=\"captions\" />\r\n                    Your browser does not support the video tag.\r\n                  </video>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default WhatItIs;\r\n","import React, { useEffect } from 'react';\n\nimport { FAQ } from '@/features/faq';\nimport { Gallery } from '@/features/gallery';\nimport { Header } from '@/features/header';\nimport { Hero } from '@/features/hero';\nimport { Reviews } from '@/features/reviews';\nimport { useReviewsAvailability } from '@/features/reviews/hooks/useReviewsAvailability';\nimport { ServicesGrid } from '@/features/services';\nimport { useIsDesktop, useScrollSpy, useSEO, useTenantSlug } from '@/shared/hooks';\nimport type { SectionId } from '@/shared/state/sectionStore';\nimport { injectAllSchemas } from '@/shared/utils/schemaUtils';\n\ninterface HomePageProps {\n  onRequestQuote?: () => void;\n  locationData?: unknown;\n}\n\nconst HomePage: React.FC<HomePageProps> = ({ onRequestQuote, locationData }) => {\n  // Legacy useSiteContext removed - now using tenant-based routing\n  \n  // Get tenant slug from URL\n  const tenantSlug = useTenantSlug();\n  \n  // Update SEO metadata (title, description, etc.)\n  useSEO();\n  \n  // Check if reviews are available for this site\n  const hasReviews = useReviewsAvailability();\n  \n  // Determine which section IDs to track based on screen size\n  const isDesktop = useIsDesktop();\n  \n  // Set up scroll spy to track active section - use correct IDs for mobile vs desktop\n  const sectionIds: SectionId[] = isDesktop \n    ? ['top', 'services-desktop', 'reviews', 'faq', 'gallery-desktop']\n    : ['top', 'services', 'reviews', 'faq', 'gallery', 'footer'];\n  \n  useScrollSpy({ \n    ids: sectionIds, \n    headerPx: isDesktop ? 88 : 72, \n    updateHash: false \n  });\n\n  // Generate and inject Schema.org JSON-LD for tenant site\n  useEffect(() => {\n    if (!locationData) {\n      // Schema generation for FAQs is now handled by the FAQ component itself\n      // using industry-specific data loaded dynamically\n      injectAllSchemas([]);\n    }\n  }, [locationData]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"h-screen snap-y snap-mandatory overflow-y-scroll snap-container scrollbar-hide pt-[72px] md:pt-[88px]\">\n        <Hero \n          {...(onRequestQuote && { onRequestQuote })}\n        />\n      \n      <ServicesGrid />\n      \n              {/* Only show reviews if there are reviews available */}\n              {hasReviews && (\n                <Reviews tenantSlug={tenantSlug} />\n              )}\n      \n      <FAQ />\n      \n      <Gallery \n        {...(onRequestQuote && { onRequestQuote })}\n      />\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { Suspense } from 'react';\r\n\r\nimport { type RequestQuoteModalProps } from '../types';\r\n\r\n// Lazy load the modal component\r\nconst RequestQuoteModal = React.lazy(() => import('./RequestQuoteModal'));\r\n\r\nconst LazyRequestQuoteModal: React.FC<RequestQuoteModalProps> = (props) => {\r\n  return (\r\n    <Suspense fallback={<div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n      <div className=\"bg-stone-800 text-white p-6 rounded-lg\">\r\n        <div className=\"animate-pulse\">Loading quote form...</div>\r\n      </div>\r\n    </div>}>\r\n      <RequestQuoteModal {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default LazyRequestQuoteModal;\r\n","/**\r\n * Generate years for vehicle dropdowns\r\n * Returns array from current year + 1 down to 1950, plus \"Before 1950\"\r\n */\r\nexport const getVehicleYears = (): (number | string)[] => {\r\n  const currentYear = new Date().getFullYear();\r\n  const maxYear = currentYear + 1;\r\n  const minYear = 1950;\r\n  \r\n  const years: (number | string)[] = [];\r\n  for (let year = maxYear; year >= minYear; year--) {\r\n    years.push(year);\r\n  }\r\n  \r\n  // Add \"Before {minYear}\" at the end\r\n  years.push(`Before ${String(minYear)}`);\r\n  \r\n  return years;\r\n};\r\n\r\n/**\r\n * Static years data for reference\r\n */\r\nexport const yearsConfig = {\r\n  minYear: 1950,\r\n  maxYear: new Date().getFullYear() + 1,\r\n  totalYears: new Date().getFullYear() + 1 - 1950 + 1\r\n} as const;\r\n\r\n/**\r\n * Get years formatted for display\r\n */\r\nexport const getFormattedYears = () => {\r\n  return getVehicleYears().map(year => ({\r\n    value: year,\r\n    label: year.toString()\r\n  }));\r\n};\r\n","// Quote validation schemas and types\r\nimport { z } from 'zod';\r\n\r\n// Quote request schema\r\nexport const quoteRequestSchema = z.object({\r\n  name: z.string().min(2, 'Name must be at least 2 characters'),\r\n  email: z.email('Invalid email address'),\r\n  phone: z.string().min(10, 'Phone number must be at least 10 digits'),\r\n  vehicleType: z.string().min(1, 'Vehicle type is required'),\r\n  vehicleMake: z.string().min(1, 'Vehicle make is required'),\r\n  vehicleModel: z.string().min(1, 'Vehicle model is required'),\r\n  vehicleYear: z.string().min(4, 'Vehicle year must be 4 digits'),\r\n  services: z.array(z.string()).min(1, 'At least one service must be selected'),\r\n  message: z.string().optional(),\r\n  city: z.string().min(1, 'City is required'),\r\n  state: z.string().min(2, 'State is required'),\r\n  zipCode: z.string().min(5, 'Zip code must be at least 5 digits'),\r\n  businessSlug: z.string().optional()\r\n});\r\n\r\n// Quote update schema\r\nexport const quoteUpdateSchema = z.object({\r\n  status: z.enum(['pending', 'in_progress', 'completed', 'cancelled']),\r\n  notes: z.string().optional(),\r\n  estimatedPrice: z.number().optional(),\r\n  estimatedDuration: z.number().optional()\r\n});\r\n\r\n// Quote response schema\r\nexport const quoteResponseSchema = z.object({\r\n  id: z.string(),\r\n  name: z.string(),\r\n  email: z.string(),\r\n  phone: z.string(),\r\n  vehicleType: z.string(),\r\n  vehicleMake: z.string(),\r\n  vehicleModel: z.string(),\r\n  vehicleYear: z.string(),\r\n  services: z.array(z.string()),\r\n  message: z.string().optional(),\r\n  city: z.string(),\r\n  state: z.string(),\r\n  zipCode: z.string(),\r\n  businessSlug: z.string().optional(),\r\n  status: z.enum(['pending', 'in_progress', 'completed', 'cancelled']),\r\n  createdAt: z.string(),\r\n  updatedAt: z.string(),\r\n  estimatedPrice: z.number().optional(),\r\n  estimatedDuration: z.number().optional(),\r\n  notes: z.string().optional()\r\n});\r\n\r\n// Quote list query schema\r\nexport const quoteListQuerySchema = z.object({\r\n  business_slug: z.string().optional(),\r\n  user_id: z.string().optional(),\r\n  status: z.enum(['pending', 'in_progress', 'completed', 'cancelled']).optional(),\r\n  limit: z.number().min(1).max(100).default(10),\r\n  offset: z.number().min(0).default(0)\r\n});\r\n\r\n// Quote cancellation schema\r\nexport const quoteCancellationSchema = z.object({\r\n  reason: z.string().optional(),\r\n  notes: z.string().optional()\r\n});\r\n\r\n// Export types\r\nexport type QuoteRequest = z.infer<typeof quoteRequestSchema>;\r\nexport type QuoteUpdate = z.infer<typeof quoteUpdateSchema>;\r\nexport type QuoteResponse = z.infer<typeof quoteResponseSchema>;\r\nexport type QuoteListQuery = z.infer<typeof quoteListQuerySchema>;\r\nexport type QuoteCancellation = z.infer<typeof quoteCancellationSchema>;\r\n\r\n// Quote status enum\r\nexport const QuoteStatus = {\r\n  PENDING: 'pending',\r\n  IN_PROGRESS: 'in_progress',\r\n  COMPLETED: 'completed',\r\n  CANCELLED: 'cancelled'\r\n} as const;\r\n\r\nexport type QuoteStatusType = typeof QuoteStatus[keyof typeof QuoteStatus];\r\n\r\n// Component prop types\r\nexport interface RequestQuoteModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\n// Form data type\r\nexport interface QuoteFormData {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  services: string[];\r\n  vehicleType: string;\r\n  vehicleMake: string;\r\n  vehicleModel: string;\r\n  vehicleYear: string;\r\n  vehicleColor?: string;\r\n  vehicleLength?: string;\r\n  message?: string;\r\n}\r\n\r\n// Service area type\r\nexport interface ServiceArea {\r\n  city: string;\r\n  state: string;\r\n  primary?: boolean;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport HomePage from '@/app/pages/HomePage';\r\n// Page-level composition - intentionally imports from features\r\n// eslint-disable-next-line no-restricted-imports -- Page composition needs quote modal\r\nimport { LazyRequestQuoteModal } from '@/features/quotes';\r\n\r\nimport { DataProvider } from '../contexts/DataProvider';\r\n\r\nconst TenantPage: React.FC = () => {\r\n  const [isQuoteModalOpen, setIsQuoteModalOpen] = useState(false);\r\n\r\n  const handleOpenQuoteModal = () => { setIsQuoteModalOpen(true); };\r\n  const handleCloseQuoteModal = () => { setIsQuoteModalOpen(false); };\r\n\r\n  return (\r\n    <DataProvider>\r\n      <div className=\"min-h-screen\">\r\n        <HomePage onRequestQuote={handleOpenQuoteModal} />\r\n        \r\n        {isQuoteModalOpen && (\r\n          <LazyRequestQuoteModal \r\n            isOpen={isQuoteModalOpen} \r\n            onClose={handleCloseQuoteModal} \r\n          />\r\n        )}\r\n      </div>\r\n    </DataProvider>\r\n  );\r\n};\r\n\r\nexport default TenantPage;\r\n","/**\r\n * Safe Error Handling Utilities\r\n * \r\n * TypeScript-safe error message extraction from unknown errors.\r\n */\r\n\r\n/**\r\n * Safely extract an error message from an unknown error\r\n * @param error - Unknown error from catch block\r\n * @returns Safe error message string\r\n */\r\nexport function safeErrorMessage(error: unknown): string {\r\n  if (typeof error === 'string') {\r\n    return error;\r\n  }\r\n  \r\n  if (error instanceof Error) {\r\n    return error.message;\r\n  }\r\n  \r\n  if (typeof error === 'object' && error !== null) {\r\n    // Check for message property\r\n    const errorObj = error as { message?: unknown };\r\n    if (typeof errorObj.message === 'string') {\r\n      return errorObj.message;\r\n    }\r\n  }\r\n  \r\n  return 'An unexpected error occurred';\r\n}\r\n\r\n/**\r\n * Safely extract the first validation error from a Zod-like error object\r\n * @param error - Validation error object\r\n * @returns First error message or default\r\n */\r\nexport function safeValidationMessage(error: unknown): string {\r\n  if (typeof error === 'object' && error !== null) {\r\n    const errorObj = error as { errors?: unknown[] };\r\n    if (Array.isArray(errorObj.errors) && errorObj.errors.length > 0) {\r\n      const firstError = errorObj.errors[0];\r\n      if (typeof firstError === 'object' && firstError !== null) {\r\n        const err = firstError as { message?: unknown };\r\n        if (typeof err.message === 'string') {\r\n          return err.message;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return safeErrorMessage(error);\r\n}\r\n\r\n","/**\r\n * Preview Types\r\n * \r\n * Type definitions and Zod schemas for preview functionality.\r\n */\r\n\r\nimport { z } from 'zod';\r\n\r\n// Zod schema for preview payload validation\r\nexport const PreviewPayloadSchema = z.object({\r\n  businessName: z\r\n    .string()\r\n    .min(2, 'Business name must be at least 2 characters')\r\n    .max(100, 'Business name must be less than 100 characters'),\r\n  phone: z\r\n    .string()\r\n    .min(7, 'Phone number must be at least 7 characters')\r\n    .max(20, 'Phone number must be less than 20 characters'),\r\n  city: z\r\n    .string()\r\n    .min(2, 'City must be at least 2 characters')\r\n    .max(50, 'City must be less than 50 characters'),\r\n  state: z\r\n    .string()\r\n    .length(2, 'State must be 2 characters (e.g., AZ, CA)')\r\n    .regex(/^[A-Z]{2}$/, 'State must be uppercase letters'),\r\n  industry: z.enum(['mobile-detailing', 'maid-service', 'lawncare', 'pet-grooming'], {\r\n    errorMap: () => ({ message: 'Invalid industry type' }),\r\n  }),\r\n});\r\n\r\n// TypeScript type derived from schema\r\nexport type PreviewPayload = z.infer<typeof PreviewPayloadSchema>;\r\n\r\n// API response types\r\nexport interface CreatePreviewResponse {\r\n  success: boolean;\r\n  url: string;\r\n  token: string;\r\n  expiresIn: string;\r\n}\r\n\r\nexport interface VerifyPreviewResponse {\r\n  success: boolean;\r\n  payload: PreviewPayload;\r\n}\r\n\r\nexport interface PreviewErrorResponse {\r\n  error: string;\r\n  message: string;\r\n  details?: Array<{\r\n    field: string;\r\n    message: string;\r\n  }>;\r\n}\r\n\r\n","/**\r\n * Preview API Client\r\n * \r\n * HTTP calls for preview token generation and verification.\r\n * No UI imports, no DOM usage - pure API layer.\r\n */\r\n\r\nimport { config } from '@/shared/env';\r\nimport { safeValidationMessage } from '@/shared/utils/errorHandling';\r\n\r\nimport type {\r\n  CreatePreviewResponse,\r\n  PreviewErrorResponse,\r\n  PreviewPayload,\r\n  VerifyPreviewResponse,\r\n} from '../types/preview.types';\r\nimport { PreviewPayloadSchema } from '../types/preview.types';\r\n\r\n/**\r\n * Create a preview token\r\n * @param payload - Business information for preview\r\n * @returns Promise with preview URL and token\r\n */\r\nexport async function createPreview(\r\n  payload: PreviewPayload\r\n): Promise<CreatePreviewResponse> {\r\n  // Validate payload before sending\r\n  const validation = PreviewPayloadSchema.safeParse(payload);\r\n  if (!validation.success) {\r\n    throw new Error(safeValidationMessage(validation.error));\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${config.apiUrl || ''}/api/previews`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(validation.data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json() as PreviewErrorResponse;\r\n      const errorMsg = error.message || 'Failed to create preview';\r\n      throw new Error(errorMsg);\r\n    }\r\n\r\n    const result = await response.json() as CreatePreviewResponse;\r\n    return result;\r\n  } catch (error) {\r\n    // Provide more helpful error messages for mobile devices\r\n    if (error instanceof TypeError && error.message.includes('fetch')) {\r\n      throw new Error('Unable to connect to server. Please check your network connection and ensure you can reach the backend server.');\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Verify a preview token\r\n * @param token - JWT token to verify\r\n * @returns Promise with decoded payload\r\n */\r\nexport async function verifyPreview(token: string): Promise<PreviewPayload> {\r\n  try {\r\n    const response = await fetch(\r\n      `${config.apiUrl || ''}/api/preview/verify?t=${encodeURIComponent(token)}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json() as PreviewErrorResponse;\r\n      const errorMsg = error.message || 'Failed to verify preview';\r\n      throw new Error(errorMsg);\r\n    }\r\n\r\n    const data = await response.json() as VerifyPreviewResponse;\r\n    \r\n    // Validate the payload from the backend\r\n    const validation = PreviewPayloadSchema.safeParse(data.payload);\r\n    if (!validation.success) {\r\n      throw new Error('Invalid payload received from server');\r\n    }\r\n\r\n    return validation.data;\r\n  } catch (error) {\r\n    // Provide more helpful error messages for mobile devices\r\n    if (error instanceof TypeError && error.message.includes('fetch')) {\r\n      throw new Error('Unable to connect to server. Please check your network connection and ensure you can reach the backend server.');\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n","/**\r\n * Preview CTA Button\r\n * \r\n * Fixed position \"Get This Site\" button for preview mode.\r\n * Can be positioned in top-left or top-right.\r\n */\r\n\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Sparkles } from 'lucide-react';\r\n\r\nimport { useData } from '@/shared/hooks/useData';\r\nimport { useSectionStore } from '@/shared/state/sectionStore';\r\n\r\ninterface PreviewCTAButtonProps {\r\n  position?: 'left' | 'right';\r\n}\r\n\r\nexport const PreviewCTAButton: React.FC<PreviewCTAButtonProps> = ({ position = 'left' }) => {\r\n  const navigate = useNavigate();\r\n  const data = useData();\r\n  const currentSection = useSectionStore((s) => s.current);\r\n\r\n  const handleGetThisSite = () => {\r\n    // Pass preview data to onboarding form\r\n    void navigate('/tenant-onboarding', {\r\n      state: {\r\n        fromPreview: true,\r\n        businessName: data.businessName,\r\n        phone: data.phone,\r\n        city: data.serviceAreas[0]?.city || '',\r\n        state: data.serviceAreas[0]?.state || '',\r\n        industry: data.industry,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Only show button in specific sections: hero (top), gallery, and footer\r\n  const shouldShowButton = currentSection === 'top' || \r\n                          currentSection === 'gallery' || \r\n                          currentSection === 'gallery-desktop' || \r\n                          currentSection === 'footer';\r\n\r\n  // Debug logging removed for production\r\n\r\n  // Don't render if not in an allowed section\r\n  if (!shouldShowButton) {\r\n    return null;\r\n  }\r\n\r\n  // Hide right button on mobile (show only on desktop)\r\n  if (position === 'right') {\r\n    return (\r\n      <div className=\"hidden md:block fixed top-4 right-4 z-[10000]\" style={{ pointerEvents: 'auto' }}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleGetThisSite}\r\n          className=\"flex items-center space-x-2 px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white font-semibold rounded-md transition-colors shadow-lg\"\r\n        >\r\n          <Sparkles className=\"h-4 w-4\" />\r\n          <span>Get This Site</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Left button: positioned below header on mobile, top-left on desktop\r\n  return (\r\n    <div className=\"fixed left-4 z-[10000] top-[88px] md:top-4\" style={{ pointerEvents: 'auto' }}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={handleGetThisSite}\r\n        className=\"flex items-center space-x-2 px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white font-semibold rounded-md transition-colors shadow-lg\"\r\n      >\r\n        <Sparkles className=\"h-4 w-4\" />\r\n        <span>Get This Site</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n","/**\r\n * Industry Template Registry\r\n * \r\n * Maps industry types to their template data.\r\n * Updated to use new modular file structure (assets.json, content-defaults.json, seo-defaults.json)\r\n */\r\n\r\n// Industry types enum\r\nexport const INDUSTRIES = [\r\n  'mobile-detailing',\r\n  'maid-service',\r\n  'lawncare',\r\n  'pet-grooming',\r\n] as const;\r\n\r\nexport type Industry = (typeof INDUSTRIES)[number];\r\n\r\n// Base industry template structure\r\nexport interface IndustryTemplate {\r\n  tenant: {\r\n    brand: string | null;\r\n    businessName: string | null;\r\n    customBranding: boolean;\r\n  };\r\n  slug: string;\r\n  urlPath: string;\r\n  logo: {\r\n    url: string;\r\n    alt: string;\r\n    darkUrl?: string;\r\n    lightUrl?: string;\r\n  };\r\n  seo: {\r\n    Title: string;\r\n    subTitle: string;\r\n    canonicalPath: string;\r\n    OgImage?: string;\r\n    TwitterImage?: string;\r\n    robots?: string;\r\n  };\r\n  hero: {\r\n    h1: string;\r\n    subTitle: string;\r\n    Images: Array<{\r\n      url: string;\r\n      alt: string;\r\n      width?: number;\r\n      height?: number;\r\n      priority?: boolean;\r\n    }>;\r\n  };\r\n  servicesGrid?: unknown[];\r\n  [key: string]: unknown;\r\n}\r\n\r\n/**\r\n * Load industry template from modular loaders\r\n * All industries now use the new modular architecture\r\n * \r\n * @param industry - Industry type\r\n * @returns Promise resolving to the industry template\r\n */\r\nexport async function getIndustryTemplate(\r\n  industry: Industry\r\n): Promise<IndustryTemplate> {\r\n  try {\r\n    // All industries now use modular loaders via index.ts\r\n    let config;\r\n    \r\n    switch (industry) {\r\n      case 'mobile-detailing': {\r\n        const { loadMobileDetailingConfig } = await import('@/data/mobile-detailing');\r\n        config = loadMobileDetailingConfig();\r\n        break;\r\n      }\r\n      case 'pet-grooming': {\r\n        const { loadPetGroomingConfig } = await import('@/data/pet-grooming');\r\n        config = await loadPetGroomingConfig();\r\n        break;\r\n      }\r\n      case 'maid-service': {\r\n        const { loadMaidServiceConfig } = await import('@/data/maid-service');\r\n        config = await loadMaidServiceConfig();\r\n        break;\r\n      }\r\n      case 'lawncare': {\r\n        const { loadLawncareConfig } = await import('@/data/lawncare');\r\n        config = await loadLawncareConfig();\r\n        break;\r\n      }\r\n      default: {\r\n        const unknownIndustry: string = industry;\r\n        throw new Error(`Unknown industry: ${unknownIndustry}`);\r\n      }\r\n    }\r\n\r\n    // Convert MainSiteConfig to IndustryTemplate format\r\n    return {\r\n      tenant: {\r\n        brand: config.brand || null,\r\n        businessName: null,\r\n        customBranding: false,\r\n      },\r\n      slug: config.slug || 'site',\r\n      urlPath: config.urlPath || '/',\r\n      logo: config.logo,\r\n      seo: {\r\n        Title: config.seo.title,\r\n        subTitle: config.seo.description,\r\n        canonicalPath: config.seo.canonicalPath,\r\n        OgImage: config.seo.ogImage,\r\n        TwitterImage: config.seo.twitterImage,\r\n        robots: config.seo.robots,\r\n      },\r\n      hero: {\r\n        h1: config.hero.h1,\r\n        subTitle: config.hero.sub || '',\r\n        Images: config.hero.images || [],\r\n      },\r\n      servicesGrid: config.servicesGrid,\r\n    };\r\n  } catch (error) {\r\n    console.error('Failed to load industry template:', error);\r\n    const errorMsg = error instanceof Error ? error.message : 'Unknown error';\r\n    const industryStr: string = industry;\r\n    throw new Error(`Failed to load template for industry ${industryStr}: ${errorMsg}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Validate if a string is a valid industry\r\n * @param value - Value to check\r\n * @returns True if valid industry\r\n */\r\nexport function isValidIndustry(value: unknown): value is Industry {\r\n  return typeof value === 'string' && INDUSTRIES.includes(value as Industry);\r\n}\r\n","/**\r\n * Preview Data Provider\r\n * \r\n * Wraps preview pages with the ACTUAL DataContext used by all components.\r\n * This allows existing components (Header, Hero, etc.) to work\r\n * without modification in preview mode.\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { DataContext } from '@/shared/contexts/DataContext';\r\nimport type { MainSiteConfig } from '@/shared/types/location';\r\nimport type { IndustryTemplate } from '@/shared/utils/industryRegistry';\r\nimport { getIndustryTemplate } from '@/shared/utils/industryRegistry';\r\n\r\nimport type { PreviewPayload } from '../types/preview.types';\r\n\r\ninterface PreviewDataProviderProps {\r\n  children: React.ReactNode;\r\n  payload: PreviewPayload;\r\n}\r\n\r\n/**\r\n * PreviewDataProvider\r\n * \r\n * Provides mock data to the actual DataContext that all components use.\r\n * This makes existing components work without modification in preview mode.\r\n */\r\nexport const PreviewDataProvider: React.FC<PreviewDataProviderProps> = ({\r\n  children,\r\n  payload,\r\n}) => {\r\n  const [siteConfig, setSiteConfig] = useState<IndustryTemplate | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadTemplate() {\r\n      try {\r\n        setIsLoading(true);\r\n        const template = await getIndustryTemplate(payload.industry);\r\n        setSiteConfig(template);\r\n      } catch (error) {\r\n        console.error('Failed to load industry template:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    void loadTemplate();\r\n  }, [payload.industry]);\r\n\r\n  // Generate email from business name\r\n  const generateEmail = (businessName: string) => {\r\n    // Convert \"JP's Mobile Detail\" → \"jpsmobiledetail\"\r\n    const domain = businessName\r\n      .toLowerCase()\r\n      .replace(/[^a-z0-9\\s]/g, '') // Remove special chars\r\n      .replace(/\\s+/g, '')          // Remove spaces\r\n      .trim();\r\n    return `info@${domain}.com`;\r\n  };\r\n\r\n  // Create mock context value matching the real DataContext interface\r\n  const mockContextValue = {\r\n    businessName: payload.businessName,\r\n    phone: payload.phone,\r\n    email: generateEmail(payload.businessName),\r\n    owner: payload.businessName,\r\n    location: `${payload.city}, ${payload.state}`,\r\n    industry: payload.industry,\r\n    serviceAreas: [\r\n      {\r\n        city: payload.city,\r\n        state: payload.state,\r\n        primary: true,\r\n      },\r\n    ],\r\n    socialMedia: {\r\n      facebook: '#',\r\n      instagram: '#',\r\n      youtube: '#',\r\n      tiktok: '#',\r\n      googleBusiness: '#',\r\n    },\r\n    siteConfig: siteConfig as MainSiteConfig | null,\r\n    isLoading,\r\n    isTenant: true,\r\n    isPreview: true, // Mark as preview mode\r\n  };\r\n\r\n  // Provide to the ACTUAL DataContext that components are using\r\n  return (\r\n    <DataContext.Provider value={mockContextValue}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\n","/**\r\n * Preview Error State\r\n * \r\n * Displayed when preview link is invalid, expired, or fails to load.\r\n */\r\n\r\nimport React from 'react';\r\nimport { AlertCircle, Mail, Phone } from 'lucide-react';\r\n\r\ninterface PreviewErrorProps {\r\n  error: string;\r\n}\r\n\r\nexport const PreviewError: React.FC<PreviewErrorProps> = ({ error }) => {\r\n  const isExpired = error.toLowerCase().includes('expired');\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black flex items-center justify-center px-4\">\r\n      <div className=\"max-w-md w-full bg-gray-800 rounded-lg shadow-xl p-8 text-center space-y-6\">\r\n        <AlertCircle className=\"h-16 w-16 text-red-500 mx-auto\" />\r\n        <h2 className=\"text-2xl font-bold text-white\">Preview Unavailable</h2>\r\n        <p className=\"text-gray-300\">{error}</p>\r\n        \r\n        {isExpired && (\r\n          <div className=\"bg-orange-900/30 border border-orange-700 rounded-md p-4\">\r\n            <p className=\"text-orange-200 text-sm\">\r\n              Preview links expire after 7 days for security.\r\n            </p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"pt-4 space-y-4\">\r\n          <p className=\"text-sm text-gray-400\">\r\n            Need a new preview link or have questions?\r\n          </p>\r\n          \r\n          <div className=\"flex flex-col space-y-3\">\r\n            <a\r\n              href=\"tel:+15551234567\"\r\n              className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md transition-colors\"\r\n            >\r\n              <Phone className=\"h-4 w-4\" />\r\n              <span>Call Us</span>\r\n            </a>\r\n            \r\n            <a\r\n              href=\"mailto:hello@thatsmartsite.com\"\r\n              className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-md transition-colors\"\r\n            >\r\n              <Mail className=\"h-4 w-4\" />\r\n              <span>Email Sales</span>\r\n            </a>\r\n          </div>\r\n          \r\n          <a \r\n            href=\"/\"\r\n            className=\"text-sm text-orange-400 hover:text-orange-300 block pt-2\"\r\n          >\r\n            Visit our main site →\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","/**\r\n * Preview Loading State\r\n * \r\n * Displayed while preview data is being loaded/verified.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\nexport const PreviewLoading: React.FC = () => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black flex items-center justify-center\">\r\n      <div className=\"text-center space-y-4\">\r\n        <Loader2 className=\"h-12 w-12 text-orange-500 animate-spin mx-auto\" />\r\n        <h2 className=\"text-2xl font-semibold text-white\">Loading Preview...</h2>\r\n        <p className=\"text-gray-400\">Setting up your demo site</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","/**\r\n * Central SEO head manager.\r\n * Handles <title>, <meta>, <canonical>, and noindex logic.\r\n * \r\n * This component anchors Cursor's understanding of SEO head management.\r\n */\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\ninterface SeoHeadProps {\r\n  title?: string;\r\n  description?: string;\r\n  canonical?: string;\r\n  noindex?: boolean;\r\n}\r\n\r\nexport const SeoHead: React.FC<SeoHeadProps> = ({\r\n  title,\r\n  description,\r\n  canonical,\r\n  noindex,\r\n}) => {\r\n  return (\r\n    <Helmet>\r\n      {title && <title>{title}</title>}\r\n      {description && <meta name=\"description\" content={description} />}\r\n      {canonical && <link rel=\"canonical\" href={canonical} />}\r\n      {noindex && <meta name=\"robots\" content=\"noindex, nofollow\" />}\r\n      {/* Social sharing defaults */}\r\n      {title && <meta property=\"og:title\" content={title} />}\r\n      {description && <meta property=\"og:description\" content={description} />}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n    </Helmet>\r\n  );\r\n};\r\n","/**\r\n * Preview Store\r\n * \r\n * Zustand store for managing preview state.\r\n * Holds the current preview payload (businessName, phone, industry).\r\n */\r\n\r\nimport { create } from 'zustand';\r\n\r\nimport type { PreviewPayload } from '../types/preview.types';\r\n\r\ninterface PreviewState {\r\n  payload: PreviewPayload | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  setPayload: (payload: PreviewPayload) => void;\r\n  setLoading: (loading: boolean) => void;\r\n  setError: (error: string | null) => void;\r\n  clearPreview: () => void;\r\n}\r\n\r\nexport const usePreviewStore = create<PreviewState>((set) => ({\r\n  payload: null,\r\n  isLoading: false,\r\n  error: null,\r\n  \r\n  setPayload: (payload) => {\r\n    set({\r\n      payload,\r\n      error: null,\r\n    });\r\n  },\r\n  \r\n  setLoading: (loading) => {\r\n    set({\r\n      isLoading: loading,\r\n    });\r\n  },\r\n  \r\n  setError: (error) => {\r\n    set({\r\n      error,\r\n      isLoading: false,\r\n    });\r\n  },\r\n  \r\n  clearPreview: () => {\r\n    set({\r\n      payload: null,\r\n      error: null,\r\n      isLoading: false,\r\n    });\r\n  },\r\n}));\r\n\r\n","/**\r\n * usePreviewParams Hook\r\n * \r\n * Reads preview parameters from URL (either token or individual params),\r\n * validates them, and hydrates the preview store.\r\n * \r\n * Supports two modes:\r\n * 1. Token mode: ?t=<jwt>\r\n * 2. URL params mode: ?name=&phone=&industry= (for quick testing)\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport { safeErrorMessage, safeValidationMessage } from '@/shared/utils/errorHandling';\r\n\r\nimport { verifyPreview } from '../api/preview.api';\r\nimport { usePreviewStore } from '../state/previewStore';\r\nimport type { PreviewPayload } from '../types/preview.types';\r\nimport { PreviewPayloadSchema } from '../types/preview.types';\r\n\r\ninterface UsePreviewParamsResult {\r\n  payload: PreviewPayload | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport function usePreviewParams(): UsePreviewParamsResult {\r\n  const [searchParams] = useSearchParams();\r\n  const { payload, isLoading, error, setPayload, setLoading, setError } = usePreviewStore();\r\n  const [hasInitialized, setHasInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Only run once on mount\r\n    if (hasInitialized) return;\r\n    setHasInitialized(true);\r\n\r\n    async function loadPreview() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        // Check if token mode is used\r\n        const token = searchParams.get('t');\r\n\r\n        if (token) {\r\n          // Token mode: verify with backend\r\n          const verifiedPayload = await verifyPreview(token);\r\n          setPayload(verifiedPayload);\r\n          return;\r\n        }\r\n\r\n        // URL params mode: validate and use directly\r\n        const name = searchParams.get('name');\r\n        const phone = searchParams.get('phone');\r\n        const city = searchParams.get('city');\r\n        const state = searchParams.get('state');\r\n        const industry = searchParams.get('industry');\r\n\r\n        if (!name || !phone || !city || !state || !industry) {\r\n          throw new Error('Missing required parameters. Please use a valid preview link.');\r\n        }\r\n\r\n        const validation = PreviewPayloadSchema.safeParse({\r\n          businessName: name,\r\n          phone,\r\n          city,\r\n          state: state.toUpperCase(),\r\n          industry,\r\n        });\r\n\r\n        if (!validation.success) {\r\n          throw new Error(safeValidationMessage(validation.error));\r\n        }\r\n\r\n        setPayload(validation.data);\r\n      } catch (err: unknown) {\r\n        setError(safeErrorMessage(err));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    void loadPreview();\r\n  }, [searchParams, hasInitialized, setPayload, setLoading, setError]);\r\n\r\n  return {\r\n    payload,\r\n    isLoading,\r\n    error,\r\n  };\r\n}\r\n\r\n","/**\n * Preview Page\n * \n * Displays a preview of a tenant site with injected business info.\n * Used for sales demos - no tenant record is created yet.\n */\n\nimport React, { useState } from 'react';\n\nimport { FAQ } from '@/features/faq';\nimport { Gallery } from '@/features/gallery';\nimport { Header } from '@/features/header';\nimport { Hero } from '@/features/hero';\nimport { LazyRequestQuoteModal } from '@/features/quotes';\nimport { Reviews } from '@/features/reviews';\nimport { ServicesGrid } from '@/features/services';\nimport { useBrowserTab, useIsDesktop, useScrollSpy } from '@/shared/hooks';\nimport { SeoHead } from '@/shared/seo';\nimport type { SectionId } from '@/shared/state/sectionStore';\n\nimport { usePreviewParams } from '../hooks/usePreviewParams';\nimport { PreviewCTAButton } from './PreviewCTAButton';\nimport { PreviewDataProvider } from './PreviewDataProvider';\nimport { PreviewError } from './PreviewError';\nimport { PreviewLoading } from './PreviewLoading';\n\nconst PreviewPage: React.FC = () => {\n  const { payload, isLoading, error } = usePreviewParams();\n  const [isQuoteModalOpen, setIsQuoteModalOpen] = useState(false);\n  const isDesktop = useIsDesktop();\n\n  const handleOpenQuoteModal = () => {\n    setIsQuoteModalOpen(true);\n  };\n  \n  const handleCloseQuoteModal = () => {\n    setIsQuoteModalOpen(false);\n  };\n\n  // Update browser tab title with business name\n  useBrowserTab({\n    title: payload?.businessName ? `${payload.businessName} - Preview` : 'Platform Preview',\n    useBusinessName: false, // Don't use default business name, we have custom format\n  });\n\n  // Section tracking for scroll spy\n  const sectionIds: SectionId[] = isDesktop \n    ? ['top', 'services', 'services-desktop', 'reviews', 'faq', 'gallery', 'gallery-desktop', 'footer']\n    : ['top', 'services', 'reviews', 'faq', 'gallery', 'footer'];\n  \n  useScrollSpy({ \n    ids: sectionIds, \n    headerPx: isDesktop ? 88 : 72, \n    updateHash: false \n  });\n\n  // Loading state\n  if (isLoading) {\n    return <PreviewLoading />;\n  }\n\n  // Error state\n  if (error || !payload) {\n    return <PreviewError error={error || 'Failed to load preview'} />;\n  }\n\n  // Render preview with injected data\n  return (\n    <PreviewDataProvider payload={payload}>\n      {/* SEO Head with noindex for preview pages */}\n      <SeoHead \n        title={payload.businessName ? `${payload.businessName} - Preview` : 'Platform Preview'}\n        description={`Preview of ${payload.businessName || 'business'} website`}\n        noindex={true}\n      />\n      \n      {/* Fixed \"Get This Site\" buttons in both corners */}\n      <PreviewCTAButton position=\"left\" />\n      <PreviewCTAButton position=\"right\" />\n      \n      <div className=\"h-screen snap-y snap-mandatory overflow-y-scroll snap-container\">\n        {/* Regular site components - they'll get preview data from context */}\n        <Header />\n        <Hero onRequestQuote={handleOpenQuoteModal} />\n        <ServicesGrid />\n        <Reviews />\n        <FAQ />\n        <Gallery onRequestQuote={handleOpenQuoteModal} />\n      </div>\n      \n      {/* Quote Modal */}\n      {isQuoteModalOpen && (\n        <LazyRequestQuoteModal \n          isOpen={isQuoteModalOpen} \n          onClose={handleCloseQuoteModal} \n        />\n      )}\n    </PreviewDataProvider>\n  );\n};\n\nexport default PreviewPage;\n\n","/**\r\n * Preview Generator Page\r\n * \r\n * Internal sales tool to quickly generate preview links.\r\n * Form inputs for business info → generates token → navigates to preview.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Eye, Loader2, Sparkles, Zap } from 'lucide-react';\r\n\r\nimport { useBrowserTab } from '@/shared/hooks';\r\nimport { formatPhoneNumber } from '@/shared/utils/phoneFormatter';\r\n\r\nimport { createPreview } from '../api/preview.api';\r\nimport type { PreviewPayload } from '../types/preview.types';\r\n\r\nconst INDUSTRIES = [\r\n  { value: 'mobile-detailing', label: 'Mobile Detailing' },\r\n  { value: 'maid-service', label: 'Maid Service' },\r\n  { value: 'lawncare', label: 'Lawn Care' },\r\n  { value: 'pet-grooming', label: 'Pet Grooming' },\r\n] as const;\r\n\r\n// Test data for quick autofill by industry\r\nconst TEST_DATA = {\r\n  'mobile-detailing': {\r\n    businessName: \"JP's Mobile Detail\",\r\n    phone: '(702) 420-3140',\r\n    city: 'Bullhead City',\r\n    state: 'AZ'\r\n  },\r\n  'maid-service': {\r\n    businessName: 'Sparkle Clean Maids',\r\n    phone: '(602) 555-5678',\r\n    city: 'Phoenix',\r\n    state: 'AZ'\r\n  },\r\n  'lawncare': {\r\n    businessName: 'Green Horizons Lawn Care',\r\n    phone: '(928) 555-9012',\r\n    city: 'Flagstaff',\r\n    state: 'AZ'\r\n  },\r\n  'pet-grooming': {\r\n    businessName: 'Pampered Paws Grooming',\r\n    phone: '(520) 555-3456',\r\n    city: 'Tucson',\r\n    state: 'AZ'\r\n  }\r\n} as const;\r\n\r\nconst PreviewGeneratorPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Set browser tab title and favicon for preview generator page\r\n  useBrowserTab({\r\n    title: 'Preview Generator - That Smart Site',\r\n    useBusinessName: false,\r\n  });\r\n  \r\n  const [formData, setFormData] = useState({\r\n    businessName: '',\r\n    phone: '',\r\n    city: '',\r\n    state: '',\r\n    industry: 'mobile-detailing' as PreviewPayload['industry'],\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setIsLoading(true);\r\n\r\n    void (async () => {\r\n      try {\r\n        const response = await createPreview(formData);\r\n        \r\n        // Navigate to the preview page with the token\r\n        void navigate(response.url);\r\n      } catch (err) {\r\n        const errorMessage = err instanceof Error ? err.message : 'Failed to create preview';\r\n        setError(errorMessage);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    })();\r\n  };\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const formatted = formatPhoneNumber(e.target.value);\r\n    setFormData((prev) => ({ ...prev, phone: formatted }));\r\n  };\r\n\r\n  const handleStateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.toUpperCase().slice(0, 2); // Max 2 chars, uppercase\r\n    setFormData((prev) => ({ ...prev, state: value }));\r\n  };\r\n\r\n  const handleAutofill = () => {\r\n    const testData = TEST_DATA[formData.industry];\r\n    setFormData({\r\n      industry: formData.industry,\r\n      businessName: testData.businessName,\r\n      phone: testData.phone,\r\n      city: testData.city,\r\n      state: testData.state\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black flex items-center justify-center px-4 py-12\">\r\n      <div className=\"max-w-md w-full\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-orange-500 rounded-full mb-4\">\r\n            <Sparkles className=\"h-8 w-8 text-white\" />\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-white mb-2\">Tenant Preview Generator</h1>\r\n          <p className=\"text-gray-400\">\r\n            Create instant preview sites for sales demos\r\n          </p>\r\n        </div>\r\n\r\n        {/* Form */}\r\n        <form onSubmit={handleSubmit} className=\"bg-gray-800 rounded-lg shadow-xl p-8 space-y-6\">\r\n          {/* Business Name */}\r\n          <div>\r\n            <label htmlFor=\"businessName\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n              Business Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"businessName\"\r\n              name=\"businessName\"\r\n              value={formData.businessName}\r\n              onChange={handleChange}\r\n              required\r\n              minLength={2}\r\n              maxLength={100}\r\n              placeholder=\"JP's Mobile Detail\"\r\n              className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n\r\n          {/* Phone */}\r\n          <div>\r\n            <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n              Phone Number\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handlePhoneChange}\r\n              required\r\n              minLength={14}\r\n              maxLength={14}\r\n              placeholder=\"(928) 555-1234\"\r\n              className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n\r\n          {/* City & State */}\r\n          <div className=\"grid grid-cols-3 gap-4\">\r\n            <div className=\"col-span-2\">\r\n              <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n                City\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"city\"\r\n                name=\"city\"\r\n                value={formData.city}\r\n                onChange={handleChange}\r\n                required\r\n                minLength={2}\r\n                maxLength={50}\r\n                placeholder=\"Phoenix\"\r\n                className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"state\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n                State\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"state\"\r\n                name=\"state\"\r\n                value={formData.state}\r\n                onChange={handleStateChange}\r\n                required\r\n                minLength={2}\r\n                maxLength={2}\r\n                placeholder=\"AZ\"\r\n                className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent uppercase\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Industry */}\r\n          <div>\r\n            <label htmlFor=\"industry\" className=\"block text-sm font-medium text-gray-200 mb-2\">\r\n              Industry\r\n            </label>\r\n            <select\r\n              id=\"industry\"\r\n              name=\"industry\"\r\n              value={formData.industry}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n            >\r\n              {INDUSTRIES.map((industry) => (\r\n                <option key={industry.value} value={industry.value}>\r\n                  {industry.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Autofill Button */}\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleAutofill}\r\n            className=\"w-full flex items-center justify-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition-colors border border-blue-500\"\r\n          >\r\n            <Zap className=\"h-4 w-4\" />\r\n            <span>Quick Fill Test Data</span>\r\n          </button>\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"bg-red-900/50 border border-red-700 rounded-md p-4\">\r\n              <p className=\"text-sm text-red-200\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full flex items-center justify-center space-x-2 px-6 py-3 bg-orange-500 hover:bg-orange-600 disabled:bg-gray-600 disabled:cursor-not-allowed text-white font-semibold rounded-md transition-colors shadow-lg\"\r\n          >\r\n            {isLoading ? (\r\n              <>\r\n                <Loader2 className=\"h-5 w-5 animate-spin\" />\r\n                <span>Generating Preview...</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Eye className=\"h-5 w-5\" />\r\n                <span>Generate Preview</span>\r\n              </>\r\n            )}\r\n          </button>\r\n\r\n          {/* Help Text */}\r\n          <p className=\"text-xs text-gray-400 text-center\">\r\n            Preview links expire after 7 days\r\n          </p>\r\n        </form>\r\n\r\n          {/* Back Link */}\r\n        <div className=\"mt-6 text-center\">\r\n          <button\r\n            onClick={() => { void navigate('/'); }}\r\n            className=\"text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            ← Back to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewGeneratorPage;\r\n\r\n","import React from 'react';\r\nimport { Calendar,Car } from 'lucide-react';\r\n\r\nimport type { DetailerData } from '../types';\r\n\r\ninterface DashboardHeaderProps {\r\n  detailerData: DetailerData;\r\n  onBackToForm: () => void;\r\n}\r\n\r\nexport const DashboardHeader: React.FC<DashboardHeaderProps> = ({ \r\n  detailerData\r\n}) => {\r\n  return (\r\n    <div className=\"bg-stone-800 rounded-2xl shadow-lg border border-stone-700 mb-8 overflow-hidden\">\r\n      <div className=\"px-8 py-8\">\r\n        <div className=\"flex flex-col lg:flex-row items-start lg:items-center justify-between\">\r\n          {/* Left side - Business Info */}\r\n          <div className=\"flex items-center space-x-6 mb-6 lg:mb-0\">\r\n            {/* Business Avatar/Logo */}\r\n            <div className=\"relative\">\r\n              <div className=\"h-20 w-20 bg-stone-700 rounded-2xl flex items-center justify-center shadow-sm border border-stone-600\">\r\n                <Car className=\"h-10 w-10 text-orange-500\" />\r\n              </div>\r\n              <div className=\"absolute -bottom-2 -right-2 h-6 w-6 bg-green-500 rounded-full border-2 border-stone-800 shadow-sm\"></div>\r\n            </div>\r\n            {/* Business Details */}\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold mb-2 text-white\">\r\n                {detailerData.business_name || \"Your Business Name\"}\r\n              </h1>\r\n              <p className=\"text-gray-300 text-lg mb-1\">\r\n                {detailerData.first_name && detailerData.last_name \r\n                  ? `${detailerData.first_name} ${detailerData.last_name}` \r\n                  : \"Owner Name\"}\r\n              </p>\r\n              <div className=\"flex items-center text-gray-400 mb-1\">\r\n                <Car className=\"h-4 w-4 mr-2\" />\r\n                <span>{detailerData.location || \"Business Location\"}</span>\r\n              </div>\r\n              <div className=\"flex items-center text-gray-400\">\r\n                <Calendar className=\"h-4 w-4 mr-2\" />\r\n                <span>In business since {detailerData.memberSince || \"2019\"}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Right side - Quick Stats */}\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-6 w-full lg:w-auto\">\r\n            <div className=\"bg-stone-700 rounded-xl p-4 text-center border border-stone-600\">\r\n              <div className=\"text-2xl font-bold text-white\">$2,450</div>\r\n              <div className=\"text-gray-300 text-sm\">This Week</div>\r\n            </div>\r\n            <div className=\"bg-stone-700 rounded-xl p-4 text-center border border-stone-600\">\r\n              <div className=\"text-2xl font-bold text-white\">23</div>\r\n              <div className=\"text-gray-300 text-sm\">Appointments</div>\r\n            </div>\r\n            <div className=\"bg-stone-700 rounded-xl p-4 text-center border border-stone-600\">\r\n              <div className=\"text-2xl font-bold text-white\">142</div>\r\n              <div className=\"text-gray-300 text-sm\">Customers</div>\r\n            </div>\r\n            <div className=\"bg-stone-700 rounded-xl p-4 text-center border border-stone-600\">\r\n              <div className=\"text-2xl font-bold text-white\">4.9★</div>\r\n              <div className=\"text-gray-300 text-sm\">Rating</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\ninterface DashboardLayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const DashboardLayout: React.FC<DashboardLayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className=\"min-h-screen bg-stone-900 transition-colors duration-500\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import { Calendar, Car, Globe,Home, MapPin, User, Users } from 'lucide-react';\r\n\r\nimport type { TabConfig } from '../types';\r\n\r\nexport const DASHBOARD_TABS: TabConfig[] = [\r\n  { id: 'overview', name: 'Overview', icon: Home },\r\n  { id: 'website', name: 'Website', icon: Globe },\r\n  { id: 'locations', name: 'Locations', icon: MapPin },\r\n  { id: 'profile', name: 'Profile', icon: User },\r\n  { id: 'schedule', name: 'Schedule', icon: Calendar },\r\n  { id: 'customers', name: 'Customers', icon: Users },\r\n  { id: 'services', name: 'Services', icon: Car },\r\n];\r\n\r\nexport const BUSINESS_CATEGORIES = [\r\n  'Exterior',\r\n  'Interior', \r\n  'Protection',\r\n  'Correction',\r\n  'Maintenance'\r\n] as const;\r\n\r\nexport const APPOINTMENT_STATUSES = [\r\n  'confirmed',\r\n  'pending', \r\n  'cancelled'\r\n] as const;","/**\r\n * Dashboard Tab Configuration\r\n * Controls which tabs are visible for tenants\r\n * Can be customized per tenant or globally\r\n */\r\n\r\nexport interface TabConfig {\r\n  schedule: boolean;\r\n  customers: boolean;\r\n  services: boolean;\r\n  locations: boolean;\r\n  profile: boolean;\r\n  website: boolean;\r\n}\r\n\r\n// Default configuration - can be overridden per tenant\r\nexport const DEFAULT_TAB_CONFIG: TabConfig = {\r\n  schedule: false,\r\n  customers: false,\r\n  services: false,\r\n  locations: true,\r\n  profile: true,\r\n  website: true,\r\n};\r\n\r\n// Tenant-specific configurations (optional)\r\n// This allows for per-tenant customization\r\nexport const TENANT_TAB_CONFIGS: Record<string, Partial<TabConfig>> = {\r\n  // Example configurations:\r\n  // 'jps': { schedule: true, customers: true },\r\n  // 'premium-tenant': { schedule: true, customers: true, services: true },\r\n  // 'basic-tenant': { schedule: false, customers: false, services: false },\r\n  \r\n  // Current configuration for 'jps' tenant (as requested):\r\n  'jps': {\r\n    schedule: false,\r\n    customers: false,\r\n    services: false,\r\n    locations: true,\r\n    profile: true,\r\n    website: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Get tab configuration for a specific tenant\r\n * Falls back to default config if no tenant-specific config exists\r\n */\r\nexport const getTabConfig = (tenantSlug?: string): TabConfig => {\r\n  if (!tenantSlug) {\r\n    return DEFAULT_TAB_CONFIG;\r\n  }\r\n  \r\n  const tenantConfig = TENANT_TAB_CONFIGS[tenantSlug];\r\n  if (!tenantConfig) {\r\n    return DEFAULT_TAB_CONFIG;\r\n  }\r\n  \r\n  // Merge tenant config with default config\r\n  return {\r\n    ...DEFAULT_TAB_CONFIG,\r\n    ...tenantConfig,\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport type { DashboardTab } from '@/features/tenantDashboard/types';\r\nimport { DASHBOARD_TABS } from '@/features/tenantDashboard/utils/constants';\r\n\r\nimport { getTabConfig } from '../config/tabConfig';\r\n\r\ninterface DashboardTabsProps {\r\n  activeTab: DashboardTab;\r\n  onTabChange: (tab: DashboardTab) => void;\r\n  tenantSlug?: string;\r\n}\r\n\r\nexport const DashboardTabs: React.FC<DashboardTabsProps> = ({ \r\n  activeTab, \r\n  onTabChange,\r\n  tenantSlug\r\n}) => {\r\n  // Get tab configuration for this tenant\r\n  const tabConfig = getTabConfig(tenantSlug);\r\n  \r\n  // Filter tabs based on configuration\r\n  const visibleTabs = DASHBOARD_TABS.filter(tab => {\r\n    switch (tab.id) {\r\n      case 'schedule':\r\n        return tabConfig.schedule;\r\n      case 'customers':\r\n        return tabConfig.customers;\r\n      case 'services':\r\n        return tabConfig.services;\r\n      case 'locations':\r\n        return tabConfig.locations;\r\n      case 'profile':\r\n        return tabConfig.profile;\r\n      case 'website':\r\n        return tabConfig.website;\r\n      case 'overview':\r\n        return true; // Overview is always visible\r\n      default:\r\n        return true;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <nav className=\"flex space-x-1 bg-stone-800 rounded-xl p-1 shadow-lg border border-stone-700\">\r\n        {visibleTabs.map((tab) => {\r\n          const Icon = tab.icon;\r\n          return (\r\n            <button\r\n              key={tab.id}\r\n              onClick={() => { onTabChange(tab.id); }}\r\n              className={`flex items-center px-4 py-3 rounded-lg text-sm font-medium transition-all duration-200 ${\r\n                activeTab === tab.id\r\n                  ? 'bg-orange-500 text-white shadow-md hover:bg-orange-600'\r\n                  : 'text-gray-300 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <Icon className=\"h-4 w-4 mr-2\" />\r\n              <span className=\"hidden sm:inline\">{tab.name}</span>\r\n            </button>\r\n          );\r\n        })}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nconst CustomersTab: React.FC = () => <div>Customers Tab (placeholder)</div>;\r\nexport default CustomersTab;\r\n","// API functions for locations management\r\n\r\ninterface ServiceAreaData {\r\n  city: string;\r\n  state: string;\r\n  zip?: string;\r\n  primary?: boolean;\r\n  minimum?: number;\r\n  multiplier?: number;\r\n}\r\n\r\ninterface ApiResponse {\r\n  success: boolean;\r\n  message?: string;\r\n  error?: string;\r\n  data?: unknown;\r\n}\r\n\r\nexport const saveLocationData = async (tenantSlug: string, locationData: ServiceAreaData[]) => {\r\n  const response = await fetch(`/api/locations/service-areas/${tenantSlug}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ serviceAreas: locationData }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json() as ApiResponse;\r\n    throw new Error(error.error || 'Failed to save location data');\r\n  }\r\n\r\n  return response.json() as Promise<ApiResponse>;\r\n};\r\n\r\nexport const saveServiceAreas = async (tenantSlug: string, serviceAreas: ServiceAreaData[]) => {\r\n  const response = await fetch(`/api/locations/service-areas/${tenantSlug}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ serviceAreas }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json() as ApiResponse;\r\n    throw new Error(error.error || 'Failed to save service areas');\r\n  }\r\n\r\n  return response.json() as Promise<ApiResponse>;\r\n};\r\n\r\nexport const addServiceArea = async (tenantSlug: string, areaData: ServiceAreaData) => {\r\n  const response = await fetch(`/api/locations/service-areas/${tenantSlug}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(areaData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json() as ApiResponse;\r\n    throw new Error(error.error || 'Failed to add service area');\r\n  }\r\n\r\n  return response.json() as Promise<ApiResponse>;\r\n};\r\n\r\nexport const deleteServiceArea = async (tenantSlug: string, areaId: string) => {\r\n  const response = await fetch(`/api/locations/service-areas/${tenantSlug}/${areaId}`, {\r\n    method: 'DELETE',\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json() as ApiResponse;\r\n    throw new Error(error.error || 'Failed to delete service area');\r\n  }\r\n\r\n  return response.json() as Promise<ApiResponse>;\r\n};\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { config } from '@/../config/env';\r\n\r\nexport interface TenantServiceArea {\r\n  city: string;\r\n  state: string;\r\n  zip?: string;\r\n  primary: boolean;\r\n  minimum?: number;\r\n  multiplier?: number;\r\n}\r\n\r\nexport interface TenantBusinessData {\r\n  id: string;\r\n  slug: string;\r\n  business_name: string;\r\n  application_status: string;\r\n  phone: string;\r\n  sms_phone?: string;\r\n  twilio_phone?: string;\r\n  service_areas: TenantServiceArea[];\r\n  owner?: string;\r\n  business_email?: string;\r\n  personal_email?: string;\r\n  first_name?: string;\r\n  last_name?: string;\r\n  personal_phone?: string;\r\n  business_start_date?: string;\r\n  website?: string;\r\n  gbp_url?: string;\r\n  facebook_url?: string;\r\n  youtube_url?: string;\r\n  tiktok_url?: string;\r\n  instagram_url?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport const useTenantBusinessData = () => {\r\n  const [businessData, setBusinessData] = useState<TenantBusinessData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n  \r\n  const { slug } = useParams<{ slug: string }>();\r\n\r\n  const fetchBusinessData = useCallback(async () => {\r\n    if (!slug) {\r\n      setError('No business slug provided');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`${config.apiUrl}/api/tenants/${slug}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${String(token)}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json() as {\r\n          success: boolean;\r\n          data?: TenantBusinessData;\r\n        };\r\n        \r\n        if (data.success && data.data) {\r\n          setBusinessData(data.data);\r\n        } else {\r\n          setError('Failed to fetch business data');\r\n        }\r\n      } else {\r\n        const errorData = await response.json() as {\r\n          error?: string;\r\n          message?: string;\r\n        };\r\n        setError(errorData.error || errorData.message || 'Failed to fetch business data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching business data:', error);\r\n      setError('Failed to fetch business data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  useEffect(() => {\r\n    void fetchBusinessData();\r\n  }, [fetchBusinessData, refreshTrigger]);\r\n\r\n  // Get service areas with first entry as primary\r\n  const serviceAreas = businessData?.service_areas || [];\r\n  const primaryServiceArea = serviceAreas.length > 0 ? serviceAreas[0] : null;\r\n  const otherServiceAreas = serviceAreas.slice(1);\r\n\r\n  return {\r\n    businessData,\r\n    serviceAreas,\r\n    primaryServiceArea,\r\n    otherServiceAreas,\r\n    loading,\r\n    error,\r\n    refetch: () => {\r\n      setRefreshTrigger(prev => prev + 1);\r\n    }\r\n  };\r\n};\r\n","import { config } from '@/../config/env';\r\n\r\n// Types for the API client\r\ninterface ApiResponse<T = unknown> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\ninterface RefreshResponse {\r\n  success: boolean;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  user: unknown;\r\n}\r\n\r\ninterface ErrorResponse {\r\n  error?: string;\r\n  message?: string;\r\n  retryAfterSeconds?: number;\r\n  remainingAttempts?: number;\r\n  resetTime?: number;\r\n}\r\n\r\n// Extend Error interface for custom error codes\r\ninterface CustomError extends Error {\r\n  code?: string;\r\n  retryAfterSeconds?: number;\r\n  remainingAttempts?: number;\r\n  resetTime?: number;\r\n}\r\n\r\n// One-flight guard for refresh token requests\r\nclass RefreshTokenGuard {\r\n  private isRefreshing = false;\r\n  private failedQueue: Array<{\r\n    resolve: (token: string) => void;\r\n    reject: (error: unknown) => void;\r\n  }> = [];\r\n\r\n  async executeRefresh(): Promise<string> {\r\n    if (this.isRefreshing) {\r\n      // If already refreshing, queue this request\r\n      return new Promise((resolve, reject) => {\r\n        this.failedQueue.push({ resolve, reject });\r\n      });\r\n    }\r\n\r\n    this.isRefreshing = true;\r\n\r\n    try {\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      if (!refreshToken) {\r\n        throw new Error('No refresh token available');\r\n      }\r\n\r\n      const response = await fetch(`${config.apiUrl}/api/auth/refresh`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ refreshToken }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Refresh token failed');\r\n      }\r\n\r\n      const data = await response.json() as RefreshResponse;\r\n      \r\n      // Update tokens in localStorage\r\n      localStorage.setItem('token', data.accessToken);\r\n      localStorage.setItem('refreshToken', data.refreshToken);\r\n\r\n      // Process queued requests\r\n      this.processQueue(null, data.accessToken);\r\n      \r\n      return data.accessToken;\r\n    } catch (error: unknown) {\r\n      // Process queued requests with error\r\n      this.processQueue(error, null);\r\n      throw error;\r\n    } finally {\r\n      this.isRefreshing = false;\r\n    }\r\n  }\r\n\r\n  private processQueue(error: unknown, token: string | null) {\r\n    this.failedQueue.forEach(({ resolve, reject }) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else if (token) {\r\n        resolve(token);\r\n      }\r\n    });\r\n\r\n    this.failedQueue = [];\r\n  }\r\n}\r\n\r\n// API Client with token refresh interceptor\r\nclass ApiClient {\r\n  private refreshGuard = new RefreshTokenGuard();\r\n  private baseURL: string;\r\n\r\n  constructor(baseURL: string) {\r\n    this.baseURL = baseURL;\r\n  }\r\n\r\n  // Main request method with automatic token refresh\r\n  async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<T> {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    \r\n    // Add auth header if token exists\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      options.headers = {\r\n        ...options.headers,\r\n        'Authorization': `Bearer ${token}`,\r\n      };\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, options);\r\n      \r\n      // If unauthorized and we have a refresh token, try to refresh\r\n      if (response.status === 401 && localStorage.getItem('refreshToken')) {\r\n        try {\r\n          const newToken = await this.refreshGuard.executeRefresh();\r\n          \r\n          // Retry the original request with new token\r\n          const retryOptions = {\r\n            ...options,\r\n            headers: {\r\n              ...options.headers,\r\n              'Authorization': `Bearer ${newToken}`,\r\n            },\r\n          };\r\n          \r\n          const retryResponse = await fetch(url, retryOptions);\r\n          \r\n          if (!retryResponse.ok) {\r\n            throw new Error(`Request failed: ${retryResponse.status.toString()}`);\r\n          }\r\n          \r\n          return await retryResponse.json() as T;\r\n        } catch {\r\n          // Refresh failed, clear auth state and redirect\r\n          this.handleAuthFailure();\r\n          throw new Error('Authentication failed');\r\n        }\r\n      }\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({})) as ErrorResponse;\r\n        \r\n        // Handle rate limiting specifically\r\n        if (response.status === 429) {\r\n          const error: CustomError = new Error(errorData.error ?? 'Rate limited');\r\n          error.code = 'RATE_LIMITED';\r\n          error.retryAfterSeconds = errorData.retryAfterSeconds;\r\n          error.remainingAttempts = errorData.remainingAttempts;\r\n          error.resetTime = errorData.resetTime;\r\n          throw error;\r\n        }\r\n        \r\n        // Handle other error codes\r\n        if (response.status === 401) {\r\n          const error: CustomError = new Error(errorData.error ?? 'Unauthorized');\r\n          error.code = 'UNAUTHORIZED';\r\n          throw error;\r\n        }\r\n        \r\n        if (response.status === 403) {\r\n          const error: CustomError = new Error(errorData.error ?? 'Forbidden');\r\n          error.code = 'FORBIDDEN';\r\n          throw error;\r\n        }\r\n        \r\n        throw new Error(errorData.error ?? errorData.message ?? `Request failed: ${response.status.toString()}`);\r\n      }\r\n      \r\n      return await response.json() as T;\r\n    } catch (error: unknown) {\r\n      console.error('API request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Handle authentication failure\r\n  private handleAuthFailure() {\r\n    // Clear all auth data\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refreshToken');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Redirect to login or home page\r\n    if (window.location.pathname !== '/') {\r\n      window.location.href = '/';\r\n    }\r\n  }\r\n\r\n  // GET request\r\n  async get<T>(endpoint: string): Promise<T> {\r\n    return this.request<T>(endpoint, { method: 'GET' });\r\n  }\r\n\r\n  // POST request\r\n  async post<T>(endpoint: string, data?: unknown): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  // PUT request\r\n  async put<T>(endpoint: string, data?: unknown): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  // DELETE request\r\n  async delete<T>(endpoint: string): Promise<T> {\r\n    return this.request<T>(endpoint, { method: 'DELETE' });\r\n  }\r\n\r\n  // PATCH request\r\n  async patch<T>(endpoint: string, data?: unknown): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  // Upload file\r\n  async upload<T>(endpoint: string, formData: FormData): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      body: formData,\r\n      // Don't set Content-Type for FormData, let browser set it with boundary\r\n    });\r\n  }\r\n}\r\n\r\n// Create and export the API client instance\r\nexport const apiClient = new ApiClient(config.apiUrl);\r\n\r\n// Export the client class for testing or custom instances\r\nexport { ApiClient };\r\n\r\n// Export types\r\nexport type { ApiResponse, RefreshResponse };\r\n","/**\r\n * US States and Territories\r\n * Static data for dropdowns, validation, and display\r\n */\r\n\r\nexport const STATES = {\r\n  // 50 US States\r\n  'AL': 'Alabama',\r\n  'AK': 'Alaska',\r\n  'AZ': 'Arizona',\r\n  'AR': 'Arkansas',\r\n  'CA': 'California',\r\n  'CO': 'Colorado',\r\n  'CT': 'Connecticut',\r\n  'DE': 'Delaware',\r\n  'FL': 'Florida',\r\n  'GA': 'Georgia',\r\n  'HI': 'Hawaii',\r\n  'ID': 'Idaho',\r\n  'IL': 'Illinois',\r\n  'IN': 'Indiana',\r\n  'IA': 'Iowa',\r\n  'KS': 'Kansas',\r\n  'KY': 'Kentucky',\r\n  'LA': 'Louisiana',\r\n  'ME': 'Maine',\r\n  'MD': 'Maryland',\r\n  'MA': 'Massachusetts',\r\n  'MI': 'Michigan',\r\n  'MN': 'Minnesota',\r\n  'MS': 'Mississippi',\r\n  'MO': 'Missouri',\r\n  'MT': 'Montana',\r\n  'NE': 'Nebraska',\r\n  'NV': 'Nevada',\r\n  'NH': 'New Hampshire',\r\n  'NJ': 'New Jersey',\r\n  'NM': 'New Mexico',\r\n  'NY': 'New York',\r\n  'NC': 'North Carolina',\r\n  'ND': 'North Dakota',\r\n  'OH': 'Ohio',\r\n  'OK': 'Oklahoma',\r\n  'OR': 'Oregon',\r\n  'PA': 'Pennsylvania',\r\n  'RI': 'Rhode Island',\r\n  'SC': 'South Carolina',\r\n  'SD': 'South Dakota',\r\n  'TN': 'Tennessee',\r\n  'TX': 'Texas',\r\n  'UT': 'Utah',\r\n  'VT': 'Vermont',\r\n  'VA': 'Virginia',\r\n  'WA': 'Washington',\r\n  'WV': 'West Virginia',\r\n  'WI': 'Wisconsin',\r\n  'WY': 'Wyoming',\r\n  \r\n  // US Territories\r\n  'DC': 'District of Columbia',\r\n  'AS': 'American Samoa',\r\n  'GU': 'Guam',\r\n  'MP': 'Northern Mariana Islands',\r\n  'PR': 'Puerto Rico',\r\n  'VI': 'U.S. Virgin Islands',\r\n  \r\n  // Military/Diplomatic\r\n  'AA': 'Armed Forces Americas',\r\n  'AE': 'Armed Forces Europe',\r\n  'AP': 'Armed Forces Pacific'\r\n} as const;\r\n\r\nexport type StateCode = keyof typeof STATES;\r\n\r\nexport type StateName = typeof STATES[StateCode];\r\n\r\n/**\r\n * Get state name from code\r\n */\r\nexport function getStateName(code: string): string | undefined {\r\n  return STATES[code.toUpperCase() as StateCode];\r\n}\r\n\r\n/**\r\n * Get state code from name\r\n */\r\nexport function getStateCode(name: string): string | undefined {\r\n  const normalizedName = name.toLowerCase();\r\n  const entry = Object.entries(STATES).find(([, stateName]) => \r\n    stateName.toLowerCase() === normalizedName\r\n  );\r\n  return entry?.[0];\r\n}\r\n\r\n/**\r\n * Get all state codes as array\r\n */\r\nexport function getStateCodes(): StateCode[] {\r\n  return Object.keys(STATES) as StateCode[];\r\n}\r\n\r\n/**\r\n * Get all state names as array\r\n */\r\nexport function getStateNames(): StateName[] {\r\n  return Object.values(STATES);\r\n}\r\n\r\n/**\r\n * Check if a string is a valid state code\r\n */\r\nexport function isValidStateCode(code: string): code is StateCode {\r\n  return code.toUpperCase() in STATES;\r\n}\r\n\r\n/**\r\n * Check if a string is a valid state name\r\n */\r\nexport function isValidStateName(name: string): boolean {\r\n  return getStateCode(name) !== undefined;\r\n}\r\n\r\n/**\r\n * Format state for display (e.g., \"AZ - Arizona\")\r\n */\r\nexport function formatState(code: StateCode): string {\r\n  return `${code} - ${STATES[code]}`;\r\n}\r\n\r\n/**\r\n * Get states grouped by region (optional, for advanced UI)\r\n */\r\nexport const STATES_BY_REGION = {\r\n  'Northeast': ['CT', 'ME', 'MA', 'NH', 'RI', 'VT', 'NJ', 'NY', 'PA'],\r\n  'Midwest': ['IL', 'IN', 'MI', 'OH', 'WI', 'IA', 'KS', 'MN', 'MO', 'NE', 'ND', 'SD'],\r\n  'South': ['DE', 'FL', 'GA', 'MD', 'NC', 'SC', 'VA', 'WV', 'AL', 'KY', 'MS', 'TN', 'AR', 'LA', 'OK', 'TX'],\r\n  'West': ['AZ', 'CO', 'ID', 'MT', 'NV', 'NM', 'UT', 'WY', 'AK', 'CA', 'HI', 'OR', 'WA']\r\n} as const;\r\n\r\nexport type Region = keyof typeof STATES_BY_REGION;\r\n","// Google Maps helper functions with proper typing\r\n// Shared utility - can be used across features\r\n\r\nexport function getGoogle(): (typeof google) | undefined {\r\n  return (window as unknown as { google?: typeof google }).google;\r\n}\r\n\r\nexport function hasImportLibrary(): boolean {\r\n  const g = getGoogle();\r\n  // v=beta exposes maps.importLibrary\r\n  return !!g?.maps.importLibrary;\r\n}\r\n\r\nexport function hasMaps(): boolean {\r\n  const g = getGoogle();\r\n  return !!g?.maps;\r\n}\r\n\r\n","import React, { useCallback, useState } from 'react';\r\nimport { MapPin, Plus, X } from 'lucide-react';\r\n\r\nimport { isValidStateCode } from '@/shared';\r\nimport { Button } from '@/shared/ui';\r\n\r\nimport type { LocationFormData, LocationValidationErrors } from '../types';\r\n\r\n\r\ninterface AddLocationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onAdd: (location: LocationFormData) => Promise<{ success: boolean; error?: string }>;\r\n}\r\n\r\nexport const AddLocationModal: React.FC<AddLocationModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onAdd\r\n}) => {\r\n  const [formData, setFormData] = useState<LocationFormData>({\r\n    city: '',\r\n    state: '',\r\n    zip: '',\r\n    minimum: 0,\r\n    multiplier: 1.0\r\n  });\r\n  const [errors, setErrors] = useState<LocationValidationErrors>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n\r\n  const validateForm = useCallback((): boolean => {\r\n    const newErrors: LocationValidationErrors = {};\r\n\r\n    if (!formData.city.trim()) {\r\n      newErrors.city = 'City is required';\r\n    }\r\n\r\n    if (!formData.state.trim()) {\r\n      newErrors.state = 'State is required';\r\n    } else if (!isValidStateCode(formData.state)) {\r\n      newErrors.state = 'Please enter a valid 2-letter state code (e.g., CA, NY, TX)';\r\n    }\r\n\r\n    if (formData.zip && !/^\\d{5}(-\\d{4})?$/.test(formData.zip)) {\r\n      newErrors.zip = 'ZIP code must be 5 digits or 5+4 format';\r\n    }\r\n\r\n    if (formData.minimum < 0) {\r\n      newErrors.minimum = 'Minimum must be a positive number';\r\n    }\r\n\r\n    if (formData.multiplier <= 0) {\r\n      newErrors.multiplier = 'Multiplier must be greater than 0';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  }, [formData]);\r\n\r\n  const handleSubmit = useCallback(async (e: React.FormEvent): Promise<void> => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      const result = await onAdd(formData);\r\n      \r\n      if (result.success) {\r\n        setFormData({ city: '', state: '', zip: '', minimum: 0, multiplier: 1.0 });\r\n        setErrors({});\r\n        onClose();\r\n      } else {\r\n        setErrors({ general: result.error || 'Failed to add location' });\r\n      }\r\n    } catch {\r\n      setErrors({ general: 'An unexpected error occurred' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [formData, onAdd, onClose, validateForm]);\r\n\r\n  const handleInputChange = (field: keyof LocationFormData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    // Clear error when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: undefined }));\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4\">\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <MapPin className=\"h-5 w-5 text-orange-500\" />\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">Add Service Location</h2>\r\n          </div>\r\n          <Button\r\n            onClick={onClose}\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-gray-400 hover:text-gray-600 p-1\"\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <form onSubmit={(e) => { void handleSubmit(e); }} className=\"p-6 space-y-4\">\r\n          {errors.general && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\r\n              <p className=\"text-sm text-red-600\">{errors.general}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Location Fields */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                City *\r\n              </label>\r\n              <input\r\n                id=\"city\"\r\n                type=\"text\"\r\n                value={formData.city}\r\n                onChange={(e) => { handleInputChange('city', e.target.value); }}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent ${\r\n                  errors.city ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"Enter city name\"\r\n              />\r\n              {errors.city && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.city}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"state\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                State *\r\n              </label>\r\n              <input\r\n                id=\"state\"\r\n                type=\"text\"\r\n                value={formData.state}\r\n                onChange={(e) => { handleInputChange('state', e.target.value.toUpperCase()); }}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent ${\r\n                  errors.state ? 'border-red-500 bg-red-50' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"CA, NY, TX\"\r\n                maxLength={2}\r\n              />\r\n              {errors.state && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.state}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"zip\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                ZIP Code\r\n              </label>\r\n              <input\r\n                id=\"zip\"\r\n                type=\"text\"\r\n                value={formData.zip}\r\n                onChange={(e) => { handleInputChange('zip', e.target.value); }}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent ${\r\n                  errors.zip ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"12345 or 12345-6789\"\r\n              />\r\n              {errors.zip && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.zip}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Pricing fields */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label htmlFor=\"minimum\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Minimum\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"minimum\"\r\n                value={formData.minimum || ''}\r\n                onChange={(e) => { handleInputChange('minimum', parseFloat(e.target.value) || 0); }}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent ${\r\n                  errors.minimum ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"0.00\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n              />\r\n              {errors.minimum && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.minimum}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"multiplier\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Multiplier\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"multiplier\"\r\n                value={formData.multiplier || ''}\r\n                onChange={(e) => { handleInputChange('multiplier', parseFloat(e.target.value) || 1.0); }}\r\n                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent ${\r\n                  errors.multiplier ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"1.00\"\r\n                step=\"0.01\"\r\n                min=\"0.01\"\r\n              />\r\n              {errors.multiplier && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.multiplier}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              variant=\"secondary\"\r\n              size=\"md\"\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              size=\"md\"\r\n              className=\"px-4 py-2 text-sm font-medium bg-orange-500 hover:bg-orange-600 disabled:bg-orange-300\"\r\n              loading={isSubmitting}\r\n              disabled={isSubmitting}\r\n              leftIcon={<Plus className=\"h-4 w-4\" />}\r\n            >\r\n              Add Location\r\n            </Button>\r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { AlertTriangle, Trash2, X } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\nimport type { ServiceArea } from '../types';\r\n\r\ninterface DeleteLocationModalProps {\r\n  isOpen: boolean;\r\n  location: ServiceArea | null;\r\n  onClose: () => void;\r\n  onConfirm: () => Promise<void>;\r\n  isDeleting?: boolean;\r\n}\r\n\r\nexport const DeleteLocationModal: React.FC<DeleteLocationModalProps> = ({\r\n  isOpen,\r\n  location,\r\n  onClose,\r\n  onConfirm,\r\n  isDeleting = false\r\n}) => {\r\n  if (!isOpen || !location) return null;\r\n\r\n  const formatLocation = () => {\r\n    const parts = [location.city, location.state];\r\n    if (location.zip) {\r\n      parts.push(location.zip);\r\n    }\r\n    return parts.join(', ');\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4\">\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <AlertTriangle className=\"h-5 w-5 text-red-500\" />\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">Delete Location</h2>\r\n          </div>\r\n          <Button\r\n            onClick={onClose}\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-gray-400 hover:text-gray-600 disabled:text-gray-300 p-1\"\r\n            disabled={isDeleting}\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <div className=\"mb-4\">\r\n            <p className=\"text-sm text-gray-600 mb-2\">\r\n              Are you sure you want to delete this service location?\r\n            </p>\r\n            <div className=\"bg-gray-50 border border-gray-200 rounded-md p-3\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center\">\r\n                  <Trash2 className=\"h-4 w-4 text-orange-500\" />\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-900\">{location.city}</p>\r\n                  <p className=\"text-xs text-gray-500\">{formatLocation()}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-3 mb-4\">\r\n            <div className=\"flex\">\r\n              <AlertTriangle className=\"h-4 w-4 text-yellow-400 mt-0.5 mr-2 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"text-sm text-yellow-800\">\r\n                  <strong>Warning:</strong> This action cannot be undone. Customers in this area will no longer be able to find your services.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <Button\r\n              onClick={onClose}\r\n              variant=\"secondary\"\r\n              size=\"md\"\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 disabled:bg-gray-50 disabled:text-gray-400\"\r\n              disabled={isDeleting}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => { void onConfirm(); }}\r\n              variant=\"destructive\"\r\n              size=\"md\"\r\n              className=\"px-4 py-2 text-sm font-medium bg-red-500 hover:bg-red-600 disabled:bg-red-300\"\r\n              loading={isDeleting}\r\n              disabled={isDeleting}\r\n              leftIcon={<Trash2 className=\"h-4 w-4\" />}\r\n            >\r\n              Delete Location\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { MapPin } from 'lucide-react';\r\n\r\nimport { isValidStateCode } from '@/shared';\r\nimport { Button } from '@/shared/ui';\r\n\r\nimport type { ServiceArea } from '../types';\r\n\r\ninterface PrimaryServiceAreaProps {\r\n  primaryServiceArea: ServiceArea | undefined;\r\n  isEditMode: boolean;\r\n  onEditModeChange: (editMode: boolean) => void;\r\n  onLocationUpdate: (field: keyof ServiceArea, value: string | number) => void;\r\n  apiLoaded: boolean;\r\n}\r\n\r\nconst PrimaryServiceArea: React.FC<PrimaryServiceAreaProps> = ({\r\n  primaryServiceArea,\r\n  isEditMode,\r\n  onEditModeChange,\r\n  onLocationUpdate,\r\n  apiLoaded: _apiLoaded,\r\n}) => {\r\n  const [errors, setErrors] = useState<{ state?: string }>({});\r\n\r\n  const _handleLocationSelect = (place: { city: string; state: string; zipCode: string }) => {\r\n    onLocationUpdate('city', place.city);\r\n    onLocationUpdate('state', place.state);\r\n    onLocationUpdate('zip', parseInt(place.zipCode) || null);\r\n    onEditModeChange(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setErrors({});\r\n    onEditModeChange(false);\r\n  };\r\n\r\n  const handleStateChange = (value: string) => {\r\n    const upperValue = value.toUpperCase();\r\n    onLocationUpdate('state', upperValue);\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors.state) {\r\n      setErrors({});\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!primaryServiceArea) return;\r\n    \r\n    // Validate state\r\n    if (!isValidStateCode(primaryServiceArea.state)) {\r\n      setErrors({ state: 'Please enter a valid 2-letter state code (e.g., CA, NY, TX)' });\r\n      return;\r\n    }\r\n    \r\n    // Clear errors and exit edit mode\r\n    setErrors({});\r\n    onEditModeChange(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h3 className=\"text-lg font-semibold text-orange-500\">Primary Service Area</h3>\r\n      </div>\r\n      \r\n      <div className=\"bg-stone-800 border border-stone-700 rounded-lg p-6\">\r\n        {!primaryServiceArea ? (\r\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\r\n            <p className=\"text-sm text-yellow-600\">No primary service area found</p>\r\n          </div>\r\n        ) : isEditMode ? (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"primary-city\" className=\"block text-sm font-medium text-gray-300 mb-1\">City *</label>\r\n                <input\r\n                  id=\"primary-city\"\r\n                  type=\"text\"\r\n                  value={primaryServiceArea.city}\r\n                  onChange={(e) => { onLocationUpdate('city', e.target.value); }}\r\n                  className=\"w-full px-3 py-2 border border-stone-700 bg-stone-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                  placeholder=\"Enter city name\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"primary-state\" className=\"block text-sm font-medium text-gray-300 mb-1\">State *</label>\r\n                <input\r\n                  id=\"primary-state\"\r\n                  type=\"text\"\r\n                  value={primaryServiceArea.state}\r\n                  onChange={(e) => { handleStateChange(e.target.value); }}\r\n                  className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500 ${\r\n                    errors.state ? 'border-red-500 bg-red-900/20' : 'border-stone-700 bg-stone-700'\r\n                  } text-white`}\r\n                  placeholder=\"CA, NY, TX\"\r\n                  maxLength={2}\r\n                />\r\n                {errors.state && (\r\n                  <p className=\"mt-1 text-sm text-red-400\">{errors.state}</p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"primary-zip\" className=\"block text-sm font-medium text-gray-300 mb-1\">ZIP Code</label>\r\n                <input\r\n                  id=\"primary-zip\"\r\n                  type=\"text\"\r\n                  value={primaryServiceArea.zip || ''}\r\n                  onChange={(e) => { onLocationUpdate('zip', e.target.value); }}\r\n                  className=\"w-full px-3 py-2 border border-stone-700 bg-stone-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                  placeholder=\"12345 or 12345-6789\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <Button\r\n                onClick={handleCancel}\r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                className=\"px-4 py-2\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={handleSave}\r\n                variant=\"primary\"\r\n                size=\"sm\"\r\n                className=\"px-4 py-2\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <div className=\"block text-sm font-medium text-gray-300 mb-1\">City</div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <MapPin className=\"h-4 w-4 text-gray-400\" />\r\n                  <span className=\"text-white\">{primaryServiceArea.city}</span>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div className=\"block text-sm font-medium text-gray-300 mb-1\">State</div>\r\n                <span className=\"text-white\">{primaryServiceArea.state}</span>\r\n              </div>\r\n              <div>\r\n                <div className=\"block text-sm font-medium text-gray-300 mb-1\">ZIP Code</div>\r\n                <span className=\"text-white\">{primaryServiceArea.zip || 'N/A'}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end\">\r\n              <Button\r\n                onClick={() => { onEditModeChange(true); }}\r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                className=\"px-4 py-2 bg-stone-700 hover:bg-stone-600 text-sm font-medium rounded-lg\"\r\n              >\r\n                Edit Location\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrimaryServiceArea;\r\n","import React, { useState } from 'react';\r\nimport { ChevronDown, ChevronRight, MapPin, Plus, Trash2 } from 'lucide-react';\r\n\r\nimport { isValidStateCode } from '@/shared';\r\nimport { Button } from '@/shared/ui';\r\n\r\nimport type { ServiceArea } from '../types';\r\n\r\ninterface ServiceAreasListProps {\r\n  locationsByState: Record<string, ServiceArea[]>;\r\n  stateNames: string[];\r\n  expandedStates: Set<string>;\r\n  isEditMode: boolean;\r\n  editingLocationId: string | null;\r\n  apiLoaded: boolean;\r\n  onToggleStateExpansion: (state: string) => void;\r\n  onEditModeChange: (editMode: boolean) => void;\r\n  onStartEditingLocation: (locationId: string) => void;\r\n  onStopEditingLocation: () => void;\r\n  onLocationUpdate: (locationId: string, field: keyof ServiceArea, value: string | number) => void;\r\n  onDeleteLocation: (location: ServiceArea) => void;\r\n  onLocationSelect: (place: { city: string; state: string; zipCode: string }) => void;\r\n}\r\n\r\nconst ServiceAreasList: React.FC<ServiceAreasListProps> = ({\r\n  locationsByState,\r\n  stateNames,\r\n  expandedStates,\r\n  isEditMode,\r\n  editingLocationId,\r\n  apiLoaded: _apiLoaded,\r\n  onToggleStateExpansion,\r\n  onEditModeChange,\r\n  onStartEditingLocation,\r\n  onStopEditingLocation,\r\n  onLocationUpdate,\r\n  onDeleteLocation,\r\n  onLocationSelect,\r\n}) => {\r\n  const [errors, setErrors] = useState<Record<string, { state?: string }>>({});\r\n  \r\n  // Form state for adding new location\r\n  const [newLocationForm, setNewLocationForm] = useState({\r\n    city: '',\r\n    state: '',\r\n    zip: ''\r\n  });\r\n\r\n  const handleStateChange = (locationId: string, value: string) => {\r\n    const upperValue = value.toUpperCase();\r\n    onLocationUpdate(locationId, 'state', upperValue);\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[locationId]?.state) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [locationId]: { ...prev[locationId], state: undefined }\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleNewLocationInputChange = (field: 'city' | 'state' | 'zip', value: string) => {\r\n    const processedValue = field === 'state' ? value.toUpperCase() : value;\r\n    setNewLocationForm(prev => ({ ...prev, [field]: processedValue }));\r\n  };\r\n\r\n  const handleSave = (locationId: string, location: ServiceArea) => {\r\n    // Validate state\r\n    if (!isValidStateCode(location.state)) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [locationId]: { state: 'Please enter a valid 2-letter state code (e.g., CA, NY, TX)' }\r\n      }));\r\n      return;\r\n    }\r\n    \r\n    // Clear errors and stop editing\r\n    setErrors(prev => {\r\n      const { [locationId]: _removed, ...newErrors } = prev;\r\n      return newErrors;\r\n    });\r\n    onStopEditingLocation();\r\n  };\r\n  const _handleLocationSelect = (place: { city: string; state: string; zipCode: string }) => {\r\n    onLocationSelect(place);\r\n    onEditModeChange(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // Reset form when canceling\r\n    setNewLocationForm({ city: '', state: '', zip: '' });\r\n    onEditModeChange(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <h3 className=\"text-lg font-semibold text-orange-500\">Service Areas</h3>\r\n          {stateNames.length > 0 && (\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Button\r\n                onClick={() => { onToggleStateExpansion('expand-all'); }}\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"text-xs text-gray-500 hover:text-orange-500\"\r\n              >\r\n                Expand All\r\n              </Button>\r\n              <span className=\"text-gray-300\">|</span>\r\n              <Button\r\n                onClick={() => { onToggleStateExpansion('collapse-all'); }}\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"text-xs text-gray-500 hover:text-orange-500\"\r\n              >\r\n                Collapse All\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {!isEditMode && (\r\n          <Button\r\n            onClick={() => { onEditModeChange(true); }}\r\n            variant=\"primary\"\r\n            size=\"md\"\r\n            className=\"px-4 py-2 bg-orange-500 hover:bg-orange-600 text-sm font-medium rounded-lg\"\r\n            leftIcon={<Plus className=\"h-4 w-4\" />}\r\n          >\r\n            Add Location\r\n          </Button>\r\n        )}\r\n      </div>\r\n      \r\n      {isEditMode && (\r\n        <div className=\"bg-stone-800 border border-stone-700 rounded-lg p-6\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"new-location-city\" className=\"block text-sm font-medium text-gray-300 mb-1\">City *</label>\r\n                <input\r\n                  id=\"new-location-city\"\r\n                  type=\"text\"\r\n                  value={newLocationForm.city}\r\n                  onChange={(e) => { handleNewLocationInputChange('city', e.target.value); }}\r\n                  className=\"w-full px-3 py-2 border border-stone-700 bg-stone-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                  placeholder=\"Enter city name\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"new-location-state\" className=\"block text-sm font-medium text-gray-300 mb-1\">State *</label>\r\n                <input\r\n                  id=\"new-location-state\"\r\n                  type=\"text\"\r\n                  value={newLocationForm.state}\r\n                  onChange={(e) => { handleNewLocationInputChange('state', e.target.value); }}\r\n                  className=\"w-full px-3 py-2 border border-stone-700 bg-stone-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                  placeholder=\"CA, NY, TX\"\r\n                  maxLength={2}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"new-location-zip\" className=\"block text-sm font-medium text-gray-300 mb-1\">ZIP Code</label>\r\n                <input\r\n                  id=\"new-location-zip\"\r\n                  type=\"text\"\r\n                  value={newLocationForm.zip}\r\n                  onChange={(e) => { handleNewLocationInputChange('zip', e.target.value); }}\r\n                  className=\"w-full px-3 py-2 border border-stone-700 bg-stone-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                  placeholder=\"12345 or 12345-6789\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <Button\r\n                onClick={handleCancel}\r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                className=\"px-4 py-2\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  // Validate form\r\n                  if (!newLocationForm.city.trim()) {\r\n                    alert('Please enter a city');\r\n                    return;\r\n                  }\r\n                  if (!newLocationForm.state.trim()) {\r\n                    alert('Please enter a state');\r\n                    return;\r\n                  }\r\n                  if (!isValidStateCode(newLocationForm.state)) {\r\n                    alert('Please enter a valid 2-letter state code (e.g., CA, NY, TX)');\r\n                    return;\r\n                  }\r\n                  \r\n                  // Call onLocationSelect with actual form data\r\n                  const formData = {\r\n                    city: newLocationForm.city.trim(),\r\n                    state: newLocationForm.state.trim(),\r\n                    zipCode: newLocationForm.zip.trim()\r\n                  };\r\n                  onLocationSelect(formData);\r\n                  \r\n                  // Reset form\r\n                  setNewLocationForm({ city: '', state: '', zip: '' });\r\n                }}\r\n                variant=\"primary\"\r\n                size=\"sm\"\r\n                className=\"px-4 py-2\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* State-organized Service Areas */}\r\n      {stateNames.length > 0 ? (\r\n        <div className=\"space-y-3\">\r\n          {stateNames.map((state) => {\r\n            const stateLocations = locationsByState[state];\r\n            const isExpanded = expandedStates.has(state);\r\n            const locationCount = stateLocations?.length || 0;\r\n            \r\n            return (\r\n              <div key={state} className=\"bg-stone-800 border border-stone-700 rounded-lg overflow-hidden\">\r\n                {/* State Header */}\r\n                <button\r\n                  onClick={() => { onToggleStateExpansion(state); }}\r\n                  className=\"w-full px-6 py-4 flex items-center justify-between hover:bg-stone-700 transition-colors\"\r\n                >\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    {isExpanded ? (\r\n                      <ChevronDown className=\"h-5 w-5 text-orange-500\" />\r\n                    ) : (\r\n                      <ChevronRight className=\"h-5 w-5 text-orange-500\" />\r\n                    )}\r\n                    <h4 className=\"text-lg font-semibold text-white\">{state}</h4>\r\n                    <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-orange-100 text-orange-800\">\r\n                      {locationCount} {locationCount === 1 ? 'location' : 'locations'}\r\n                    </span>\r\n                  </div>\r\n                </button>\r\n                \r\n                {/* State Locations */}\r\n                {isExpanded && stateLocations && (\r\n                  <div className=\"border-t border-stone-700\">\r\n                    <div className=\"p-6 space-y-4\">\r\n                      {stateLocations.map((location, index) => {\r\n                        const locationId = `${location.city}-${location.state}`;\r\n                        const isEditingThisLocation = editingLocationId === locationId;\r\n                        \r\n                        return (\r\n                          <div key={`${location.city}-${location.state}-${(index + 1).toString()}`} className=\"bg-stone-700 border border-stone-600 rounded-lg p-4\">\r\n                            {isEditingThisLocation ? (\r\n                              <div className=\"space-y-4\">\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                                  <div>\r\n                                    <label htmlFor={`edit-city-${locationId}`} className=\"block text-sm font-medium text-gray-300 mb-1\">City *</label>\r\n                                    <input\r\n                                      id={`edit-city-${locationId}`}\r\n                                      type=\"text\"\r\n                                      value={location.city}\r\n                                      onChange={(e) => { onLocationUpdate(locationId, 'city', e.target.value); }}\r\n                                      className=\"w-full px-3 py-2 border border-stone-700 bg-stone-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                                      placeholder=\"Enter city name\"\r\n                                    />\r\n                                  </div>\r\n                                  <div>\r\n                                    <label htmlFor={`edit-state-${locationId}`} className=\"block text-sm font-medium text-gray-300 mb-1\">State *</label>\r\n                                    <input\r\n                                      id={`edit-state-${locationId}`}\r\n                                      type=\"text\"\r\n                                      value={location.state}\r\n                                      onChange={(e) => { handleStateChange(locationId, e.target.value); }}\r\n                                      className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500 ${\r\n                                        errors[locationId]?.state ? 'border-red-500 bg-red-900/20' : 'border-stone-700 bg-stone-700'\r\n                                      } text-white`}\r\n                                      placeholder=\"CA, NY, TX\"\r\n                                      maxLength={2}\r\n                                    />\r\n                                    {errors[locationId]?.state && (\r\n                                      <p className=\"mt-1 text-sm text-red-400\">{errors[locationId].state}</p>\r\n                                    )}\r\n                                  </div>\r\n                                  <div>\r\n                                    <label htmlFor={`edit-zip-${locationId}`} className=\"block text-sm font-medium text-gray-300 mb-1\">ZIP Code</label>\r\n                                    <input\r\n                                      id={`edit-zip-${locationId}`}\r\n                                      type=\"text\"\r\n                                      value={location.zip || ''}\r\n                                      onChange={(e) => { onLocationUpdate(locationId, 'zip', e.target.value); }}\r\n                                      className=\"w-full px-3 py-2 border border-stone-700 bg-stone-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                                      placeholder=\"12345 or 12345-6789\"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"flex justify-end space-x-3\">\r\n                                  <Button\r\n                                    onClick={onStopEditingLocation}\r\n                                    variant=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    className=\"px-4 py-2\"\r\n                                  >\r\n                                    Cancel\r\n                                  </Button>\r\n                                  <Button\r\n                                    onClick={() => { handleSave(locationId, location); }}\r\n                                    variant=\"primary\"\r\n                                    size=\"sm\"\r\n                                    className=\"px-4 py-2\"\r\n                                  >\r\n                                    Save\r\n                                  </Button>\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n                                <div>\r\n                                  <label htmlFor={`readonly-city-${locationId}`} className=\"block text-sm font-medium text-gray-300 mb-1\">City</label>\r\n                                  <input\r\n                                    id={`readonly-city-${locationId}`}\r\n                                    type=\"text\"\r\n                                    value={location.city}\r\n                                    readOnly\r\n                                    onClick={() => { onStartEditingLocation(locationId); }}\r\n                                    className=\"w-full px-3 py-2 border border-stone-600 rounded-md bg-stone-600 text-white cursor-pointer hover:bg-stone-500 transition-colors\"\r\n                                    title=\"Click to edit location\"\r\n                                  />\r\n                                </div>\r\n                                <div>\r\n                                  <label htmlFor={`readonly-state-${locationId}`} className=\"block text-sm font-medium text-gray-300 mb-1\">State</label>\r\n                                  <input\r\n                                    id={`readonly-state-${locationId}`}\r\n                                    type=\"text\"\r\n                                    value={location.state}\r\n                                    readOnly\r\n                                    onClick={() => { onStartEditingLocation(locationId); }}\r\n                                    className=\"w-full px-3 py-2 border border-stone-600 rounded-md bg-stone-600 text-white cursor-pointer hover:bg-stone-500 transition-colors\"\r\n                                    title=\"Click to edit location\"\r\n                                  />\r\n                                </div>\r\n                                <div>\r\n                                  <label htmlFor={`readonly-zip-${locationId}`} className=\"block text-sm font-medium text-gray-300 mb-1\">ZIP Code</label>\r\n                                  <input\r\n                                    id={`readonly-zip-${locationId}`}\r\n                                    type=\"text\"\r\n                                    value={location.zip || 'N/A'}\r\n                                    readOnly\r\n                                    onClick={() => { onStartEditingLocation(locationId); }}\r\n                                    className=\"w-full px-3 py-2 border border-stone-600 rounded-md bg-stone-600 text-white cursor-pointer hover:bg-stone-500 transition-colors\"\r\n                                    title=\"Click to edit location\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"lg:col-span-2 flex items-end\">\r\n                                  <Button\r\n                                    onClick={() => { onDeleteLocation(location); }}\r\n                                    variant=\"ghost\"\r\n                                    size=\"sm\"\r\n                                    className=\"text-red-400 hover:text-red-300 hover:bg-red-900/20 p-2\"\r\n                                    title=\"Delete location\"\r\n                                  >\r\n                                    <Trash2 className=\"h-4 w-4\" />\r\n                                  </Button>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"bg-stone-800 border border-stone-700 rounded-lg p-6 text-center\">\r\n          <MapPin className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-300 mb-2\">No Service Areas</h3>\r\n          <p className=\"text-gray-500\">Add locations where you provide services to get started.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceAreasList;\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { getGoogle, hasImportLibrary } from '@/shared';\r\nimport { config } from '@/shared/env';\r\n\r\nexport const useGoogleMaps = () => {\r\n  const [apiLoaded, setApiLoaded] = useState(false);\r\n\r\n  const checkAPIReady = useCallback(async (): Promise<void> => {\r\n    try {\r\n      if (!hasImportLibrary()) {\r\n        setTimeout(() => { void checkAPIReady(); }, 250);\r\n        return;\r\n      }\r\n      \r\n      const g = getGoogle();\r\n      if (!g?.maps.importLibrary) {\r\n        setTimeout(() => { void checkAPIReady(); }, 250);\r\n        return;\r\n      }\r\n      \r\n      await g.maps.importLibrary('places');\r\n      \r\n      setApiLoaded(true);\r\n    } catch (error: unknown) {\r\n      const msg = error instanceof Error ? error.message : String(error);\r\n      console.error('Google Maps API initialization error:', msg);\r\n      setApiLoaded(false);\r\n    }\r\n  }, []);\r\n\r\n  const loadGooglePlacesAPI = useCallback((): void => {\r\n    const g = getGoogle();\r\n    if (g?.maps) {\r\n      setTimeout(() => { void checkAPIReady(); }, 300);\r\n      return;\r\n    }\r\n    \r\n    if (document.querySelector('script[src*=\"maps.googleapis.com\"]')) {\r\n      setTimeout(() => { void checkAPIReady(); }, 500);\r\n      return;\r\n    }\r\n    \r\n    const script = document.createElement('script');\r\n    const apiKey = config.googleMapsApiKey;\r\n    \r\n    if (!apiKey) {\r\n      console.error('Google Maps API key not found. Please set VITE_GOOGLE_MAPS_API_KEY in your .env file');\r\n      setApiLoaded(false);\r\n      return;\r\n    }\r\n    \r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places&v=beta&loading=async`;\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.onload = () => { void setTimeout(() => { void checkAPIReady(); }, 500); };\r\n    script.onerror = (err: unknown) => {\r\n      const msg = err instanceof Error ? err.message : String(err);\r\n      console.error('Failed to load Google Maps JS API', msg);\r\n      setApiLoaded(false);\r\n    };\r\n    document.head.appendChild(script);\r\n  }, [checkAPIReady]);\r\n\r\n  useEffect(() => {\r\n    loadGooglePlacesAPI();\r\n  }, [loadGooglePlacesAPI]);\r\n\r\n  return { apiLoaded };\r\n};\r\n","import { useCallback, useState } from 'react';\r\n\r\nimport type { ServiceArea } from '../types';\r\n\r\nexport const useLocationState = () => {\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [locationToDelete, setLocationToDelete] = useState<ServiceArea | null>(null);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [expandedStates, setExpandedStates] = useState<Set<string>>(new Set());\r\n  const [editingLocationId, setEditingLocationId] = useState<string | null>(null);\r\n\r\n  const toggleStateExpansion = useCallback((state: string) => {\r\n    setExpandedStates(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(state)) {\r\n        newSet.delete(state);\r\n      } else {\r\n        newSet.add(state);\r\n      }\r\n      return newSet;\r\n    });\r\n  }, []);\r\n\r\n  const expandAllStates = useCallback((stateNames: string[]) => {\r\n    setExpandedStates(new Set(stateNames));\r\n  }, []);\r\n\r\n  const collapseAllStates = useCallback(() => {\r\n    setExpandedStates(new Set());\r\n  }, []);\r\n\r\n  const openDeleteModal = useCallback((location: ServiceArea) => {\r\n    setLocationToDelete(location);\r\n    setIsDeleteModalOpen(true);\r\n  }, []);\r\n\r\n  const closeDeleteModal = useCallback(() => {\r\n    setIsDeleteModalOpen(false);\r\n    setLocationToDelete(null);\r\n  }, []);\r\n\r\n  const startEditingLocation = useCallback((locationId: string) => {\r\n    setEditingLocationId(locationId);\r\n  }, []);\r\n\r\n  const stopEditingLocation = useCallback(() => {\r\n    setEditingLocationId(null);\r\n  }, []);\r\n\r\n  return {\r\n    // Modal state\r\n    isAddModalOpen,\r\n    setIsAddModalOpen,\r\n    isDeleteModalOpen,\r\n    locationToDelete,\r\n    isDeleting,\r\n    setIsDeleting,\r\n    openDeleteModal,\r\n    closeDeleteModal,\r\n    \r\n    // State expansion\r\n    expandedStates,\r\n    toggleStateExpansion,\r\n    expandAllStates,\r\n    collapseAllStates,\r\n    \r\n    // Location editing\r\n    editingLocationId,\r\n    startEditingLocation,\r\n    stopEditingLocation,\r\n  };\r\n};\r\n","import React, { useMemo, useState } from 'react';\r\nimport { AlertCircle } from 'lucide-react';\r\n\r\nimport type { DetailerData } from '@/features/tenantDashboard/types';\r\n\r\nimport { addServiceArea, deleteServiceArea,saveServiceAreas } from '../../api/locationsApi';\r\nimport { useTenantBusinessData } from '../../hooks/useTenantBusinessData';\r\nimport { AddLocationModal } from './components/AddLocationModal';\r\nimport { DeleteLocationModal } from './components/DeleteLocationModal';\r\nimport PrimaryServiceArea from './components/PrimaryServiceArea';\r\nimport ServiceAreasList from './components/ServiceAreasList';\r\nimport { useGoogleMaps } from './hooks/useGoogleMaps';\r\nimport { useLocationState } from './hooks/useLocationState';\r\nimport type { ServiceArea } from './types';\r\n\r\ninterface LocationsTabProps {\r\n  detailerData?: DetailerData;\r\n}\r\n\r\nconst LocationsTab: React.FC<LocationsTabProps> = () => {\r\n  const { apiLoaded } = useGoogleMaps();\r\n  \r\n  const {\r\n    primaryServiceArea,\r\n    otherServiceAreas,\r\n    loading,\r\n    error,\r\n    refetch\r\n  } = useTenantBusinessData();\r\n\r\n  const {\r\n    isAddModalOpen,\r\n    setIsAddModalOpen,\r\n    isDeleteModalOpen,\r\n    locationToDelete,\r\n    isDeleting,\r\n    setIsDeleting,\r\n    openDeleteModal,\r\n    closeDeleteModal,\r\n    expandedStates,\r\n    toggleStateExpansion,\r\n    expandAllStates,\r\n    collapseAllStates,\r\n    editingLocationId,\r\n    startEditingLocation,\r\n    stopEditingLocation,\r\n  } = useLocationState();\r\n\r\n  // Primary service area edit state\r\n  const [isPrimaryEditMode, setIsPrimaryEditMode] = useState(false);\r\n  \r\n  // Service area edit state\r\n  const [isServiceAreaEditMode, setIsServiceAreaEditMode] = useState(false);\r\n  \r\n\r\n  // Group other service areas by state\r\n  const locationsByState = useMemo(() => {\r\n    const grouped: Record<string, ServiceArea[]> = {};\r\n    \r\n    otherServiceAreas.forEach(location => {\r\n      const state = location.state.toUpperCase();\r\n      if (state && !grouped[state]) {\r\n        grouped[state] = [];\r\n      }\r\n      if (state && grouped[state]) {\r\n        grouped[state].push(location);\r\n      }\r\n    });\r\n    \r\n    // Sort locations within each state by city\r\n    Object.keys(grouped).forEach(state => {\r\n      if (grouped[state]) {\r\n        grouped[state].sort((a, b) => a.city.localeCompare(b.city));\r\n      }\r\n    });\r\n    \r\n    return grouped;\r\n  }, [otherServiceAreas]);\r\n\r\n  // Get sorted state names\r\n  const stateNames = useMemo(() => {\r\n    return Object.keys(locationsByState).sort();\r\n  }, [locationsByState]);\r\n\r\n  // Handle state expansion actions\r\n  const handleToggleStateExpansion = (state: string) => {\r\n    if (state === 'expand-all') {\r\n      expandAllStates(stateNames);\r\n    } else if (state === 'collapse-all') {\r\n      collapseAllStates();\r\n    } else {\r\n      toggleStateExpansion(state);\r\n    }\r\n  };\r\n\r\n  // Get current tenant slug (you'll need to get this from context/URL)\r\n  const currentTenantSlug = 'jps'; // TODO: Get from tenant context\r\n\r\n  // Helper function to update primary service area\r\n  const updatePrimaryServiceAreaField = async (field: keyof ServiceArea, value: string | number) => {\r\n    if (!primaryServiceArea) return;\r\n    \r\n    try {\r\n      const updatedArea = { ...primaryServiceArea, [field]: value };\r\n      const allServiceAreas = [updatedArea, ...otherServiceAreas];\r\n      await saveServiceAreas(currentTenantSlug, allServiceAreas);\r\n      \r\n      // Refresh the data to show updated values\r\n      refetch();\r\n    } catch (error) {\r\n      console.error('Error updating primary service area:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Handle adding new location\r\n  const handleAddLocation = async (locationData: { city: string; state: string; zip?: string; minimum: number; multiplier: number }) => {\r\n    try {\r\n      await addServiceArea(currentTenantSlug, locationData);\r\n      setIsAddModalOpen(false);\r\n      \r\n      // Refresh the data to show new location\r\n      refetch();\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Error adding location:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Handle deleting location\r\n  const handleDeleteLocation = async () => {\r\n    if (!locationToDelete) return;\r\n    \r\n    setIsDeleting(true);\r\n    try {\r\n      await deleteServiceArea(currentTenantSlug, locationToDelete.id);\r\n      closeDeleteModal();\r\n      \r\n      // Refresh the data to show updated list\r\n      refetch();\r\n    } catch (error) {\r\n      console.error('Error deleting location:', error);\r\n      throw error;\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  // Handle location update\r\n  const handleLocationUpdate = async (locationId: string, field: keyof ServiceArea, value: string | number) => {\r\n    try {\r\n      const allServiceAreas = [...(primaryServiceArea ? [primaryServiceArea] : []), ...otherServiceAreas];\r\n      const updatedAreas = allServiceAreas.map(area => \r\n        area.id === locationId ? { ...area, [field]: value } : area\r\n      );\r\n      await saveServiceAreas(currentTenantSlug, updatedAreas);\r\n      \r\n      // Refresh the data to show updated values\r\n      refetch();\r\n    } catch (error) {\r\n      console.error('Error updating location:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Handle location select for service areas\r\n  const handleServiceAreaLocationSelect = async (place: { city: string; state: string; zipCode: string }) => {\r\n    await handleAddLocation({\r\n      city: place.city,\r\n      state: place.state,\r\n      zip: place.zipCode,\r\n      minimum: 0,\r\n      multiplier: 1,\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-white\">Service Locations</h2>\r\n            <p className=\"text-gray-400 mt-1\">Manage the areas where you provide services</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center justify-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-orange-500\"></div>\r\n          <span className=\"ml-3 text-gray-400\">Loading locations...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-white\">Service Locations</h2>\r\n            <p className=\"text-gray-400 mt-1\">Manage the areas where you provide services</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"bg-red-900/20 border border-red-500/20 rounded-lg p-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <AlertCircle className=\"h-5 w-5 text-red-400 flex-shrink-0\" />\r\n            <div>\r\n              <h3 className=\"text-sm font-medium text-red-300\">Error Loading Locations</h3>\r\n              <p className=\"text-sm text-red-400 mt-1\">{error}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Primary Service Area */}\r\n      {primaryServiceArea && (\r\n        <PrimaryServiceArea\r\n          primaryServiceArea={primaryServiceArea}\r\n          isEditMode={isPrimaryEditMode}\r\n          onEditModeChange={setIsPrimaryEditMode}\r\n          onLocationUpdate={(field, value) => { void updatePrimaryServiceAreaField(field, value); }}\r\n          apiLoaded={apiLoaded}\r\n        />\r\n      )}\r\n\r\n      {/* Service Areas */}\r\n      <ServiceAreasList\r\n        locationsByState={locationsByState}\r\n        stateNames={stateNames}\r\n        expandedStates={expandedStates}\r\n        isEditMode={isServiceAreaEditMode}\r\n        editingLocationId={editingLocationId}\r\n        apiLoaded={apiLoaded}\r\n        onToggleStateExpansion={handleToggleStateExpansion}\r\n        onEditModeChange={setIsServiceAreaEditMode}\r\n        onStartEditingLocation={startEditingLocation}\r\n        onStopEditingLocation={stopEditingLocation}\r\n        onLocationUpdate={(id, field, value) => { void handleLocationUpdate(id, field, value); }}\r\n        onDeleteLocation={openDeleteModal}\r\n        onLocationSelect={(place) => { void handleServiceAreaLocationSelect(place); }}\r\n      />\r\n\r\n      {/* Modals */}\r\n      <AddLocationModal\r\n        isOpen={isAddModalOpen}\r\n        onClose={() => { setIsAddModalOpen(false); }}\r\n        onAdd={handleAddLocation}\r\n      />\r\n\r\n      <DeleteLocationModal\r\n        isOpen={isDeleteModalOpen}\r\n        onClose={closeDeleteModal}\r\n        onConfirm={handleDeleteLocation}\r\n        location={locationToDelete}\r\n        isDeleting={isDeleting}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationsTab;\r\n","import React from 'react';\r\n\r\nexport const QuickActions: React.FC = () => {\r\n  // No quick actions for now - users can add their own shortcuts\r\n  return null;\r\n};\r\n\r\nexport default QuickActions;\r\n","import React from 'react';\n\nimport { QuickActions } from './components/QuickActions';\n\nexport const OverviewTab: React.FC = () => {\n  return (\n    <div className=\"space-y-6\">\n      <QuickActions />\n    </div>\n  );\n};\n\nexport default OverviewTab;","import { useEffect, useState } from 'react';\r\n\r\nimport { config } from '@/../config/env';\r\nimport { useTenantSlug } from '@/shared/hooks/useTenantSlug';\r\n\r\ninterface BusinessData {\r\n  id: string;\r\n  slug: string;\r\n  business_name: string;\r\n  owner: string;\r\n  business_email: string;\r\n  business_phone: string;\r\n  personal_email?: string;\r\n  personal_phone?: string;\r\n  first_name?: string;\r\n  last_name?: string;\r\n  twilio_phone?: string;\r\n  business_start_date?: string;\r\n  website?: string;\r\n  gbp_url?: string;\r\n  facebook_url?: string;\r\n  youtube_url?: string;\r\n  tiktok_url?: string;\r\n  instagram_url?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface UseProfileDataReturn {\r\n  businessData: BusinessData | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  updateBusiness: (data: Partial<BusinessData>) => Promise<boolean>;\r\n  isUpdating: boolean;\r\n}\r\n\r\nexport const useProfileData = (): UseProfileDataReturn => {\r\n  const [businessData, setBusinessData] = useState<BusinessData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  \r\n  const slug = useTenantSlug();\r\n\r\n  // Fetch business data\r\n  useEffect(() => {\r\n    const fetchBusinessData = async () => {\r\n      if (!slug) {\r\n        setError('Business slug is required');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch(`${config.apiUrl}/api/tenants/${slug}`);\r\n        \r\n        if (!response.ok) {\r\n          if (response.status === 404) {\r\n            throw new Error('Business not found');\r\n          }\r\n          throw new Error(`Failed to fetch business data: ${response.statusText}`);\r\n        }\r\n\r\n        const result = await response.json() as { data?: BusinessData };\r\n        const data = result.data;\r\n        \r\n        if (!data) {\r\n          throw new Error('No business data received');\r\n        }\r\n        \r\n        setBusinessData(data);\r\n      } catch (err) {\r\n        const errorMessage = err instanceof Error ? err.message : 'Failed to fetch business data';\r\n        setError(errorMessage);\r\n        console.error('Error fetching business data:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    void fetchBusinessData();\r\n  }, [slug]);\r\n\r\n  // Update business data\r\n  const updateBusiness = async (data: Partial<BusinessData>): Promise<boolean> => {\r\n    if (!slug) {\r\n      setError('Business slug is required');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setIsUpdating(true);\r\n      setError(null);\r\n\r\n      // Only send the fields that have values (not empty strings or undefined)\r\n      const updateData: Partial<BusinessData> = {};\r\n      \r\n      if (data.first_name !== undefined) updateData.first_name = data.first_name;\r\n      if (data.last_name !== undefined) updateData.last_name = data.last_name;\r\n      if (data.personal_phone !== undefined) updateData.personal_phone = data.personal_phone;\r\n      if (data.personal_email !== undefined) updateData.personal_email = data.personal_email;\r\n      if (data.business_name !== undefined) updateData.business_name = data.business_name;\r\n      if (data.business_email !== undefined) updateData.business_email = data.business_email;\r\n      if (data.business_phone !== undefined) updateData.business_phone = data.business_phone;\r\n      if (data.twilio_phone !== undefined) updateData.twilio_phone = data.twilio_phone;\r\n      if (data.business_start_date !== undefined) updateData.business_start_date = data.business_start_date;\r\n      if (data.website !== undefined) updateData.website = data.website;\r\n      if (data.gbp_url !== undefined) updateData.gbp_url = data.gbp_url;\r\n      if (data.facebook_url !== undefined) updateData.facebook_url = data.facebook_url;\r\n      if (data.facebook_enabled !== undefined) updateData.facebook_enabled = data.facebook_enabled;\r\n      if (data.youtube_url !== undefined) updateData.youtube_url = data.youtube_url;\r\n      if (data.youtube_enabled !== undefined) updateData.youtube_enabled = data.youtube_enabled;\r\n      if (data.tiktok_url !== undefined) updateData.tiktok_url = data.tiktok_url;\r\n      if (data.tiktok_enabled !== undefined) updateData.tiktok_enabled = data.tiktok_enabled;\r\n      if (data.instagram_url !== undefined) updateData.instagram_url = data.instagram_url;\r\n      if (data.instagram_enabled !== undefined) updateData.instagram_enabled = data.instagram_enabled;\r\n\r\n\r\n      const response = await fetch(`${config.apiUrl}/api/tenants/${slug}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updateData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to update business data: ${response.statusText}`);\r\n      }\r\n\r\n      const result = await response.json() as { data?: BusinessData };\r\n      const updatedData = result.data;\r\n      \r\n      // Always update local state with the specific field that was changed\r\n      setBusinessData(prev => ({ ...prev, ...updateData }));\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update business data';\r\n      setError(errorMessage);\r\n      console.error('Error updating business data:', err);\r\n      return false;\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    businessData,\r\n    loading,\r\n    error,\r\n    updateBusiness,\r\n    isUpdating,\r\n  };\r\n};","import { useEffect, useState } from 'react';\r\nimport { formatPhoneNumber, getPhoneDigits, useAutoSave } from '@/shared/utils';\r\n\r\nimport type { BusinessData } from '../types';\r\nimport { useProfileData } from './useProfileData';\r\n\r\n// Format Twilio phone number (keeps +1 prefix)\r\nconst formatTwilioPhone = (input: string): string => {\r\n  if (!input) return '';\r\n  \r\n  // Remove all non-digit characters except +\r\n  const cleaned = input.replace(/[^\\d+]/g, '');\r\n  \r\n  // If it starts with +1, keep it\r\n  if (cleaned.startsWith('+1') && cleaned.length === 12) {\r\n    const digits = cleaned.slice(2); // Remove +1\r\n    return `+1 (${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6)}`;\r\n  }\r\n  \r\n  // If it's 10 digits, add +1\r\n  if (cleaned.length === 10) {\r\n    return `+1 (${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\r\n  }\r\n  \r\n  // If it's 11 digits starting with 1, add +\r\n  if (cleaned.length === 11 && cleaned.startsWith('1')) {\r\n    const digits = cleaned.slice(1);\r\n    return `+1 (${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6)}`;\r\n  }\r\n  \r\n  return cleaned; // Return as-is if doesn't match expected patterns\r\n};\r\n\r\n// Get Twilio phone digits (keeps +1 prefix)\r\nconst getTwilioPhoneDigits = (input: string): string => {\r\n  if (!input) return '';\r\n  \r\n  // Remove all non-digit characters except +\r\n  const cleaned = input.replace(/[^\\d+]/g, '');\r\n  \r\n  // If it starts with +1, keep it\r\n  if (cleaned.startsWith('+1') && cleaned.length === 12) {\r\n    return cleaned;\r\n  }\r\n  \r\n  // If it's 10 digits, add +1\r\n  if (cleaned.length === 10) {\r\n    return `+1${cleaned}`;\r\n  }\r\n  \r\n  // If it's 11 digits starting with 1, add +\r\n  if (cleaned.length === 11 && cleaned.startsWith('1')) {\r\n    return `+${cleaned}`;\r\n  }\r\n  \r\n  return cleaned;\r\n};\r\n\r\ninterface UseAutoSaveFieldOptions {\r\n  debounce?: number;\r\n  field: keyof BusinessData;\r\n}\r\n\r\nexport function useAutoSaveField(options: UseAutoSaveFieldOptions) {\r\n  const { debounce = 1000, field } = options;\r\n  const { updateBusiness, businessData } = useProfileData();\r\n  \r\n  // Get the current value for this field (reactive to businessData changes)\r\n  const getCurrentValue = (): string => {\r\n    if (!businessData) return '';\r\n    \r\n    switch (field) {\r\n      case 'personal_phone':\r\n      case 'business_phone':\r\n        return businessData[field] ? formatPhoneNumber(businessData[field]) : '';\r\n      case 'twilio_phone':\r\n        return businessData[field] ? formatTwilioPhone(businessData[field]) : '';\r\n      case 'business_start_date':\r\n        return businessData[field] ? \r\n          new Date(businessData[field]).toISOString().split('T')[0] : '';\r\n      default: {\r\n        const value = businessData[field] as string | number | unknown[] | null | undefined;\r\n        if (value === null || value === undefined || value === 'null' || value === '') {\r\n          return '';\r\n        }\r\n        return typeof value === 'string' ? value : String(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Create a reactive value that updates when businessData changes\r\n  const [currentValue, setCurrentValue] = useState(() => getCurrentValue());\r\n  \r\n  useEffect(() => {\r\n    setCurrentValue(getCurrentValue());\r\n  }, [businessData, field]);\r\n\r\n  const saveField = async (value: string) => {\r\n    if (!businessData) return;\r\n    \r\n    // For phone fields, strip formatting before saving to database\r\n    let saveValue = value;\r\n    if (field === 'personal_phone' || field === 'business_phone') {\r\n      saveValue = getPhoneDigits(value);\r\n    } else if (field === 'twilio_phone') {\r\n      saveValue = getTwilioPhoneDigits(value);\r\n    }\r\n    \r\n    // Create a partial update object with just this field\r\n    const updateData = { [field]: saveValue };\r\n    \r\n    const success = await updateBusiness(updateData);\r\n    if (!success) {\r\n      throw new Error(`Failed to save ${field}`);\r\n    }\r\n  };\r\n\r\n  return useAutoSave(currentValue, saveField, { debounce });\r\n}\r\n","import React from 'react';\r\n\r\nimport { AutoSaveInput } from '@/shared/ui';\r\nimport { formatPhoneNumber } from '@/shared/utils';\r\n\r\nimport { useAutoSaveField } from '../hooks/useAutoSaveField';\r\nimport type { BusinessData } from '../types';\r\n\r\ninterface AutoSaveFieldProps {\r\n  field: keyof BusinessData;\r\n  label: string;\r\n  type?: 'text' | 'email' | 'tel' | 'url' | 'date';\r\n  placeholder?: string;\r\n  className?: string;\r\n  debounce?: number;\r\n  disabled?: boolean;\r\n}\r\n\r\n/**\r\n * Auto-save field component for tenant dashboard forms\r\n * Uses shared AutoSaveInput component with feature-specific auto-save logic\r\n */\r\nexport const AutoSaveField: React.FC<AutoSaveFieldProps> = ({\r\n  field,\r\n  label,\r\n  type = 'text',\r\n  placeholder,\r\n  className = '',\r\n  debounce = 1000,\r\n}) => {\r\n  const { value, setValue, isSaving, error } = useAutoSaveField({ \r\n    field, \r\n    debounce \r\n  });\r\n\r\n  const handleChange = (newValue: string) => {\r\n    // Apply phone formatting for phone fields\r\n    if (type === 'tel' && (field === 'personal_phone' || field === 'business_phone')) {\r\n      const formatted = formatPhoneNumber(newValue);\r\n      setValue(formatted);\r\n    } else if (type === 'tel' && field === 'twilio_phone') {\r\n      // For Twilio phone, we need to import the formatTwilioPhone function\r\n      // For now, just set the value as-is and let the hook handle formatting\r\n      setValue(newValue);\r\n    } else {\r\n      setValue(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AutoSaveInput\r\n      label={label}\r\n      type={type}\r\n      value={value}\r\n      onChange={handleChange}\r\n      isSaving={isSaving}\r\n      error={error}\r\n      placeholder={placeholder}\r\n      className={className}\r\n    />\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Building2, Link, User } from 'lucide-react';\r\n\r\nimport { AutoSaveField } from './AutoSaveField';\r\nimport { useProfileData } from '../hooks/useProfileData';\r\n\r\nconst ProfileForm: React.FC = () => {\r\n  const { businessData, updateBusiness, isUpdating } = useProfileData();\r\n  \r\n  const handleSocialMediaToggle = async (platform: string, enabled: boolean) => {\r\n    const fieldName = `${platform}_enabled` as keyof BusinessData;\r\n    await updateBusiness({ [fieldName]: enabled });\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Business Information Section */}\r\n      <div className=\"bg-stone-800 border border-stone-700 rounded-lg p-6\">\r\n        <div className=\"flex items-center space-x-3 mb-6\">\r\n          <Building2 className=\"h-6 w-6 text-orange-500\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">Business Information</h3>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <AutoSaveField\r\n            field=\"business_name\"\r\n            label=\"Business Name\"\r\n            placeholder=\"Enter your business name\"\r\n          />\r\n          <AutoSaveField\r\n            field=\"business_email\"\r\n            label=\"Business Email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your business email\"\r\n          />\r\n          <AutoSaveField\r\n            field=\"business_phone\"\r\n            label=\"Business Phone\"\r\n            type=\"tel\"\r\n            placeholder=\"(###) ###-####\"\r\n          />\r\n          <AutoSaveField\r\n            field=\"twilio_phone\"\r\n            label=\"Twilio Phone (SMS)\"\r\n            type=\"tel\"\r\n            placeholder=\"+1 (###) ###-####\"\r\n          />\r\n          <div className=\"md:col-span-2\">\r\n            <AutoSaveField\r\n              field=\"business_start_date\"\r\n              label=\"Business Start Date\"\r\n              type=\"date\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Personal Information Section */}\r\n      <div className=\"bg-stone-800 border border-stone-700 rounded-lg p-6\">\r\n        <div className=\"flex items-center space-x-3 mb-6\">\r\n          <User className=\"h-6 w-6 text-orange-500\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">Personal Information</h3>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <AutoSaveField\r\n            field=\"first_name\"\r\n            label=\"First Name\"\r\n            placeholder=\"Enter your first name\"\r\n          />\r\n          <AutoSaveField\r\n            field=\"last_name\"\r\n            label=\"Last Name\"\r\n            placeholder=\"Enter your last name\"\r\n          />\r\n          <AutoSaveField\r\n            field=\"personal_phone\"\r\n            label=\"Personal Phone\"\r\n            type=\"tel\"\r\n            placeholder=\"(###) ###-####\"\r\n          />\r\n          <AutoSaveField\r\n            field=\"personal_email\"\r\n            label=\"Personal Email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your personal email\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* URLs Section */}\r\n      <div className=\"bg-stone-800 border border-stone-700 rounded-lg p-6\">\r\n        <div className=\"flex items-center space-x-3 mb-6\">\r\n          <Link className=\"h-6 w-6 text-orange-500\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">URLs & Social Media</h3>\r\n        </div>\r\n        \r\n        <div className=\"space-y-6\">\r\n          {/* Website URL is auto-generated and read-only */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-300\">\r\n              Website URL (Auto-generated)\r\n            </label>\r\n            <div className=\"px-3 py-2 bg-stone-700 border border-stone-600 rounded-md text-gray-400 cursor-not-allowed\">\r\n              http://{businessData?.slug || 'your-slug'}.thatsmartsite.com\r\n            </div>\r\n            <p className=\"text-xs text-gray-500\">\r\n              This URL is automatically generated based on your business slug and cannot be changed.\r\n            </p>\r\n          </div>\r\n          \r\n          <AutoSaveField\r\n            field=\"gbp_url\"\r\n            label=\"Google Business Profile URL\"\r\n            type=\"url\"\r\n            placeholder=\"https://business.google.com/your-business\"\r\n          />\r\n          <div className=\"space-y-6\">\r\n            <div className=\"flex items-end space-x-4\">\r\n              <div className=\"flex-1\">\r\n                <AutoSaveField\r\n                  field=\"facebook_url\"\r\n                  label=\"Facebook URL\"\r\n                  type=\"url\"\r\n                  placeholder=\"https://facebook.com/yourpage\"\r\n                    disabled={!businessData?.facebook_enabled}\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 pb-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"facebook_enabled\"\r\n                    checked={businessData?.facebook_enabled ?? true}\r\n                  onChange={(e) => handleSocialMediaToggle('facebook', e.target.checked)}\r\n                  disabled={isUpdating}\r\n                  className=\"h-4 w-4 text-orange-500 focus:ring-orange-500 border-gray-300 rounded disabled:opacity-50\"\r\n                />\r\n                <label htmlFor=\"facebook_enabled\" className=\"text-sm font-medium text-gray-300\">\r\n                  Enable\r\n                </label>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-end space-x-4\">\r\n              <div className=\"flex-1\">\r\n                <AutoSaveField\r\n                  field=\"youtube_url\"\r\n                  label=\"YouTube URL\"\r\n                  type=\"url\"\r\n                  placeholder=\"https://youtube.com/@yourchannel\"\r\n                    disabled={!businessData?.youtube_enabled}\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 pb-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"youtube_enabled\"\r\n                    checked={businessData?.youtube_enabled ?? true}\r\n                  onChange={(e) => handleSocialMediaToggle('youtube', e.target.checked)}\r\n                  disabled={isUpdating}\r\n                  className=\"h-4 w-4 text-orange-500 focus:ring-orange-500 border-gray-300 rounded disabled:opacity-50\"\r\n                />\r\n                <label htmlFor=\"youtube_enabled\" className=\"text-sm font-medium text-gray-300\">\r\n                  Enable\r\n                </label>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-end space-x-4\">\r\n              <div className=\"flex-1\">\r\n                <AutoSaveField\r\n                  field=\"tiktok_url\"\r\n                  label=\"TikTok URL\"\r\n                  type=\"url\"\r\n                  placeholder=\"https://tiktok.com/@yourusername\"\r\n                    disabled={!businessData?.tiktok_enabled}\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 pb-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"tiktok_enabled\"\r\n                    checked={businessData?.tiktok_enabled ?? true}\r\n                  onChange={(e) => handleSocialMediaToggle('tiktok', e.target.checked)}\r\n                  disabled={isUpdating}\r\n                  className=\"h-4 w-4 text-orange-500 focus:ring-orange-500 border-gray-300 rounded disabled:opacity-50\"\r\n                />\r\n                <label htmlFor=\"tiktok_enabled\" className=\"text-sm font-medium text-gray-300\">\r\n                  Enable\r\n                </label>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-end space-x-4\">\r\n              <div className=\"flex-1\">\r\n                <AutoSaveField\r\n                  field=\"instagram_url\"\r\n                  label=\"Instagram URL\"\r\n                  type=\"url\"\r\n                  placeholder=\"https://instagram.com/yourusername\"\r\n                    disabled={!businessData?.instagram_enabled}\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 pb-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"instagram_enabled\"\r\n                    checked={businessData?.instagram_enabled ?? true}\r\n                  onChange={(e) => handleSocialMediaToggle('instagram', e.target.checked)}\r\n                  disabled={isUpdating}\r\n                  className=\"h-4 w-4 text-orange-500 focus:ring-orange-500 border-gray-300 rounded disabled:opacity-50\"\r\n                />\r\n                <label htmlFor=\"instagram_enabled\" className=\"text-sm font-medium text-gray-300\">\r\n                  Enable\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ProfileForm };","import React from 'react';\r\nimport { AlertCircle } from 'lucide-react';\r\n\r\nimport { ProfileForm } from './components/ProfileForm';\r\nimport { useProfileData } from './hooks/useProfileData';\r\n\r\nconst ProfileTab: React.FC = () => {\r\n  const {\r\n    businessData,\r\n    loading,\r\n    error,\r\n    updateBusiness,\r\n    isUpdating,\r\n  } = useProfileData();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-12\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-orange-500\"></div>\r\n        <span className=\"ml-3 text-gray-600\">Loading business profile...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <AlertCircle className=\"h-5 w-5 text-red-500 flex-shrink-0\" />\r\n          <div>\r\n            <h3 className=\"text-sm font-medium text-red-800\">Unable to Load Business Profile</h3>\r\n            <p className=\"text-sm text-red-600 mt-1\">{error}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <ProfileForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileTab;","import { config } from '@/shared/env';\r\n\r\nimport type {\r\n  Appointment,\r\n  CreateAppointmentRequest,\r\n  UpdateAppointmentRequest,\r\n} from '../types';\r\n\r\nconst API_BASE = `${config.apiUrl || ''}/api/schedule`;\r\n\r\n// Generic API request function\r\nasync function makeRequest<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\r\n  const url = `${API_BASE}${endpoint}`;\r\n  const token = localStorage.getItem('token');\r\n  \r\n  try {\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => { \r\n      controller.abort(); \r\n    }, 10000); // 10 second timeout\r\n    \r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token && { 'Authorization': `Bearer ${token}` }),\r\n        ...options.headers,\r\n      },\r\n      signal: controller.signal,\r\n    });\r\n    \r\n    clearTimeout(timeoutId);\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({ error: 'Request failed' })) as { error?: string };\r\n      throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json() as T;\r\n  } catch (error) {\r\n    if (error instanceof Error && error.name === 'AbortError') {\r\n      throw new Error('Request timeout');\r\n    }\r\n    \r\n    console.error('API request failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Get appointments for a specific date range\r\nexport const getAppointments = async (\r\n  startDate: string,\r\n  endDate: string\r\n): Promise<Appointment[]> => {\r\n  const params = new URLSearchParams({ startDate, endDate });\r\n  return makeRequest<Appointment[]>(`/appointments?${params}`);\r\n};\r\n\r\n// Get appointments for a specific date\r\nexport const getAppointmentsByDate = async (date: string): Promise<Appointment[]> => {\r\n  return makeRequest<Appointment[]>(`/appointments/date/${date}`);\r\n};\r\n\r\n// Get a single appointment by ID\r\nexport const getAppointment = async (id: number): Promise<Appointment> => {\r\n  return makeRequest<Appointment>(`/appointments/${id}`);\r\n};\r\n\r\n// Create a new appointment\r\nexport const createAppointment = async (\r\n  data: CreateAppointmentRequest\r\n): Promise<Appointment> => {\r\n  return makeRequest<Appointment>('/appointments', {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n\r\n// Update an existing appointment\r\nexport const updateAppointment = async (\r\n  id: number,\r\n  data: UpdateAppointmentRequest\r\n): Promise<Appointment> => {\r\n  return makeRequest<Appointment>(`/appointments/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n\r\n// Delete an appointment\r\nexport const deleteAppointment = async (id: number): Promise<void> => {\r\n  await makeRequest<{ message?: string }>(`/appointments/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n};\r\n\r\n// Update appointment status\r\nexport const updateAppointmentStatus = async (\r\n  id: number,\r\n  status: string\r\n): Promise<Appointment> => {\r\n  return makeRequest<Appointment>(`/appointments/${id}/status`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({ status }),\r\n  });\r\n};\r\n\r\n// Get available time slots for a specific date\r\nexport const getAvailableTimeSlots = async (\r\n  date: string,\r\n  duration: number = 60\r\n): Promise<string[]> => {\r\n  const params = new URLSearchParams({ date, duration: duration.toString() });\r\n  return makeRequest<string[]>(`/appointments/available-slots?${params}`);\r\n};\r\n","const API_BASE = '/api/schedule';\r\n\r\n// Helper function to make authenticated requests\r\nconst makeRequest = async <T = unknown>(endpoint: string, options: RequestInit = {}): Promise<T> => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const response = await fetch(`${API_BASE}${endpoint}`, {\r\n    ...options,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n      ...options.headers,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { error?: string };\r\n    throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<T>;\r\n};\r\n\r\nexport interface BlockedDay {\r\n  blocked_date: string;\r\n  reason?: string;\r\n  is_recurring?: boolean;\r\n  recurrence_pattern?: string;\r\n  recurrence_end_date?: string;\r\n}\r\n\r\nexport interface ToggleBlockedDayResponse {\r\n  action: 'added' | 'removed';\r\n  date: string;\r\n  reason?: string;\r\n  message: string;\r\n}\r\n\r\n// Get blocked days for a date range\r\nexport const getBlockedDays = async (startDate: string, endDate: string): Promise<BlockedDay[]> => {\r\n  const params = new URLSearchParams({\r\n    startDate,\r\n    endDate,\r\n  });\r\n  \r\n  return makeRequest<BlockedDay[]>(`/blocked-days?${params}`);\r\n};\r\n\r\n// Toggle blocked day (add if not exists, remove if exists)\r\nexport const toggleBlockedDay = async (date: string, reason?: string): Promise<ToggleBlockedDayResponse> => {\r\n  return makeRequest<ToggleBlockedDayResponse>('/blocked-days/toggle', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ date, reason }),\r\n  });\r\n};\r\n\r\n// Add blocked day\r\nexport const addBlockedDay = async (data: {\r\n  date: string;\r\n  reason?: string;\r\n  is_recurring?: boolean;\r\n  recurrence_pattern?: string;\r\n  recurrence_end_date?: string;\r\n}): Promise<BlockedDay> => {\r\n  return makeRequest<BlockedDay>('/blocked-days', {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n\r\n// Remove blocked day\r\nexport const removeBlockedDay = async (date: string): Promise<{ message: string; date: string }> => {\r\n  return makeRequest<{ message: string; date: string }>(`/blocked-days/${date}`, {\r\n    method: 'DELETE',\r\n  });\r\n};\r\n","import { config } from '@/shared/env';\r\n\r\nimport type {\r\n  CreateTimeBlockRequest,\r\n  TimeBlock,\r\n  UpdateTimeBlockRequest,\r\n} from '../types';\r\n\r\nconst API_BASE = `${config.apiUrl || ''}/api/schedule`;\r\n\r\n// Generic API request function\r\nasync function makeRequest<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\r\n  const url = `${API_BASE}${endpoint}`;\r\n  const token = localStorage.getItem('token');\r\n  \r\n  try {\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => { \r\n      controller.abort(); \r\n    }, 10000); // 10 second timeout\r\n    \r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token && { 'Authorization': `Bearer ${token}` }),\r\n        ...options.headers,\r\n      },\r\n      signal: controller.signal,\r\n    });\r\n    \r\n    clearTimeout(timeoutId);\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({ error: 'Request failed' })) as { error?: string };\r\n      throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json() as T;\r\n  } catch (error) {\r\n    if (error instanceof Error && error.name === 'AbortError') {\r\n      throw new Error('Request timeout');\r\n    }\r\n    \r\n    console.error('API request failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Get time blocks for a specific date range\r\nexport const getTimeBlocks = async (\r\n  startDate: string,\r\n  endDate: string\r\n): Promise<TimeBlock[]> => {\r\n  const params = new URLSearchParams({ startDate, endDate });\r\n  return makeRequest<TimeBlock[]>(`/time-blocks?${params}`);\r\n};\r\n\r\n// Get time blocks for a specific date\r\nexport const getTimeBlocksByDate = async (date: string): Promise<TimeBlock[]> => {\r\n  return makeRequest<TimeBlock[]>(`/time-blocks/date/${date}`);\r\n};\r\n\r\n// Get a single time block by ID\r\nexport const getTimeBlock = async (id: number): Promise<TimeBlock> => {\r\n  return makeRequest<TimeBlock>(`/time-blocks/${id}`);\r\n};\r\n\r\n// Create a new time block\r\nexport const createTimeBlock = async (\r\n  data: CreateTimeBlockRequest\r\n): Promise<TimeBlock> => {\r\n  return makeRequest<TimeBlock>('/time-blocks', {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n\r\n// Update an existing time block\r\nexport const updateTimeBlock = async (\r\n  id: number,\r\n  data: UpdateTimeBlockRequest\r\n): Promise<TimeBlock> => {\r\n  return makeRequest<TimeBlock>(`/time-blocks/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n\r\n// Delete a time block\r\nexport const deleteTimeBlock = async (id: number): Promise<void> => {\r\n  await makeRequest<{ message?: string }>(`/time-blocks/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n};\r\n","import React, { useEffect,useState } from 'react';\r\nimport { Calendar, Clock, DollarSign, FileText,Mail, Phone, User, X } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\nimport { createAppointment, updateAppointment } from '../../api';\r\nimport type { Appointment, CreateAppointmentRequest, UpdateAppointmentRequest } from '../../types';\r\n\r\ninterface AppointmentModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSuccess: () => void;\r\n  appointment?: Appointment | null;\r\n  selectedDate: string;\r\n  selectedTime?: string;\r\n}\r\n\r\nexport const AppointmentModal: React.FC<AppointmentModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSuccess,\r\n  appointment,\r\n  selectedDate,\r\n  selectedTime\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    service_type: '',\r\n    service_duration: 60,\r\n    start_time: '',\r\n    end_time: '',\r\n    customer_name: '',\r\n    customer_phone: '',\r\n    customer_email: '',\r\n    price: 0,\r\n    deposit: 0,\r\n    notes: '',\r\n    internal_notes: ''\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const isEdit = !!appointment;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      if (appointment) {\r\n        // Edit mode - populate form with existing data\r\n        setFormData({\r\n          title: appointment.title,\r\n          description: appointment.description || '',\r\n          service_type: appointment.service_type,\r\n          service_duration: appointment.service_duration,\r\n          start_time: appointment.start_time,\r\n          end_time: appointment.end_time,\r\n          customer_name: appointment.customer_name,\r\n          customer_phone: appointment.customer_phone,\r\n          customer_email: appointment.customer_email || '',\r\n          price: appointment.price || 0,\r\n          deposit: appointment.deposit || 0,\r\n          notes: appointment.notes || '',\r\n          internal_notes: appointment.internal_notes || ''\r\n        });\r\n      } else {\r\n        // Create mode - set defaults\r\n        const startTime = selectedTime ? `${selectedDate}T${selectedTime}:00` : `${selectedDate}T09:00:00`;\r\n        const endTime = selectedTime ? \r\n          new Date(new Date(startTime).getTime() + 60 * 60 * 1000).toISOString() : \r\n          new Date(new Date(startTime).getTime() + 60 * 60 * 1000).toISOString();\r\n\r\n        setFormData({\r\n          title: '',\r\n          description: '',\r\n          service_type: '',\r\n          service_duration: 60,\r\n          start_time: startTime,\r\n          end_time: endTime,\r\n          customer_name: '',\r\n          customer_phone: '',\r\n          customer_email: '',\r\n          price: 0,\r\n          deposit: 0,\r\n          notes: '',\r\n          internal_notes: ''\r\n        });\r\n      }\r\n      setError(null);\r\n    }\r\n  }, [isOpen, appointment, selectedDate, selectedTime]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'number' ? Number(value) : value\r\n    }));\r\n  };\r\n\r\n  const handleDurationChange = (duration: number) => {\r\n    const startTime = new Date(formData.start_time);\r\n    const endTime = new Date(startTime.getTime() + duration * 60 * 1000);\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      service_duration: duration,\r\n      end_time: endTime.toISOString()\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      if (isEdit) {\r\n        const updateData: UpdateAppointmentRequest = {\r\n          id: appointment.id,\r\n          ...formData\r\n        };\r\n        await updateAppointment(appointment.id, updateData);\r\n      } else {\r\n        const createData: CreateAppointmentRequest = formData;\r\n        await createAppointment(createData);\r\n      }\r\n      \r\n      onSuccess();\r\n      onClose();\r\n    } catch (err) {\r\n      console.error('Error saving appointment:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to save appointment');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-stone-800 rounded-xl border border-stone-700 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-2xl font-bold text-white\">\r\n              {isEdit ? 'Edit Appointment' : 'New Appointment'}\r\n            </h2>\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-white\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </Button>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-900/30 border border-red-500 rounded-lg text-red-300\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={(e) => { e.preventDefault(); void handleSubmit(e); }} className=\"space-y-6\">\r\n            {/* Basic Information */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"appointment-title\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  <Calendar className=\"inline h-4 w-4 mr-2\" />\r\n                  Title *\r\n                </label>\r\n                <input\r\n                  id=\"appointment-title\"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={formData.title}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"appointment-service-type\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  <Clock className=\"inline h-4 w-4 mr-2\" />\r\n                  Service Type *\r\n                </label>\r\n                <input\r\n                  id=\"appointment-service-type\"\r\n                  type=\"text\"\r\n                  name=\"service_type\"\r\n                  value={formData.service_type}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"appointment-description\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"appointment-description\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                rows={3}\r\n                className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n\r\n            {/* Timing */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"appointment-start-time\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Start Time *\r\n                </label>\r\n                <input\r\n                  id=\"appointment-start-time\"\r\n                  type=\"datetime-local\"\r\n                  name=\"start_time\"\r\n                  value={formData.start_time.slice(0, 16)}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"appointment-duration\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Duration (minutes) *\r\n                </label>\r\n                <select\r\n                  id=\"appointment-duration\"\r\n                  name=\"service_duration\"\r\n                  value={formData.service_duration}\r\n                  onChange={(e) => { handleDurationChange(Number(e.target.value)); }}\r\n                  required\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                >\r\n                  <option value={30}>30 minutes</option>\r\n                  <option value={60}>1 hour</option>\r\n                  <option value={90}>1.5 hours</option>\r\n                  <option value={120}>2 hours</option>\r\n                  <option value={180}>3 hours</option>\r\n                  <option value={240}>4 hours</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"appointment-end-time\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  End Time\r\n                </label>\r\n                <input\r\n                  id=\"appointment-end-time\"\r\n                  type=\"datetime-local\"\r\n                  name=\"end_time\"\r\n                  value={formData.end_time.slice(0, 16)}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Customer Information */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"appointment-customer-name\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  <User className=\"inline h-4 w-4 mr-2\" />\r\n                  Customer Name *\r\n                </label>\r\n                <input\r\n                  id=\"appointment-customer-name\"\r\n                  type=\"text\"\r\n                  name=\"customer_name\"\r\n                  value={formData.customer_name}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"appointment-customer-phone\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  <Phone className=\"inline h-4 w-4 mr-2\" />\r\n                  Phone *\r\n                </label>\r\n                <input\r\n                  id=\"appointment-customer-phone\"\r\n                  type=\"tel\"\r\n                  name=\"customer_phone\"\r\n                  value={formData.customer_phone}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"appointment-customer-email\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                <Mail className=\"inline h-4 w-4 mr-2\" />\r\n                Email\r\n              </label>\r\n              <input\r\n                id=\"appointment-customer-email\"\r\n                type=\"email\"\r\n                name=\"customer_email\"\r\n                value={formData.customer_email}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n\r\n            {/* Pricing */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"appointment-price\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  <DollarSign className=\"inline h-4 w-4 mr-2\" />\r\n                  Price\r\n                </label>\r\n                <input\r\n                  id=\"appointment-price\"\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  value={formData.price}\r\n                  onChange={handleInputChange}\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"appointment-deposit\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  <DollarSign className=\"inline h-4 w-4 mr-2\" />\r\n                  Deposit\r\n                </label>\r\n                <input\r\n                  id=\"appointment-deposit\"\r\n                  type=\"number\"\r\n                  name=\"deposit\"\r\n                  value={formData.deposit}\r\n                  onChange={handleInputChange}\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Notes */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"appointment-notes\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  <FileText className=\"inline h-4 w-4 mr-2\" />\r\n                  Customer Notes\r\n                </label>\r\n                <textarea\r\n                  id=\"appointment-notes\"\r\n                  name=\"notes\"\r\n                  value={formData.notes}\r\n                  onChange={handleInputChange}\r\n                  rows={3}\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"appointment-internal-notes\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  <FileText className=\"inline h-4 w-4 mr-2\" />\r\n                  Internal Notes\r\n                </label>\r\n                <textarea\r\n                  id=\"appointment-internal-notes\"\r\n                  name=\"internal_notes\"\r\n                  value={formData.internal_notes}\r\n                  onChange={handleInputChange}\r\n                  rows={3}\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Actions */}\r\n            <div className=\"flex justify-end space-x-3 pt-4 border-t border-stone-700\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"secondary\"\r\n                onClick={onClose}\r\n                disabled={loading}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n                disabled={loading}\r\n                className=\"bg-orange-500 hover:bg-orange-600\"\r\n              >\r\n                {loading ? 'Saving...' : (isEdit ? 'Update' : 'Create')}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * Shared utilities for schedule components\r\n */\r\n\r\ntype AppointmentStatus = 'confirmed' | 'scheduled' | 'in_progress' | 'completed' | 'cancelled' | 'pending';\r\n\r\ninterface StatusStyles {\r\n  background: string;\r\n  badge: string;\r\n}\r\n\r\n/**\r\n * Get status-based styling for appointments\r\n */\r\nexport function getStatusStyles(status: AppointmentStatus): StatusStyles {\r\n  switch (status) {\r\n    case 'confirmed':\r\n      return {\r\n        background: 'bg-green-900/30 border-green-500',\r\n        badge: 'bg-green-900 text-green-300'\r\n      };\r\n    case 'scheduled':\r\n      return {\r\n        background: 'bg-blue-900/30 border-blue-500',\r\n        badge: 'bg-blue-900 text-blue-300'\r\n      };\r\n    case 'in_progress':\r\n      return {\r\n        background: 'bg-orange-900/30 border-orange-500',\r\n        badge: 'bg-orange-900 text-orange-300'\r\n      };\r\n    case 'completed':\r\n      return {\r\n        background: 'bg-gray-900/30 border-gray-500',\r\n        badge: 'bg-gray-900 text-gray-300'\r\n      };\r\n    case 'cancelled':\r\n      return {\r\n        background: 'bg-red-900/30 border-red-500',\r\n        badge: 'bg-red-900 text-red-300'\r\n      };\r\n    default:\r\n      return {\r\n        background: 'bg-yellow-900/30 border-yellow-500',\r\n        badge: 'bg-yellow-900 text-yellow-300'\r\n      };\r\n  }\r\n}\r\n\r\n/**\r\n * Generate time slots for day view (8 AM to 7 PM)\r\n */\r\nexport function generateTimeSlots(): string[] {\r\n  return Array.from({ length: 12 }, (_, i) => {\r\n    const hour = i + 8;\r\n    return `${hour.toString().padStart(2, '0')}:00`;\r\n  });\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport type { Appointment, TimeBlock } from '../types';\r\nimport { generateTimeSlots, getStatusStyles } from './scheduleUtils';\r\n\r\ninterface DayViewProps {\r\n  selectedDate: string;\r\n  appointments: Appointment[];\r\n  timeBlocks: TimeBlock[];\r\n  onEditAppointment: (appointment: Appointment) => void;\r\n  onCreateAppointment: (time?: string, date?: string) => void;\r\n}\r\n\r\nexport const DayView: React.FC<DayViewProps> = ({\r\n  selectedDate,\r\n  appointments,\r\n  timeBlocks,\r\n  onEditAppointment,\r\n  onCreateAppointment\r\n}) => {\r\n  const timeSlots = generateTimeSlots();\r\n\r\n  // Get appointments for a specific date and time\r\n  const getAppointmentForDateTime = (date: string, time: string) => {\r\n    return appointments.find(apt => {\r\n      const startTime = new Date(apt.start_time);\r\n      const appointmentDate = startTime.toISOString().split('T')[0];\r\n      const timeString = startTime.toTimeString().slice(0, 5);\r\n      return appointmentDate === date && timeString === time;\r\n    });\r\n  };\r\n\r\n  // Get time block for a specific date and time\r\n  const getTimeBlockForDateTime = (date: string, time: string) => {\r\n    return timeBlocks.find(block => {\r\n      const startTime = new Date(block.start_time);\r\n      const endTime = new Date(block.end_time);\r\n      const blockDate = startTime.toISOString().split('T')[0];\r\n      const slotTime = new Date(`${date}T${time}:00`);\r\n      return blockDate === date && slotTime >= startTime && slotTime < endTime;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      {timeSlots.map((time) => {\r\n        const appointment = getAppointmentForDateTime(selectedDate, time);\r\n        const timeBlock = getTimeBlockForDateTime(selectedDate, time);\r\n        const { background, badge } = appointment ? getStatusStyles(appointment.status) : { background: '', badge: '' };\r\n\r\n        return (\r\n          <div key={time} className=\"flex items-center border-b border-stone-700 last:border-b-0\">\r\n            <div className=\"w-16 text-gray-400 text-sm font-medium py-3\">\r\n              {time}\r\n            </div>\r\n            <div className=\"flex-1 py-2\">\r\n              {appointment ? (\r\n                <button \r\n                  type=\"button\"\r\n                  className={`w-full text-left p-3 rounded-lg border-l-4 cursor-pointer hover:opacity-80 transition-opacity ${background}`}\r\n                  onClick={() => { onEditAppointment(appointment); }}\r\n                >\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <p className=\"font-medium text-white\">{appointment.customer_name}</p>\r\n                      <p className=\"text-gray-300 text-sm\">{appointment.title}</p>\r\n                      <p className=\"text-gray-400 text-xs\">{appointment.service_duration} minutes</p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <p className=\"text-gray-300 text-sm\">{appointment.customer_phone}</p>\r\n                      <span className={`inline-block px-2 py-1 rounded-full text-xs font-medium ${badge}`}>\r\n                        {appointment.status.replace('_', ' ')}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </button>\r\n              ) : timeBlock ? (\r\n                <div className=\"p-3 rounded-lg border-l-4 bg-gray-900/30 border-gray-500\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <p className=\"font-medium text-white\">{timeBlock.title}</p>\r\n                      <p className=\"text-gray-300 text-sm\">{timeBlock.description}</p>\r\n                      <p className=\"text-gray-400 text-xs\">{timeBlock.block_type}</p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-gray-900 text-gray-300\">\r\n                        {timeBlock.block_type}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"h-12 w-full text-left flex items-center text-gray-500 text-sm cursor-pointer hover:text-white hover:bg-stone-700/50 rounded-lg transition-colors\"\r\n                  onClick={() => { onCreateAppointment(time, selectedDate); }}\r\n                >\r\n                  Available - Click to add appointment\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\n\r\nimport type { Appointment } from '../types';\r\nimport { getStatusStyles } from './scheduleUtils';\r\n\r\ninterface AppointmentCardProps {\r\n  appointment: Appointment;\r\n  onEdit: (appointment: Appointment) => void;\r\n  compact?: boolean;\r\n}\r\n\r\nexport const AppointmentCard: React.FC<AppointmentCardProps> = ({\r\n  appointment,\r\n  onEdit,\r\n  compact = false\r\n}) => {\r\n  const { background, badge } = getStatusStyles(appointment.status);\r\n\r\n  if (compact) {\r\n    return (\r\n      <button \r\n        type=\"button\"\r\n        className={`w-full text-left p-1 rounded text-xs cursor-pointer hover:opacity-80 transition-opacity ${background}`}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          onEdit(appointment);\r\n        }}\r\n      >\r\n        <div className=\"truncate\">{appointment.customer_name}</div>\r\n        <div className=\"truncate text-xs opacity-75\">{appointment.title}</div>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button \r\n      type=\"button\"\r\n      className={`w-full text-left p-3 rounded-lg border-l-4 cursor-pointer hover:opacity-80 transition-opacity ${background}`}\r\n      onClick={() => { onEdit(appointment); }}\r\n    >\r\n      <div className=\"space-y-2\">\r\n        <div>\r\n          <p className=\"font-semibold text-white text-sm\">{appointment.customer_name}</p>\r\n          <p className=\"text-gray-300 text-xs\">{appointment.title}</p>\r\n        </div>\r\n        \r\n        <div className=\"space-y-1\">\r\n          <div className=\"text-xs text-gray-400\">\r\n            {new Date(appointment.start_time).toLocaleTimeString('en-US', { \r\n              hour: 'numeric', \r\n              minute: '2-digit',\r\n              hour12: true \r\n            })} - {new Date(appointment.end_time).toLocaleTimeString('en-US', { \r\n              hour: 'numeric', \r\n              minute: '2-digit',\r\n              hour12: true \r\n            })}\r\n          </div>\r\n          \r\n          <div className=\"text-xs text-gray-400\">\r\n            {appointment.service_duration} minutes\r\n          </div>\r\n          \r\n          <div className=\"text-xs text-gray-400\">\r\n            {appointment.customer_phone}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"pt-2\">\r\n          <span className={`inline-block px-2 py-1 rounded-full text-xs font-medium ${badge}`}>\r\n            {appointment.status.replace('_', ' ')}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport { X } from 'lucide-react';\r\n\r\nimport { formatDateToYYYYMMDD, getToday, parseLocalDate } from '@/shared/utils';\r\n\r\nimport type { Appointment } from '../types';\r\nimport { AppointmentCard } from './AppointmentCard';\r\n\r\ninterface MonthViewProps {\r\n  selectedDate: string;\r\n  appointments: Appointment[];\r\n  blockedDays: Set<string>;\r\n  onEditAppointment: (appointment: Appointment) => void;\r\n  onToggleDayBlock: (date: string) => Promise<void>;\r\n}\r\n\r\nexport const MonthView: React.FC<MonthViewProps> = ({\r\n  selectedDate,\r\n  appointments,\r\n  blockedDays,\r\n  onEditAppointment,\r\n  onToggleDayBlock\r\n}) => {\r\n  const selectedDateObj = parseLocalDate(selectedDate);\r\n  const yearNum = selectedDateObj.getFullYear();\r\n  const monthNum = selectedDateObj.getMonth();\r\n  \r\n  // Get first day of month and calculate starting date (Monday of first week)\r\n  const firstDay = new Date(yearNum, monthNum, 1);\r\n  const firstDayOfWeek = firstDay.getDay();\r\n  const mondayOffset = firstDayOfWeek === 0 ? -6 : 1 - firstDayOfWeek;\r\n  const startDate = new Date(firstDay);\r\n  startDate.setDate(firstDay.getDate() + mondayOffset);\r\n  \r\n  // Generate calendar days (6 weeks = 42 days)\r\n  const calendarDays = [];\r\n  for (let i = 0; i < 42; i++) {\r\n    const date = new Date(startDate);\r\n    date.setDate(startDate.getDate() + i);\r\n    calendarDays.push(date);\r\n  }\r\n  \r\n  // Get appointments for the month\r\n  const monthAppointments = appointments.filter(apt => {\r\n    const aptDate = new Date(apt.start_time);\r\n    return aptDate.getFullYear() === yearNum && aptDate.getMonth() === monthNum;\r\n  });\r\n  \r\n  const today = getToday();\r\n  \r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <div className=\"min-w-full\">\r\n        {/* Month header */}\r\n        <div className=\"grid grid-cols-7 gap-1 mb-2\">\r\n          {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day) => (\r\n            <div key={day} className=\"text-center py-2 text-gray-400 text-sm font-medium\">\r\n              {day}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Calendar grid */}\r\n        <div className=\"grid grid-cols-7 gap-1\">\r\n          {calendarDays.map((date, index) => {\r\n            const isCurrentMonth = date.getMonth() === monthNum;\r\n            const dateString = formatDateToYYYYMMDD(date);\r\n            const isToday = dateString === today;\r\n            const isBlocked = blockedDays.has(dateString);\r\n            const dayAppointments = monthAppointments.filter(apt => {\r\n              const aptDate = new Date(apt.start_time).toISOString().split('T')[0];\r\n              return aptDate === dateString;\r\n            });\r\n            \r\n            return (\r\n              <button \r\n                type=\"button\"\r\n                key={index}\r\n                className={`w-full text-left min-h-[6rem] p-2 border border-stone-700 rounded-lg relative cursor-pointer transition-all duration-200 ${\r\n                  isCurrentMonth ? 'bg-stone-800' : 'bg-stone-900/50'\r\n                } ${isToday ? 'ring-2 ring-orange-500' : ''} ${isBlocked ? 'bg-red-900/20 border-red-500' : ''}`}\r\n                onClick={() => { void onToggleDayBlock(dateString).catch((err: unknown) => { console.error(err); }); }}\r\n              >\r\n                <div className={`text-sm font-medium mb-1 ${\r\n                  isCurrentMonth ? 'text-white' : 'text-gray-500'\r\n                } ${isToday ? 'text-orange-300' : ''}`}>\r\n                  {date.getDate()}\r\n                </div>\r\n                \r\n                <div className=\"space-y-1\">\r\n                  {!isBlocked && dayAppointments.slice(0, 3).map((appointment) => (\r\n                    <AppointmentCard \r\n                      key={appointment.id}\r\n                      appointment={appointment}\r\n                      onEdit={onEditAppointment}\r\n                      compact\r\n                    />\r\n                  ))}\r\n                  {!isBlocked && dayAppointments.length > 3 && (\r\n                    <div className=\"text-xs text-gray-400\">\r\n                      +{dayAppointments.length - 3} more\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Red X overlay for blocked days */}\r\n                {isBlocked && (\r\n                  <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\r\n                    <X className=\"w-8 h-8 text-red-500 opacity-80\" strokeWidth={3} />\r\n                  </div>\r\n                )}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\n\r\nimport { generateTimeSlots } from './scheduleUtils';\r\n\r\ninterface ScheduleLoadingStateProps {\r\n  viewMode: 'day' | 'week' | 'month';\r\n}\r\n\r\nexport const ScheduleLoadingState: React.FC<ScheduleLoadingStateProps> = ({ viewMode }) => {\r\n  const timeSlots = generateTimeSlots();\r\n\r\n  return (\r\n    <div className=\"bg-stone-800 rounded-xl border border-stone-700 p-6\">\r\n      <div className=\"animate-pulse space-y-4\">\r\n        {viewMode === 'day' ? (\r\n          timeSlots.map((time) => (\r\n            <div key={time} className=\"h-12 bg-stone-700 rounded\"></div>\r\n          ))\r\n        ) : viewMode === 'week' ? (\r\n          <div className=\"grid grid-cols-7 gap-4\">\r\n            {Array.from({ length: 7 }).map((_, i) => (\r\n              <div key={i} className=\"min-h-[200px] bg-stone-700 rounded-xl animate-pulse\"></div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-7 gap-1\">\r\n            {Array.from({ length: 42 }).map((_, i) => (\r\n              <div key={i} className=\"h-24 bg-stone-700 rounded\"></div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport { ChevronLeft, ChevronRight, Filter, Search } from 'lucide-react';\r\n\r\nimport { formatMonthYear, formatWeekRange, parseLocalDate } from '@/shared/utils';\r\n\r\ninterface ScheduleNavigationHeaderProps {\r\n  selectedDate: string;\r\n  viewMode: 'day' | 'week' | 'month';\r\n  onNavigateMonth: (direction: 'prev' | 'next') => void;\r\n  onNavigateWeek: (direction: 'prev' | 'next') => void;\r\n}\r\n\r\nexport const ScheduleNavigationHeader: React.FC<ScheduleNavigationHeaderProps> = ({\r\n  selectedDate,\r\n  viewMode,\r\n  onNavigateMonth,\r\n  onNavigateWeek\r\n}) => {\r\n  // Get title based on view mode\r\n  const getTitle = () => {\r\n    const date = parseLocalDate(selectedDate);\r\n    switch (viewMode) {\r\n      case 'day':\r\n        return date.toLocaleDateString('en-US', { \r\n          weekday: 'long', \r\n          year: 'numeric', \r\n          month: 'long', \r\n          day: 'numeric' \r\n        });\r\n      case 'week':\r\n      case 'month':\r\n        return ''; // No title for week/month view since it's shown in center navigation\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4 flex items-center justify-between relative\">\r\n      {getTitle() && (\r\n        <h3 className=\"text-lg font-semibold text-white\">\r\n          {getTitle()}\r\n        </h3>\r\n      )}\r\n      \r\n      {/* Week Navigation - centered, only show in week view */}\r\n      {viewMode === 'week' && (\r\n        <div className=\"absolute left-1/2 transform -translate-x-1/2 flex items-center space-x-3\">\r\n          <button\r\n            onClick={() => { onNavigateWeek('prev'); }}\r\n            className=\"text-gray-300 hover:text-white hover:bg-stone-700 p-2 rounded transition-colors\"\r\n          >\r\n            <ChevronLeft className=\"h-6 w-6\" />\r\n          </button>\r\n          \r\n          <span className=\"text-lg font-semibold text-white\">\r\n            {formatWeekRange(selectedDate)}\r\n          </span>\r\n          \r\n          <button\r\n            onClick={() => { onNavigateWeek('next'); }}\r\n            className=\"text-gray-300 hover:text-white hover:bg-stone-700 p-2 rounded transition-colors\"\r\n          >\r\n            <ChevronRight className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Month Navigation - centered, only show in month view */}\r\n      {viewMode === 'month' && (\r\n        <div className=\"absolute left-1/2 transform -translate-x-1/2 flex items-center space-x-3\">\r\n          <button\r\n            onClick={() => { onNavigateMonth('prev'); }}\r\n            className=\"text-gray-300 hover:text-white hover:bg-stone-700 p-2 rounded transition-colors\"\r\n          >\r\n            <ChevronLeft className=\"h-6 w-6\" />\r\n          </button>\r\n          \r\n          <span className=\"text-lg font-semibold text-white\">\r\n            {formatMonthYear(selectedDate)}\r\n          </span>\r\n          \r\n          <button\r\n            onClick={() => { onNavigateMonth('next'); }}\r\n            className=\"text-gray-300 hover:text-white hover:bg-stone-700 p-2 rounded transition-colors\"\r\n          >\r\n            <ChevronRight className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"flex items-center space-x-2\">\r\n        <Filter className=\"h-4 w-4 text-gray-400\" />\r\n        <Search className=\"h-4 w-4 text-gray-400\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport { X } from 'lucide-react';\r\n\r\nimport { getToday, getWeekDates, parseLocalDate } from '@/shared/utils';\r\n\r\nimport type { Appointment, TimeBlock } from '../types';\r\nimport { AppointmentCard } from './AppointmentCard';\r\n\r\ninterface WeekViewProps {\r\n  selectedDate: string;\r\n  appointments: Appointment[];\r\n  timeBlocks: TimeBlock[];\r\n  blockedDays: Set<string>;\r\n  onEditAppointment: (appointment: Appointment) => void;\r\n  onCreateAppointment: (time?: string, date?: string) => void;\r\n  onToggleDayBlock: (date: string) => Promise<void>;\r\n}\r\n\r\nexport const WeekView: React.FC<WeekViewProps> = ({\r\n  selectedDate,\r\n  appointments,\r\n  timeBlocks,\r\n  blockedDays,\r\n  onEditAppointment,\r\n  onCreateAppointment,\r\n  onToggleDayBlock\r\n}) => {\r\n  const weekDates = getWeekDates(selectedDate);\r\n  const today = getToday();\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-7 gap-4\">\r\n      {weekDates.map((date) => {\r\n        const dateObj = parseLocalDate(date);\r\n        const isToday = date === today;\r\n        const isCurrentMonth = dateObj.getMonth() === parseLocalDate(selectedDate).getMonth();\r\n        const isBlocked = blockedDays.has(date);\r\n        \r\n        // Get appointment for this date (since only one per day)\r\n        const dayAppointment = appointments.find(apt => {\r\n          const aptDate = new Date(apt.start_time).toISOString().split('T')[0];\r\n          return aptDate === date;\r\n        });\r\n        \r\n        // Get time block for this date\r\n        const dayTimeBlock = timeBlocks.find(block => {\r\n          const blockDate = new Date(block.start_time).toISOString().split('T')[0];\r\n          return blockDate === date;\r\n        });\r\n        \r\n        return (\r\n          <button \r\n            type=\"button\"\r\n            key={date}\r\n            className={`min-h-[200px] p-4 rounded-xl border-2 transition-all duration-200 relative cursor-pointer text-left w-full ${\r\n              isToday \r\n                ? 'border-orange-500 bg-orange-500/10' \r\n                : isCurrentMonth \r\n                  ? 'border-stone-600 bg-stone-800/50' \r\n                  : 'border-stone-700 bg-stone-900/30'\r\n            } ${isBlocked ? 'bg-red-900/20 border-red-500' : ''}`}\r\n            onClick={() => {\r\n              alert('CLICKED: ' + date);\r\n              void onToggleDayBlock(date).catch((err: unknown) => { console.error(err); });\r\n            }}\r\n          >\r\n            {/* Day header */}\r\n            <div className=\"mb-3\">\r\n              <div className={`flex items-center justify-between text-sm font-medium ${\r\n                isToday ? 'text-orange-300' : isCurrentMonth ? 'text-white' : 'text-gray-500'\r\n              }`}>\r\n                <div>\r\n                  {dateObj.toLocaleDateString('en-US', { weekday: 'short' })}\r\n                </div>\r\n                {!dayAppointment && !dayTimeBlock && !isBlocked && (\r\n                  <button \r\n                    type=\"button\"\r\n                    className=\"w-8 h-8 flex items-center justify-center text-gray-500 hover:text-white hover:bg-orange-500/20 rounded-full transition-all duration-200 cursor-pointer\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      onCreateAppointment(undefined, date);\r\n                    }}\r\n                    aria-label=\"Add appointment\"\r\n                  >\r\n                    <span className=\"text-lg font-light\">+</span>\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className={`text-lg font-bold ${\r\n                isToday ? 'text-orange-300' : isCurrentMonth ? 'text-white' : 'text-gray-500'\r\n              }`}>\r\n                {dateObj.getDate()}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Day content */}\r\n            <div className=\"flex-1\">\r\n              {dayAppointment ? (\r\n                <AppointmentCard \r\n                  appointment={dayAppointment}\r\n                  onEdit={onEditAppointment}\r\n                />\r\n              ) : dayTimeBlock ? (\r\n                <div className=\"p-3 rounded-lg border-l-4 bg-gray-900/30 border-gray-500\">\r\n                  <div className=\"space-y-2\">\r\n                    <div>\r\n                      <p className=\"font-semibold text-white text-sm\">{dayTimeBlock.title}</p>\r\n                      <p className=\"text-gray-300 text-xs\">{dayTimeBlock.description}</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"text-xs text-gray-400\">\r\n                      {dayTimeBlock.block_type}\r\n                    </div>\r\n                    \r\n                    <div className=\"pt-2\">\r\n                      <span className=\"inline-block px-2 py-1 rounded-full text-xs font-medium bg-gray-900 text-gray-300\">\r\n                        {dayTimeBlock.block_type}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"h-full\">\r\n                  {/* Empty day - no content needed since + button is in header */}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Red X overlay for blocked days */}\r\n            {isBlocked && (\r\n              <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\r\n                <X className=\"w-16 h-16 text-red-500 opacity-80\" strokeWidth={3} />\r\n              </div>\r\n            )}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\n\nimport type { Appointment, TimeBlock } from '../types';\nimport { DayView } from './DayView';\nimport { MonthView } from './MonthView';\nimport { ScheduleLoadingState } from './ScheduleLoadingState';\nimport { ScheduleNavigationHeader } from './ScheduleNavigationHeader';\nimport { WeekView } from './WeekView';\n\ninterface ScheduleGridProps {\n  selectedDate: string;\n  appointments: Appointment[];\n  timeBlocks: TimeBlock[];\n  loading: boolean;\n  viewMode: 'day' | 'week' | 'month';\n  onEditAppointment: (appointment: Appointment) => void;\n  onCreateAppointment: (time?: string, date?: string) => void;\n  blockedDays: Set<string>;\n  onToggleDayBlock: (date: string) => Promise<void>;\n  onNavigateMonth: (direction: 'prev' | 'next') => void;\n  onNavigateWeek: (direction: 'prev' | 'next') => void;\n}\n\nexport const ScheduleGrid: React.FC<ScheduleGridProps> = ({\n  selectedDate,\n  appointments,\n  timeBlocks,\n  loading,\n  viewMode,\n  onEditAppointment,\n  onCreateAppointment,\n  blockedDays,\n  onToggleDayBlock,\n  onNavigateMonth,\n  onNavigateWeek\n}) => {\n  if (loading) {\n    return <ScheduleLoadingState viewMode={viewMode} />;\n  }\n\n  return (\n    <div className=\"bg-stone-800 rounded-xl border border-stone-700 p-6\">\n      <ScheduleNavigationHeader\n        selectedDate={selectedDate}\n        viewMode={viewMode}\n        onNavigateMonth={onNavigateMonth}\n        onNavigateWeek={onNavigateWeek}\n      />\n      \n      {viewMode === 'day' && (\n        <DayView\n          selectedDate={selectedDate}\n          appointments={appointments}\n          timeBlocks={timeBlocks}\n          onEditAppointment={onEditAppointment}\n          onCreateAppointment={onCreateAppointment}\n        />\n      )}\n      \n      {viewMode === 'week' && (\n        <WeekView\n          selectedDate={selectedDate}\n          appointments={appointments}\n          timeBlocks={timeBlocks}\n          blockedDays={blockedDays}\n          onEditAppointment={onEditAppointment}\n          onCreateAppointment={onCreateAppointment}\n          onToggleDayBlock={onToggleDayBlock}\n        />\n      )}\n      \n      {viewMode === 'month' && (\n        <MonthView\n          selectedDate={selectedDate}\n          appointments={appointments}\n          blockedDays={blockedDays}\n          onEditAppointment={onEditAppointment}\n          onToggleDayBlock={onToggleDayBlock}\n        />\n      )}\n    </div>\n  );\n};","import React from 'react';\nimport { Calendar, Plus } from 'lucide-react';\n\nimport { Button } from '@/shared/ui';\n\ninterface ScheduleHeaderProps {\n  selectedDate: string;\n  setSelectedDate: (date: string) => void;\n  viewMode: 'day' | 'week' | 'month';\n  setViewMode: (mode: 'day' | 'week' | 'month') => void;\n  onCreateAppointment: () => void;\n  onGoToToday: () => void;\n}\n\nexport const ScheduleHeader: React.FC<ScheduleHeaderProps> = ({\n  selectedDate,\n  setSelectedDate,\n  viewMode,\n  setViewMode,\n  onCreateAppointment,\n  onGoToToday\n}) => {\n  return (\n    <div className=\"bg-stone-800 rounded-xl border border-stone-700 p-6\">\n      <div className=\"flex flex-col lg:flex-row items-start lg:items-center justify-between space-y-4 lg:space-y-0\">\n        <div className=\"flex items-center space-x-4\">\n          <Calendar className=\"h-6 w-6 text-orange-500\" />\n          <h2 className=\"text-2xl font-bold text-white\">Schedule</h2>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          {/* View Mode Toggle */}\n          <div className=\"flex bg-stone-700 rounded-lg p-1\">\n            {(['day', 'week', 'month'] as const).map((mode) => (\n              <Button\n                key={mode}\n                onClick={() => { setViewMode(mode); }}\n                variant={viewMode === mode ? 'primary' : 'ghost'}\n                size=\"sm\"\n                className={`px-3 py-1 rounded-md text-sm font-medium capitalize ${\n                  viewMode === mode\n                    ? 'bg-orange-500 text-white'\n                    : 'text-gray-300 hover:text-white'\n                }`}\n              >\n                {mode}\n              </Button>\n            ))}\n          </div>\n          \n          {/* Date Picker */}\n          <input\n            type=\"date\"\n            id=\"schedule-date\"\n            name=\"selectedDate\"\n            value={selectedDate}\n            onChange={(e) => { setSelectedDate(e.target.value); }}\n            className=\"bg-stone-700 border border-stone-600 text-white rounded-lg px-3 py-2 text-sm\"\n          />\n          \n          {/* Today Button */}\n          <Button \n            variant=\"secondary\"\n            size=\"sm\"\n            className=\"bg-stone-700 hover:bg-stone-600 text-white px-3 py-2 rounded-lg text-sm\"\n            onClick={onGoToToday}\n          >\n            Today\n          </Button>\n          \n          {/* Add Appointment Button */}\n          <Button \n            variant=\"primary\"\n            size=\"md\"\n            className=\"bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-lg font-medium flex items-center\"\n            leftIcon={<Plus className=\"h-4 w-4\" />}\n            onClick={onCreateAppointment}\n          >\n            New Appointment\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};","import React from 'react';\n\ninterface ScheduleSidebarProps {\n  viewMode: 'day' | 'week' | 'month';\n}\n\nexport const ScheduleSidebar: React.FC<ScheduleSidebarProps> = ({ viewMode }) => {\n  const renderSummary = () => {\n    if (viewMode === 'month') {\n      return (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Monthly Summary */}\n          <div className=\"bg-stone-800 rounded-xl border border-stone-700 p-6\">\n            <h3 className=\"text-lg font-semibold text-white mb-4\">Monthly Summary</h3>\n            <div className=\"space-y-4\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-300\">Total Appointments</span>\n                <span className=\"text-white font-semibold\">32</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-300\">Confirmed</span>\n                <span className=\"text-green-400 font-semibold\">28</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-300\">Pending</span>\n                <span className=\"text-yellow-400 font-semibold\">4</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-300\">Blocked Days</span>\n                <span className=\"text-red-400 font-semibold\">3</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Monthly Revenue Summary */}\n          <div className=\"bg-stone-800 rounded-xl border border-stone-700 p-6\">\n            <h3 className=\"text-lg font-semibold text-white mb-4\">Monthly Revenue Summary</h3>\n            <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-300\">Total Booked</span>\n              <span className=\"text-blue-400 font-semibold\">$12,800</span>\n            </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-300\">Collected</span>\n                <span className=\"text-green-400 font-semibold\">$9,600</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-300\">Remaining</span>\n                <span className=\"text-orange-400 font-semibold\">$3,200</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    // Default to weekly summary for day and week views\n    return (\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Weekly Summary */}\n        <div className=\"bg-stone-800 rounded-xl border border-stone-700 p-6\">\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Weekly Summary</h3>\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-300\">Total Appointments</span>\n              <span className=\"text-white font-semibold\">8</span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-300\">Confirmed</span>\n              <span className=\"text-green-400 font-semibold\">6</span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-300\">Pending</span>\n              <span className=\"text-yellow-400 font-semibold\">2</span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-300\">Blocked Days</span>\n              <span className=\"text-red-400 font-semibold\">1</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Weekly Revenue Summary */}\n        <div className=\"bg-stone-800 rounded-xl border border-stone-700 p-6\">\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Weekly Revenue Summary</h3>\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-300\">Total Booked</span>\n              <span className=\"text-blue-400 font-semibold\">$3,200</span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-300\">Collected</span>\n              <span className=\"text-green-400 font-semibold\">$2,400</span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-300\">Remaining</span>\n              <span className=\"text-orange-400 font-semibold\">$800</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {renderSummary()}\n    </div>\n  );\n};","import { useCallback,useEffect, useState } from 'react';\n\nimport { getAppointments, getBlockedDays,getTimeBlocks } from '../api';\nimport type { Appointment, BlockedDay,TimeBlock } from '../types';\n\nexport const useScheduleData = (selectedDate: string, viewMode: 'day' | 'week' | 'month' = 'day') => {\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n  const [timeBlocks, setTimeBlocks] = useState<TimeBlock[]>([]);\n  const [blockedDays, setBlockedDays] = useState<BlockedDay[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Calculate date range based on view mode\n  const getDateRange = (date: string, mode: 'day' | 'week' | 'month') => {\n    const selectedDateObj = new Date(date);\n    \n    switch (mode) {\n      case 'day':\n        return { startDate: date, endDate: date };\n      \n      case 'week': {\n        // Get Monday to Sunday of the week containing the selected date\n        const dayOfWeek = selectedDateObj.getDay();\n        const mondayOffset = dayOfWeek === 0 ? -6 : 1 - dayOfWeek;\n        const monday = new Date(selectedDateObj);\n        monday.setDate(selectedDateObj.getDate() + mondayOffset);\n        const sunday = new Date(monday);\n        sunday.setDate(monday.getDate() + 6);\n        \n        return {\n          startDate: monday.toISOString().split('T')[0],\n          endDate: sunday.toISOString().split('T')[0]\n        };\n      }\n      \n      case 'month': {\n        // Get first and last day of the month\n        const firstDay = new Date(selectedDateObj.getFullYear(), selectedDateObj.getMonth(), 1);\n        const lastDay = new Date(selectedDateObj.getFullYear(), selectedDateObj.getMonth() + 1, 0);\n        \n        return {\n          startDate: firstDay.toISOString().split('T')[0],\n          endDate: lastDay.toISOString().split('T')[0]\n        };\n      }\n      \n      default:\n        return { startDate: date, endDate: date };\n    }\n  };\n\n  const fetchScheduleData = useCallback(async () => {\n    if (!selectedDate) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const { startDate, endDate } = getDateRange(selectedDate, viewMode);\n      \n      const [appointmentsData, timeBlocksData, blockedDaysData] = await Promise.all([\n        getAppointments(startDate, endDate),\n        getTimeBlocks(startDate, endDate),\n        getBlockedDays(startDate, endDate)\n      ]);\n      \n      setAppointments(appointmentsData);\n      setTimeBlocks(timeBlocksData);\n      setBlockedDays(blockedDaysData);\n    } catch (err) {\n      console.error('Error fetching schedule data:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch schedule data');\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedDate, viewMode]);\n\n  useEffect(() => {\n    void fetchScheduleData();\n  }, [fetchScheduleData]);\n\n  const refreshData = useCallback(() => {\n    if (!selectedDate) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    const { startDate, endDate } = getDateRange(selectedDate, viewMode);\n    \n    Promise.all([\n      getAppointments(startDate, endDate),\n      getTimeBlocks(startDate, endDate),\n      getBlockedDays(startDate, endDate)\n    ]).then(([appointmentsData, timeBlocksData, blockedDaysData]) => {\n      setAppointments(appointmentsData);\n      setTimeBlocks(timeBlocksData);\n      setBlockedDays(blockedDaysData);\n    }).catch((err: unknown) => {\n      console.error('Error fetching schedule data:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch schedule data');\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [selectedDate, viewMode]);\n\n  return { \n    appointments, \n    timeBlocks, \n    blockedDays,\n    loading, \n    error, \n    refreshData \n  };\n};","import React, { startTransition, useCallback, useEffect, useState } from 'react';\n\nimport { toggleBlockedDay } from './api';\nimport { AppointmentModal } from './components/modals/AppointmentModal';\nimport { ScheduleGrid } from './components/ScheduleGrid';\nimport { ScheduleHeader } from './components/ScheduleHeader';\nimport { ScheduleSidebar } from './components/ScheduleSidebar';\nimport { useScheduleData } from './hooks/useScheduleData';\nimport type { Appointment } from './types';\n\n// Small safe date helpers (no timezone shifts)\nconst toYmd = (d: Date) =>\n  `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n\nexport const ScheduleTab: React.FC = () => {\n  const [selectedDate, setSelectedDate] = useState(() => toYmd(new Date()));\n  const [viewMode, setViewMode] = useState<'day' | 'week' | 'month'>('day');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingAppointment, setEditingAppointment] = useState<Appointment | null>(null);\n  const [selectedTime, setSelectedTime] = useState<string | undefined>();\n\n  // Make sure your hook exposes \"isInitialLoading\" and \"isRefetching\" separately if possible.\n  const {\n    appointments,\n    timeBlocks,\n    blockedDays: apiBlockedDays,\n    isInitialLoading,   // <- only true on first load\n    isRefetching,       // <- true on background refresh\n    error: _error,\n    refreshData\n  } = useScheduleData(selectedDate, viewMode);\n\n  // Local optimistic blocked days\n  const [blockedDaysLocal, setBlockedDaysLocal] = useState<Set<string>>(new Set());\n  const [isMutatingBlock, setIsMutatingBlock] = useState(false);\n\n  // Sync local set with API when not in the middle of a mutation\n  useEffect(() => {\n    if (isMutatingBlock) return; // keep user’s optimistic view\n    const next = new Set<string>(\n      apiBlockedDays.map(d => toYmd(new Date(d.blocked_date)))\n    );\n    setBlockedDaysLocal(next);\n  }, [apiBlockedDays, isMutatingBlock]);\n\n  const toggleDayBlock = useCallback(async (date: string) => {\n    // optimistic flip\n    setIsMutatingBlock(true);\n    setBlockedDaysLocal(prev => {\n      const next = new Set(prev);\n      if (next.has(date)) next.delete(date);\n      else next.add(date);\n      return next;\n    });\n\n    try {\n      await toggleBlockedDay(date);\n      // background refresh, but keep grid visible (no flash)\n      refreshData();\n    } catch (e) {\n      // revert on failure\n      setBlockedDaysLocal(prev => {\n        const next = new Set(prev);\n        if (next.has(date)) next.delete(date);\n        else next.add(date);\n        return next;\n      });\n      console.error('Error toggling blocked day:', e);\n    } finally {\n      setIsMutatingBlock(false);\n    }\n  }, [refreshData]);\n\n  const handleCreateAppointment = useCallback((time?: string, date?: string) => {\n    setSelectedTime(time);\n    if (date) setSelectedDate(date);\n    setEditingAppointment(null);\n    setIsModalOpen(true);\n  }, []);\n\n  const handleEditAppointment = useCallback((appointment: Appointment) => {\n    setEditingAppointment(appointment);\n    setSelectedTime(undefined);\n    setIsModalOpen(true);\n  }, []);\n\n  const handleModalClose = useCallback(() => {\n    setIsModalOpen(false);\n    setEditingAppointment(null);\n    setSelectedTime(undefined);\n  }, []);\n\n  const handleModalSuccess = useCallback(() => {\n    // keep grid up; do a gentle background refresh\n    refreshData();\n  }, [refreshData]);\n\n  const goToToday = useCallback(() => {\n    startTransition(() => { setSelectedDate(toYmd(new Date())); });\n  }, []);\n\n  const navigateWeek = useCallback((direction: 'prev' | 'next') => {\n    startTransition(() => {\n      const [y, m, d] = selectedDate.split('-').map(Number);\n      const dt = new Date(y, m - 1, d);\n      dt.setDate(dt.getDate() + (direction === 'prev' ? -7 : 7));\n      setSelectedDate(toYmd(dt));\n    });\n  }, [selectedDate]);\n\n  const navigateMonth = useCallback((direction: 'prev' | 'next') => {\n    startTransition(() => {\n      const [y, m, d] = selectedDate.split('-').map(Number);\n      const dt = new Date(y, m - 1, d);\n      dt.setMonth(dt.getMonth() + (direction === 'prev' ? -1 : 1));\n      setSelectedDate(toYmd(dt));\n    });\n  }, [selectedDate]);\n\n  // IMPORTANT: pass the optimistic set, not a freshly constructed Set every render.\n  const blockedDaysSet = blockedDaysLocal;\n\n  return (\n    <div className=\"space-y-6\">\n      <ScheduleHeader\n        selectedDate={selectedDate}\n        setSelectedDate={(v) => { startTransition(() => { setSelectedDate(v); }); }}\n        viewMode={viewMode}\n        setViewMode={(v) => { startTransition(() => { setViewMode(v); }); }}\n        onCreateAppointment={() => { handleCreateAppointment(); }}\n        onGoToToday={goToToday}\n      />\n\n      <ScheduleGrid\n        selectedDate={selectedDate}\n        appointments={appointments}\n        timeBlocks={timeBlocks}\n        // Only show \"loading\" for initial mount, not refetches\n        loading={!!isInitialLoading}\n        viewMode={viewMode}\n        onEditAppointment={handleEditAppointment}\n        onCreateAppointment={handleCreateAppointment}\n        blockedDays={blockedDaysSet}\n        onToggleDayBlock={toggleDayBlock}\n        onNavigateMonth={navigateMonth}\n        onNavigateWeek={navigateWeek}\n        // If you want, expose an \"isRefreshing\" to draw a subtle top progress bar\n        isRefreshing={!!isRefetching || isMutatingBlock}\n      />\n\n      <ScheduleSidebar viewMode={viewMode} />\n\n      <AppointmentModal\n        isOpen={isModalOpen}\n        onClose={handleModalClose}\n        onSuccess={handleModalSuccess}\n        appointment={editingAppointment}\n        selectedDate={selectedDate}\n        selectedTime={selectedTime}\n      />\n    </div>\n  );\n};\n\nexport default ScheduleTab;\n","import React from 'react';\n\nimport type { Category } from '../types';\n\ninterface CategorySelectorProps {\n  categories: Category[];\n  selectedCategory: string;\n  onCategoryChange: (categoryId: string) => void;\n}\n\nexport const CategorySelector: React.FC<CategorySelectorProps> = ({\n  categories,\n  selectedCategory,\n  onCategoryChange\n}) => {\n\n  return (\n    <div className=\"p-4\">\n      {categories.map((category) => {\n        const isSelected = selectedCategory === category.id;\n        \n        return (\n          <button\n            key={category.id}\n            onClick={() => { onCategoryChange(category.id); }}\n            className={`w-full flex items-center space-x-3 p-3 mb-2 rounded-lg text-left transition-colors ${\n              isSelected \n                ? 'bg-blue-600 text-white' \n                : 'text-gray-300 hover:bg-stone-700 hover:text-white'\n            }`}\n          >\n            <span>{category.name}</span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};","import React from 'react';\r\nimport { AlertTriangle, X } from 'lucide-react';\r\n\r\nimport { Button } from '@/shared/ui';\r\n\r\ninterface DeleteServiceModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n  serviceName: string;\r\n  loading: boolean;\r\n}\r\n\r\nexport const DeleteServiceModal: React.FC<DeleteServiceModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  serviceName,\r\n  loading\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-stone-800 rounded-lg p-6 max-w-md w-full mx-4 border border-stone-700\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <AlertTriangle className=\"h-6 w-6 text-red-500\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">Delete Service</h3>\r\n          </div>\r\n          <Button\r\n            onClick={onClose}\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-gray-400 hover:text-white p-1\"\r\n            disabled={loading}\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </Button>\r\n        </div>\r\n        \r\n        <p className=\"text-gray-300 mb-6\">\r\n          Are you sure you want to delete <span className=\"font-semibold text-white\">&ldquo;{serviceName}&rdquo;</span>? \r\n          This action cannot be undone and will remove all associated service tiers.\r\n        </p>\r\n        \r\n        <div className=\"flex space-x-3\">\r\n          <Button\r\n            onClick={onClose}\r\n            variant=\"outline\"\r\n            size=\"md\"\r\n            className=\"flex-1 px-4 py-2 text-gray-300 border-gray-600 hover:bg-gray-700\"\r\n            disabled={loading}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={onConfirm}\r\n            variant=\"destructive\"\r\n            size=\"md\"\r\n            className=\"flex-1 px-4 py-2 bg-red-600 hover:bg-red-700\"\r\n            loading={loading}\r\n            disabled={loading}\r\n          >\r\n            Delete Service\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { ChevronDown } from 'lucide-react';\r\n\r\n// Disabled affiliate services imports\r\n// import { CAR_SERVICE_OPTIONS, type ServiceOption } from '@/data/affiliate-services/cars/service/features';\r\n// import { \r\n//   CAR_ADDON_SERVICE_OPTIONS,\r\n//   CAR_INTERIOR_TRIM_SERVICE_OPTIONS,\r\n//   CAR_WINDOWS_SERVICE_OPTIONS,\r\n//   CAR_WHEELS_SERVICE_OPTIONS,\r\n//   type AddonServiceOption \r\n// } from '@/data/affiliate-services/cars/addons/features';\r\n\r\n// Fallback types and data\r\ninterface ServiceOption {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  explanation: string;\r\n  image: string;\r\n  duration: number;\r\n  features: string[];\r\n}\r\n\r\ninterface AddonServiceOption {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  explanation: string;\r\n  image: string;\r\n  duration: number;\r\n  features: string[];\r\n}\r\n\r\n// Empty fallback data\r\nconst CAR_SERVICE_OPTIONS: ServiceOption[] = [];\r\nconst CAR_ADDON_SERVICE_OPTIONS: AddonServiceOption[] = [];\r\nconst CAR_INTERIOR_TRIM_SERVICE_OPTIONS: AddonServiceOption[] = [];\r\nconst CAR_WINDOWS_SERVICE_OPTIONS: AddonServiceOption[] = [];\r\nconst CAR_WHEELS_SERVICE_OPTIONS: AddonServiceOption[] = [];\r\n\r\n// TODO: Add other vehicle types as they are implemented\r\nconst VEHICLE_SERVICES = {\r\n  cars: CAR_SERVICE_OPTIONS,\r\n  // trucks: TRUCK_SERVICE_OPTIONS,\r\n  // rvs: RV_SERVICE_OPTIONS,\r\n  // boats: BOAT_SERVICE_OPTIONS,\r\n  // motorcycles: MOTORCYCLE_SERVICE_OPTIONS,\r\n  // offroad: OFFROAD_SERVICE_OPTIONS,\r\n  // other: OTHER_SERVICE_OPTIONS,\r\n};\r\n\r\n// Addon services for different vehicle types (flattened)\r\nconst VEHICLE_ADDON_SERVICES = {\r\n  cars: CAR_ADDON_SERVICE_OPTIONS,\r\n  // trucks: TRUCK_ADDON_SERVICE_OPTIONS,\r\n  // rvs: RV_ADDON_SERVICE_OPTIONS,\r\n  // boats: BOAT_ADDON_SERVICE_OPTIONS,\r\n  // motorcycles: MOTORCYCLE_ADDON_SERVICE_OPTIONS,\r\n  // offroad: OFFROAD_ADDON_SERVICE_OPTIONS,\r\n  // other: OTHER_ADDON_SERVICE_OPTIONS,\r\n};\r\n\r\n// Map service names to specific addon categories\r\nconst getAddonServicesForService = (serviceName: string): AddonServiceOption[] => {\r\n  const serviceNameLower = serviceName.toLowerCase();\r\n  \r\n  // Map service names to addon categories\r\n  if (serviceNameLower.includes('trim') || \r\n      serviceNameLower.includes('interior-trim') ||\r\n      serviceNameLower.includes('interior trim') ||\r\n      serviceNameLower.includes('dash') ||\r\n      serviceNameLower.includes('console') ||\r\n      serviceNameLower.includes('panel')) {\r\n    return CAR_INTERIOR_TRIM_SERVICE_OPTIONS;\r\n  } else if (serviceNameLower.includes('window') || \r\n             serviceNameLower.includes('glass') ||\r\n             serviceNameLower.includes('windshield') ||\r\n             serviceNameLower.includes('tinted') ||\r\n             serviceNameLower.includes('tint')) {\r\n    return CAR_WINDOWS_SERVICE_OPTIONS;\r\n  } else if (serviceNameLower.includes('wheel') || \r\n             serviceNameLower.includes('rim') ||\r\n             serviceNameLower.includes('tire') ||\r\n             serviceNameLower.includes('brake') ||\r\n             serviceNameLower.includes('caliper')) {\r\n    return CAR_WHEELS_SERVICE_OPTIONS;\r\n  }\r\n  \r\n  // Default to all addon services if no specific match\r\n  return CAR_ADDON_SERVICE_OPTIONS;\r\n};\r\n\r\ninterface FeatureDropdownProps {\r\n  selectedFeatures: string[];\r\n  onFeaturesChange: (features: string[]) => void;\r\n  vehicleType?: string;\r\n  categoryType?: 'service-packages' | 'addons';\r\n  serviceName?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const FeatureDropdown: React.FC<FeatureDropdownProps> = ({\r\n  selectedFeatures,\r\n  onFeaturesChange,\r\n  vehicleType = 'cars',\r\n  categoryType = 'service-packages',\r\n  serviceName,\r\n  disabled = false\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0 });\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Get services for the current vehicle type and category\r\n  const availableServices = categoryType === 'addons' \r\n    ? (serviceName ? getAddonServicesForService(serviceName) : VEHICLE_ADDON_SERVICES[vehicleType as keyof typeof VEHICLE_ADDON_SERVICES])\r\n    : VEHICLE_SERVICES[vehicleType as keyof typeof VEHICLE_SERVICES];\r\n\r\n  // Use all available services since we removed search\r\n  const filteredServices = availableServices;\r\n\r\n  // Get selected service objects (only service IDs)\r\n  const selectedServiceObjects = selectedFeatures\r\n    .map(id => availableServices.find(s => s.id === id))\r\n    .filter(Boolean) as (ServiceOption | AddonServiceOption)[];\r\n\r\n  // Handle service selection\r\n  const handleServiceToggle = (serviceId: string) => {\r\n    if (selectedFeatures.includes(serviceId)) {\r\n      // Remove service\r\n      onFeaturesChange(selectedFeatures.filter(id => id !== serviceId));\r\n    } else {\r\n      // Add service\r\n      onFeaturesChange([...selectedFeatures, serviceId]);\r\n    }\r\n  };\r\n\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      // Check if the click is outside both the button and the dropdown\r\n      const target = event.target as Node;\r\n      const isInsideButton = dropdownRef.current?.contains(target);\r\n      const isInsideDropdown = document.querySelector('[data-dropdown-portal]')?.contains(target);\r\n      \r\n      if (!isInsideButton && !isInsideDropdown) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      <label className=\"block text-sm font-medium text-gray-300\">\r\n        {categoryType === 'addons' ? 'Addon Services' : 'Service Options'}\r\n      </label>\r\n      \r\n      {/* Selected Services Display */}\r\n      {selectedServiceObjects.length > 0 && (\r\n        <div className=\"space-y-2\">\r\n          <div className=\"text-xs text-gray-400\">\r\n            {selectedServiceObjects.length} service{selectedServiceObjects.length !== 1 ? 's' : ''} selected:\r\n          </div>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {selectedServiceObjects.map((service) => (\r\n              <div\r\n                key={service.id}\r\n                className=\"inline-flex items-center gap-2 bg-blue-900 text-blue-200 px-3 py-1 rounded-full text-sm\"\r\n              >\r\n                <span>{service.name}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Dropdown */}\r\n      <div className=\"relative\" ref={dropdownRef}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            if (!isOpen && dropdownRef.current) {\r\n              const rect = dropdownRef.current.getBoundingClientRect();\r\n              setDropdownPosition({\r\n                top: rect.bottom + window.scrollY + 4,\r\n                left: rect.left + window.scrollX\r\n              });\r\n            }\r\n            setIsOpen(!isOpen);\r\n          }}\r\n          disabled={disabled}\r\n          className=\"w-full bg-gray-600 border border-gray-500 rounded px-3 py-2 text-left text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-between\"\r\n        >\r\n          <span className=\"text-gray-300\">\r\n            {selectedServiceObjects.length > 0 \r\n              ? `Add more ${categoryType === 'addons' ? 'addons' : 'services'} (${selectedServiceObjects.length} selected)`\r\n              : `Select ${categoryType === 'addons' ? 'addons' : 'services'}...`\r\n            }\r\n          </span>\r\n          <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${isOpen ? 'rotate-180' : ''}`} />\r\n        </button>\r\n\r\n        {isOpen && createPortal(\r\n          <div \r\n            data-dropdown-portal\r\n            className=\"fixed z-[60] w-96 bg-gray-700 border border-gray-600 rounded-lg shadow-lg\" \r\n            style={{ \r\n              top: dropdownPosition.top,\r\n              left: dropdownPosition.left\r\n            }}\r\n          >\r\n            {/* Services List */}\r\n            <div>\r\n              {filteredServices.length > 0 ? (\r\n                <div className=\"py-1\">\r\n                  <div className=\"grid grid-cols-2 gap-0\">\r\n                    {filteredServices.map((service) => {\r\n                      const isSelected = selectedFeatures.includes(service.id);\r\n                      return (\r\n                        <button\r\n                          key={service.id}\r\n                          type=\"button\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleServiceToggle(service.id);\r\n                          }}\r\n                          className={`w-full text-left px-3 py-2 hover:bg-gray-600 transition-colors flex items-center gap-2 ${\r\n                            isSelected ? 'bg-blue-900 text-blue-200' : 'text-gray-300'\r\n                          }`}\r\n                        >\r\n                          <div className={`w-4 h-4 rounded border-2 flex items-center justify-center ${\r\n                            isSelected \r\n                              ? 'bg-blue-500 border-blue-500' \r\n                              : 'border-gray-400'\r\n                          }`}>\r\n                            {isSelected && (\r\n                              <div className=\"w-2 h-2 bg-white rounded-sm\" />\r\n                            )}\r\n                          </div>\r\n                          <span className=\"text-sm\">{service.name}</span>\r\n                        </button>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"px-3 py-4 text-center text-gray-400 text-sm\">\r\n                  No services available\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Footer */}\r\n            <div className=\"p-3 border-t border-gray-600 bg-gray-800\">\r\n              <div className=\"text-xs text-gray-400 text-center\">\r\n                Select {categoryType === 'addons' ? 'addons' : 'services'} to add to this service tier\r\n              </div>\r\n            </div>\r\n          </div>,\r\n          document.body\r\n        )}\r\n      </div>\r\n\r\n      {/* Help Text */}\r\n      <div className=\"text-xs text-gray-400\">\r\n        Choose from our standardized {categoryType === 'addons' ? 'addon' : 'service'} list to ensure consistent service descriptions for customers.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// JSON representation interfaces\ninterface TierJSON {\n  id: string;\n  name: string;\n  price: number;\n  duration: number;\n  serviceOptions?: string[];\n  enabled: boolean;\n  popular: boolean;\n}\n\ninterface ServiceJSON {\n  id: string;\n  name: string;\n  tiers: TierJSON[];\n}\n\nexport class Tier {\n  id: string;\n  name: string;\n  price: number;\n  duration: number;\n  serviceOptions: string[]; // Only service IDs from service.json\n  enabled: boolean;\n  popular: boolean;\n\n  constructor(id: string, name: string, price: number, duration: number) {\n    this.id = id;\n    this.name = name;\n    this.price = price;\n    this.duration = duration;\n    this.serviceOptions = [];\n    this.enabled = true;\n    this.popular = false;\n  }\n\n  // Add a service option (only service IDs from service.json)\n  addServiceOption(option: string) {\n    if (!this.serviceOptions.includes(option)) {\n      this.serviceOptions.push(option);\n    }\n  }\n\n\n  // Get all features (just the serviceOptions, no complex logic)\n  get all_features(): string[] {\n    return [...this.serviceOptions];\n  }\n\n  // Get all service IDs (all options are service IDs now)\n  getServiceIds(availableServices: Array<{id: string, name: string}>): string[] {\n    return this.serviceOptions.filter(option => \n      availableServices.some(service => service.id === option)\n    );\n  }\n}\n\nexport class Service {\n  id: string;\n  name: string;\n  tiers: Tier[];\n\n  constructor(id: string, name: string) {\n    this.id = id;\n    this.name = name;\n    this.tiers = [];\n  }\n\n  addTier(tier: Tier) {\n    this.tiers.push(tier);\n  }\n\n  getTierById(id: string): Tier | undefined {\n    return this.tiers.find(tier => tier.id === id);\n  }\n\n  getTierNames(): string[] {\n    return this.tiers.map(tier => tier.name);\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      name: this.name,\n      tiers: this.tiers.map(tier => ({\n        id: tier.id,\n        name: tier.name,\n        price: tier.price,\n        duration: tier.duration,\n        serviceOptions: tier.serviceOptions,\n        enabled: tier.enabled,\n        popular: tier.popular\n      }))\n    };\n  }\n\n  static fromJSON(data: ServiceJSON): Service {\n    const service = new Service(data.id, data.name);\n    service.tiers = data.tiers.map((tierData: TierJSON) => {\n      const tier = new Tier(tierData.id, tierData.name, tierData.price, tierData.duration);\n      tier.enabled = tierData.enabled;\n      tier.popular = tierData.popular;\n      tier.serviceOptions = tierData.serviceOptions || [];\n      return tier;\n    });\n    return service;\n  }\n}","import React, { useEffect,useRef, useState } from 'react';\nimport { Edit2, Plus, Save, Trash2, X } from 'lucide-react';\n\nimport { Button } from '@/shared/ui';\n\nimport { FeatureDropdown } from './FeatureDropdown';\n// Disabled affiliate services import\n// import { CAR_SERVICE_OPTIONS } from '@/data/affiliate-services/cars/service/features';\n\n// Fallback empty data\nconst CAR_SERVICE_OPTIONS: Array<{ id: string; name: string }> = [];\nimport { Service, Tier } from '../types/ServiceClasses';\n\n// Using Service and Tier classes from ServiceClasses.ts\n\n// Plain tier object structure (for deserialization)\ninterface TierData {\n  id: string;\n  name: string;\n  price: number;\n  duration: number;\n  features?: string[];\n  serviceOptions?: string[];\n  tierCopies?: Record<string, string>;\n  enabled: boolean;\n  popular: boolean;\n}\n\ninterface MultiTierPricingModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (serviceName: string, tiers: Tier[]) => void;\n  initialTiers?: TierData[];\n  initialServiceName?: string;\n  loading?: boolean;\n  error?: string | null;\n  vehicleType?: string;\n  categoryType?: 'service-packages' | 'addons';\n}\n\nexport const MultiTierPricingModal: React.FC<MultiTierPricingModalProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  initialTiers = [],\n  initialServiceName = '',\n  loading = false,\n  error = null,\n  vehicleType = 'cars',\n  categoryType = 'service-packages'\n}) => {\n  const [serviceName, setServiceName] = useState<string>(initialServiceName);\n  const [service, setService] = useState<Service>(() => {\n    if (initialTiers.length > 0) {\n      const service = new Service('temp-id', initialServiceName);\n        initialTiers.forEach(tierData => {\n          const tier = new Tier(tierData.id, tierData.name, tierData.price, tierData.duration);\n          tier.serviceOptions = tierData.serviceOptions || [];\n          tier.enabled = tierData.enabled;\n          tier.popular = tierData.popular;\n          service.addTier(tier);\n        });\n      return service;\n    } else {\n      const service = new Service('temp-id', initialServiceName);\n      service.addTier(createDefaultTier());\n      return service;\n    }\n  });\n  const [editingTierId, setEditingTierId] = useState<string | null>(null);\n  const [editingTier, setEditingTier] = useState<Tier | null>(null);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const prevInitialTiersRef = useRef<TierData[] | undefined>(initialTiers);\n  const prevInitialServiceNameRef = useRef<string | undefined>(initialServiceName);\n\n  // Update tiers and service name when initial values change (for editing existing services)\n  useEffect(() => {\n    // Force update when initialTiers has data, regardless of comparison\n    const hasInitialTiers = initialTiers.length > 0;\n    const tiersChanged = JSON.stringify(prevInitialTiersRef.current) !== JSON.stringify(initialTiers);\n    const serviceNameChanged = prevInitialServiceNameRef.current !== initialServiceName;\n    \n    if (tiersChanged || hasInitialTiers) {\n      if (initialTiers.length > 0) {\n        // Convert old format to new Service class format\n        const service = new Service('temp-id', initialServiceName);\n        initialTiers.forEach(tierData => {\n          const tier = new Tier(tierData.id, tierData.name, tierData.price, tierData.duration);\n          // Convert features to serviceOptions for the new structure\n          tier.serviceOptions = tierData.serviceOptions || [];\n          tier.enabled = tierData.enabled;\n          tier.popular = tierData.popular;\n          service.addTier(tier);\n        });\n        setService(service);\n      } else {\n        const service = new Service('temp-id', initialServiceName);\n        service.addTier(createDefaultTier());\n        setService(service);\n      }\n      // Reset editing state when switching between create/edit modes\n      setEditingTierId(null);\n      setEditingTier(null);\n      prevInitialTiersRef.current = initialTiers;\n    }\n    \n    if (serviceNameChanged) {\n      setServiceName(initialServiceName);\n      prevInitialServiceNameRef.current = initialServiceName;\n    }\n  }, [initialTiers, initialServiceName]);\n\n  function createDefaultTier(): Tier {\n    return new Tier(\n      `tier-${Date.now().toString()}-${Math.random().toString(36).substring(2, 11)}`,\n      '',\n      0,\n      60\n    );\n  }\n\n  // Helper function to ensure tier is a Tier class instance\n  const ensureTierInstance = (tier: Tier | TierData): Tier => {\n    if (tier instanceof Tier) {\n      return tier;\n    } else {\n      // Convert plain object back to Tier instance\n      const tierInstance = new Tier(tier.id, tier.name, tier.price, tier.duration);\n      tierInstance.serviceOptions = tier.serviceOptions || [];\n      tierInstance.tierCopies = tier.tierCopies || {};\n      tierInstance.enabled = tier.enabled;\n      tierInstance.popular = tier.popular;\n      return tierInstance;\n    }\n  }\n\n  const addTier = () => {\n    setService(prev => {\n      const newService = new Service(prev.id, prev.name);\n      prev.tiers.forEach(tier => {\n        newService.addTier(ensureTierInstance(tier));\n      });\n      newService.addTier(createDefaultTier());\n      return newService;\n    });\n    // Scroll to the right to show the new tier\n    setTimeout(() => {\n      if (scrollContainerRef.current) {\n        scrollContainerRef.current.scrollLeft = scrollContainerRef.current.scrollWidth;\n      }\n    }, 100);\n  };\n\n  const removeTier = (tierId: string) => {\n    if (service.tiers.length > 1) {\n    setService(prev => {\n      const newService = new Service(prev.id, prev.name);\n      prev.tiers.forEach(tier => {\n        if (tier.id !== tierId) {\n          newService.addTier(ensureTierInstance(tier));\n        }\n      });\n      return newService;\n    });\n      if (editingTierId === tierId) {\n        setEditingTierId(null);\n        setEditingTier(null);\n      }\n    }\n  };\n\n  const startEditing = (tier: Tier) => {\n    setEditingTierId(tier.id);\n    setEditingTier({ ...tier });\n  };\n\n  const saveTier = () => {\n    if (editingTier) {\n    setService(prev => {\n      const newService = new Service(prev.id, prev.name);\n      prev.tiers.forEach(tier => {\n        if (tier.id === editingTier.id) {\n          newService.addTier(editingTier);\n        } else {\n          newService.addTier(ensureTierInstance(tier));\n        }\n      });\n      return newService;\n    });\n      setEditingTierId(null);\n      setEditingTier(null);\n    }\n  };\n\n  const cancelEditing = () => {\n    setEditingTierId(null);\n    setEditingTier(null);\n  };\n\n  const updateEditingTier = (field: keyof Tier, value: string | number | boolean | string[]) => {\n    if (editingTier) {\n      setEditingTier({ ...editingTier, [field]: value });\n    }\n  };\n\n\n  const handleSubmit = () => {\n    // Validate service name\n    if (!serviceName.trim()) {\n      return;\n    }\n    \n    // Filter out tiers with empty names and convert to backend format\n    const validTiers = service.tiers\n      .filter(tier => tier.name.trim() !== '')\n      .map(tier => ({\n        id: tier.id,\n        name: tier.name,\n        price: tier.price,\n        duration: tier.duration,\n        features: tier.serviceOptions, // Convert serviceOptions to features for backend\n        enabled: tier.enabled,\n        popular: tier.popular\n      }));\n    \n    if (validTiers.length > 0) {\n      onSubmit(serviceName.trim(), validTiers);\n    }\n  };\n\n  const handleClose = () => {\n    // Reset to initial state when closing\n    if (initialTiers.length > 0) {\n      const service = new Service('temp-id', initialServiceName);\n      initialTiers.forEach(tierData => {\n        const tier = new Tier(tierData.id, tierData.name, tierData.price, tierData.duration);\n        tier.serviceOptions = tierData.serviceOptions || [];\n        tier.enabled = tierData.enabled;\n        tier.popular = tierData.popular;\n        service.addTier(tier);\n      });\n      setService(service);\n    } else {\n      const service = new Service('temp-id', initialServiceName);\n      service.addTier(createDefaultTier());\n      setService(service);\n    }\n    setServiceName(initialServiceName);\n    setEditingTierId(null);\n    setEditingTier(null);\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-gray-800 rounded-lg w-full max-w-6xl max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-700\">\n          <h2 className=\"text-xl font-semibold text-white\">Multi-Tier Pricing</h2>\n          <Button\n            onClick={handleClose}\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-gray-400 hover:text-white p-2\"\n          >\n            <X className=\"h-6 w-6\" />\n          </Button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-140px)]\">\n          {/* Error Display */}\n          {error && (\n            <div className=\"mb-4 p-3 bg-red-900 border border-red-700 rounded-lg\">\n              <div className=\"text-red-200 text-sm\">\n                <strong>Error:</strong> {error}\n              </div>\n            </div>\n          )}\n          \n          {/* Service Name */}\n          <div className=\"mb-6\">\n            <label htmlFor=\"service-name\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Service Name\n            </label>\n            <input\n              id=\"service-name\"\n              type=\"text\"\n              value={serviceName}\n              onChange={(e) => { setServiceName(e.target.value); }}\n              className=\"w-full bg-gray-600 border border-gray-500 rounded px-3 py-2 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"e.g., Premium Auto Detail, Basic Wash, etc.\"\n            />\n          </div>\n          \n          {/* Tiers Container */}\n          <div className=\"mb-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-white\">Service Tiers</h3>\n              <Button\n                onClick={addTier}\n                variant=\"primary\"\n                size=\"md\"\n                className=\"px-4 py-2\"\n                leftIcon={<Plus className=\"h-4 w-4\" />}\n              >\n                Add Tier\n              </Button>\n            </div>\n\n            {/* Scrollable Tiers */}\n            <div \n              ref={scrollContainerRef}\n              className=\"flex gap-4 overflow-x-auto pb-4\"\n              style={{ \n                scrollbarWidth: 'thin',\n                scrollbarColor: '#6B7280 #374151'\n              }}\n            >\n              {service.tiers.map((tier, index) => {\n                // Ensure tier is a Tier class instance\n                const tierInstance = ensureTierInstance(tier);\n                return (\n                <div\n                  key={tierInstance.id}\n                  className={`min-w-[300px] bg-gray-700 rounded-lg p-4 border-2 ${\n                    editingTierId === tierInstance.id ? 'border-blue-500' : 'border-gray-600'\n                  }`}\n                >\n                  {/* Tier Header */}\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <span className=\"text-sm text-gray-400\">Tier {index + 1}</span>\n                    <div className=\"flex gap-2\">\n                      {editingTierId === tier.id ? (\n                        <>\n                          <Button\n                            onClick={saveTier}\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"text-green-400 hover:text-green-300 p-1\"\n                            title=\"Save\"\n                          >\n                            <Save className=\"h-4 w-4\" />\n                          </Button>\n                          <Button\n                            onClick={cancelEditing}\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"text-gray-400 hover:text-gray-300 p-1\"\n                            title=\"Cancel\"\n                          >\n                            <X className=\"h-4 w-4\" />\n                          </Button>\n                        </>\n                      ) : (\n                        <Button\n                          onClick={() => { startEditing(tier); }}\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"text-blue-400 hover:text-blue-300 p-1\"\n                          title=\"Edit\"\n                        >\n                          <Edit2 className=\"h-4 w-4\" />\n                        </Button>\n                      )}\n                      {service.tiers.length > 1 && (\n                        <Button\n                          onClick={() => { removeTier(tier.id); }}\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"text-red-400 hover:text-red-300 p-1\"\n                          title=\"Remove Tier\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Tier Content */}\n                  {editingTierId === tier.id && editingTier ? (\n                    <div className=\"space-y-3\">\n                      {/* Tier Name */}\n                      <div>\n                        <label htmlFor={`tier-name-${tier.id}`} className=\"block text-sm font-medium text-gray-300 mb-1\">\n                          Tier Name\n                        </label>\n                        <input\n                          id={`tier-name-${tier.id}`}\n                          type=\"text\"\n                          value={editingTier.name}\n                          onChange={(e) => { updateEditingTier('name', e.target.value); }}\n                          className=\"w-full bg-gray-600 border border-gray-500 rounded px-3 py-2 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                          placeholder=\"e.g., Basic, Premium, Ultimate\"\n                        />\n                      </div>\n\n                      {/* Price */}\n                      <div>\n                        <label htmlFor={`tier-price-${tier.id}`} className=\"block text-sm font-medium text-gray-300 mb-1\">\n                          Price ($)\n                        </label>\n                        <input\n                          id={`tier-price-${tier.id}`}\n                          type=\"text\"\n                          value={editingTier.price}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            // Allow numbers, decimal point, and empty string\n                            if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n                              const numValue = value === '' ? 0 : parseFloat(value) || 0;\n                              updateEditingTier('price', numValue);\n                            }\n                          }}\n                          className=\"w-full bg-gray-600 border border-gray-500 rounded px-3 py-2 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                          placeholder=\"0.00\"\n                        />\n                      </div>\n\n                      {/* Duration */}\n                      <div>\n                        <label htmlFor={`tier-duration-${tier.id}`} className=\"block text-sm font-medium text-gray-300 mb-1\">\n                          Duration (minutes)\n                        </label>\n                        <input\n                          id={`tier-duration-${tier.id}`}\n                          type=\"text\"\n                          value={editingTier.duration}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            // Only allow numbers and empty string\n                            if (value === '' || /^\\d+$/.test(value)) {\n                              const numValue = value === '' ? 0 : parseInt(value, 10);\n                              updateEditingTier('duration', numValue);\n                            }\n                          }}\n                          className=\"w-full bg-gray-600 border border-gray-500 rounded px-3 py-2 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                          placeholder=\"60\"\n                        />\n                      </div>\n\n                      {/* Features */}\n                      <FeatureDropdown\n                        selectedFeatures={editingTier.serviceOptions}\n                        onFeaturesChange={(features) => { updateEditingTier('serviceOptions', features); }}\n                        vehicleType={vehicleType}\n                        categoryType={categoryType}\n                        serviceName={serviceName}\n                        disabled={false}\n                      />\n\n                      {/* Toggles */}\n                      <div className=\"flex gap-4\">\n                        <label className=\"flex items-center gap-2\">\n                          <input\n                            type=\"checkbox\"\n                            checked={editingTier.enabled}\n                            onChange={(e) => { updateEditingTier('enabled', e.target.checked); }}\n                            className=\"rounded border-gray-500 text-blue-500 focus:ring-blue-500\"\n                          />\n                          <span className=\"text-sm text-gray-300\">Enabled</span>\n                        </label>\n                        <label className=\"flex items-center gap-2\">\n                          <input\n                            type=\"checkbox\"\n                            checked={editingTier.popular}\n                            onChange={(e) => { updateEditingTier('popular', e.target.checked); }}\n                            className=\"rounded border-gray-500 text-blue-500 focus:ring-blue-500\"\n                          />\n                          <span className=\"text-sm text-gray-300\">Popular</span>\n                        </label>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-3\">\n                      {/* Display Mode */}\n                      <div>\n                        <h4 className=\"font-medium text-white mb-2\">\n                          {tierInstance.name || `Tier ${(index + 1).toString()}`}\n                        </h4>\n                        <div className=\"text-2xl font-bold text-green-400\">\n                          ${tierInstance.price.toFixed(2)}\n                        </div>\n                        <div className=\"text-sm text-gray-400\">\n                          {tierInstance.duration} minutes\n                        </div>\n                      </div>\n\n                      {/* Features */}\n                      {tierInstance.serviceOptions.length > 0 && (\n                        <div>\n                          <h5 className=\"text-sm font-medium text-gray-300 mb-2\">Features:</h5>\n                          <ul className=\"space-y-1\">\n                            {tierInstance.serviceOptions.map(option => {\n                              const serviceOption = CAR_SERVICE_OPTIONS.find(s => s.id === option);\n                              \n                              return (\n                                <li key={option} className=\"text-sm text-gray-300 flex items-center\">\n                                  <span className=\"w-2 h-2 bg-gray-400 rounded-full mr-2\"></span>\n                                  {serviceOption?.name || option}\n                                </li>\n                              );\n                            })}\n                          </ul>\n                        </div>\n                      )}\n\n                      {/* Status */}\n                      <div className=\"flex gap-2\">\n                        {!tier.enabled && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-900 text-red-200\">\n                            Disabled\n                          </span>\n                        )}\n                        {tier.popular && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-900 text-yellow-200\">\n                            Popular\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                );\n              })}\n            </div>\n          </div>\n\n          \n        </div>\n\n        {/* Footer */}\n        <div className=\"flex items-center justify-end gap-3 p-6 border-t border-gray-700\">\n          <Button\n            onClick={handleClose}\n            variant=\"ghost\"\n            size=\"md\"\n            className=\"px-4 py-2 text-gray-300 hover:text-white\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            variant=\"primary\"\n            size=\"md\"\n            loading={loading}\n            disabled={!serviceName.trim() || service.tiers.filter(t => t.name.trim()).length === 0}\n            className=\"px-6 py-2\"\n          >\n            {loading ? 'Saving...' : 'Save Service'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport type { Service } from '../types';\n\ninterface ServiceSelectorProps {\n  services: Service[];\n  selectedService: string;\n  onServiceChange: (serviceId: string) => void;\n}\n\nexport const ServiceSelector: React.FC<ServiceSelectorProps> = ({\n  services,\n  selectedService,\n  onServiceChange\n}) => {\n  return (\n    <div className=\"p-4\">\n      {services.map((service) => {\n        const isSelected = selectedService === service.id;\n        \n        return (\n          <button\n            key={service.id}\n            onClick={() => { onServiceChange(service.id); }}\n              className={`w-full flex items-center space-x-3 p-3 mb-2 rounded-lg text-left transition-colors ${\n              isSelected \n                ? 'bg-purple-600 text-white' \n                : 'text-gray-300 hover:bg-stone-700 hover:text-white'\n            }`}\n          >\n            <span>{service.name}</span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};","import React from 'react';\n\nimport type { Vehicle } from '../types';\n\ninterface VehicleSelectorProps {\n  vehicles: Vehicle[];\n  selectedVehicle: string;\n  onVehicleChange: (vehicleId: string) => void;\n}\n\nexport const VehicleSelector: React.FC<VehicleSelectorProps> = ({\n  vehicles,\n  selectedVehicle,\n  onVehicleChange\n}) => {\n  return (\n    <div className=\"p-4\">\n      {vehicles.map((vehicle) => {\n        const VehicleIcon = vehicle.icon as React.ComponentType<{ className?: string }>;\n        const isSelected = selectedVehicle === vehicle.id;\n        \n        return (\n          <button\n            key={vehicle.id}\n            onClick={() => { onVehicleChange(vehicle.id); }}\n              className={`w-full flex items-center space-x-3 p-3 mb-2 rounded-lg text-left transition-colors ${\n              isSelected \n                ? 'bg-green-600 text-white' \n                : 'text-gray-300 hover:bg-stone-700 hover:text-white'\n            }`}\n          >\n            <VehicleIcon className=\"h-5 w-5\" />\n            <span>{vehicle.name}</span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};","import { useCallback, useState } from 'react';\r\nimport { Bike, Bot as Boat, Car, HelpCircle, Home, Mountain, Truck } from 'lucide-react';\r\n\r\nimport { servicesApi } from '@/shared/api/services.api';\r\n\r\nimport type { Vehicle } from '../types';\r\n\r\n// interface ApiResponse<T = unknown> {\r\n//   data: T;\r\n//   message?: string;\r\n// }\r\n\r\ninterface ServiceTier {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  duration: number;\r\n  features: string[];\r\n  enabled: boolean;\r\n  popular: boolean;\r\n  description?: string;\r\n}\r\n\r\ninterface ServiceData {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  base_price_cents: number;\r\n  tiers?: ServiceTier[];\r\n  tenant_id: number;\r\n  vehicle_id: number;\r\n  service_category_id: number;\r\n}\r\n\r\n// Mapping from frontend IDs to database IDs\r\nconst VEHICLE_ID_MAP: Record<string, number> = {\r\n  'cars': 1,\r\n  'suv': 3, // SUV has its own database ID\r\n  'trucks': 2,\r\n  'rvs': 4,\r\n  'boats': 5,\r\n  'motorcycles': 6,\r\n  'offroad': 7,\r\n  'other': 8\r\n};\r\n\r\nconst CATEGORY_ID_MAP: Record<string, number> = {\r\n  'interior': 1,\r\n  'exterior': 2, \r\n  'service-packages': 3,\r\n  'addons': 7,\r\n  'ceramic-coating': 4,\r\n  'paint-correction': 5,\r\n  'paint-protection-film': 6\r\n};\r\n\r\n// New hook for fetching services data from database\r\nexport const useServicesAPI = (tenantId?: string) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  const fetchServices = useCallback(async (vehicleId: string, categoryId: string) => {\r\n    // Prevent multiple simultaneous calls\r\n    if (isFetching) {\r\n      return null;\r\n    }\r\n    \r\n    // Validate tenant ID is provided\r\n    if (!tenantId || tenantId === '') {\r\n      // Don't set error for missing tenant ID - just return early\r\n      return null;\r\n    }\r\n    \r\n    setIsFetching(true);\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Convert frontend IDs to database IDs\r\n      const dbVehicleId = VEHICLE_ID_MAP[vehicleId];\r\n      const dbCategoryId = CATEGORY_ID_MAP[categoryId];\r\n      \r\n      if (!dbVehicleId || !dbCategoryId) {\r\n        throw new Error('Invalid vehicle or category ID');\r\n      }\r\n      \r\n      const services = await servicesApi.getServices(tenantId, vehicleId, dbCategoryId.toString());\r\n      return services as ServiceData[];\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch services');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n      setIsFetching(false);\r\n    }\r\n  }, [tenantId, isFetching]);\r\n\r\n  const createService = useCallback(async (vehicleId: string, categoryId: string, serviceTitle: string, tiers?: ServiceTier[]) => {\r\n    // Validate tenant ID is provided\r\n    if (!tenantId || tenantId === '') {\r\n      // Don't set error for missing tenant ID - just return early\r\n      return null;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Convert frontend IDs to database IDs\r\n      const dbVehicleId = VEHICLE_ID_MAP[vehicleId];\r\n      const dbCategoryId = CATEGORY_ID_MAP[categoryId];\r\n      \r\n      if (!dbVehicleId || !dbCategoryId) {\r\n        throw new Error('Invalid vehicle or category ID');\r\n      }\r\n      \r\n      const requestBody: Partial<ServiceData> = {\r\n        tenant_id: parseInt(tenantId),\r\n        vehicle_id: dbVehicleId, // Send the database vehicle ID\r\n        service_category_id: dbCategoryId,\r\n        base_price_cents: 0, // Default base price, can be updated later\r\n        name: serviceTitle,\r\n        description: `${serviceTitle} service for ${vehicleId} ${categoryId}`\r\n      };\r\n      \r\n      // Add tiers if provided\r\n      if (tiers && tiers.length > 0) {\r\n        requestBody.tiers = tiers;\r\n      }\r\n      \r\n      const service = await servicesApi.createService(requestBody);\r\n      return service as ServiceData;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to create service');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tenantId]);\r\n\r\n  const fetchServiceById = useCallback(async (serviceId: string) => {\r\n    // Validate tenant ID is provided\r\n    if (!tenantId || tenantId === '') {\r\n      // Don't set error for missing tenant ID - just return early\r\n      return null;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const service = await servicesApi.getService(serviceId);\r\n      return service as ServiceData;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch service');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tenantId]);\r\n\r\n  const updateService = useCallback(async (serviceId: string, serviceData: Partial<ServiceData>) => {\r\n    // Validate tenant ID is provided\r\n    if (!tenantId || tenantId === '') {\r\n      return null;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const service = await servicesApi.updateService(serviceId, serviceData);\r\n      return service as ServiceData;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to update service');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tenantId]);\r\n\r\n  const deleteService = useCallback(async (serviceId: string) => {\r\n    // Validate tenant ID is provided\r\n    if (!tenantId || tenantId === '') {\r\n      return false;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      await servicesApi.deleteService(serviceId);\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to delete service');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tenantId]);\r\n\r\n  return {\r\n    fetchServices,\r\n    fetchServiceById,\r\n    createService,\r\n    updateService,\r\n    deleteService,\r\n    loading,\r\n    error\r\n  };\r\n};\r\n\r\nexport const useServicesData = () => {\r\n  const [vehicles] = useState<Vehicle[]>([\r\n    {\r\n      id: 'cars',\r\n      name: 'Cars',\r\n      icon: Car,\r\n      categories: [\r\n        {\r\n          id: 'service-packages',\r\n          name: 'Service Packages',\r\n          color: 'bg-green-600',\r\n          services: []\r\n        },\r\n        {\r\n          id: 'addons',\r\n          name: 'Addons',\r\n          color: 'bg-indigo-600',\r\n          services: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'suv',\r\n      name: 'SUV',\r\n      icon: Car,\r\n      categories: [\r\n        {\r\n          id: 'service-packages',\r\n          name: 'Service Packages',\r\n          color: 'bg-green-600',\r\n          services: []\r\n        },\r\n        {\r\n          id: 'addons',\r\n          name: 'Addons',\r\n          color: 'bg-indigo-600',\r\n          services: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'trucks',\r\n      name: 'Trucks',\r\n      icon: Truck,\r\n      categories: [\r\n        {\r\n          id: 'service-packages',\r\n          name: 'Service Packages',\r\n          color: 'bg-green-600',\r\n          services: []\r\n        },\r\n        {\r\n          id: 'addons',\r\n          name: 'Addons',\r\n          color: 'bg-indigo-600',\r\n          services: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'rvs',\r\n      name: 'RVs',\r\n      icon: Home,\r\n      categories: [\r\n        {\r\n          id: 'service-packages',\r\n          name: 'Service Packages',\r\n          color: 'bg-green-600',\r\n          services: []\r\n        },\r\n        {\r\n          id: 'addons',\r\n          name: 'Addons',\r\n          color: 'bg-indigo-600',\r\n          services: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'boats',\r\n      name: 'Boats',\r\n      icon: Boat,\r\n      categories: [\r\n        {\r\n          id: 'service-packages',\r\n          name: 'Service Packages',\r\n          color: 'bg-green-600',\r\n          services: []\r\n        },\r\n        {\r\n          id: 'addons',\r\n          name: 'Addons',\r\n          color: 'bg-indigo-600',\r\n          services: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'motorcycles',\r\n      name: 'Motorcycles',\r\n      icon: Bike,\r\n      categories: [\r\n        {\r\n          id: 'service-packages',\r\n          name: 'Service Packages',\r\n          color: 'bg-green-600',\r\n          services: []\r\n        },\r\n        {\r\n          id: 'addons',\r\n          name: 'Addons',\r\n          color: 'bg-indigo-600',\r\n          services: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'offroad',\r\n      name: 'Off-Road',\r\n      icon: Mountain,\r\n      categories: [\r\n        {\r\n          id: 'service-packages',\r\n          name: 'Service Packages',\r\n          color: 'bg-green-600',\r\n          services: []\r\n        },\r\n        {\r\n          id: 'addons',\r\n          name: 'Addons',\r\n          color: 'bg-indigo-600',\r\n          services: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'other',\r\n      name: 'Other',\r\n      icon: HelpCircle,\r\n      categories: [\r\n        {\r\n          id: 'service-packages',\r\n          name: 'Service Packages',\r\n          color: 'bg-green-600',\r\n          services: []\r\n        },\r\n        {\r\n          id: 'addons',\r\n          name: 'Addons',\r\n          color: 'bg-indigo-600',\r\n          services: []\r\n        }\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  const toggleTierEnabled = () => {\r\n    // Implementation for toggling tier enabled/disabled state\r\n  };\r\n\r\n  return {\r\n    vehicles,\r\n    toggleTierEnabled\r\n  };\r\n};","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Plus, Settings, Trash2 } from 'lucide-react';\r\n\r\nimport { useAuth } from '@/shared/hooks';\r\nimport { Button } from '@/shared/ui';\r\n\r\nimport { CategorySelector } from './components/CategorySelector';\r\nimport { DeleteServiceModal } from './components/DeleteServiceModal';\r\nimport { MultiTierPricingModal } from './components/MultiTierPricingModal';\r\nimport { ServiceSelector } from './components/ServiceSelector';\r\nimport { VehicleSelector } from './components/VehicleSelector';\r\nimport { useServicesData } from './hooks/useServicesData';\r\nimport type { Service } from './types';\r\n\r\nconst SimpleFixedServicesTab: React.FC = () => {\r\n  const [selectedVehicle, setSelectedVehicle] = useState<string>('cars');\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('service-packages');\r\n  const [selectedService, setSelectedService] = useState<string>('');\r\n  const [currentServiceData, setCurrentServiceData] = useState<Service | null>(null);\r\n  const [availableServices, setAvailableServices] = useState<Service[]>([]);\r\n  const [isMultiTierModalOpen, setIsMultiTierModalOpen] = useState(false);\r\n  const [isDeleteServiceModalOpen, setIsDeleteServiceModalOpen] = useState(false);\r\n  const [isEditingService, setIsEditingService] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // Prevent infinite loops\r\n  const lastFetchRef = React.useRef<string>('');\r\n  \r\n  // Get tenant ID from AuthContext or URL params for admin users\r\n  const authContext = useAuth();\r\n  const user = authContext.user;\r\n  const { businessSlug } = useParams<{ businessSlug: string }>();\r\n  \r\n  // For tenant users, get ID from auth context\r\n  // For admin users, we'll need to fetch tenant ID from the business slug\r\n  const [adminTenantId, setAdminTenantId] = useState<string | null>(null);\r\n  \r\n  // Fetch tenant ID for admin users\r\n  useEffect(() => {\r\n    // Only fetch if user is admin and we have a business slug\r\n    if (user?.role === 'admin' && businessSlug && !adminTenantId) {\r\n      const fetchTenantId = async () => {\r\n        try {\r\n          const response = await fetch(`/api/tenants/${businessSlug}`);\r\n          \r\n          if (response.ok) {\r\n            const data = await response.json() as {\r\n              success: boolean;\r\n              tenant?: {\r\n                id: number;\r\n              };\r\n            };\r\n            \r\n            if (data.success && data.tenant?.id) {\r\n              setAdminTenantId(data.tenant.id.toString());\r\n            }\r\n          }\r\n        } catch (err: unknown) {\r\n          console.error('Error fetching tenant ID:', err);\r\n        }\r\n      };\r\n      void fetchTenantId();\r\n    }\r\n  }, [user?.role, businessSlug, adminTenantId]);\r\n  \r\n  // Get tenant ID from user context or admin lookup\r\n  const tenantId = user?.tenant_id?.toString() ?? adminTenantId ?? undefined;\r\n\r\n  const { vehicles } = useServicesData();\r\n  \r\n  // Direct API call function to avoid hook dependency issues\r\n  const fetchServicesDirect = useCallback(async (vehicleId: string, categoryId: string) => {\r\n    if (!tenantId) return null;\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Convert frontend IDs to database IDs\r\n      const VEHICLE_ID_MAP: Record<string, number> = {\r\n        'cars': 1,\r\n        'suv': 3, // SUV has its own database ID\r\n        'trucks': 2,\r\n        'rvs': 4,\r\n        'boats': 5,\r\n        'motorcycles': 6,\r\n        'offroad': 7,\r\n        'other': 8\r\n      };\r\n      \r\n      const CATEGORY_ID_MAP: Record<string, number> = {\r\n        'interior': 1,\r\n        'exterior': 2, \r\n        'service-packages': 3,\r\n        'addons': 7,\r\n        'ceramic-coating': 4,\r\n        'paint-correction': 5,\r\n        'paint-protection-film': 6\r\n      };\r\n      \r\n      const dbVehicleId = VEHICLE_ID_MAP[vehicleId];\r\n      const dbCategoryId = CATEGORY_ID_MAP[categoryId];\r\n      \r\n      if (!dbVehicleId || !dbCategoryId) {\r\n        throw new Error('Invalid vehicle or category ID');\r\n      }\r\n      \r\n      const response = await fetch(`/api/services/tenant/${tenantId}/vehicle/${vehicleId}/category/${dbCategoryId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch services');\r\n      }\r\n      \r\n      const data = await response.json() as { success: boolean; data: unknown[] };\r\n      return data.data;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch services');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tenantId]);\r\n  \r\n  // Effect to fetch services when vehicle or category changes\r\n  useEffect(() => {\r\n    if (selectedVehicle && selectedCategory && tenantId) {\r\n      const fetchKey = `${selectedVehicle}-${selectedCategory}-${tenantId}`;\r\n      \r\n      // Prevent duplicate calls\r\n      if (lastFetchRef.current === fetchKey) {\r\n        return;\r\n      }\r\n      \r\n      lastFetchRef.current = fetchKey;\r\n      \r\n      void fetchServicesDirect(selectedVehicle, selectedCategory).then((data: unknown) => {\r\n        if (data && Array.isArray(data) && data.length > 0) {\r\n          // Convert API data to frontend Service format\r\n          const services = data.map((serviceData: unknown) => {\r\n            const service = serviceData as {\r\n              id: number;\r\n              name: string;\r\n              tiers?: Array<{\r\n                id: number;\r\n                name: string;\r\n                price: number;\r\n                duration: number;\r\n                features?: string[];\r\n                enabled: boolean;\r\n                popular?: boolean;\r\n              }>;\r\n            };\r\n            return {\r\n              id: service.id.toString(),\r\n              name: service.name,\r\n              tiers: service.tiers && service.tiers.length > 0 ? service.tiers.map((tier) => ({\r\n                id: tier.id.toString(),\r\n                name: tier.name,\r\n                price: tier.price,\r\n                duration: tier.duration,\r\n                features: tier.features || [],\r\n                enabled: tier.enabled,\r\n                popular: tier.popular || false\r\n              })) : []\r\n            };\r\n          });\r\n          \r\n          setAvailableServices(services);\r\n          \r\n          // If no service is currently selected, select the first one\r\n          if (!selectedService && services.length > 0) {\r\n            const firstService = services[0];\r\n            if (firstService) {\r\n              setSelectedService(firstService.id);\r\n              setCurrentServiceData(firstService);\r\n            }\r\n          } else if (selectedService) {\r\n            // Find the currently selected service in the new list\r\n            const currentService = services.find(s => s.id === selectedService);\r\n            if (currentService) {\r\n              setCurrentServiceData(currentService);\r\n            } else if (services.length > 0) {\r\n              // If the selected service is not in the new list, select the first one\r\n              const firstService = services[0];\r\n              if (firstService) {\r\n                setSelectedService(firstService.id);\r\n                setCurrentServiceData(firstService);\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          setCurrentServiceData(null);\r\n          setAvailableServices([]);\r\n          setSelectedService('');\r\n        }\r\n      });\r\n    }\r\n  }, [selectedVehicle, selectedCategory, tenantId, fetchServicesDirect, selectedService]);\r\n\r\n  // Effect to handle service selection changes\r\n  useEffect(() => {\r\n    if (selectedService && availableServices.length > 0) {\r\n      const selectedServiceData = availableServices.find(service => service.id === selectedService);\r\n      if (selectedServiceData) {\r\n        setCurrentServiceData(selectedServiceData);\r\n      }\r\n    }\r\n  }, [selectedService, availableServices]);\r\n\r\n  // Add the missing variable declarations here\r\n  const selectedVehicleData = vehicles.find(v => v.id === selectedVehicle);\r\n  const selectedCategoryData = selectedVehicleData?.categories.find(c => c.id === selectedCategory);\r\n\r\n  if (user?.role === 'admin' && businessSlug && !tenantId) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <div className=\"text-gray-400 mb-4\">Loading affiliate data...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!tenantId) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <div className=\"text-red-400 mb-4\">Configuration Error</div>\r\n        <h3 className=\"text-lg font-medium text-white mb-2\">Affiliate ID not found</h3>\r\n        <p className=\"text-gray-400 mb-4\">\r\n          {user?.role === 'admin' \r\n            ? 'Unable to load affiliate data. Please check the URL and try again.'\r\n            : 'Please log in again or contact support'\r\n          }\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleVehicleChange = (vehicleId: string) => {\r\n    setSelectedVehicle(vehicleId);\r\n    const vehicle = vehicles.find(v => v.id === vehicleId);\r\n    if (vehicle && vehicle.categories.length > 0) {\r\n      setSelectedCategory(vehicle.categories[0]?.id || 'service-packages');\r\n      setSelectedService(''); // Reset service selection\r\n    }\r\n  };\r\n\r\n  const handleCategoryChange = (categoryId: string) => {\r\n    setSelectedCategory(categoryId);\r\n    setSelectedService(''); // Reset service selection\r\n  };\r\n\r\n  const handleEditService = () => {\r\n    if (currentServiceData) {\r\n      setIsEditingService(true);\r\n      setIsMultiTierModalOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Unified Three Column Container with Action Buttons */}\r\n      <div className=\"bg-stone-800 rounded-lg border border-stone-700 overflow-hidden\">\r\n        {/* Header Row with Column Titles and Action Buttons */}\r\n        <div className=\"p-4 border-b border-stone-700\">\r\n          <div className=\"grid grid-cols-[200px_200px_200px_auto] gap-0\">\r\n            <h3 className=\"text-lg font-semibold text-white px-4\">Vehicle</h3>\r\n            <h3 className=\"text-lg font-semibold text-white px-4\">Category</h3>\r\n            <h3 className=\"text-lg font-semibold text-white px-4\">Service</h3>\r\n            <div className=\"flex items-center justify-end space-x-2\">\r\n              <Button \r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"p-2 text-gray-400 hover:text-white\"\r\n                title=\"Edit Service\"\r\n                onClick={handleEditService}\r\n                disabled={!selectedService || !currentServiceData}\r\n              >\r\n                <Settings className=\"h-5 w-5\" />\r\n              </Button>\r\n              <Button \r\n                variant=\"primary\"\r\n                size=\"sm\"\r\n                className=\"p-2 bg-green-500 hover:bg-green-600\"\r\n                title=\"Add Service\"\r\n                onClick={() => {\r\n                  setIsEditingService(false);\r\n                  setIsMultiTierModalOpen(true);\r\n                }}\r\n                leftIcon={<Plus className=\"h-5 w-5\" />}\r\n              />\r\n              <Button \r\n                variant=\"destructive\"\r\n                size=\"sm\"\r\n                className=\"p-2 bg-red-500 hover:bg-red-600\"\r\n                title=\"Delete Service\"\r\n                onClick={() => { setIsDeleteServiceModalOpen(true); }}\r\n                disabled={!selectedService || !currentServiceData}\r\n                leftIcon={<Trash2 className=\"h-5 w-5\" />}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-[200px_200px_200px_auto] gap-0 min-h-[400px]\">\r\n          <div>\r\n            <VehicleSelector\r\n              vehicles={vehicles}\r\n              selectedVehicle={selectedVehicle}\r\n              onVehicleChange={handleVehicleChange}\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <CategorySelector\r\n              categories={selectedVehicleData?.categories || []}\r\n              selectedCategory={selectedCategory}\r\n              onCategoryChange={handleCategoryChange}\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <ServiceSelector\r\n              services={availableServices}\r\n              selectedService={selectedService}\r\n              onServiceChange={setSelectedService}\r\n            />\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Selected Service Display */}\r\n      {currentServiceData && (\r\n        <div className=\"bg-stone-800 rounded-lg border border-stone-700 p-6\">\r\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Selected Service: {currentServiceData.name}</h3>\r\n          \r\n          {currentServiceData.tiers.length > 0 ? (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"text-sm text-gray-400 mb-2\">\r\n                {currentServiceData.tiers.length} tier{currentServiceData.tiers.length !== 1 ? 's' : ''} configured:\r\n              </div>\r\n              <div className=\"space-y-4\">\r\n                {currentServiceData.tiers.map((tier, index) => (\r\n                  <div key={tier.id} className=\"bg-stone-700 rounded-lg p-4 border border-stone-600\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <h4 className=\"font-medium text-white\">{tier.name}</h4>\r\n                      <span className=\"text-xs text-gray-400\">Tier {index + 1}</span>\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"text-2xl font-bold text-green-400\">\r\n                        ${Number(tier.price).toFixed(2)}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-400\">\r\n                        {tier.duration} minutes\r\n                      </div>\r\n                      {tier.features.length > 0 && (\r\n                        <div className=\"text-sm text-gray-300\">\r\n                          <div className=\"font-medium mb-2\">Features:</div>\r\n                          <ul className=\"list-disc list-inside space-y-1\">\r\n                            {tier.features.map((feature, idx) => (\r\n                              <li key={idx} className=\"text-gray-400\">{feature}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"flex gap-2 mt-3\">\r\n                        {tier.enabled && (\r\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-900 text-green-200\">\r\n                            Enabled\r\n                          </span>\r\n                        )}\r\n                        {tier.popular && (\r\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-900 text-yellow-200\">\r\n                            Popular\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-gray-400\">No tiers configured for this service.</div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Loading State */}\r\n      {loading && (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"text-gray-400 mb-4\">Loading services...</div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Error State */}\r\n      {error && (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"text-red-400 mb-4\">Error: {error}</div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Empty State */}\r\n      {availableServices.length === 0 && !loading && !error && selectedCategoryData && (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"text-gray-400 mb-4\">\r\n            No services configured for this category yet.\r\n          </div>\r\n          <h3 className=\"text-lg font-medium text-white mb-2\">Add Your First Service</h3>\r\n          <p className=\"text-gray-400 mb-4\">Click the + button above to create your first service and pricing tiers.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Multi-Tier Pricing Modal */}\r\n      <MultiTierPricingModal\r\n        key={`${isEditingService ? 'edit' : 'create'}-${currentServiceData?.id || 'new'}`}\r\n        isOpen={isMultiTierModalOpen}\r\n        onClose={() => {\r\n          setIsMultiTierModalOpen(false);\r\n          setIsEditingService(false);\r\n        }}\r\n        onSubmit={(_serviceName, _tiers) => {\r\n          setIsMultiTierModalOpen(false);\r\n          setIsEditingService(false);\r\n        }}\r\n        initialTiers={isEditingService ? currentServiceData?.tiers : undefined}\r\n        initialServiceName={isEditingService ? currentServiceData?.name || '' : ''}\r\n        loading={loading || false}\r\n        error={error}\r\n        vehicleType={selectedVehicle}\r\n        categoryType={selectedCategory as 'service-packages' | 'addons'}\r\n      />\r\n\r\n      {/* Delete Service Modal */}\r\n      <DeleteServiceModal\r\n        isOpen={isDeleteServiceModalOpen}\r\n        onClose={() => { setIsDeleteServiceModalOpen(false); }}\r\n        onConfirm={() => {\r\n          setIsDeleteServiceModalOpen(false);\r\n        }}\r\n        serviceName={currentServiceData?.name || ''}\r\n        loading={loading || false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleFixedServicesTab;\r\n","// API functions for website content management\r\n\r\nimport type { WebsiteContentData } from '@/shared/api/websiteContent.api';\r\n\r\n// Save website content for a tenant\r\nexport const saveWebsiteContent = async (tenantSlug: string, contentData: Partial<WebsiteContentData>): Promise<{ success: boolean; message?: string }> => {\r\n  try {\r\n    // Backend expects flat structure, so just pass contentData as is\r\n    // The WebsiteContentTab component already manages the flat structure\r\n    const response = await fetch(`/api/website-content/${tenantSlug}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(contentData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json() as { error?: string };\r\n      throw new Error(errorData.error || 'Failed to save website content');\r\n    }\r\n\r\n    const result = await response.json() as { success: boolean; message?: string };\r\n    return result;\r\n  } catch (error) {\r\n    console.error('Error saving website content:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get website content for a tenant\r\nexport const getWebsiteContent = async (tenantSlug: string): Promise<WebsiteContentData> => {\r\n  try {\r\n    const response = await fetch(`/api/website-content/${tenantSlug}`);\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json() as { error?: string };\r\n      throw new Error(errorData.error || 'Failed to fetch website content');\r\n    }\r\n\r\n    const result = await response.json() as { success: boolean; content?: WebsiteContentData };\r\n    // Backend returns { success: true, content: {...} }\r\n    // Return the content directly or throw if missing\r\n    if (!result.content) {\r\n      throw new Error('No content data received from server');\r\n    }\r\n    return result.content;\r\n  } catch (error) {\r\n    console.error('Error fetching website content:', error);\r\n    throw error;\r\n  }\r\n};\r\n","/**\r\n * API client for tenant dashboard reviews\r\n */\r\n\r\nexport interface TenantReviewData {\r\n  customer_name: string;\r\n  rating: number;\r\n  comment: string;\r\n  reviewer_url?: string;\r\n  vehicle_type?: 'car' | 'truck' | 'suv' | 'boat' | 'rv' | 'motorcycle';\r\n  paint_correction?: boolean;\r\n  ceramic_coating?: boolean;\r\n  paint_protection_film?: boolean;\r\n  source?: 'website' | 'google' | 'yelp' | 'facebook';\r\n  avatar_filename?: string;\r\n}\r\n\r\nexport interface TenantReview {\r\n  id: number;\r\n  tenant_slug: string;\r\n  customer_name: string;\r\n  rating: number;\r\n  comment: string;\r\n  reviewer_url?: string;\r\n  vehicle_type?: string;\r\n  paint_correction: boolean;\r\n  ceramic_coating: boolean;\r\n  paint_protection_film: boolean;\r\n  source: string;\r\n  avatar_filename?: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  created_at: string;\r\n  updated_at: string;\r\n  published_at?: string;\r\n}\r\n\r\nexport interface CreateReviewResponse {\r\n  success: boolean;\r\n  data: TenantReview;\r\n  message: string;\r\n}\r\n\r\nexport interface GetReviewsResponse {\r\n  success: boolean;\r\n  data: TenantReview[];\r\n  pagination: {\r\n    total: number;\r\n    limit: number;\r\n    offset: number;\r\n    hasMore: boolean;\r\n  };\r\n}\r\n\r\nexport interface BusinessData {\r\n  id: number;\r\n  slug: string;\r\n  business_name: string;\r\n  application_status: string;\r\n  phone: string;\r\n  sms_phone: string;\r\n  twilio_phone: string;\r\n  service_areas: Array<{ city: string; state: string; zip?: string; primary?: boolean }>;\r\n  owner: string;\r\n  business_email: string;\r\n  personal_email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  personal_phone: string;\r\n  business_start_date: string;\r\n  website: string;\r\n  gbp_url: string;\r\n  google_maps_url: string;\r\n  facebook_url: string;\r\n  youtube_url: string;\r\n  tiktok_url: string;\r\n  instagram_url: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface GetBusinessResponse {\r\n  success: boolean;\r\n  data: BusinessData;\r\n}\r\n\r\n/**\r\n * Create a new review\r\n * Note: No authentication required - reviews are public submissions\r\n */\r\nexport const createReview = async (\r\n  tenantSlug: string,\r\n  reviewData: TenantReviewData\r\n): Promise<CreateReviewResponse> => {\r\n  const response = await fetch('/api/tenant-reviews', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      tenant_slug: tenantSlug,\r\n      ...reviewData,\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { message?: string };\r\n    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<CreateReviewResponse>;\r\n};\r\n\r\n/**\r\n * Delete a review\r\n */\r\nexport const deleteReview = async (reviewId: number): Promise<{ success: boolean; message: string }> => {\r\n  const response = await fetch(`/api/tenant-reviews/${reviewId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { message?: string };\r\n    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<{ success: boolean; message: string }>;\r\n};\r\n\r\n/**\r\n * Upload avatar for a review\r\n */\r\nexport const uploadAvatar = async (\r\n  avatarFile: File,\r\n  customerName: string,\r\n  reviewId: number\r\n): Promise<{ success: boolean; message: string; avatarUrl?: string; filename?: string }> => {\r\n  const formData = new FormData();\r\n  formData.append('avatar', avatarFile);\r\n  formData.append('customerName', customerName);\r\n  formData.append('reviewId', reviewId.toString());\r\n\r\n  const response = await fetch('/api/tenant-reviews/upload-avatar', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { message?: string };\r\n    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<{ success: boolean; message: string; avatarUrl?: string; filename?: string }>;\r\n};\r\n\r\n/**\r\n * Get reviews for a specific tenant (public endpoint)\r\n */\r\nexport const getReviews = async (\r\n  tenantSlug: string,\r\n  options: {\r\n    limit?: number;\r\n    offset?: number;\r\n  } = {}\r\n): Promise<GetReviewsResponse> => {\r\n  const params = new URLSearchParams();\r\n  \r\n  if (options.limit) params.append('limit', options.limit.toString());\r\n  if (options.offset) params.append('offset', options.offset.toString());\r\n\r\n  const response = await fetch(`/api/tenant-reviews/${tenantSlug}?${params}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { message?: string };\r\n    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<GetReviewsResponse>;\r\n};\r\n\r\n/**\r\n * Get reviews for a specific tenant (authenticated endpoint)\r\n */\r\nexport const getTenantReviews = async (\r\n  tenantSlug: string,\r\n  options: {\r\n    status?: 'pending' | 'approved' | 'rejected';\r\n    limit?: number;\r\n    offset?: number;\r\n  } = {}\r\n): Promise<GetReviewsResponse> => {\r\n  const params = new URLSearchParams();\r\n  \r\n  if (options.status) params.append('status', options.status);\r\n  if (options.limit) params.append('limit', options.limit.toString());\r\n  if (options.offset) params.append('offset', options.offset.toString());\r\n\r\n  const response = await fetch(`/api/tenant-reviews/${tenantSlug}?${params}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('token') || ''}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { message?: string };\r\n    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<GetReviewsResponse>;\r\n};\r\n\r\n/**\r\n * Get business data for a specific tenant (including GBP URL)\r\n */\r\nexport const getBusinessData = async (tenantSlug: string): Promise<GetBusinessResponse> => {\r\n  const response = await fetch(`/api/tenants/${tenantSlug}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { error?: string };\r\n    throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<GetBusinessResponse>;\r\n};\r\n\r\n/**\r\n * Scrape Google Business Profile or Google Maps for rating and review count\r\n */\r\nexport const scrapeGoogleBusinessProfile = async (\r\n  url: string,\r\n  tenantSlug?: string\r\n): Promise<{\r\n  success: boolean;\r\n  data?: {\r\n    averageRating: string | null;\r\n    totalReviews: string | null;\r\n    businessName: string | null;\r\n    gbpUrl: string;\r\n  };\r\n  message: string;\r\n}> => {\r\n  const response = await fetch('/api/tenant-reviews/scrape-google-business', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      gbpUrl: url, // Backend still expects gbpUrl parameter name\r\n      tenantSlug,\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { message?: string };\r\n    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<{\r\n    success: boolean;\r\n    data?: {\r\n      averageRating: string | null;\r\n      totalReviews: string | null;\r\n      businessName: string | null;\r\n      gbpUrl: string;\r\n    };\r\n    message: string;\r\n  }>;\r\n};\r\n\r\n/**\r\n * Update review status (admin/tenant only)\r\n */\r\nexport const updateReviewStatus = async (\r\n  reviewId: number,\r\n  status: 'pending' | 'approved' | 'rejected'\r\n): Promise<{ success: boolean; data: TenantReview; message: string }> => {\r\n  const response = await fetch(`/api/tenant-reviews/${reviewId}/status`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token') || ''}`,\r\n    },\r\n    body: JSON.stringify({ status }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { message?: string };\r\n    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<{ success: boolean; data: TenantReview; message: string }>;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AlertCircle, Link, MessageSquare, Send, Star, Upload,User } from 'lucide-react';\r\n\r\nimport { createReview, type TenantReviewData,uploadAvatar } from '../../../api/reviewsApi';\r\n\r\ninterface ReviewFormData {\r\n  customerName: string;\r\n  reviewerUrl: string;\r\n  rating: number;\r\n  comment: string;\r\n  vehicleType: string;\r\n  paintCorrection: boolean;\r\n  ceramicCoating: boolean;\r\n  paintProtectionFilm: boolean;\r\n  source: 'website' | 'google' | 'yelp' | 'facebook';\r\n  avatarFile?: File;\r\n}\r\n\r\ninterface AddReviewFormProps {\r\n  tenantSlug?: string;\r\n}\r\n\r\nexport const AddReviewForm: React.FC<AddReviewFormProps> = ({ tenantSlug }) => {\r\n  const [formData, setFormData] = useState<ReviewFormData>({\r\n    customerName: '',\r\n    reviewerUrl: '',\r\n    rating: 0,\r\n    comment: '',\r\n    vehicleType: 'car',\r\n    paintCorrection: false,\r\n    ceramicCoating: false,\r\n    paintProtectionFilm: false,\r\n    source: 'website',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitMessage, setSubmitMessage] = useState<{\r\n    type: 'success' | 'error';\r\n    message: string;\r\n  } | null>(null);\r\n\r\n  const vehicleTypes = [\r\n    { value: 'car', label: 'Car' },\r\n    { value: 'truck', label: 'Truck' },\r\n    { value: 'suv', label: 'SUV' },\r\n    { value: 'boat', label: 'Boat' },\r\n    { value: 'rv', label: 'RV' },\r\n    { value: 'motorcycle', label: 'Motorcycle' },\r\n  ];\r\n\r\n  const detectReviewSource = (url: string): 'website' | 'google' | 'yelp' | 'facebook' => {\r\n    if (!url) return 'website';\r\n    \r\n    const lowerUrl = url.toLowerCase();\r\n    \r\n    if (lowerUrl.includes('google.com') || lowerUrl.includes('maps.google') || lowerUrl.includes('google.com/maps')) {\r\n      return 'google';\r\n    }\r\n    if (lowerUrl.includes('yelp.com')) {\r\n      return 'yelp';\r\n    }\r\n    if (lowerUrl.includes('facebook.com') || lowerUrl.includes('fb.com')) {\r\n      return 'facebook';\r\n    }\r\n    \r\n    return 'website';\r\n  };\r\n\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\r\n  ) => {\r\n    const { name, value, type } = e.target;\r\n    \r\n    setFormData(prev => {\r\n      const newData = {\r\n        ...prev,\r\n        [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value,\r\n      };\r\n      \r\n      // Auto-detect review source when reviewer URL changes\r\n      if (name === 'reviewerUrl') {\r\n        newData.source = detectReviewSource(value);\r\n      }\r\n      \r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      // Validate file size (5MB limit)\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        setSubmitMessage({\r\n          type: 'error',\r\n          message: 'Avatar file must be less than 5MB',\r\n        });\r\n        return;\r\n      }\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        avatarFile: file,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleRatingClick = (rating: number) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      rating,\r\n    }));\r\n  };\r\n\r\n  const renderStars = (rating: number, interactive = false) => {\r\n    return Array.from({ length: 5 }, (_, index) => (\r\n      <button\r\n        key={index}\r\n        type=\"button\"\r\n        onClick={() => { if (interactive) handleRatingClick(index + 1); }}\r\n        disabled={!interactive}\r\n        className={`h-8 w-8 transition-colors ${\r\n          index < rating\r\n            ? 'text-yellow-400 fill-current'\r\n            : 'text-gray-300 hover:text-yellow-300'\r\n        } ${interactive ? 'cursor-pointer hover:scale-110' : 'cursor-default'}`}\r\n      >\r\n        <Star className=\"h-full w-full\" />\r\n      </button>\r\n    ));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (formData.rating === 0) {\r\n      setSubmitMessage({\r\n        type: 'error',\r\n        message: 'Please select a rating',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!tenantSlug) {\r\n      setSubmitMessage({\r\n        type: 'error',\r\n        message: 'Tenant information is missing. Please refresh the page.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setSubmitMessage(null);\r\n\r\n    try {\r\n      // Step 1: Create the review first (without avatar)\r\n      const reviewData: TenantReviewData = {\r\n        customer_name: formData.customerName,\r\n        rating: formData.rating,\r\n        comment: formData.comment,\r\n        reviewer_url: formData.reviewerUrl || undefined,\r\n        vehicle_type: formData.vehicleType as TenantReviewData['vehicle_type'],\r\n        paint_correction: formData.paintCorrection,\r\n        ceramic_coating: formData.ceramicCoating,\r\n        paint_protection_film: formData.paintProtectionFilm,\r\n        source: formData.source,\r\n        // Don't include avatar_filename yet - we'll upload the file first\r\n      };\r\n\r\n      const createResponse = await createReview(tenantSlug, reviewData);\r\n      const reviewId = createResponse.data.id;\r\n\r\n      // Step 2: Upload avatar if provided\r\n      if (formData.avatarFile && reviewId) {\r\n        try {\r\n          const _avatarResult = await uploadAvatar(formData.avatarFile, formData.customerName, reviewId);\r\n        } catch (avatarError) {\r\n          // Avatar upload failed, but review was created successfully\r\n          console.warn('Avatar upload failed:', avatarError);\r\n          // Don't fail the entire operation for avatar upload failure\r\n        }\r\n      }\r\n      \r\n      setSubmitMessage({\r\n        type: 'success',\r\n        message: 'Review published successfully!',\r\n      });\r\n      \r\n      // Reset form\r\n      setFormData({\r\n        customerName: '',\r\n        reviewerUrl: '',\r\n        rating: 0,\r\n        comment: '',\r\n        vehicleType: 'car',\r\n        paintCorrection: false,\r\n        ceramicCoating: false,\r\n        paintProtectionFilm: false,\r\n        source: 'website',\r\n      });\r\n    } catch (error) {\r\n      setSubmitMessage({\r\n        type: 'error',\r\n        message: error instanceof Error ? error.message : 'Failed to add review. Please try again.',\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const isFormValid = formData.customerName.trim() && \r\n                     formData.rating > 0 && \r\n                     formData.comment.trim();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div>\r\n        <h3 className=\"text-lg font-semibold text-white\">Add New Review</h3>\r\n        <p className=\"text-gray-400 text-sm\">\r\n          Add a customer review to showcase your services\r\n        </p>\r\n      </div>\r\n\r\n      {/* Form */}\r\n      <div className=\"bg-stone-800 rounded-xl border border-stone-700 p-6\">\r\n        <form onSubmit={(e) => { e.preventDefault(); void handleSubmit(e); }} className=\"space-y-6\">\r\n          {/* Customer Information */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label htmlFor=\"customerName\" className=\"flex items-center text-sm font-medium text-white mb-2\">\r\n                <User className=\"h-4 w-4 mr-2\" />\r\n                Customer Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"customerName\"\r\n                name=\"customerName\"\r\n                value={formData.customerName}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-4 py-3 bg-stone-700 border border-stone-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                placeholder=\"Enter customer name\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"reviewerUrl\" className=\"flex items-center text-sm font-medium text-white mb-2\">\r\n                <Link className=\"h-4 w-4 mr-2\" />\r\n                Reviewer Profile URL\r\n              </label>\r\n              <input\r\n                type=\"url\"\r\n                id=\"reviewerUrl\"\r\n                name=\"reviewerUrl\"\r\n                value={formData.reviewerUrl}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-4 py-3 bg-stone-700 border border-stone-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                placeholder=\"e.g., https://www.google.com/maps/contrib/123456789\"\r\n              />\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                Link to reviewer&apos;s profile page (Google, Yelp, etc.)\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Vehicle Type */}\r\n          <div>\r\n            <label htmlFor=\"vehicleType\" className=\"block text-sm font-medium text-white mb-2\">\r\n              Vehicle Type\r\n            </label>\r\n            <select\r\n              id=\"vehicleType\"\r\n              name=\"vehicleType\"\r\n              value={formData.vehicleType}\r\n              onChange={handleInputChange}\r\n              className=\"w-1/4 px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n            >\r\n              {vehicleTypes.map((type) => (\r\n                <option key={type.value} value={type.value}>\r\n                  {type.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Service Types */}\r\n          <div>\r\n            <div className=\"block text-sm font-medium text-white mb-3\">\r\n              Service Types\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"paintCorrection\"\r\n                  name=\"paintCorrection\"\r\n                  checked={formData.paintCorrection}\r\n                  onChange={handleInputChange}\r\n                  className=\"h-4 w-4 text-orange-500 bg-stone-700 border-stone-600 rounded focus:ring-orange-500 focus:ring-2\"\r\n                />\r\n                <label htmlFor=\"paintCorrection\" className=\"ml-2 text-sm text-white\">\r\n                  Paint Correction\r\n                </label>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"ceramicCoating\"\r\n                  name=\"ceramicCoating\"\r\n                  checked={formData.ceramicCoating}\r\n                  onChange={handleInputChange}\r\n                  className=\"h-4 w-4 text-orange-500 bg-stone-700 border-stone-600 rounded focus:ring-orange-500 focus:ring-2\"\r\n                />\r\n                <label htmlFor=\"ceramicCoating\" className=\"ml-2 text-sm text-white\">\r\n                  Ceramic Coating\r\n                </label>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"paintProtectionFilm\"\r\n                  name=\"paintProtectionFilm\"\r\n                  checked={formData.paintProtectionFilm}\r\n                  onChange={handleInputChange}\r\n                  className=\"h-4 w-4 text-orange-500 bg-stone-700 border-stone-600 rounded focus:ring-orange-500 focus:ring-2\"\r\n                />\r\n                <label htmlFor=\"paintProtectionFilm\" className=\"ml-2 text-sm text-white\">\r\n                  Paint Protection Film\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Review Source */}\r\n          <div>\r\n            <label htmlFor=\"source\" className=\"block text-sm font-medium text-white mb-2\">\r\n              Review Source\r\n              {formData.reviewerUrl && (\r\n                <span className=\"text-xs text-gray-400 ml-2\">(auto-detected)</span>\r\n              )}\r\n            </label>\r\n            <select\r\n              id=\"source\"\r\n              name=\"source\"\r\n              value={formData.source}\r\n              onChange={handleInputChange}\r\n              className=\"w-1/4 px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"website\">Website</option>\r\n              <option value=\"google\">Google</option>\r\n              <option value=\"yelp\">Yelp</option>\r\n              <option value=\"facebook\">Facebook</option>\r\n            </select>\r\n            {formData.reviewerUrl && (\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                Automatically detected from profile URL. You can change this manually if needed.\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Rating */}\r\n          <div>\r\n            <div className=\"block text-sm font-medium text-white mb-3\">\r\n              Rating *\r\n            </div>\r\n            <div className=\"flex items-center space-x-1\">\r\n              {renderStars(formData.rating, true)}\r\n              {formData.rating > 0 && (\r\n                <span className=\"ml-3 text-gray-300\">\r\n                  {formData.rating} out of 5 stars\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Comment */}\r\n          <div>\r\n            <label htmlFor=\"comment\" className=\"flex items-center text-sm font-medium text-white mb-2\">\r\n              <MessageSquare className=\"h-4 w-4 mr-2\" />\r\n              Review Comment *\r\n            </label>\r\n            <textarea\r\n              id=\"comment\"\r\n              name=\"comment\"\r\n              value={formData.comment}\r\n              onChange={handleInputChange}\r\n              rows={4}\r\n              className=\"w-full px-4 py-3 bg-stone-700 border border-stone-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-none\"\r\n              placeholder=\"Enter the customer's review comment...\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n\r\n          {/* Avatar Image Upload */}\r\n          <div>\r\n            <label htmlFor=\"avatarFile\" className=\"flex items-center text-sm font-medium text-white mb-2\">\r\n              <Upload className=\"h-4 w-4 mr-2\" />\r\n              Avatar Image (Optional)\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"avatarFile\"\r\n              name=\"avatarFile\"\r\n              accept=\"image/*\"\r\n              onChange={handleFileChange}\r\n              className=\"w-full px-4 py-3 bg-stone-700 border border-stone-600 rounded-lg text-white file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-orange-600 file:text-white hover:file:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n            />\r\n            {formData.avatarFile && (\r\n              <div className=\"mt-2 text-sm text-gray-400\">\r\n                Selected: {formData.avatarFile.name} ({(formData.avatarFile.size / 1024 / 1024).toFixed(2)} MB)\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Submit Message */}\r\n          {submitMessage && (\r\n            <div className={`flex items-center space-x-2 p-4 rounded-lg ${\r\n              submitMessage.type === 'success'\r\n                ? 'bg-green-900/20 border border-green-700 text-green-400'\r\n                : 'bg-red-900/20 border border-red-700 text-red-400'\r\n            }`}>\r\n              <AlertCircle className=\"h-5 w-5\" />\r\n              <span>{submitMessage.message}</span>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!isFormValid || isSubmitting}\r\n              className={`flex items-center space-x-2 px-6 py-3 rounded-lg font-medium transition-all duration-200 ${\r\n                isFormValid && !isSubmitting\r\n                  ? 'bg-orange-500 hover:bg-orange-600 text-white shadow-lg hover:shadow-xl'\r\n                  : 'bg-gray-600 text-gray-400 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <Send className=\"h-4 w-4\" />\r\n              <span>{isSubmitting ? 'Adding Review...' : 'Add Review'}</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { config } from '@/../config/env';\r\nimport type { WebsiteContentData } from '@/shared/api/websiteContent.api';\r\n\r\ninterface UseWebsiteContentDataReturn {\r\n  contentData: WebsiteContentData | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  updateContent: (data: Partial<WebsiteContentData>) => Promise<boolean>;\r\n  isUpdating: boolean;\r\n  refetch: () => Promise<void>;\r\n}\r\n\r\nexport const useWebsiteContentData = (tenantSlug?: string): UseWebsiteContentDataReturn => {\r\n  const [contentData, setContentData] = useState<WebsiteContentData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [refetchTrigger, setRefetchTrigger] = useState(0);\r\n\r\n  // Fetch website content data\r\n  useEffect(() => {\r\n    const fetchContentData = async () => {\r\n      if (!tenantSlug) {\r\n        setError('Tenant slug is required');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch(`${config.apiUrl}/api/website-content/${tenantSlug}`);\r\n        \r\n        if (!response.ok) {\r\n          if (response.status === 404) {\r\n            throw new Error('Website content not found');\r\n          }\r\n          throw new Error(`Failed to fetch website content: ${response.statusText}`);\r\n        }\r\n\r\n        const result = await response.json() as { content?: WebsiteContentData };\r\n        const data = result.content;\r\n        \r\n        if (!data) {\r\n          throw new Error('No website content received');\r\n        }\r\n        \r\n        setContentData(data);\r\n      } catch (err) {\r\n        const errorMessage = err instanceof Error ? err.message : 'Failed to fetch website content';\r\n        setError(errorMessage);\r\n        console.error('Error fetching website content:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    void fetchContentData();\r\n  }, [tenantSlug, refetchTrigger]);\r\n\r\n  // Refetch function\r\n  const refetch = () => {\r\n    setRefetchTrigger(prev => prev + 1);\r\n    return Promise.resolve();\r\n  };\r\n\r\n  // Update website content data\r\n  const updateContent = async (data: Partial<WebsiteContentData>): Promise<boolean> => {\r\n    if (!tenantSlug) {\r\n      setError('Tenant slug is required');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setIsUpdating(true);\r\n      setError(null);\r\n\r\n      // Send the partial data to update\r\n      const response = await fetch(`${config.apiUrl}/api/website-content/${tenantSlug}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ ...contentData, ...data }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to update website content: ${response.statusText}`);\r\n      }\r\n\r\n      const result = await response.json() as { content?: WebsiteContentData };\r\n      const updatedData = result.content;\r\n      \r\n      if (updatedData) {\r\n        setContentData(updatedData);\r\n      }\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update website content';\r\n      setError(errorMessage);\r\n      console.error('Error updating website content:', err);\r\n      return false;\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    contentData,\r\n    loading,\r\n    error,\r\n    updateContent,\r\n    isUpdating,\r\n    refetch,\r\n  };\r\n};\r\n\r\n","import React, { createContext, useContext } from 'react';\r\n\r\nimport type { WebsiteContentData } from '@/shared/api/websiteContent.api';\r\n\r\nimport { useWebsiteContentData } from '../hooks/useWebsiteContentData';\r\n\r\ninterface WebsiteContentContextValue {\r\n  contentData: WebsiteContentData | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  updateContent: (data: Partial<WebsiteContentData>) => Promise<boolean>;\r\n  isUpdating: boolean;\r\n  refetch: () => Promise<void>;\r\n}\r\n\r\nconst WebsiteContentContext = createContext<WebsiteContentContextValue | undefined>(undefined);\r\n\r\ninterface WebsiteContentProviderProps {\r\n  tenantSlug: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const WebsiteContentProvider: React.FC<WebsiteContentProviderProps> = ({ \r\n  tenantSlug, \r\n  children \r\n}) => {\r\n  const value = useWebsiteContentData(tenantSlug);\r\n\r\n  return (\r\n    <WebsiteContentContext.Provider value={value}>\r\n      {children}\r\n    </WebsiteContentContext.Provider>\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line react-refresh/only-export-components -- Hook is part of the provider pattern\r\nexport const useWebsiteContent = () => {\r\n  const context = useContext(WebsiteContentContext);\r\n  if (!context) {\r\n    throw new Error('useWebsiteContent must be used within WebsiteContentProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n","import React from 'react';\r\nimport { AlertCircle, CheckCircle, Loader2 } from 'lucide-react';\r\n\r\nimport type { FAQItem } from '@/shared/api/websiteContent.api';\r\nimport { useAutoSave } from '@/shared/utils';\r\n\r\nimport { useWebsiteContent } from '../contexts/WebsiteContentContext';\r\n\r\ninterface FAQItemAutoSaveFieldProps {\r\n  faqIndex: number;\r\n  field: 'question' | 'answer';\r\n  label: string;\r\n  type?: 'text' | 'textarea';\r\n  placeholder?: string;\r\n  rows?: number;\r\n}\r\n\r\nexport const FAQItemAutoSaveField: React.FC<FAQItemAutoSaveFieldProps> = ({\r\n  faqIndex,\r\n  field,\r\n  label,\r\n  type = 'text',\r\n  placeholder,\r\n  rows = 3,\r\n}) => {\r\n  const { contentData, updateContent } = useWebsiteContent();\r\n  \r\n  const getInitialValue = (): string => {\r\n    if (!contentData?.faq_items) return '';\r\n    const faqItem = contentData.faq_items[faqIndex];\r\n    if (!faqItem) return '';\r\n    return faqItem[field] || '';\r\n  };\r\n\r\n  const saveField = async (value: string) => {\r\n    if (!contentData?.faq_items) return;\r\n    \r\n    const currentItem = contentData.faq_items[faqIndex];\r\n    if (!currentItem) return;\r\n    \r\n    // Create updated FAQ items array\r\n    const updatedFaqItems: FAQItem[] = [...contentData.faq_items];\r\n    updatedFaqItems[faqIndex] = {\r\n      ...currentItem,\r\n      [field]: value\r\n    };\r\n    \r\n    // Update the entire faq_items array\r\n    await updateContent({ faq_items: updatedFaqItems });\r\n  };\r\n\r\n  const { value, setValue, isSaving, error } = useAutoSave(\r\n    getInitialValue(),\r\n    saveField,\r\n    { debounce: 1000 }\r\n  );\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    if (isSaving) {\r\n      return <Loader2 className=\"h-4 w-4 text-blue-500 animate-spin\" />;\r\n    }\r\n    if (error) {\r\n      return <AlertCircle className=\"h-4 w-4 text-red-500\" />;\r\n    }\r\n    if (value && value.trim() !== '') {\r\n      return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <label className=\"block text-xs font-medium text-gray-300 mb-1\">{label}</label>\r\n      <div className=\"relative\">\r\n        {type === 'textarea' ? (\r\n          <textarea\r\n            value={value}\r\n            onChange={handleChange}\r\n            placeholder={placeholder}\r\n            rows={rows}\r\n            className={`w-full px-3 py-2 pr-10 bg-stone-600 border rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-none ${\r\n              error ? 'border-red-500' : 'border-stone-500'\r\n            }`}\r\n          />\r\n        ) : (\r\n          <input\r\n            type={type}\r\n            value={value}\r\n            onChange={handleChange}\r\n            placeholder={placeholder}\r\n            className={`w-full px-3 py-2 pr-10 bg-stone-600 border rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent ${\r\n              error ? 'border-red-500' : 'border-stone-500'\r\n            }`}\r\n          />\r\n        )}\r\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\r\n          {getStatusIcon()}\r\n        </div>\r\n      </div>\r\n      {error && (\r\n        <p className=\"mt-1 text-xs text-red-400\">{error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import type { WebsiteContentData } from '@/shared/api/websiteContent.api';\r\nimport { useAutoSave } from '@/shared/utils';\r\n\r\nimport { useWebsiteContent } from '../contexts/WebsiteContentContext';\r\n\r\ntype WebsiteContentField = keyof WebsiteContentData;\r\n\r\ninterface UseWebsiteContentFieldOptions {\r\n  debounce?: number;\r\n  field: WebsiteContentField;\r\n}\r\n\r\nexport function useWebsiteContentField(options: UseWebsiteContentFieldOptions) {\r\n  const { debounce = 1000, field } = options;\r\n  const { updateContent, contentData } = useWebsiteContent();\r\n  \r\n  // Get the initial value for this field\r\n  const getInitialValue = (): string => {\r\n    if (!contentData) return '';\r\n    const value = contentData[field];\r\n    // Convert numbers to strings for the input field\r\n    if (typeof value === 'number') return String(value);\r\n    if (typeof value === 'string') return value;\r\n    return '';\r\n  };\r\n\r\n  const saveField = async (value: string) => {\r\n    if (!contentData) return;\r\n    \r\n    // Convert string back to appropriate type for saving\r\n    let saveValue: string | number = value;\r\n    if (field === 'reviews_avg_rating') {\r\n      saveValue = parseFloat(value) || 0;\r\n    } else if (field === 'reviews_total_count') {\r\n      saveValue = parseInt(value, 10) || 0;\r\n    }\r\n    \r\n    // Create a partial update object with just this field\r\n    const updateData = { [field]: saveValue };\r\n    \r\n    const success = await updateContent(updateData);\r\n    if (!success) {\r\n      throw new Error(`Failed to save ${field}`);\r\n    }\r\n  };\r\n\r\n  return useAutoSave(getInitialValue(), saveField, { debounce });\r\n}\r\n\r\n","import React from 'react';\r\nimport { AlertCircle, CheckCircle, Loader2 } from 'lucide-react';\r\n\r\nimport { useWebsiteContentField } from '../hooks/useWebsiteContentField';\r\n\r\ntype WebsiteContentField = \r\n  | 'hero_title'\r\n  | 'hero_subtitle'\r\n  | 'services_title'\r\n  | 'services_subtitle'\r\n  | 'services_auto_description'\r\n  | 'services_marine_description'\r\n  | 'services_rv_description'\r\n  | 'services_ceramic_description'\r\n  | 'services_correction_description'\r\n  | 'services_ppf_description'\r\n  | 'reviews_title'\r\n  | 'reviews_subtitle'\r\n  | 'reviews_avg_rating'\r\n  | 'reviews_total_count'\r\n  | 'faq_title'\r\n  | 'faq_subtitle';\r\n\r\ninterface WebsiteAutoSaveFieldProps {\r\n  field: WebsiteContentField;\r\n  label: string;\r\n  type?: 'text' | 'textarea' | 'number';\r\n  placeholder?: string;\r\n  className?: string;\r\n  debounce?: number;\r\n  rows?: number;\r\n  step?: string;\r\n}\r\n\r\nexport const WebsiteAutoSaveField: React.FC<WebsiteAutoSaveFieldProps> = ({\r\n  field,\r\n  label,\r\n  type = 'text',\r\n  placeholder,\r\n  className = '',\r\n  debounce = 1000,\r\n  rows = 3,\r\n  step,\r\n}) => {\r\n  const { value, setValue, isSaving, error } = useWebsiteContentField({ \r\n    field, \r\n    debounce \r\n  });\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    if (isSaving) {\r\n      return <Loader2 className=\"h-4 w-4 text-blue-500 animate-spin\" />;\r\n    }\r\n    if (error) {\r\n      return <AlertCircle className=\"h-4 w-4 text-red-500\" />;\r\n    }\r\n    if (value && value.trim() !== '') {\r\n      return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n        {label}\r\n      </label>\r\n      <div className=\"relative\">\r\n        {type === 'textarea' ? (\r\n          <textarea\r\n            value={value}\r\n            onChange={handleChange}\r\n            placeholder={placeholder}\r\n            rows={rows}\r\n            className={`w-full px-3 py-2 pr-10 border rounded-md bg-stone-700 text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-none ${\r\n              error ? 'border-red-500' : 'border-stone-600'\r\n            } ${className}`}\r\n          />\r\n        ) : (\r\n          <input\r\n            type={type}\r\n            value={value}\r\n            onChange={handleChange}\r\n            placeholder={placeholder}\r\n            step={step}\r\n            className={`w-full px-3 py-2 pr-10 border rounded-md bg-stone-700 text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent ${\r\n              error ? 'border-red-500' : 'border-stone-600'\r\n            } ${className}`}\r\n          />\r\n        )}\r\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\r\n          {getStatusIcon()}\r\n        </div>\r\n      </div>\r\n      {error && (\r\n        <p className=\"mt-1 text-sm text-red-400\">{error}</p>\r\n      )}\r\n      {isSaving && (\r\n        <p className=\"mt-1 text-sm text-blue-400\">Saving...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useMemo, useState } from 'react';\r\nimport { ChevronDown, ChevronRight, Eye, FileText, HelpCircle, Plus, Save, X } from 'lucide-react';\r\n\r\nimport { useData } from '@/shared/hooks';\r\nimport { loadIndustryFAQs } from '@/shared/utils/faqLoader';\r\n\r\nimport { FAQItemAutoSaveField } from './FAQItemAutoSaveField';\r\nimport { WebsiteAutoSaveField } from './WebsiteAutoSaveField';\r\n\r\ninterface FAQItem {\r\n  category: string;\r\n  question: string;\r\n  answer: string;\r\n}\r\n\r\ninterface FAQSectionProps {\r\n  faqContent?: FAQItem[];\r\n  onUpdateContent: (field: string, value: unknown) => void;\r\n  onResetToDefault: () => void;\r\n}\r\n\r\nexport const FAQSection: React.FC<FAQSectionProps> = ({\r\n  faqContent,\r\n  onUpdateContent,\r\n  onResetToDefault,\r\n}) => {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'content' | 'categories'>('content');\r\n  const [activeCategory, setActiveCategory] = useState<string>('Services');\r\n\r\n  const faqCategories = [\r\n    'Services',\r\n    'Pricing', \r\n    'Scheduling',\r\n    'Locations',\r\n    'Preparation',\r\n    'Payments',\r\n    'Warranty',\r\n    'Aftercare',\r\n    'General'\r\n  ];\r\n\r\n  // Load industry-specific FAQs for template picker\r\n  const { industry } = useData();\r\n  const [industryFAQs, setIndustryFAQs] = React.useState<Array<{ question: string; answer: string; category: string }>>([]);\r\n  \r\n  React.useEffect(() => {\r\n    if (!industry) return;\r\n    loadIndustryFAQs(industry)\r\n      .then(setIndustryFAQs)\r\n      .catch(() => {\r\n        setIndustryFAQs([]);\r\n      });\r\n  }, [industry]);\r\n  \r\n  const _categoryFaqMap = useMemo(() => {\r\n    const map: Record<string, typeof industryFAQs> = {};\r\n    industryFAQs.forEach(faq => {\r\n      if (!map[faq.category]) {\r\n        map[faq.category] = [];\r\n      }\r\n      map[faq.category].push(faq);\r\n    });\r\n    return map;\r\n  }, [industryFAQs]);\r\n\r\n  const handleAddFAQ = () => {\r\n    const currentContent = faqContent || [];\r\n    const newContent = [...currentContent, { \r\n      question: `New ${activeCategory} question`, \r\n      answer: `New ${activeCategory} answer`, \r\n      category: activeCategory \r\n    }];\r\n    onUpdateContent('content', newContent);\r\n  };\r\n\r\n  const handleRemoveFAQ = (globalIndex: number) => {\r\n    const currentContent = faqContent || [];\r\n    const newContent = currentContent.filter((_item, i) => i !== globalIndex);\r\n    onUpdateContent('content', newContent);\r\n  };\r\n\r\n  const customFaqs = (faqContent || []).filter((faq) => faq.category === activeCategory);\r\n\r\n  return (\r\n    <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center\">\r\n          <HelpCircle className=\"h-5 w-5 text-orange-400 mr-3\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">FAQ</h3>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => { /* Preview functionality */ }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            <Eye className=\"h-4 w-4 mr-1\" />\r\n            Preview\r\n          </button>\r\n          <button\r\n            onClick={onResetToDefault}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            <Save className=\"h-4 w-4 mr-1\" />\r\n            Default\r\n          </button>\r\n          <button\r\n            onClick={() => { setIsCollapsed(!isCollapsed); }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            {isCollapsed ? (\r\n              <ChevronRight className=\"h-4 w-4 mr-1\" />\r\n            ) : (\r\n              <ChevronDown className=\"h-4 w-4 mr-1\" />\r\n            )}\r\n            {isCollapsed ? 'Expand' : 'Collapse'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {!isCollapsed && (\r\n        <div className=\"space-y-4\">\r\n          {/* FAQ Sub-tabs */}\r\n          <div className=\"flex space-x-1 bg-stone-800 rounded-lg p-1 mb-4\">\r\n            <button\r\n              onClick={() => { setActiveTab('content'); }}\r\n              className={`flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                activeTab === 'content'\r\n                  ? 'bg-orange-500 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <FileText className=\"h-4 w-4 mr-2\" />\r\n              Content\r\n            </button>\r\n            <button\r\n              onClick={() => { setActiveTab('categories'); }}\r\n              className={`flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                activeTab === 'categories'\r\n                  ? 'bg-orange-500 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <HelpCircle className=\"h-4 w-4 mr-2\" />\r\n              Categories\r\n            </button>\r\n          </div>\r\n\r\n          {/* FAQ Sub-tab Content */}\r\n          <div className=\"transition-all duration-300 ease-in-out\">\r\n            {activeTab === 'content' && (\r\n              <div className=\"space-y-4\">\r\n                <div className=\"w-2/5\">\r\n                  <WebsiteAutoSaveField\r\n                    field=\"faq_title\"\r\n                    label=\"FAQ Title\"\r\n                    placeholder=\"Enter FAQ title\"\r\n                  />\r\n                </div>\r\n                <div className=\"w-2/5\">\r\n                  <WebsiteAutoSaveField\r\n                    field=\"faq_subtitle\"\r\n                    label=\"FAQ Subtitle\"\r\n                    placeholder=\"Enter FAQ subtitle\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'categories' && (\r\n              <div className=\"space-y-4\">\r\n                {/* FAQ Category Sub-tabs */}\r\n                <div className=\"flex flex-wrap gap-1 bg-stone-800 rounded-lg p-1 mb-4\">\r\n                  {faqCategories.map((category) => (\r\n                    <button\r\n                      key={category}\r\n                      onClick={() => { setActiveCategory(category); }}\r\n                      className={`flex items-center px-3 py-2 rounded-md text-xs font-medium transition-colors ${\r\n                        activeCategory === category\r\n                          ? 'bg-orange-500 text-white'\r\n                          : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n                      }`}\r\n                    >\r\n                      {category}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                {/* Category-specific FAQ Content */}\r\n                <div>\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <div className=\"block text-sm font-medium text-gray-300\">\r\n                      {activeCategory} FAQs\r\n                    </div>\r\n                    <button\r\n                      onClick={handleAddFAQ}\r\n                      className=\"flex items-center px-3 py-1 bg-orange-500 text-white rounded text-xs hover:bg-orange-600 transition-colors\"\r\n                    >\r\n                      <Plus className=\"h-3 w-3 mr-1\" />\r\n                      Add {activeCategory} FAQ\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div className=\"space-y-3\">\r\n                    {customFaqs.map((faq, categoryIndex) => {\r\n                      const currentContent = faqContent || [];\r\n                      const globalIndex = currentContent.findIndex((item) => item === faq);\r\n                      \r\n                      return (\r\n                        <div key={`${activeCategory}-${categoryIndex}`} className=\"rounded-lg p-4 bg-stone-700 border border-stone-600\">\r\n                          <div className=\"grid grid-cols-1 gap-3\">\r\n                            <FAQItemAutoSaveField\r\n                              faqIndex={globalIndex}\r\n                              field=\"question\"\r\n                              label=\"Question\"\r\n                              placeholder={`Enter ${activeCategory.toLowerCase()} question...`}\r\n                            />\r\n                            \r\n                            <FAQItemAutoSaveField\r\n                              faqIndex={globalIndex}\r\n                              field=\"answer\"\r\n                              label=\"Answer\"\r\n                              type=\"textarea\"\r\n                              rows={3}\r\n                              placeholder={`Enter ${activeCategory.toLowerCase()} answer...`}\r\n                            />\r\n                            <div className=\"flex justify-end\">\r\n                              <button\r\n                                onClick={() => { handleRemoveFAQ(globalIndex); }}\r\n                                className=\"flex items-center px-2 py-1 bg-red-600 text-white rounded text-xs hover:bg-red-700 transition-colors\"\r\n                              >\r\n                                <X className=\"h-3 w-3 mr-1\" />\r\n                                Remove\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                    \r\n                    {/* Show message if no FAQs in this category */}\r\n                    {customFaqs.length === 0 && (\r\n                      <div className=\"text-center py-8 text-gray-400\">\r\n                        <HelpCircle className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\r\n                        <p className=\"text-sm\">No {activeCategory} FAQs yet</p>\r\n                        <p className=\"text-xs mt-1\">Click &quot;Add {activeCategory} FAQ&quot; to get started</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { ChevronDown, ChevronRight, Eye, Image, Plus } from 'lucide-react';\r\n\r\ninterface GalleryImage {\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\ninterface GallerySectionProps {\r\n  stockImages: GalleryImage[];\r\n  customImages: GalleryImage[];\r\n  onAddCustomImage: () => void;\r\n}\r\n\r\nexport const GallerySection: React.FC<GallerySectionProps> = ({\r\n  stockImages,\r\n  customImages,\r\n  onAddCustomImage,\r\n}) => {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'stock' | 'custom'>('stock');\r\n\r\n  return (\r\n    <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center\">\r\n          <Image className=\"h-5 w-5 text-orange-400 mr-3\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">Gallery</h3>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => { /* Preview functionality */ }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            <Eye className=\"h-4 w-4 mr-1\" />\r\n            Preview\r\n          </button>\r\n          <button\r\n            onClick={() => { setIsCollapsed(!isCollapsed); }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            {isCollapsed ? (\r\n              <ChevronRight className=\"h-4 w-4 mr-1\" />\r\n            ) : (\r\n              <ChevronDown className=\"h-4 w-4 mr-1\" />\r\n            )}\r\n            {isCollapsed ? 'Expand' : 'Collapse'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {!isCollapsed && (\r\n        <div className=\"space-y-4\">\r\n          {/* Gallery Sub-tabs */}\r\n          <div className=\"flex space-x-1 bg-stone-800 rounded-lg p-1 mb-4\">\r\n            <button\r\n              onClick={() => { setActiveTab('stock'); }}\r\n              className={`flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                activeTab === 'stock'\r\n                  ? 'bg-orange-500 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <Image className=\"h-4 w-4 mr-2\" />\r\n              Stock\r\n            </button>\r\n            <button\r\n              onClick={() => { setActiveTab('custom'); }}\r\n              className={`flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                activeTab === 'custom'\r\n                  ? 'bg-orange-500 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <Plus className=\"h-4 w-4 mr-2\" />\r\n              Custom\r\n            </button>\r\n          </div>\r\n\r\n          {/* Gallery Sub-tab Content */}\r\n          <div className=\"transition-all duration-300 ease-in-out\">\r\n            {activeTab === 'stock' && (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <div className=\"block text-sm font-medium text-gray-300 mb-2\">Stock Gallery Images</div>\r\n                  <div className=\"grid grid-cols-4 gap-4 max-w-6xl\">\r\n                    {stockImages.map((imageItem, index) => (\r\n                      <div\r\n                        key={`stock-${index}`}\r\n                        className=\"relative cursor-pointer rounded-lg overflow-hidden border-2 border-stone-600 hover:border-stone-500 transition-all duration-200\"\r\n                      >\r\n                        <div className=\"aspect-square bg-stone-700 relative\">\r\n                          <img\r\n                            src={imageItem.src}\r\n                            alt={imageItem.alt}\r\n                            className=\"w-full h-full object-cover\"\r\n                            onError={(e) => {\r\n                              const target = e.target as HTMLImageElement;\r\n                              target.style.display = 'none';\r\n                              const fallback = document.createElement('div');\r\n                              fallback.className = 'w-full h-full flex items-center justify-center text-gray-400 text-sm';\r\n                              fallback.textContent = 'Image not found';\r\n                              target.parentNode?.appendChild(fallback);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"p-2 bg-stone-800\">\r\n                          <p className=\"text-xs text-gray-300 truncate\">\r\n                            {imageItem.alt}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 mt-2\">\r\n                    {stockImages.length} stock gallery images loaded from gallery.json\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'custom' && (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <div className=\"block text-sm font-medium text-gray-300\">Custom Gallery Images</div>\r\n                    <button\r\n                      onClick={onAddCustomImage}\r\n                      className=\"flex items-center px-3 py-1 bg-orange-500 text-white rounded text-xs hover:bg-orange-600 transition-colors\"\r\n                    >\r\n                      <Plus className=\"h-3 w-3 mr-1\" />\r\n                      Add Custom Image\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-4 gap-4 max-w-6xl\">\r\n                    {customImages.map((imageItem, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"relative cursor-pointer rounded-lg overflow-hidden border-2 border-stone-600 hover:border-stone-500 transition-all duration-200\"\r\n                      >\r\n                        <div className=\"aspect-square bg-stone-700 relative\">\r\n                          {imageItem.src ? (\r\n                            <img\r\n                              src={imageItem.src}\r\n                              alt={imageItem.alt || 'Custom gallery image'}\r\n                              className=\"w-full h-full object-cover\"\r\n                              onError={(e) => {\r\n                                const target = e.target as HTMLImageElement;\r\n                                target.style.display = 'none';\r\n                                const fallback = document.createElement('div');\r\n                                fallback.className = 'w-full h-full flex items-center justify-center text-gray-400 text-sm';\r\n                                fallback.textContent = 'Image not found';\r\n                                target.parentNode?.appendChild(fallback);\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            <div className=\"w-full h-full flex items-center justify-center text-gray-400 text-sm\">\r\n                              <div className=\"text-center\">\r\n                                <Plus className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\r\n                                <p>Add Image</p>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"p-2 bg-stone-800\">\r\n                          <p className=\"text-xs text-gray-300 truncate\">\r\n                            {imageItem.alt || 'Custom Image'}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {customImages.length === 0 && (\r\n                    <div className=\"text-center py-8 text-gray-400\">\r\n                      <Image className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\r\n                      <p className=\"text-sm\">No custom images yet</p>\r\n                      <p className=\"text-xs mt-1\">Click &quot;Add Custom Image&quot; to get started</p>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <p className=\"text-xs text-gray-500 mt-2\">\r\n                    {customImages.length} custom gallery images\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","/**\r\n * API client for tenant dashboard health monitoring\r\n */\r\n\r\nexport interface HealthData {\r\n  tenantSlug: string;\r\n  hasData: boolean;\r\n  lastUpdated?: string;\r\n  performance?: {\r\n    mobile?: PerformanceData;\r\n    desktop?: PerformanceData;\r\n  };\r\n  overall?: {\r\n    score: number;\r\n    status: string;\r\n    checkedAt: string;\r\n    errorMessage?: string;\r\n  };\r\n  message?: string;\r\n}\r\n\r\nexport interface PerformanceData {\r\n  overallScore: number;\r\n  performanceScore: number;\r\n  accessibilityScore: number;\r\n  bestPracticesScore: number;\r\n  seoScore: number;\r\n  coreWebVitals: {\r\n    lcp: { value: number; score: number };\r\n    fid: { value: number; score: number };\r\n    cls: { value: number; score: number };\r\n    fcp: { value: number; score: number };\r\n    ttfb: { value: number; score: number };\r\n  };\r\n  metrics: {\r\n    speedIndex: { value: number; score: number };\r\n    interactive: { value: number; score: number };\r\n    totalBlockingTime: { value: number; score: number };\r\n  };\r\n  status: string;\r\n  checkedAt: string;\r\n  opportunities: OptimizationOpportunity[];\r\n  diagnostics: DiagnosticItem[];\r\n  cruxData?: Record<string, unknown>;\r\n}\r\n\r\nexport interface OptimizationOpportunity {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  savings: number;\r\n  savingsBytes: number;\r\n}\r\n\r\nexport interface DiagnosticItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  score: number;\r\n  displayValue?: string;\r\n}\r\n\r\nexport interface HealthHistoryItem {\r\n  check_type: string;\r\n  strategy: string;\r\n  overall_score: number;\r\n  performance_score: number;\r\n  accessibility_score: number;\r\n  best_practices_score: number;\r\n  seo_score: number;\r\n  status: string;\r\n  checked_at: string;\r\n}\r\n\r\nexport interface HealthHistoryResponse {\r\n  success: boolean;\r\n  data: {\r\n    tenantSlug: string;\r\n    history: HealthHistoryItem[];\r\n    period: string;\r\n    totalRecords: number;\r\n  };\r\n}\r\n\r\nexport interface HealthScanResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: {\r\n    tenantSlug: string;\r\n    url: string;\r\n    overallScore: number;\r\n    summary: {\r\n      status: string;\r\n      priority: string[];\r\n      recommendations: OptimizationOpportunity[];\r\n    };\r\n    timestamp: string;\r\n  };\r\n}\r\n\r\n/**\r\n * Get current health status for a tenant\r\n */\r\nexport const getHealthStatus = async (tenantSlug: string): Promise<{ success: boolean; data: HealthData }> => {\r\n  const response = await fetch(`/api/health-monitoring/${tenantSlug}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { error?: string };\r\n    throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<{ success: boolean; data: HealthData }>;\r\n};\r\n\r\n/**\r\n * Trigger a comprehensive health scan for a tenant\r\n */\r\nexport const triggerHealthScan = async (tenantSlug: string): Promise<HealthScanResponse> => {\r\n  const response = await fetch(`/api/health-monitoring/${tenantSlug}/scan`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { error?: string };\r\n    throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<HealthScanResponse>;\r\n};\r\n\r\n/**\r\n * Get health monitoring history for a tenant\r\n */\r\nexport const getHealthHistory = async (\r\n  tenantSlug: string,\r\n  options: { days?: number; limit?: number } = {}\r\n): Promise<HealthHistoryResponse> => {\r\n  const params = new URLSearchParams();\r\n  \r\n  if (options.days) params.append('days', options.days.toString());\r\n  if (options.limit) params.append('limit', options.limit.toString());\r\n\r\n  const response = await fetch(`/api/health-monitoring/${tenantSlug}/history?${params}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({})) as { error?: string };\r\n    throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json() as Promise<HealthHistoryResponse>;\r\n};\r\n\r\n/**\r\n * Helper function to get score color based on value\r\n */\r\nexport const getScoreColor = (score: number): string => {\r\n  if (score >= 90) return 'text-green-500';\r\n  if (score >= 70) return 'text-yellow-500';\r\n  if (score >= 50) return 'text-orange-500';\r\n  return 'text-red-500';\r\n};\r\n\r\n/**\r\n * Helper function to get score background color\r\n */\r\nexport const getScoreBgColor = (score: number): string => {\r\n  if (score >= 90) return 'bg-green-500';\r\n  if (score >= 70) return 'bg-yellow-500';\r\n  if (score >= 50) return 'bg-orange-500';\r\n  return 'bg-red-500';\r\n};\r\n\r\n/**\r\n * Helper function to get status color\r\n */\r\nexport const getStatusColor = (status: string): string => {\r\n  switch (status) {\r\n    case 'healthy':\r\n      return 'text-green-500 bg-green-100';\r\n    case 'warning':\r\n      return 'text-yellow-600 bg-yellow-100';\r\n    case 'critical':\r\n      return 'text-red-600 bg-red-100';\r\n    case 'error':\r\n      return 'text-red-800 bg-red-200';\r\n    default:\r\n      return 'text-gray-600 bg-gray-100';\r\n  }\r\n};\r\n\r\n/**\r\n * Helper function to format display values\r\n */\r\nexport const formatDisplayValue = (value: number | string | null | undefined, unit: string = ''): string => {\r\n  if (value === null || value === undefined) return 'N/A';\r\n  \r\n  // Convert string to number if needed\r\n  const numericValue = typeof value === 'string' ? parseFloat(value) : value;\r\n  if (isNaN(numericValue)) return 'N/A';\r\n  \r\n  if (unit === 'ms') {\r\n    return `${Math.round(numericValue)}ms`;\r\n  } else if (unit === 's') {\r\n    return `${(numericValue / 1000).toFixed(2)}s`;\r\n  } else if (unit === 'bytes') {\r\n    if (numericValue > 1024 * 1024) {\r\n      return `${(numericValue / (1024 * 1024)).toFixed(1)}MB`;\r\n    } else if (numericValue > 1024) {\r\n      return `${(numericValue / 1024).toFixed(1)}KB`;\r\n    }\r\n    return `${numericValue}B`;\r\n  }\r\n  \r\n  return numericValue.toString();\r\n};\r\n","import React, { useCallback, useEffect,useState } from 'react';\r\nimport { AlertTriangle, CheckCircle, Clock,RefreshCw, XCircle } from 'lucide-react';\r\n\r\nimport { \r\n  formatDisplayValue,\r\n  getHealthStatus, \r\n  getScoreColor, \r\n  type HealthData,\r\n  type HealthScanResponse,\r\n  triggerHealthScan} from '../../../api/healthApi';\r\n\r\ninterface HealthTabProps {\r\n  tenantSlug?: string;\r\n}\r\n\r\nexport const HealthTab: React.FC<HealthTabProps> = ({ tenantSlug }) => {\r\n  const [healthData, setHealthData] = useState<HealthData | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [scanResult, setScanResult] = useState<HealthScanResponse['data'] | null>(null);\r\n\r\n  const loadHealthData = useCallback(async () => {\r\n    if (!tenantSlug) return;\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await getHealthStatus(tenantSlug);\r\n      setHealthData(response.data);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to load health data');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [tenantSlug]);\r\n\r\n  const handleScan = async () => {\r\n    if (!tenantSlug) return;\r\n\r\n    setIsScanning(true);\r\n    setError(null);\r\n    setScanResult(null);\r\n\r\n    try {\r\n      const response = await triggerHealthScan(tenantSlug);\r\n      setScanResult(response.data);\r\n      \r\n      // Reload health data after scan\r\n      setTimeout(() => {\r\n        void loadHealthData();\r\n      }, 1000);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to run health scan');\r\n    } finally {\r\n      setIsScanning(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    void loadHealthData();\r\n  }, [loadHealthData]);\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'healthy':\r\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\r\n      case 'warning':\r\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\r\n      case 'critical':\r\n      case 'error':\r\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\r\n      default:\r\n        return <Clock className=\"h-4 w-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const renderScoreRing = (score: number, size: string = 'w-16 h-16') => {\r\n    const radius = 28;\r\n    const circumference = 2 * Math.PI * radius;\r\n    const strokeDasharray = circumference;\r\n    const strokeDashoffset = circumference - score / 100 * circumference;\r\n    \r\n    return (\r\n      <div className={`${size} relative`}>\r\n        <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 60 60\">\r\n          {/* Background circle */}\r\n          <circle\r\n            cx=\"30\"\r\n            cy=\"30\"\r\n            r={radius}\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"4\"\r\n            fill=\"none\"\r\n            className=\"text-gray-700\"\r\n          />\r\n          {/* Progress circle */}\r\n          <circle\r\n            cx=\"30\"\r\n            cy=\"30\"\r\n            r={radius}\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"4\"\r\n            fill=\"none\"\r\n            strokeDasharray={strokeDasharray}\r\n            strokeDashoffset={strokeDashoffset}\r\n            strokeLinecap=\"round\"\r\n            className={`transition-all duration-300 ${getScoreColor(score).replace('text-', '')}`}\r\n            style={{\r\n              stroke: score >= 90 ? '#10b981' : score >= 50 ? '#f59e0b' : '#ef4444'\r\n            }}\r\n          />\r\n        </svg>\r\n        {/* Score text in center */}\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <span className={`text-sm font-bold ${getScoreColor(score)}`}>\r\n            {score}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderScoreCard = (title: string, score: number, _color?: string) => (\r\n    <div className=\"bg-stone-800 rounded-lg p-4\">\r\n      <div className=\"flex items-center gap-4\">\r\n        {renderScoreRing(score)}\r\n        <div className=\"flex-1\">\r\n          <h4 className=\"text-sm font-medium text-gray-300\">{title}</h4>\r\n          <div className=\"text-xs text-gray-500 mt-1\">\r\n            {score >= 90 ? 'Good' : score >= 50 ? 'Needs Improvement' : 'Poor'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderCoreWebVitals = (data: {\r\n    lcp: { score: number; value: number };\r\n    fid: { score: number; value: number };\r\n    cls: { score: number; value: number | string };\r\n    fcp: { score: number; value: number };\r\n  }) => (\r\n    <div className=\"space-y-3\">\r\n      <h4 className=\"text-sm font-medium text-gray-300\">Core Web Vitals</h4>\r\n      <div className=\"grid grid-cols-2 gap-3\">\r\n        <div className=\"bg-stone-800 rounded-lg p-3\">\r\n          <div className=\"flex items-center gap-3\">\r\n            {renderScoreRing(Math.round(data.lcp.score * 100), 'w-12 h-12')}\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center justify-between mb-1\">\r\n                <span className=\"text-xs text-gray-400\">LCP</span>\r\n                <span className={`text-xs font-medium ${getScoreColor(data.lcp.score * 100)}`}>\r\n                  {formatDisplayValue(data.lcp.value, 'ms')}\r\n                </span>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">Largest Contentful Paint</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"bg-stone-800 rounded-lg p-3\">\r\n          <div className=\"flex items-center gap-3\">\r\n            {renderScoreRing(Math.round(data.fid.score * 100), 'w-12 h-12')}\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center justify-between mb-1\">\r\n                <span className=\"text-xs text-gray-400\">FID</span>\r\n                <span className={`text-xs font-medium ${getScoreColor(data.fid.score * 100)}`}>\r\n                  {formatDisplayValue(data.fid.value, 'ms')}\r\n                </span>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">First Input Delay</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"bg-stone-800 rounded-lg p-3\">\r\n          <div className=\"flex items-center gap-3\">\r\n            {renderScoreRing(Math.round(data.cls.score * 100), 'w-12 h-12')}\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center justify-between mb-1\">\r\n                <span className=\"text-xs text-gray-400\">CLS</span>\r\n                <span className={`text-xs font-medium ${getScoreColor(data.cls.score * 100)}`}>\r\n                  {data.cls.value ? (typeof data.cls.value === 'number' ? data.cls.value.toFixed(3) : parseFloat(data.cls.value).toFixed(3)) : 'N/A'}\r\n                </span>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">Cumulative Layout Shift</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"bg-stone-800 rounded-lg p-3\">\r\n          <div className=\"flex items-center gap-3\">\r\n            {renderScoreRing(Math.round(data.fcp.score * 100), 'w-12 h-12')}\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center justify-between mb-1\">\r\n                <span className=\"text-xs text-gray-400\">FCP</span>\r\n                <span className={`text-xs font-medium ${getScoreColor(data.fcp.score * 100)}`}>\r\n                  {formatDisplayValue(data.fcp.value, 'ms')}\r\n                </span>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">First Contentful Paint</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderOpportunities = (opportunities: Array<{ title: string; savings: number; description: string }>) => (\r\n    <div className=\"space-y-3\">\r\n      <h4 className=\"text-sm font-medium text-gray-300\">Top Optimization Opportunities</h4>\r\n      {opportunities.slice(0, 3).map((opp, index) => (\r\n        <div key={index} className=\"bg-stone-800 rounded-lg p-3\">\r\n          <div className=\"flex items-center justify-between mb-1\">\r\n            <h5 className=\"text-sm font-medium text-white\">{opp.title}</h5>\r\n            <span className=\"text-xs text-green-400\">\r\n              Save {formatDisplayValue(opp.savings, 'ms')}\r\n            </span>\r\n          </div>\r\n          <p className=\"text-xs text-gray-400\">{opp.description}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  if (!tenantSlug) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <p className=\"text-gray-400\">No tenant selected</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-white\">Website Health</h3>\r\n          <p className=\"text-sm text-gray-400\">Monitor your website&apos;s performance and Core Web Vitals</p>\r\n        </div>\r\n        <button\r\n          onClick={() => void handleScan()}\r\n          disabled={isScanning || isLoading}\r\n          className=\"px-4 py-2 bg-orange-600 hover:bg-orange-700 disabled:bg-orange-800 disabled:cursor-not-allowed text-white rounded-lg font-medium transition-colors flex items-center gap-2\"\r\n        >\r\n          <RefreshCw className={`h-4 w-4 ${isScanning ? 'animate-spin' : ''}`} />\r\n          {isScanning ? 'Scanning...' : 'Run Health Scan'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && (\r\n        <div className=\"bg-red-900 text-red-300 border border-red-700 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <XCircle className=\"h-4 w-4\" />\r\n            <span className=\"font-medium\">Error</span>\r\n          </div>\r\n          <p className=\"text-sm mt-1\">{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Scan Result */}\r\n      {scanResult && (\r\n        <div className=\"bg-green-900 text-green-300 border border-green-700 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <CheckCircle className=\"h-4 w-4\" />\r\n            <span className=\"font-medium\">Scan Completed</span>\r\n          </div>\r\n          <p className=\"text-sm mt-1\">\r\n            Overall Score: <span className=\"font-bold\">{scanResult.overallScore}</span>\r\n          </p>\r\n          {scanResult.summary.priority.length > 0 && (\r\n            <div className=\"mt-2\">\r\n              <p className=\"text-xs text-green-400\">Priority Issues:</p>\r\n              <ul className=\"text-xs mt-1 space-y-1\">\r\n                {scanResult.summary.priority.map((item, index) => (\r\n                  <li key={index}>• {item}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Loading State */}\r\n      {isLoading && !healthData && (\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <RefreshCw className=\"h-5 w-5 animate-spin text-orange-500\" />\r\n            <span className=\"text-gray-400\">Loading health data...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* No Data State */}\r\n      {!isLoading && healthData && !healthData.hasData && (\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <Clock className=\"h-12 w-12 text-gray-500 mx-auto mb-4\" />\r\n            <h4 className=\"text-lg font-medium text-white mb-2\">No Health Data</h4>\r\n            <p className=\"text-gray-400 mb-4\">{healthData.message}</p>\r\n            <button\r\n              onClick={() => void handleScan()}\r\n              className=\"px-4 py-2 bg-orange-600 hover:bg-orange-700 text-white rounded-lg font-medium transition-colors\"\r\n            >\r\n              Run First Health Scan\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Health Data */}\r\n      {healthData && healthData.hasData && (\r\n        <div className=\"space-y-6\">\r\n          {/* Overall Status */}\r\n          {healthData.overall && (\r\n            <div className=\"bg-stone-800 rounded-lg p-6\">\r\n              <div className=\"flex items-center gap-6\">\r\n                {renderScoreRing(healthData.overall.score, 'w-20 h-20')}\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    {getStatusIcon(healthData.overall.status)}\r\n                    <span className=\"text-lg font-semibold text-white\">Overall Health</span>\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-400 mb-2\">\r\n                    {healthData.overall.score >= 90 ? 'Excellent' : healthData.overall.score >= 50 ? 'Needs Improvement' : 'Poor'}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Last updated: {new Date(healthData.lastUpdated || '').toLocaleString()}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Performance Scores */}\r\n          {healthData.performance ? (\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n              {/* Mobile Performance */}\r\n              <div className=\"space-y-4\">\r\n                <h4 className=\"text-lg font-semibold text-white flex items-center gap-2\">\r\n                  📱 Mobile Performance\r\n                </h4>\r\n                \r\n                {healthData.performance.mobile ? (\r\n                  <>\r\n                    <div className=\"grid grid-cols-2 gap-3\">\r\n                      {renderScoreCard('Performance', healthData.performance.mobile.performanceScore || healthData.performance.mobile.overallScore || 0)}\r\n                      {renderScoreCard('Accessibility', healthData.performance.mobile.accessibilityScore || 0)}\r\n                      {renderScoreCard('Best Practices', healthData.performance.mobile.bestPracticesScore || 0)}\r\n                      {renderScoreCard('SEO', healthData.performance.mobile.seoScore || 0)}\r\n                    </div>\r\n\r\n                    {renderCoreWebVitals(healthData.performance.mobile.coreWebVitals)}\r\n                    \r\n                    {healthData.performance.mobile.opportunities.length > 0 && \r\n                      renderOpportunities(healthData.performance.mobile.opportunities)\r\n                    }\r\n                  </>\r\n                ) : (\r\n                  <div className=\"bg-stone-700 rounded-lg p-6 text-center\">\r\n                    <p className=\"text-gray-400\">No mobile performance data available</p>\r\n                    <p className=\"text-xs text-gray-500 mt-1\">Run a health scan to get mobile metrics</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Desktop Performance */}\r\n              <div className=\"space-y-4\">\r\n                <h4 className=\"text-lg font-semibold text-white flex items-center gap-2\">\r\n                  🖥️ Desktop Performance\r\n                </h4>\r\n                \r\n                {healthData.performance.desktop ? (\r\n                  <>\r\n                    <div className=\"grid grid-cols-2 gap-3\">\r\n                      {renderScoreCard('Performance', healthData.performance.desktop.performanceScore || healthData.performance.desktop.overallScore || 0)}\r\n                      {renderScoreCard('Accessibility', healthData.performance.desktop.accessibilityScore || 0)}\r\n                      {renderScoreCard('Best Practices', healthData.performance.desktop.bestPracticesScore || 0)}\r\n                      {renderScoreCard('SEO', healthData.performance.desktop.seoScore || 0)}\r\n                    </div>\r\n\r\n                    {renderCoreWebVitals(healthData.performance.desktop.coreWebVitals)}\r\n                    \r\n                    {healthData.performance.desktop.opportunities.length > 0 && \r\n                      renderOpportunities(healthData.performance.desktop.opportunities)\r\n                    }\r\n                  </>\r\n                ) : (\r\n                  <div className=\"bg-stone-700 rounded-lg p-6 text-center\">\r\n                    <p className=\"text-gray-400\">No desktop performance data available</p>\r\n                    <p className=\"text-xs text-gray-500 mt-1\">Run a health scan to get desktop metrics</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"bg-stone-800 rounded-lg p-8 text-center\">\r\n              <div className=\"text-gray-400 mb-4\">\r\n                <svg className=\"w-16 h-16 mx-auto mb-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-white mb-2\">No Performance Data</h3>\r\n              <p className=\"text-gray-400 mb-4\">Run a health scan to get detailed performance metrics for both mobile and desktop.</p>\r\n              <button\r\n                onClick={() => void handleScan()}\r\n                disabled={isScanning}\r\n                className=\"px-4 py-2 bg-orange-600 hover:bg-orange-700 disabled:bg-orange-800 disabled:cursor-not-allowed text-white rounded-lg text-sm font-medium transition-colors flex items-center gap-2 mx-auto\"\r\n              >\r\n                {isScanning ? (\r\n                  <>\r\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                    Scanning...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                    </svg>\r\n                    Run Health Scan\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Check, ChevronDown, ChevronRight, Eye, FileText, Image } from 'lucide-react';\r\n\r\nimport { WebsiteAutoSaveField } from './WebsiteAutoSaveField';\r\n\r\ninterface HeroSectionProps {\r\n  heroImages?: string[];\r\n  onUpdateContent: (field: string, value: unknown) => void;\r\n}\r\n\r\nexport const HeroSection: React.FC<HeroSectionProps> = ({\r\n  heroImages = [],\r\n  onUpdateContent,\r\n}) => {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'content' | 'images'>('content');\r\n\r\n  const availableImages = [\r\n    { url: '/images/hero/hero1.png', alt: 'Professional mobile detailing service in action' },\r\n    { url: '/images/hero/hero2.png', alt: 'High-quality car detailing and ceramic coating' }\r\n  ];\r\n\r\n  const handleImageSelect = (imageUrl: string, isSelected: boolean) => {\r\n    let newImages;\r\n    if (isSelected) {\r\n      newImages = heroImages.filter(img => img !== imageUrl);\r\n    } else {\r\n      if (heroImages.length < 2) {\r\n        newImages = [...heroImages, imageUrl];\r\n      } else {\r\n        newImages = [imageUrl, heroImages[1]];\r\n      }\r\n    }\r\n    onUpdateContent('images', newImages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center\">\r\n          <Image className=\"h-5 w-5 text-orange-400 mr-3\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">Hero</h3>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => { /* Preview functionality */ }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            <Eye className=\"h-4 w-4 mr-1\" />\r\n            Preview\r\n          </button>\r\n          <button\r\n            onClick={() => { setIsCollapsed(!isCollapsed); }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            {isCollapsed ? (\r\n              <ChevronRight className=\"h-4 w-4 mr-1\" />\r\n            ) : (\r\n              <ChevronDown className=\"h-4 w-4 mr-1\" />\r\n            )}\r\n            {isCollapsed ? 'Expand' : 'Collapse'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {!isCollapsed && (\r\n        <div className=\"space-y-4\">\r\n          {/* Hero Sub-tabs */}\r\n          <div className=\"flex space-x-1 bg-stone-800 rounded-lg p-1 mb-4\">\r\n            <button\r\n              onClick={() => { setActiveTab('content'); }}\r\n              className={`flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                activeTab === 'content'\r\n                  ? 'bg-orange-500 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <FileText className=\"h-4 w-4 mr-2\" />\r\n              Content\r\n            </button>\r\n            <button\r\n              onClick={() => { setActiveTab('images'); }}\r\n              className={`flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                activeTab === 'images'\r\n                  ? 'bg-orange-500 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <Image className=\"h-4 w-4 mr-2\" />\r\n              Images\r\n            </button>\r\n          </div>\r\n\r\n          {/* Hero Sub-tab Content */}\r\n          <div className=\"transition-all duration-300 ease-in-out\">\r\n            {activeTab === 'content' && (\r\n              <div className=\"space-y-4\">\r\n                <div className=\"w-2/5\">\r\n                  <WebsiteAutoSaveField\r\n                    field=\"hero_title\"\r\n                    label=\"Hero Title\"\r\n                    placeholder=\"Enter hero title\"\r\n                  />\r\n                </div>\r\n                <div className=\"w-2/5\">\r\n                  <WebsiteAutoSaveField\r\n                    field=\"hero_subtitle\"\r\n                    label=\"Hero Subtitle\"\r\n                    placeholder=\"Enter hero subtitle\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'images' && (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <div className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                    Hero Images (Select up to 2 images)\r\n                  </div>\r\n                  <div className=\"grid grid-cols-2 gap-4 max-w-2xl\">\r\n                    {availableImages.map((image, index) => {\r\n                      const isSelected = heroImages.includes(image.url);\r\n                      return (\r\n                        <div\r\n                          key={index}\r\n                          role=\"button\"\r\n                          tabIndex={0}\r\n                          className={`relative cursor-pointer rounded-lg overflow-hidden border-2 transition-all duration-200 ${\r\n                            isSelected \r\n                              ? 'border-orange-500 ring-2 ring-orange-500/20' \r\n                              : 'border-stone-600 hover:border-stone-500'\r\n                          }`}\r\n                          onClick={() => { handleImageSelect(image.url, isSelected); }}\r\n                          onKeyDown={(e) => {\r\n                            if (e.key === 'Enter' || e.key === ' ') {\r\n                              e.preventDefault();\r\n                              handleImageSelect(image.url, isSelected);\r\n                            }\r\n                          }}\r\n                        >\r\n                          <div className=\"aspect-video bg-stone-700 relative\">\r\n                            <img\r\n                              src={image.url}\r\n                              alt={image.alt}\r\n                              className=\"w-full h-full object-cover\"\r\n                              onError={(e) => {\r\n                                const target = e.target as HTMLImageElement;\r\n                                target.style.display = 'none';\r\n                                const fallback = document.createElement('div');\r\n                                fallback.className = 'w-full h-full flex items-center justify-center text-gray-400 text-sm';\r\n                                fallback.textContent = 'Image not found';\r\n                                target.parentNode?.appendChild(fallback);\r\n                              }}\r\n                            />\r\n                            {isSelected && (\r\n                              <div className=\"absolute inset-0 bg-orange-500/20 flex items-center justify-center\">\r\n                                <div className=\"bg-orange-500 text-white rounded-full p-2\">\r\n                                  <Check className=\"h-5 w-5\" />\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 mt-2\">\r\n                    These images will rotate as the hero background on your website homepage.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useCallback, useEffect,useState } from 'react';\r\nimport { Car, ExternalLink, Star, Trash2, Truck, Wrench } from 'lucide-react';\r\n\r\nimport { deleteReview,getReviews } from '../../../api/reviewsApi';\r\n\r\ninterface Review {\r\n  id: number;\r\n  customer_name: string;\r\n  rating: number;\r\n  comment: string;\r\n  reviewer_url?: string;\r\n  vehicle_type?: 'car' | 'truck' | 'suv' | 'boat' | 'rv' | 'motorcycle';\r\n  paint_correction: boolean;\r\n  ceramic_coating: boolean;\r\n  paint_protection_film: boolean;\r\n  source: 'website' | 'google' | 'yelp' | 'facebook';\r\n  avatar_filename?: string;\r\n  created_at: string;\r\n}\r\n\r\ninterface RemoveReviewTabProps {\r\n  tenantSlug?: string;\r\n}\r\n\r\nexport const RemoveReviewTab: React.FC<RemoveReviewTabProps> = ({ tenantSlug }) => {\r\n  const [reviews, setReviews] = useState<Review[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [deletingId, setDeletingId] = useState<number | null>(null);\r\n\r\n  const loadReviews = useCallback(async () => {\r\n    if (!tenantSlug) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await getReviews(tenantSlug);\r\n      setReviews(response.data);\r\n    } catch (err) {\r\n      setError('Failed to load reviews');\r\n      console.error('Error loading reviews:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tenantSlug]);\r\n\r\n  useEffect(() => {\r\n    if (tenantSlug) {\r\n      void loadReviews();\r\n    }\r\n  }, [tenantSlug, loadReviews]);\r\n\r\n  const handleDeleteReview = async (reviewId: number) => {\r\n    if (!confirm('Are you sure you want to delete this review? This action cannot be undone.')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setDeletingId(reviewId);\r\n      await deleteReview(reviewId);\r\n      \r\n      // Remove the review from the local state\r\n      setReviews(prev => prev.filter(review => review.id !== reviewId));\r\n      \r\n    } catch (err) {\r\n      console.error('Error deleting review:', err);\r\n      alert('Failed to delete review. Please try again.');\r\n    } finally {\r\n      setDeletingId(null);\r\n    }\r\n  };\r\n\r\n  const getVehicleIcon = (vehicleType?: string) => {\r\n    switch (vehicleType) {\r\n      case 'car': return <Car className=\"h-4 w-4\" />;\r\n      case 'truck': return <Truck className=\"h-4 w-4\" />;\r\n      default: return <Car className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const getServiceIcons = (review: Review) => {\r\n    const services = [];\r\n    if (review.paint_correction) services.push('Paint Correction');\r\n    if (review.ceramic_coating) services.push('Ceramic Coating');\r\n    if (review.paint_protection_film) services.push('Paint Protection Film');\r\n    return services.length > 0 ? services.join(', ') : 'No specific services';\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const renderStars = (rating: number) => {\r\n    return Array.from({ length: 5 }, (_, i) => (\r\n      <Star\r\n        key={i}\r\n        className={`h-4 w-4 ${\r\n          i < rating ? 'text-yellow-400 fill-current' : 'text-gray-400'\r\n        }`}\r\n      />\r\n    ));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"text-gray-400\">Loading reviews...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <div className=\"text-red-400 mb-4\">{error}</div>\r\n        <button\r\n          onClick={() => void loadReviews()}\r\n          className=\"px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors\"\r\n        >\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (reviews.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <div className=\"text-gray-400 mb-4\">No reviews found</div>\r\n        <div className=\"text-sm text-gray-500\">\r\n          Reviews will appear here once they are added.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h3 className=\"text-lg font-semibold text-white\">\r\n          Manage Reviews ({reviews.length})\r\n        </h3>\r\n        <button\r\n          onClick={() => void loadReviews()}\r\n          className=\"px-3 py-1 text-sm bg-stone-700 text-white rounded-lg hover:bg-stone-600 transition-colors\"\r\n        >\r\n          Refresh\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"space-y-3\">\r\n        {reviews.map((review) => (\r\n          <div\r\n            key={review.id}\r\n            className=\"bg-stone-800 border border-stone-700 rounded-lg p-4\"\r\n          >\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex-1\">\r\n                {/* Header with customer name and rating */}\r\n                <div className=\"flex items-center gap-3 mb-2\">\r\n                  <div className=\"font-medium text-white\">{review.customer_name}</div>\r\n                  <div className=\"flex items-center gap-1\">\r\n                    {renderStars(review.rating)}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-400\">\r\n                    {formatDate(review.created_at)}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Review content */}\r\n                <div className=\"text-gray-300 mb-3\">\r\n                  {review.comment}\r\n                </div>\r\n\r\n                {/* Review details */}\r\n                <div className=\"flex flex-wrap gap-4 text-sm text-gray-400\">\r\n                  {/* Vehicle type */}\r\n                  {review.vehicle_type && (\r\n                    <div className=\"flex items-center gap-1\">\r\n                      {getVehicleIcon(review.vehicle_type)}\r\n                      <span className=\"capitalize\">{review.vehicle_type}</span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Services */}\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <Wrench className=\"h-4 w-4\" />\r\n                    <span>{getServiceIcons(review)}</span>\r\n                  </div>\r\n\r\n                  {/* Source */}\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <span className=\"capitalize\">{review.source}</span>\r\n                  </div>\r\n\r\n                  {/* Reviewer URL */}\r\n                  {review.reviewer_url && (\r\n                    <a\r\n                      href={review.reviewer_url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"flex items-center gap-1 text-orange-400 hover:text-orange-300\"\r\n                    >\r\n                      <ExternalLink className=\"h-4 w-4\" />\r\n                      Profile\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Delete button */}\r\n              <button\r\n                onClick={() => void handleDeleteReview(review.id)}\r\n                disabled={deletingId === review.id}\r\n                className=\"ml-4 p-2 text-red-400 hover:text-red-300 hover:bg-red-900/20 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                title=\"Delete review\"\r\n              >\r\n                {deletingId === review.id ? (\r\n                  <div className=\"animate-spin h-4 w-4 border-2 border-red-400 border-t-transparent rounded-full\" />\r\n                ) : (\r\n                  <Trash2 className=\"h-4 w-4\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { RefreshCw } from 'lucide-react';\r\n\r\nimport { getBusinessData, scrapeGoogleBusinessProfile } from '../../../api/reviewsApi';\r\nimport { useWebsiteContent } from '../contexts/WebsiteContentContext';\r\nimport { WebsiteAutoSaveField } from './WebsiteAutoSaveField';\r\n\r\ninterface ReviewsContentProps {\r\n  tenantSlug: string;\r\n}\r\n\r\nexport const ReviewsContent: React.FC<ReviewsContentProps> = ({ \r\n  tenantSlug\r\n}) => {\r\n  const { updateContent, refetch } = useWebsiteContent();\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [updateMessage, setUpdateMessage] = useState<{ type: 'success' | 'error'; message: string } | null>(null);\r\n\r\n  const handleUpdateBusinessData = async () => {\r\n    setIsUpdating(true);\r\n    setUpdateMessage(null);\r\n\r\n    try {\r\n      // First, get the business data to find the Google Maps URL\r\n      const businessResponse = await getBusinessData(tenantSlug);\r\n      \r\n      if (!businessResponse.success || !businessResponse.data.google_maps_url) {\r\n        setUpdateMessage({ \r\n          type: 'error', \r\n          message: 'No Google Maps URL found for this business' \r\n        });\r\n        return;\r\n      }\r\n\r\n      const googleMapsUrl = businessResponse.data.google_maps_url;\r\n      \r\n      // Now scrape the Google Business Profile using the Google Maps URL\r\n      const scrapeResponse = await scrapeGoogleBusinessProfile(googleMapsUrl, tenantSlug);\r\n      \r\n      if (scrapeResponse.success && scrapeResponse.data) {\r\n        const { averageRating, totalReviews, businessName } = scrapeResponse.data;\r\n        \r\n        // Update the fields immediately with the scraped data\r\n        const updates: Record<string, number> = {};\r\n        if (averageRating !== null) {\r\n          updates.reviews_avg_rating = parseFloat(averageRating);\r\n        }\r\n        if (totalReviews !== null) {\r\n          updates.reviews_total_count = parseInt(totalReviews, 10);\r\n        }\r\n        \r\n        if (Object.keys(updates).length > 0) {\r\n          await updateContent(updates);\r\n          // Refetch to update all field instances immediately\r\n          await refetch();\r\n        }\r\n        \r\n        // Show success message with the scraped values\r\n        const ratingText = averageRating ? `Rating: ${averageRating}` : '';\r\n        const reviewsText = totalReviews ? `Reviews: ${totalReviews}` : '';\r\n        const separator = ratingText && reviewsText ? ', ' : '';\r\n        const successMessage = `Successfully scraped ${businessName || 'business'}: ${ratingText}${separator}${reviewsText}`.trim();\r\n        \r\n        setUpdateMessage({ \r\n          type: 'success', \r\n          message: successMessage\r\n        });\r\n        \r\n        // Clear message after 8 seconds (longer for more complex message)\r\n        setTimeout(() => { setUpdateMessage(null); }, 8000);\r\n      } else {\r\n        setUpdateMessage({ \r\n          type: 'error', \r\n          message: 'Failed to scrape Google Maps data. Check server logs for details.' \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Scraping error:', error);\r\n      setUpdateMessage({ \r\n        type: 'error', \r\n        message: error instanceof Error ? error.message : 'Failed to update business data. Check console for details.' \r\n      });\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Section Title */}\r\n      <WebsiteAutoSaveField\r\n        field=\"reviews_title\"\r\n        label=\"Section Title\"\r\n        placeholder=\"Enter reviews section title\"\r\n      />\r\n\r\n      {/* Section Description */}\r\n      <WebsiteAutoSaveField\r\n        field=\"reviews_subtitle\"\r\n        label=\"Section Description\"\r\n        type=\"textarea\"\r\n        rows={3}\r\n        placeholder=\"Enter reviews section description\"\r\n      />\r\n\r\n      {/* Average Review and Total Review Count - Side by Side */}\r\n      <div className=\"space-y-3\">\r\n        <div className=\"flex gap-4 items-end\">\r\n          {/* Average Review */}\r\n          <div className=\"w-32\">\r\n            <WebsiteAutoSaveField\r\n              field=\"reviews_avg_rating\"\r\n              label=\"Avg Rating\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"4.90\"\r\n            />\r\n          </div>\r\n\r\n          {/* Total Review Count */}\r\n          <div className=\"w-32\">\r\n            <WebsiteAutoSaveField\r\n              field=\"reviews_total_count\"\r\n              label=\"Total\"\r\n              type=\"number\"\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n\r\n          {/* Update Button */}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => void handleUpdateBusinessData()}\r\n            disabled={isUpdating}\r\n            className=\"px-3 py-2 bg-orange-600 hover:bg-orange-700 disabled:bg-orange-800 disabled:cursor-not-allowed text-white rounded text-sm font-medium transition-colors flex items-center gap-2 whitespace-nowrap\"\r\n            title=\"Scrape Google Maps URL for rating and review count\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${isUpdating ? 'animate-spin' : ''}`} />\r\n            {isUpdating ? 'Loading...' : 'Update from Google'}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"text-xs text-gray-400\">\r\n          <strong className=\"text-gray-300\">Note:</strong> You can manually edit these values or click &quot;Update from Google&quot; to fetch the latest ratings from your Google Business Profile.\r\n        </div>\r\n      </div>\r\n\r\n      {/* Update Message */}\r\n      {updateMessage && (\r\n        <div className={`text-sm p-3 rounded ${\r\n          updateMessage.type === 'success' \r\n            ? 'bg-green-900 text-green-300 border border-green-700' \r\n            : 'bg-red-900 text-red-300 border border-red-700'\r\n        }`}>\r\n          {updateMessage.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { ChevronDown, ChevronRight, Eye, FileText, Plus, Star } from 'lucide-react';\r\n\r\nimport { AddReviewForm } from './AddReviewForm';\r\nimport { RemoveReviewTab } from './RemoveReviewTab';\r\nimport { ReviewsContent } from './ReviewsContent';\r\n\r\ninterface ReviewsSectionProps {\r\n  tenantSlug: string;\r\n}\r\n\r\nexport const ReviewsSection: React.FC<ReviewsSectionProps> = ({ tenantSlug }) => {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'content' | 'add-review' | 'remove-review'>('content');\r\n\r\n  return (\r\n    <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center\">\r\n          <Star className=\"h-5 w-5 text-orange-400 mr-3\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">Reviews</h3>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => { /* Preview functionality */ }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            <Eye className=\"h-4 w-4 mr-1\" />\r\n            Preview\r\n          </button>\r\n          <button\r\n            onClick={() => { setIsCollapsed(!isCollapsed); }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            {isCollapsed ? (\r\n              <ChevronRight className=\"h-4 w-4 mr-1\" />\r\n            ) : (\r\n              <ChevronDown className=\"h-4 w-4 mr-1\" />\r\n            )}\r\n            {isCollapsed ? 'Expand' : 'Collapse'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {!isCollapsed && (\r\n        <div className=\"space-y-4\">\r\n          {/* Reviews Sub-tabs */}\r\n          <div className=\"flex space-x-1 bg-stone-800 rounded-lg p-1 mb-4\">\r\n            <button\r\n              onClick={() => { setActiveTab('content'); }}\r\n              className={`flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                activeTab === 'content'\r\n                  ? 'bg-orange-500 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <Star className=\"h-4 w-4 mr-2\" />\r\n              Content\r\n            </button>\r\n            <button\r\n              onClick={() => { setActiveTab('add-review'); }}\r\n              className={`flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                activeTab === 'add-review'\r\n                  ? 'bg-orange-500 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <Plus className=\"h-4 w-4 mr-2\" />\r\n              Add Review\r\n            </button>\r\n            <button\r\n              onClick={() => { setActiveTab('remove-review'); }}\r\n              className={`flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                activeTab === 'remove-review'\r\n                  ? 'bg-orange-500 text-white'\r\n                  : 'text-gray-400 hover:text-white hover:bg-stone-700'\r\n              }`}\r\n            >\r\n              <FileText className=\"h-4 w-4 mr-2\" />\r\n              Remove Review\r\n            </button>\r\n          </div>\r\n\r\n          {/* Reviews Sub-tab Content */}\r\n          <div className=\"transition-all duration-300 ease-in-out\">\r\n            {activeTab === 'content' && (\r\n              <ReviewsContent tenantSlug={tenantSlug} />\r\n            )}\r\n            {activeTab === 'add-review' && (\r\n              <AddReviewForm tenantSlug={tenantSlug} />\r\n            )}\r\n            {activeTab === 'remove-review' && (\r\n              <RemoveReviewTab tenantSlug={tenantSlug} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { BarChart3, ChevronDown, ChevronRight, Eye } from 'lucide-react';\r\n\r\ninterface ServiceImage {\r\n  slug: string;\r\n  image: string;\r\n  alt: string;\r\n  title: string;\r\n}\r\n\r\ninterface ServicesSectionProps {\r\n  serviceImages?: ServiceImage[];\r\n}\r\n\r\nexport const ServicesSection: React.FC<ServicesSectionProps> = ({\r\n  serviceImages = [],\r\n}) => {\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n\r\n  return (\r\n    <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center\">\r\n          <BarChart3 className=\"h-5 w-5 text-orange-400 mr-3\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">Services</h3>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => { /* Preview functionality */ }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            <Eye className=\"h-4 w-4 mr-1\" />\r\n            Preview\r\n          </button>\r\n          <button\r\n            onClick={() => { setIsCollapsed(!isCollapsed); }}\r\n            className=\"flex items-center px-3 py-1 text-sm text-gray-400 hover:text-white transition-colors\"\r\n          >\r\n            {isCollapsed ? (\r\n              <ChevronRight className=\"h-4 w-4 mr-1\" />\r\n            ) : (\r\n              <ChevronDown className=\"h-4 w-4 mr-1\" />\r\n            )}\r\n            {isCollapsed ? 'Expand' : 'Collapse'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {!isCollapsed && (\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <div className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Service Images (6 services)\r\n            </div>\r\n            <div className=\"grid grid-cols-3 gap-6 max-w-5xl\">\r\n              {serviceImages.map((service) => (\r\n                <div\r\n                  key={service.slug}\r\n                  className=\"relative cursor-pointer rounded-lg overflow-hidden border-2 border-stone-600 hover:border-stone-500 transition-all duration-200\"\r\n                >\r\n                  <div className=\"aspect-[4/3] bg-stone-700 relative\">\r\n                    <img\r\n                      src={service.image}\r\n                      alt={service.alt}\r\n                      className=\"w-full h-full object-cover\"\r\n                      onError={(e) => {\r\n                        const target = e.target as HTMLImageElement;\r\n                        target.style.display = 'none';\r\n                        const fallback = document.createElement('div');\r\n                        fallback.className = 'w-full h-full flex items-center justify-center text-gray-400 text-sm';\r\n                        fallback.textContent = 'Image not found';\r\n                        target.parentNode?.appendChild(fallback);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-4 bg-stone-800\">\r\n                    <p className=\"text-sm text-gray-300 font-medium text-center\">\r\n                      {service.title}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <p className=\"text-xs text-gray-500 mt-2\">\r\n              These 6 service images will be displayed in the services grid on your website.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useEffect, useMemo,useState } from 'react';\n\nimport { useData } from '@/shared/hooks';\nimport { loadIndustryFAQs } from '@/shared/utils/faqLoader';\nimport { useAutoSave } from '@/shared/utils/useAutoSave';\n\nimport { getWebsiteContent, saveWebsiteContent } from '../../api/websiteContentApi';\nimport {\n  FAQSection,\n  GallerySection,\n  HeroSection,\n  ReviewsSection,\n  ServicesSection\n} from './components';\nimport { WebsiteContentProvider } from './contexts/WebsiteContentContext';\n\n// Type definitions\ninterface GalleryImage {\n  src: string;\n  alt: string;\n}\n\ninterface ServiceImage {\n  slug: string;\n  image: string;\n  alt: string;\n  title: string;\n}\n\ninterface FAQItem {\n  category: string;\n  question: string;\n  answer: string;\n}\n\ninterface ContentData {\n  hero_title: string;\n  hero_subtitle: string;\n  services_title: string;\n  services_subtitle: string;\n  services_auto_description: string;\n  services_marine_description: string;\n  services_rv_description: string;\n  services_ceramic_description: string;\n  services_correction_description: string;\n  services_ppf_description: string;\n  reviews_title: string;\n  reviews_subtitle: string;\n  reviews_avg_rating: number;\n  reviews_total_count: number;\n  faq_title: string;\n  faq_subtitle: string;\n  faq_content: FAQItem[];\n  gallery_title?: string;\n  gallery_description?: string;\n  services?: {\n    images?: ServiceImage[];\n    [key: string]: unknown;\n  };\n  [key: string]: unknown;\n}\n\ninterface WebsiteContentTabProps {\n  tenantSlug?: string;\n}\n\nconst WebsiteContentTab: React.FC<WebsiteContentTabProps> = ({ tenantSlug }) => {\n  const [galleryImages, setGalleryImages] = useState<GalleryImage[]>([]);\n  const [customGalleryImages, setCustomGalleryImages] = useState<GalleryImage[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Load industry-specific FAQs\n  const { industry } = useData();\n  const [industryFAQs, setIndustryFAQs] = useState<Array<{ question: string; answer: string; category: string }>>([]);\n  \n  useEffect(() => {\n    if (!industry) return;\n    loadIndustryFAQs(industry)\n      .then(setIndustryFAQs)\n      .catch(() => {\n        setIndustryFAQs([]);\n      });\n  }, [industry]);\n  \n  // Group FAQs by category\n  const categoryFaqMap = useMemo(() => {\n    const map: Record<string, typeof industryFAQs> = {};\n    industryFAQs.forEach(faq => {\n      if (!map[faq.category]) {\n        map[faq.category] = [];\n      }\n      map[faq.category].push(faq);\n    });\n    return map;\n  }, [industryFAQs]);\n  \n  // Memoize initial content data to prevent infinite re-renders\n  const initialContentData = useMemo<ContentData>(() => ({\n    hero_title: '',\n    hero_subtitle: '',\n    services_title: '',\n    services_subtitle: '',\n    services_auto_description: '',\n    services_marine_description: '',\n    services_rv_description: '',\n    services_ceramic_description: '',\n    services_correction_description: '',\n    services_ppf_description: '',\n    reviews_title: '',\n    reviews_subtitle: '',\n    reviews_avg_rating: 0,\n    reviews_total_count: 0,\n    faq_title: '',\n    faq_subtitle: '',\n    faq_content: []\n  }), []);\n\n  // Create save function that uses tenant slug\n  const saveContentData = useMemo(() => {\n    return async (data: ContentData) => {\n      if (!tenantSlug) {\n        throw new Error('No tenant selected');\n      }\n\n      // Clean up FAQ content - remove empty FAQs\n      const cleanedFaqContent = data.faq_content.filter((faq: FAQItem) => \n        faq.question && faq.question.trim() !== '' && \n        faq.answer && faq.answer.trim() !== '' &&\n        faq.category && faq.category.trim() !== ''\n      );\n      \n      const cleanedData: ContentData = {\n        ...data,\n        faq_content: cleanedFaqContent\n      };\n\n      const result = await saveWebsiteContent(tenantSlug, cleanedData);\n      \n      return result;\n    };\n  }, [tenantSlug]);\n\n  // Use auto-save hook\n  const { value: contentData, setValue: setContentData } = useAutoSave(\n    initialContentData,\n    saveContentData,\n    { debounce: 1000 }\n  );\n\n  // Load initial data from API\n  useEffect(() => {\n    const loadContentData = async () => {\n      if (!tenantSlug) return;\n      \n      try {\n        setIsLoading(true);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- getWebsiteContent returns WebsiteContentData which matches ContentData\n        const data = await getWebsiteContent(tenantSlug);\n        setContentData(data as ContentData);\n      } catch (error) {\n        console.error('Failed to load website content:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    void loadContentData();\n  }, [tenantSlug, setContentData]);\n\n  const updateContent = (section: string, field: string, value: unknown) => {\n    setContentData(prev => {\n      // For flat structure (hero, reviews, faq, gallery), use direct field mapping\n      if (section === 'hero') {\n        const fieldMap: { [key: string]: keyof ContentData } = {\n          'title': 'hero_title',\n          'subtitle': 'hero_subtitle'\n        };\n        const dbField = fieldMap[field];\n        if (dbField) {\n          return {\n            ...prev,\n            [dbField]: value\n          };\n        }\n      } else if (section === 'reviews') {\n        const fieldMap: { [key: string]: keyof ContentData } = {\n          'title': 'reviews_title',\n          'subtitle': 'reviews_subtitle',\n          'avg_rating': 'reviews_avg_rating',\n          'total_count': 'reviews_total_count'\n        };\n        const dbField = fieldMap[field];\n        if (dbField) {\n          return {\n            ...prev,\n            [dbField]: value\n          };\n        }\n      } else if (section === 'faq') {\n        const fieldMap: { [key: string]: keyof ContentData } = {\n          'title': 'faq_title',\n          'subtitle': 'faq_subtitle',\n          'content': 'faq_content'\n        };\n        const dbField = fieldMap[field];\n        if (dbField) {\n          return {\n            ...prev,\n            [dbField]: value\n          };\n        }\n      }\n      \n      // Fallback to old nested structure for other sections\n      const sectionKey = section as keyof ContentData;\n      const existingSection = prev[sectionKey];\n      const sectionValue = typeof existingSection === 'object' && existingSection !== null \n        ? { ...existingSection as Record<string, unknown>, [field]: value }\n        : { [field]: value };\n      \n      return {\n        ...prev,\n        [section]: sectionValue\n      } as ContentData;\n    });\n  };\n\n  const resetToDefault = () => {\n    // For FAQ section, load all default FAQs from utils\n    const defaultFaqs = Object.values(categoryFaqMap).flat().map((faq: FAQItem) => ({\n      category: faq.category,\n      question: faq.question,\n      answer: faq.answer\n    }));\n    \n    const updatedContentData: ContentData = {\n      ...contentData,\n      faq_content: defaultFaqs\n    };\n    \n    setContentData(updatedContentData);\n  };\n\n  // Function to load gallery images from gallery.json\n  const loadGalleryImages = async () => {\n    try {\n      const response = await fetch('/mobile-detailing/data/gallery.json');\n      const galleryData = (await response.json()) as GalleryImage[];\n      setGalleryImages(galleryData);\n    } catch {\n      setGalleryImages([]);\n    }\n  };\n\n  useEffect(() => {\n    void loadGalleryImages();\n  }, []);\n\n  const handleAddCustomImage = () => {\n    const newCustomImage = {\n      src: '',\n      alt: '',\n    };\n    setCustomGalleryImages(prev => [...prev, newCustomImage]);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p className=\"text-gray-400\">Loading website content...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!tenantSlug) {\n    return <div className=\"text-red-500\">Error: No tenant slug provided</div>;\n  }\n\n  return (\n    <WebsiteContentProvider tenantSlug={tenantSlug}>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-white\">Website Content</h2>\n            <p className=\"text-gray-400 mt-1\">Manage your website sections and content</p>\n          </div>\n        </div>\n\n      {/* Content Sections Grid - Single Column */}\n      <div className=\"grid grid-cols-1 gap-6\">\n          <HeroSection\n            heroTitle={contentData.hero_title || ''}\n            heroSubtitle={contentData.hero_subtitle || ''}\n            heroImages={(contentData.services?.images as string[] | undefined) || []}\n            onUpdateContent={(field, value) => { updateContent('hero', field, value); }}\n          />\n\n          <ServicesSection\n            serviceImages={contentData.services?.images || []}\n          />\n\n          <ReviewsSection tenantSlug={tenantSlug} />\n\n          <FAQSection\n            faqContent={contentData.faq_content}\n            onUpdateContent={(field, value) => { updateContent('faq', field, value); }}\n            onResetToDefault={resetToDefault}\n          />\n\n          <GallerySection\n            stockImages={galleryImages}\n            customImages={customGalleryImages}\n            onAddCustomImage={handleAddCustomImage}\n          />\n      </div>\n      </div>\n    </WebsiteContentProvider>\n  );\n};\n\nexport default WebsiteContentTab;\n","import React, { useState } from 'react';\r\nimport { AlertCircle, Check, Copy, ExternalLink, Globe, Settings, Shield, Zap } from 'lucide-react';\r\n\r\nconst WebsiteDomainTab: React.FC = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [copiedField, setCopiedField] = useState<string | null>(null);\r\n  \r\n  const [domainData, setDomainData] = useState({\r\n    primaryDomain: 'jpsmobiledetailing.com',\r\n    customDomain: '',\r\n    subdomain: 'jps',\r\n    sslStatus: 'active',\r\n    dnsStatus: 'configured',\r\n    lastChecked: '2024-01-15T10:30:00Z',\r\n    nameservers: [\r\n      'ns1.example.com',\r\n      'ns2.example.com'\r\n    ],\r\n    records: [\r\n      { type: 'A', name: '@', value: '192.168.1.1', ttl: 3600 },\r\n      { type: 'CNAME', name: 'www', value: 'jpsmobiledetailing.com', ttl: 3600 },\r\n      { type: 'MX', name: '@', value: 'mail.example.com', ttl: 3600 }\r\n    ]\r\n  });\r\n\r\n  const handleSave = () => {\r\n    // TODO: Implement save functionality\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCopy = (text: string, field: string) => {\r\n    void navigator.clipboard.writeText(text);\r\n    setCopiedField(field);\r\n    setTimeout(() => { setCopiedField(null); }, 2000);\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n      case 'configured':\r\n        return 'text-green-400 bg-green-900/20';\r\n      case 'pending':\r\n        return 'text-yellow-400 bg-yellow-900/20';\r\n      case 'error':\r\n        return 'text-red-400 bg-red-900/20';\r\n      default:\r\n        return 'text-gray-400 bg-gray-900/20';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n      case 'configured':\r\n        return <Check className=\"h-4 w-4\" />;\r\n      case 'pending':\r\n        return <Zap className=\"h-4 w-4\" />;\r\n      case 'error':\r\n        return <AlertCircle className=\"h-4 w-4\" />;\r\n      default:\r\n        return <Settings className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-white\">Domain Settings</h2>\r\n          <p className=\"text-gray-400 mt-1\">Manage your website domain and DNS configuration</p>\r\n        </div>\r\n        <div className=\"flex space-x-3\">\r\n          <button\r\n            onClick={() => { setIsEditing(!isEditing); }}\r\n            className=\"flex items-center px-4 py-2 bg-stone-700 text-white rounded-lg hover:bg-stone-600 transition-colors\"\r\n          >\r\n            <Settings className=\"h-4 w-4 mr-2\" />\r\n            {isEditing ? 'Cancel' : 'Edit'}\r\n          </button>\r\n          {isEditing && (\r\n            <button\r\n              onClick={handleSave}\r\n              className=\"flex items-center px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\r\n            >\r\n              <Check className=\"h-4 w-4 mr-2\" />\r\n              Save\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Domain Status Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center\">\r\n              <Globe className=\"h-5 w-5 text-orange-400 mr-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">Primary Domain</h3>\r\n            </div>\r\n            <div className={`flex items-center px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(domainData.sslStatus)}`}>\r\n              {getStatusIcon(domainData.sslStatus)}\r\n              <span className=\"ml-1 capitalize\">{domainData.sslStatus}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-white font-mono\">{domainData.primaryDomain}</span>\r\n            <button\r\n              onClick={() => { handleCopy(domainData.primaryDomain, 'primary'); }}\r\n              className=\"flex items-center text-gray-400 hover:text-white transition-colors\"\r\n            >\r\n              {copiedField === 'primary' ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center\">\r\n              <Shield className=\"h-5 w-5 text-orange-400 mr-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">SSL Certificate</h3>\r\n            </div>\r\n            <div className={`flex items-center px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(domainData.sslStatus)}`}>\r\n              {getStatusIcon(domainData.sslStatus)}\r\n              <span className=\"ml-1 capitalize\">{domainData.sslStatus}</span>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-gray-400 text-sm\">Valid until: Jan 15, 2025</p>\r\n        </div>\r\n\r\n        <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center\">\r\n              <Settings className=\"h-5 w-5 text-orange-400 mr-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">DNS Status</h3>\r\n            </div>\r\n            <div className={`flex items-center px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(domainData.dnsStatus)}`}>\r\n              {getStatusIcon(domainData.dnsStatus)}\r\n              <span className=\"ml-1 capitalize\">{domainData.dnsStatus}</span>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-gray-400 text-sm\">Last checked: {new Date(domainData.lastChecked).toLocaleDateString()}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Domain Configuration */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Primary Domain Settings */}\r\n        <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n          <div className=\"flex items-center mb-4\">\r\n            <Globe className=\"h-5 w-5 text-orange-400 mr-2\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">Primary Domain</h3>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"domain-name-input\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                Domain Name\r\n              </label>\r\n              {isEditing ? (\r\n                <input\r\n                  id=\"domain-name-input\"\r\n                  type=\"text\"\r\n                  value={domainData.primaryDomain}\r\n                  onChange={(e) => { setDomainData({ ...domainData, primaryDomain: e.target.value }); }}\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              ) : (\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-white font-mono\">{domainData.primaryDomain}</span>\r\n                  <button\r\n                    onClick={() => { handleCopy(domainData.primaryDomain, 'primary'); }}\r\n                    className=\"flex items-center text-gray-400 hover:text-white transition-colors\"\r\n                  >\r\n                    {copiedField === 'primary' ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"subdomain-input\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                Subdomain\r\n              </label>\r\n              {isEditing ? (\r\n                <input\r\n                  id=\"subdomain-input\"\r\n                  type=\"text\"\r\n                  value={domainData.subdomain}\r\n                  onChange={(e) => { setDomainData({ ...domainData, subdomain: e.target.value }); }}\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              ) : (\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-white font-mono\">{domainData.subdomain}.yourdomain.com</span>\r\n                  <button\r\n                    onClick={() => { handleCopy(`${domainData.subdomain}.yourdomain.com`, 'subdomain'); }}\r\n                    className=\"flex items-center text-gray-400 hover:text-white transition-colors\"\r\n                  >\r\n                    {copiedField === 'subdomain' ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Custom Domain Settings */}\r\n        <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n          <div className=\"flex items-center mb-4\">\r\n            <ExternalLink className=\"h-5 w-5 text-orange-400 mr-2\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">Custom Domain</h3>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"custom-domain-input\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                Custom Domain (Optional)\r\n              </label>\r\n              {isEditing ? (\r\n                <input\r\n                  id=\"custom-domain-input\"\r\n                  type=\"text\"\r\n                  value={domainData.customDomain}\r\n                  onChange={(e) => { setDomainData({ ...domainData, customDomain: e.target.value }); }}\r\n                  placeholder=\"your-custom-domain.com\"\r\n                  className=\"w-full px-3 py-2 bg-stone-700 border border-stone-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                />\r\n              ) : (\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-white font-mono\">\r\n                    {domainData.customDomain || 'No custom domain set'}\r\n                  </span>\r\n                  {domainData.customDomain && (\r\n                    <button\r\n                      onClick={() => { handleCopy(domainData.customDomain, 'custom'); }}\r\n                      className=\"flex items-center text-gray-400 hover:text-white transition-colors\"\r\n                    >\r\n                      {copiedField === 'custom' ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"text-sm text-gray-400\">\r\n              <p>To use a custom domain:</p>\r\n              <ul className=\"list-disc list-inside mt-2 space-y-1\">\r\n                <li>Purchase a domain from a registrar</li>\r\n                <li>Point your domain&apos;s DNS to our nameservers</li>\r\n                <li>Add your domain here once DNS is configured</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* DNS Records */}\r\n      <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center\">\r\n            <Settings className=\"h-5 w-5 text-orange-400 mr-2\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">DNS Records</h3>\r\n          </div>\r\n          <button className=\"text-sm text-orange-400 hover:text-orange-300 transition-colors\">\r\n            Refresh DNS\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead>\r\n              <tr className=\"border-b border-stone-700\">\r\n                <th className=\"text-left py-3 px-4 text-sm font-medium text-gray-300\">Type</th>\r\n                <th className=\"text-left py-3 px-4 text-sm font-medium text-gray-300\">Name</th>\r\n                <th className=\"text-left py-3 px-4 text-sm font-medium text-gray-300\">Value</th>\r\n                <th className=\"text-left py-3 px-4 text-sm font-medium text-gray-300\">TTL</th>\r\n                <th className=\"text-left py-3 px-4 text-sm font-medium text-gray-300\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {domainData.records.map((record, index) => (\r\n                <tr key={index} className=\"border-b border-stone-700/50\">\r\n                  <td className=\"py-3 px-4 text-sm text-white font-mono\">{record.type}</td>\r\n                  <td className=\"py-3 px-4 text-sm text-white font-mono\">{record.name}</td>\r\n                  <td className=\"py-3 px-4 text-sm text-white font-mono\">{record.value}</td>\r\n                  <td className=\"py-3 px-4 text-sm text-gray-400\">{record.ttl}</td>\r\n                  <td className=\"py-3 px-4\">\r\n                    <button\r\n                      onClick={() => { handleCopy(record.value, `record-${index}`); }}\r\n                      className=\"flex items-center text-gray-400 hover:text-white transition-colors\"\r\n                    >\r\n                      {copiedField === `record-${index}` ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4\">Quick Actions</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <button className=\"flex items-center justify-center px-4 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\">\r\n            <Globe className=\"h-4 w-4 mr-2\" />\r\n            View Live Site\r\n          </button>\r\n          <button className=\"flex items-center justify-center px-4 py-3 bg-stone-700 text-white rounded-lg hover:bg-stone-600 transition-colors\">\r\n            <Settings className=\"h-4 w-4 mr-2\" />\r\n            DNS Settings\r\n          </button>\r\n          <button className=\"flex items-center justify-center px-4 py-3 bg-stone-700 text-white rounded-lg hover:bg-stone-600 transition-colors\">\r\n            <Shield className=\"h-4 w-4 mr-2\" />\r\n            SSL Certificate\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebsiteDomainTab;\r\n","import React from 'react';\r\n\r\nimport { HealthTab } from './components';\r\n\r\ninterface WebsiteHealthTabProps {\r\n  tenantSlug?: string;\r\n}\r\n\r\nconst WebsiteHealthTab: React.FC<WebsiteHealthTabProps> = ({ tenantSlug }) => {\r\n  return <HealthTab tenantSlug={tenantSlug} />;\r\n};\r\n\r\nexport default WebsiteHealthTab;\r\n","import { useQuery } from '@tanstack/react-query';\r\n\r\nexport interface AnalyticsSummary {\r\n  totalSessions: number;\r\n  totalUsers: number;\r\n  totalPageViews: number;\r\n  averageBounceRate: number;\r\n  averageSessionDuration: number;\r\n  dailyData: Array<{\r\n    date: string;\r\n    sessions: number;\r\n    users: number;\r\n    pageViews: number;\r\n    bounceRate: number;\r\n    sessionDuration: number;\r\n  }>;\r\n  period: string;\r\n  lastUpdated: string;\r\n}\r\n\r\nexport interface RealtimeData {\r\n  activeUsers: number;\r\n  countries: Array<{\r\n    country: string;\r\n    users: number;\r\n  }>;\r\n  lastUpdated: string;\r\n}\r\n\r\nexport interface GoogleAnalyticsStatus {\r\n  connected: boolean;\r\n  propertyId?: string;\r\n  lastSync?: string;\r\n  scopes?: string[];\r\n}\r\n\r\n/**\r\n * Hook to fetch Google Analytics connection status\r\n */\r\nexport function useGoogleAnalyticsStatus(tenantId?: number) {\r\n  return useQuery<GoogleAnalyticsStatus>({\r\n    queryKey: ['analytics', 'status', tenantId],\r\n    queryFn: async () => {\r\n      const response = await fetch(`/api/google/analytics/status?tenant_id=${tenantId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch analytics status');\r\n      }\r\n      const data = await response.json();\r\n      return data.data;\r\n    },\r\n    enabled: !!tenantId,\r\n    refetchInterval: 30000, // Refetch every 30 seconds\r\n  });\r\n}\r\n\r\n/**\r\n * Hook to fetch Google Analytics summary data\r\n */\r\nexport function useAnalyticsSummary(tenantId?: number, days: number = 7) {\r\n  return useQuery<AnalyticsSummary>({\r\n    queryKey: ['analytics', 'summary', tenantId, days],\r\n    queryFn: async () => {\r\n      const response = await fetch(`/api/google/analytics/summary?tenant_id=${tenantId}&days=${days}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch analytics summary');\r\n      }\r\n      const data = await response.json();\r\n      return data.data;\r\n    },\r\n    enabled: !!tenantId,\r\n    refetchInterval: 5 * 60 * 1000, // Refetch every 5 minutes\r\n  });\r\n}\r\n\r\n/**\r\n * Hook to fetch real-time analytics data\r\n */\r\nexport function useRealtimeData(tenantId?: number) {\r\n  return useQuery<RealtimeData>({\r\n    queryKey: ['analytics', 'realtime', tenantId],\r\n    queryFn: async () => {\r\n      const response = await fetch(`/api/google/analytics/realtime?tenant_id=${tenantId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch realtime data');\r\n      }\r\n      const data = await response.json();\r\n      return data.data;\r\n    },\r\n    enabled: !!tenantId,\r\n    refetchInterval: 30 * 1000, // Refetch every 30 seconds\r\n  });\r\n}\r\n\r\n/**\r\n * Function to initiate Google Analytics OAuth flow\r\n */\r\nexport function initiateGoogleAnalyticsAuth(tenantId: number): void {\r\n  const authUrl = `/api/google/analytics/auth?tenant_id=${tenantId}`;\r\n  window.open(authUrl, '_blank', 'width=600,height=700');\r\n}\r\n","/**\r\n * Hook for resolving tenant ID from auth context or URL params\r\n * Handles both tenant users and admin users viewing other businesses\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useAuth } from '@/shared/hooks';\r\n\r\n/**\r\n * Resolves the tenant ID for the current user/context\r\n * For tenant users: gets ID from auth context\r\n * For admin users: fetches ID from business slug in URL\r\n */\r\nexport function useTenantId(): string | undefined {\r\n  const authContext = useAuth();\r\n  const user = authContext.user;\r\n  const { businessSlug } = useParams<{ businessSlug: string }>();\r\n  const [adminTenantId, setAdminTenantId] = useState<string | null>(null);\r\n  \r\n  // Fetch tenant ID for admin users\r\n  useEffect(() => {\r\n    if (user?.role === 'admin' && businessSlug && !adminTenantId) {\r\n      const fetchTenantId = async () => {\r\n        try {\r\n          const response = await fetch(`/api/tenants/${businessSlug}`);\r\n          \r\n          if (response.ok) {\r\n            const data = await response.json() as {\r\n              success: boolean;\r\n              tenant?: {\r\n                id: number;\r\n              };\r\n            };\r\n            \r\n            if (data.success && data.tenant?.id) {\r\n              setAdminTenantId(data.tenant.id.toString());\r\n            }\r\n          }\r\n        } catch (err: unknown) {\r\n          console.error('Error fetching tenant ID:', err);\r\n        }\r\n      };\r\n      void fetchTenantId();\r\n    }\r\n  }, [user?.role, businessSlug, adminTenantId]);\r\n  \r\n  return user?.tenant_id?.toString() ?? adminTenantId ?? undefined;\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { BarChart3, Clock, Eye, Globe, Monitor, Smartphone, TrendingUp, Users, AlertCircle, RefreshCw } from 'lucide-react';\r\n\r\nimport { useAnalyticsSummary, useRealtimeData, useGoogleAnalyticsStatus, initiateGoogleAnalyticsAuth } from '../../api/analytics';\r\nimport { useTenantId } from '../services/hooks/useTenantId';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst WebsitePerformanceTab: React.FC = () => {\r\n  const [timeRange, setTimeRange] = useState<'7d' | '30d' | '90d'>('30d');\r\n  \r\n  // Get tenant ID and convert to number for API calls\r\n  const tenantIdString = useTenantId();\r\n  const tenantId = tenantIdString ? parseInt(tenantIdString) : undefined;\r\n  const { businessSlug } = useParams<{ businessSlug: string }>();\r\n  \r\n  // Convert time range to days for API\r\n  const days = timeRange === '7d' ? 7 : timeRange === '30d' ? 30 : 90;\r\n  \r\n  // Fetch real data\r\n  const { data: analyticsStatus, isLoading: statusLoading } = useGoogleAnalyticsStatus(tenantId);\r\n  const { data: analyticsData, isLoading: analyticsLoading, error: analyticsError } = useAnalyticsSummary(tenantId, days);\r\n  const { data: realtimeData, isLoading: realtimeLoading } = useRealtimeData(tenantId);\r\n  \r\n  const isLoading = statusLoading || analyticsLoading || realtimeLoading;\r\n\r\n  // Connection status component\r\n  const ConnectionStatus = () => {\r\n    if (!analyticsStatus) return null;\r\n    \r\n    if (!analyticsStatus.connected) {\r\n      return (\r\n        <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <AlertCircle className=\"h-6 w-6 text-yellow-400 mr-3\" />\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-white\">Google Analytics Not Connected</h3>\r\n                <p className=\"text-gray-400 mt-1\">Connect your Google Analytics account to view website performance data</p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={() => tenantId && initiateGoogleAnalyticsAuth(tenantId)}\r\n              className=\"px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors flex items-center\"\r\n            >\r\n              <BarChart3 className=\"h-4 w-4 mr-2\" />\r\n              Connect Analytics\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div className=\"bg-stone-800 rounded-lg p-4 border border-stone-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"h-3 w-3 bg-green-400 rounded-full mr-3\"></div>\r\n            <div>\r\n              <span className=\"text-white font-medium\">Google Analytics Connected</span>\r\n              <p className=\"text-gray-400 text-sm\">Last sync: {analyticsStatus.lastSync ? new Date(analyticsStatus.lastSync).toLocaleString() : 'Never'}</p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"p-2 text-gray-400 hover:text-white transition-colors\"\r\n            title=\"Refresh data\"\r\n          >\r\n            <RefreshCw className=\"h-4 w-4\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const StatCard = ({ \r\n    title, \r\n    value, \r\n    change, \r\n    trend, \r\n    icon: Icon \r\n  }: { \r\n    title: string; \r\n    value: string | number; \r\n    change: number; \r\n    trend: 'up' | 'down'; \r\n    icon: React.ComponentType<{ className?: string }>;\r\n  }) => (\r\n    <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center\">\r\n          <Icon className=\"h-5 w-5 text-orange-400 mr-2\" />\r\n          <h3 className=\"text-sm font-medium text-gray-300\">{title}</h3>\r\n        </div>\r\n        {change !== 0 && (\r\n          <div className={`flex items-center text-sm ${\r\n            trend === 'up' ? 'text-green-400' : 'text-red-400'\r\n          }`}>\r\n            <TrendingUp className={`h-4 w-4 mr-1 ${\r\n              trend === 'down' ? 'rotate-180' : ''\r\n            }`} />\r\n            {Math.abs(change)}%\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"text-2xl font-bold text-white mb-1\">{value}</div>\r\n      {change !== 0 && (\r\n        <div className=\"text-xs text-gray-400\">\r\n          {trend === 'up' ? '↗' : '↘'} {change > 0 ? '+' : ''}{change}% from last period\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // Helper function to format session duration\r\n  const formatSessionDuration = (seconds: number): string => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = Math.floor(seconds % 60);\r\n    return `${minutes}m ${remainingSeconds}s`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-white\">Website Performance</h2>\r\n          <p className=\"text-gray-400 mt-1\">Analytics and performance metrics for your website</p>\r\n        </div>\r\n        {analyticsStatus?.connected && (\r\n          <div className=\"flex space-x-2\">\r\n            {(['7d', '30d', '90d'] as const).map((range) => (\r\n              <button\r\n                key={range}\r\n                onClick={() => { setTimeRange(range); }}\r\n                className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${\r\n                  timeRange === range\r\n                    ? 'bg-orange-500 text-white'\r\n                    : 'bg-stone-700 text-gray-300 hover:bg-stone-600'\r\n                }`}\r\n              >\r\n                {range === '7d' ? '7 Days' : range === '30d' ? '30 Days' : '90 Days'}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Connection Status */}\r\n      <ConnectionStatus />\r\n\r\n      {/* Key Metrics */}\r\n      {analyticsStatus?.connected && (\r\n        <>\r\n          {isLoading ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n              {[...Array(4)].map((_, i) => (\r\n                <div key={i} className=\"bg-stone-800 rounded-lg p-6 border border-stone-700 animate-pulse\">\r\n                  <div className=\"h-4 bg-stone-700 rounded mb-4\"></div>\r\n                  <div className=\"h-8 bg-stone-700 rounded mb-2\"></div>\r\n                  <div className=\"h-3 bg-stone-700 rounded\"></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : analyticsError ? (\r\n            <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n              <div className=\"flex items-center\">\r\n                <AlertCircle className=\"h-6 w-6 text-red-400 mr-3\" />\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold text-white\">Error Loading Analytics</h3>\r\n                  <p className=\"text-gray-400 mt-1\">Failed to fetch analytics data. Please try refreshing.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : analyticsData ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n              <StatCard\r\n                title=\"Total Sessions\"\r\n                value={analyticsData.totalSessions.toLocaleString()}\r\n                change={0}\r\n                trend=\"up\"\r\n                icon={Users}\r\n              />\r\n              <StatCard\r\n                title=\"Total Users\"\r\n                value={analyticsData.totalUsers.toLocaleString()}\r\n                change={0}\r\n                trend=\"up\"\r\n                icon={Eye}\r\n              />\r\n              <StatCard\r\n                title=\"Bounce Rate\"\r\n                value={`${analyticsData.averageBounceRate.toFixed(1)}%`}\r\n                change={0}\r\n                trend=\"down\"\r\n                icon={BarChart3}\r\n              />\r\n              <StatCard\r\n                title=\"Avg. Session\"\r\n                value={formatSessionDuration(analyticsData.averageSessionDuration)}\r\n                change={0}\r\n                trend=\"up\"\r\n                icon={Clock}\r\n              />\r\n            </div>\r\n          ) : null}\r\n\r\n          {/* Real-time Data */}\r\n          {realtimeData && (\r\n            <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h3 className=\"text-lg font-semibold text-white\">Real-time Activity</h3>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"h-2 w-2 bg-green-400 rounded-full mr-2 animate-pulse\"></div>\r\n                  <span className=\"text-sm text-gray-400\">Live</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold text-white\">{realtimeData.activeUsers}</div>\r\n                  <div className=\"text-sm text-gray-400\">Active Users</div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold text-white\">{realtimeData.countries.length}</div>\r\n                  <div className=\"text-sm text-gray-400\">Countries</div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-sm text-gray-400\">Last Updated</div>\r\n                  <div className=\"text-sm text-gray-300\">\r\n                    {new Date(realtimeData.lastUpdated).toLocaleTimeString()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Quick Actions */}\r\n      {analyticsStatus?.connected && (\r\n        <div className=\"bg-stone-800 rounded-lg p-6 border border-stone-700\">\r\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Quick Actions</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <button \r\n              onClick={() => window.open('https://analytics.google.com', '_blank')}\r\n              className=\"flex items-center justify-center px-4 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\r\n            >\r\n              <BarChart3 className=\"h-4 w-4 mr-2\" />\r\n              View Full Analytics\r\n            </button>\r\n            <button \r\n              onClick={() => window.open(`https://${businessSlug}.thatsmartsite.com`, '_blank')}\r\n              className=\"flex items-center justify-center px-4 py-3 bg-stone-700 text-white rounded-lg hover:bg-stone-600 transition-colors\"\r\n            >\r\n              <Globe className=\"h-4 w-4 mr-2\" />\r\n              Open Website\r\n            </button>\r\n            <button \r\n              onClick={() => window.location.reload()}\r\n              className=\"flex items-center justify-center px-4 py-3 bg-stone-700 text-white rounded-lg hover:bg-stone-600 transition-colors\"\r\n            >\r\n              <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n              Refresh Data\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebsitePerformanceTab;\r\n","import React, { useState } from 'react';\r\nimport { BarChart3, FileText, Globe,Heart } from 'lucide-react';\r\n\r\nimport WebsiteContentTab from './WebsiteContentTab';\r\nimport WebsiteDomainTab from './WebsiteDomainTab';\r\nimport WebsiteHealthTab from './WebsiteHealthTab';\r\nimport WebsitePerformanceTab from './WebsitePerformanceTab';\r\n\r\ntype WebsiteSubTab = 'content' | 'performance' | 'health' | 'domain';\r\n\r\ninterface WebsiteTabProps {\r\n  tenantSlug?: string;\r\n}\r\n\r\nconst WebsiteTab: React.FC<WebsiteTabProps> = ({ tenantSlug }) => {\r\n  const [activeSubTab, setActiveSubTab] = useState<WebsiteSubTab>('content');\r\n\r\n  const subTabs = [\r\n    { id: 'content' as const, name: 'Content', icon: FileText },\r\n    { id: 'performance' as const, name: 'Performance', icon: BarChart3 },\r\n    { id: 'health' as const, name: 'Health', icon: Heart },\r\n    { id: 'domain' as const, name: 'Domain', icon: Globe },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Sub-tab Navigation */}\r\n      <div className=\"border-b border-stone-700\">\r\n        <nav className=\"flex space-x-8\">\r\n          {subTabs.map((tab) => {\r\n            const Icon = tab.icon;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => { setActiveSubTab(tab.id); }}\r\n                className={`flex items-center px-1 py-4 text-sm font-medium border-b-2 transition-colors duration-200 ${\r\n                  activeSubTab === tab.id\r\n                    ? 'border-orange-500 text-orange-400'\r\n                    : 'border-transparent text-gray-400 hover:text-gray-300 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                <Icon className=\"h-4 w-4 mr-2\" />\r\n                {tab.name}\r\n              </button>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Sub-tab Content */}\r\n      <div className=\"mt-6\">\r\n        {activeSubTab === 'content' && <WebsiteContentTab tenantSlug={tenantSlug} />}\r\n        {activeSubTab === 'performance' && <WebsitePerformanceTab />}\r\n        {activeSubTab === 'health' && <WebsiteHealthTab tenantSlug={tenantSlug} />}\r\n        {activeSubTab === 'domain' && <WebsiteDomainTab />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebsiteTab;\r\n","import React from 'react';\r\n\r\nimport type { DashboardTab, DetailerData } from '@/features/tenantDashboard/types';\r\n\r\nimport { getTabConfig } from '../config/tabConfig';\r\nimport CustomersTab from '../tabs/customers/CustomersTab';\r\nimport LocationsTab from '../tabs/locations/LocationsTab';\r\nimport OverviewTab from '../tabs/overview/OverviewTab';\r\nimport ProfileTab from '../tabs/profile/ProfileTab';\r\nimport ScheduleTab from '../tabs/schedule/ScheduleTab';\r\nimport ServicesTab from '../tabs/services/SimpleFixedServicesTab';\r\nimport WebsiteTab from '../tabs/website/WebsiteTab';\r\n\r\ninterface TabContentProps {\r\n  activeTab: DashboardTab;\r\n  detailerData: DetailerData;\r\n  onDataUpdate: (data: Partial<DetailerData>) => void;\r\n  tenantSlug?: string;\r\n}\r\n\r\nexport const TabContent: React.FC<TabContentProps> = ({ \r\n  activeTab, \r\n  detailerData, \r\n  onDataUpdate,\r\n  tenantSlug\r\n}) => {\r\n  // Get tab configuration for this tenant\r\n  const tabConfig = getTabConfig(tenantSlug);\r\n  \r\n  // Check if the current tab is enabled\r\n  const isTabEnabled = (tab: DashboardTab): boolean => {\r\n    switch (tab) {\r\n      case 'schedule':\r\n        return tabConfig.schedule;\r\n      case 'customers':\r\n        return tabConfig.customers;\r\n      case 'services':\r\n        return tabConfig.services;\r\n      case 'locations':\r\n        return tabConfig.locations;\r\n      case 'profile':\r\n        return tabConfig.profile;\r\n      case 'website':\r\n        return tabConfig.website;\r\n      case 'overview':\r\n        return true; // Overview is always enabled\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  // If the current tab is disabled, show a message\r\n  if (!isTabEnabled(activeTab)) {\r\n    return (\r\n      <div className=\"transition-all duration-300 ease-in-out\">\r\n        <div className=\"bg-stone-800 rounded-lg p-8 text-center border border-stone-700\">\r\n          <div className=\"text-orange-400 text-6xl mb-4\">🔒</div>\r\n          <h3 className=\"text-xl font-semibold text-white mb-2\">Feature Not Available</h3>\r\n          <p className=\"text-gray-300 mb-4\">\r\n            This feature is not currently enabled for your account.\r\n          </p>\r\n          <p className=\"text-sm text-gray-400\">\r\n            Contact support to upgrade your plan and unlock this feature.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"transition-all duration-300 ease-in-out\">\r\n      {activeTab === 'overview' && <OverviewTab />}\r\n      {activeTab === 'website' && <WebsiteTab tenantSlug={tenantSlug} />}\r\n      {activeTab === 'locations' && <LocationsTab detailerData={detailerData} />}\r\n      {activeTab === 'profile' && (\r\n        <ProfileTab \r\n          detailerData={detailerData} \r\n          onDataUpdate={onDataUpdate} \r\n        />\r\n      )}\r\n      {activeTab === 'schedule' && <ScheduleTab />}\r\n      {activeTab === 'customers' && <CustomersTab />}\r\n      {activeTab === 'services' && <ServicesTab />}\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * Dashboard API Layer\r\n * Handles all dashboard-related API calls\r\n */\r\n\r\nexport interface DashboardData {\r\n  id: string;\r\n  slug: string;\r\n  business_name: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  business_phone: string;\r\n  personal_phone: string;\r\n  business_email: string;\r\n  personal_email: string;\r\n  industry: string;\r\n  application_status: string;\r\n  business_start_date: string;\r\n  service_areas: ServiceArea[];\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface ServiceArea {\r\n  id?: string;\r\n  city: string;\r\n  state: string;\r\n  zip?: number;\r\n  primary: boolean;\r\n  minimum: number;\r\n  multiplier: number;\r\n}\r\n\r\nexport interface DashboardApiResponse {\r\n  success: boolean;\r\n  data: DashboardData;\r\n  error?: string;\r\n}\r\n\r\nexport const dashboardApi = {\r\n  /**\r\n   * Get dashboard data for a tenant\r\n   */\r\n  getDashboardData: async (slug: string): Promise<DashboardData> => {\r\n    try {\r\n      const response = await fetch(`/api/tenants/${slug}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          throw new Error('Tenant not found');\r\n        }\r\n        throw new Error(`Failed to fetch dashboard data: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const result = await response.json() as DashboardApiResponse;\r\n      \r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Failed to fetch dashboard data');\r\n      }\r\n      \r\n      return result.data;\r\n    } catch (error) {\r\n      console.error('Dashboard API Error:', error);\r\n      throw new Error(`Failed to load dashboard data: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Update tenant information\r\n   */\r\n  updateTenantInfo: async (slug: string, data: Partial<DashboardData>): Promise<DashboardData> => {\r\n    try {\r\n      const response = await fetch(`/api/tenants/${slug}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to update tenant info: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const result = await response.json() as DashboardApiResponse;\r\n      \r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Failed to update tenant info');\r\n      }\r\n      \r\n      return result.data;\r\n    } catch (error) {\r\n      console.error('Dashboard API Error:', error);\r\n      throw new Error(`Failed to update tenant info: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get tenant health status\r\n   */\r\n  getTenantHealth: async (slug: string): Promise<{ status: string; lastChecked: string; issues: string[] }> => {\r\n    try {\r\n      const response = await fetch(`/api/tenants/${slug}/health`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch tenant health: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const result = await response.json() as { success: boolean; data: { status: string; lastChecked: string; issues: string[] } };\r\n      \r\n      if (!result.success) {\r\n        throw new Error('Failed to fetch tenant health');\r\n      }\r\n      \r\n      return result.data;\r\n    } catch (error) {\r\n      console.error('Dashboard API Error:', error);\r\n      throw new Error(`Failed to load tenant health: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport type { DashboardTab, DetailerData } from '@/features/tenantDashboard/types';\r\nimport { useBrowserTab } from '@/shared/hooks';\r\nimport { useTenantSlug } from '@/shared/hooks/useTenantSlug';\r\n\r\nimport { dashboardApi } from '../api/dashboard.api';\r\nimport { DashboardHeader } from './DashboardHeader';\r\nimport { DashboardLayout } from './DashboardLayout';\r\nimport { DashboardTabs } from './DashboardTabs';\r\nimport { TabContent } from './TabContent';\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const slug = useTenantSlug();\r\n  const [activeTab, setActiveTab] = useState<DashboardTab>('overview');\r\n  const [detailerData, setDetailerData] = useState<DetailerData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n\r\n\r\n  // Set browser tab title and favicon for tenant dashboard\r\n  useBrowserTab({\r\n    title: detailerData?.businessName \r\n      ? `${detailerData.businessName} - Dashboard`\r\n      : 'Dashboard - That Smart Site',\r\n  });\r\n\r\n  // Fetch tenant data based on business slug\r\n  useEffect(() => {\r\n    const fetchTenantData = async () => {\r\n      if (!slug) {\r\n        setError('No business slug provided');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const tenant = await dashboardApi.getDashboardData(slug);\r\n        \r\n        // Transform tenant data to DetailerData format\r\n        const transformedData: DetailerData = {\r\n          business_name: tenant.business_name || 'Unknown Business',\r\n          first_name: tenant.first_name || 'Unknown',\r\n          last_name: tenant.last_name || 'Unknown',\r\n          email: tenant.business_email || tenant.personal_email || 'No email',\r\n          phone: tenant.business_phone || tenant.personal_phone || 'No phone',\r\n          location: tenant.service_areas.length > 0 \r\n            ? `${tenant.service_areas[0]?.city ?? ''}, ${tenant.service_areas[0]?.state ?? ''}` \r\n            : 'No location',\r\n          services: tenant.service_areas.length > 0 \r\n            ? tenant.service_areas.map((area: { city: string }) => area.city).slice(0, 4)\r\n            : ['Mobile Detailing'],\r\n          memberSince: tenant.created_at ? new Date(tenant.created_at).getFullYear().toString() : 'Unknown'\r\n        };\r\n        setDetailerData(transformedData);\r\n      } catch (error) {\r\n        setError(error instanceof Error ? error.message : 'Failed to fetch business data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    void fetchTenantData();\r\n  }, [slug]);\r\n\r\n  const handleDataUpdate = (data: Partial<DetailerData>) => {\r\n    if (detailerData) {\r\n      setDetailerData({ ...detailerData, ...data });\r\n    }\r\n  };\r\n\r\n  const handleBackToForm = () => {\r\n    // Navigate back to main site or form\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardLayout>\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-lg text-gray-600\">Loading business dashboard...</p>\r\n          </div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  if (error || !detailerData) {\r\n    return (\r\n      <DashboardLayout>\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-lg text-red-600\">Error: {error || 'Failed to load business data'}</p>\r\n          </div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <DashboardHeader \r\n          detailerData={detailerData}\r\n          onBackToForm={handleBackToForm}\r\n        />\r\n        \r\n        <DashboardTabs \r\n          activeTab={activeTab}\r\n          onTabChange={setActiveTab}\r\n          tenantSlug={slug}\r\n        />\r\n        \r\n        <TabContent \r\n          activeTab={activeTab}\r\n          detailerData={detailerData}\r\n          onDataUpdate={handleDataUpdate}\r\n          tenantSlug={slug}\r\n        />\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ArrowLeft } from 'lucide-react';\n\nimport { Button } from '@/shared/ui';\n\nconst ApplicationHeader: React.FC = () => {\n  return (\n    <header className=\"fixed top-0 z-50 bg-stone-900/95 backdrop-blur-sm w-full border-b border-stone-800 relative\">\n      <div className=\"w-full py-4\">\n        <div className=\"max-w-7xl mx-auto flex items-center justify-between px-4 sm:px-6 lg:px-8\">\n          {/* Logo and Business Name */}\n          <div className=\"flex items-center space-x-3\">\n            <img \n              src=\"/shared/icons/logo.png\" \n              alt=\"That Smart Site Logo\" \n              className=\"h-14 w-14 object-contain\"\n              width={56}\n              height={56}\n              decoding=\"async\"\n              loading=\"eager\"\n            />\n            <div>\n              <h1 className=\"text-2xl md:text-3xl font-bold text-white\">That Smart Site</h1>\n            </div>\n          </div>\n\n          {/* Back Button */}\n          <Link to=\"/\">\n            <Button \n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-gray-300 hover:text-white hover:bg-stone-700 px-3 py-2 rounded-lg transition-colors\"\n              leftIcon={<ArrowLeft className=\"w-4 h-4\" />}\n            >\n              Back\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default ApplicationHeader;\n","import React from 'react';\r\nimport { Building2, Zap } from 'lucide-react';\r\n\r\nimport { env } from '@/shared/env';\r\nimport { Input } from '@/shared/ui';\r\nimport { formatPhoneNumber } from '@/shared/utils/phoneFormatter';\r\n\r\ninterface BusinessInformationSectionProps {\r\n  formData: {\r\n    businessName: string;\r\n    businessPhone: string;\r\n    businessEmail: string;\r\n    businessAddress: {\r\n      address: string;\r\n      city: string;\r\n      state: string;\r\n      zip: string;\r\n    };\r\n    industry?: string;\r\n  };\r\n  handleInputChange: (field: string, value: string) => void;\r\n  handleAddressChange: (field: keyof BusinessInformationSectionProps['formData']['businessAddress'], value: string) => void;\r\n}\r\n\r\nconst INDUSTRIES = [\r\n  { value: 'mobile-detailing', label: 'Mobile Detailing' },\r\n  { value: 'maid-service', label: 'Maid Service' },\r\n  { value: 'lawncare', label: 'Lawn Care' },\r\n  { value: 'pet-grooming', label: 'Pet Grooming' },\r\n  { value: 'barber', label: 'Barber Shop' },\r\n];\r\n\r\nconst BusinessInformationSection: React.FC<BusinessInformationSectionProps> = ({\r\n  formData,\r\n  handleInputChange,\r\n  handleAddressChange\r\n}) => {\r\n  const handlePhoneChange = (value: string) => {\r\n    const formatted = formatPhoneNumber(value);\r\n    handleInputChange('businessPhone', formatted);\r\n  };\r\n\r\n  const handleAutoFill = () => {\r\n    handleInputChange('businessName', \"Testing Mobile Detail\");\r\n    handleInputChange('industry', 'mobile-detailing');\r\n    handleInputChange('businessPhone', formatPhoneNumber('7024206066'));\r\n    handleInputChange('businessEmail', 'bcoleman143@gmail.com');\r\n    handleAddressChange('address', '2550 Country Club Dr');\r\n    handleAddressChange('city', 'Bullhead City');\r\n    handleAddressChange('state', 'AZ');\r\n    handleAddressChange('zip', '86442');\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-stone-800 border border-stone-700 rounded-lg\">\r\n      <div className=\"p-6 border-b border-stone-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h2 className=\"text-white text-lg font-semibold flex items-center\">\r\n              <Building2 className=\"h-5 w-5 mr-2\" />\r\n              Business Information\r\n            </h2>\r\n            <p className=\"text-gray-400 text-sm mt-1\">Tell us about your business</p>\r\n          </div>\r\n          {env.DEV && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleAutoFill}\r\n              className=\"flex items-center gap-2 px-3 py-1.5 bg-orange-600 hover:bg-orange-700 text-white text-sm font-medium rounded-lg transition-colors\"\r\n              title=\"Auto-fill with test data\"\r\n            >\r\n              <Zap className=\"h-4 w-4\" />\r\n              Auto-fill\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"p-6\">\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {/* Business Name */}\r\n        <div className=\"md:col-span-2\">\r\n          <label htmlFor=\"businessName\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n            Business Name *\r\n          </label>\r\n          <Input\r\n            id=\"businessName\"\r\n            type=\"text\"\r\n            value={formData.businessName}\r\n            onChange={(e) => { handleInputChange('businessName', e.target.value); }}\r\n            placeholder=\"Enter your business name\"\r\n            required\r\n            className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Industry Selection */}\r\n        <div className=\"md:col-span-2\">\r\n          <label htmlFor=\"industry\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n            Industry *\r\n          </label>\r\n          <select\r\n            id=\"industry\"\r\n            value={formData.industry || 'mobile-detailing'}\r\n            onChange={(e) => { handleInputChange('industry', e.target.value); }}\r\n            required\r\n            className=\"w-full bg-stone-700 border border-stone-600 text-white rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n          >\r\n            {INDUSTRIES.map((industry) => (\r\n              <option key={industry.value} value={industry.value}>\r\n                {industry.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <p className=\"text-gray-400 text-xs mt-1\">\r\n            This determines your website template and features\r\n          </p>\r\n        </div>\r\n\r\n        {/* Business Phone */}\r\n        <div>\r\n          <label htmlFor=\"businessPhone\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n            Business Phone *\r\n          </label>\r\n          <Input\r\n            id=\"businessPhone\"\r\n            type=\"tel\"\r\n            value={formData.businessPhone}\r\n            onChange={(e) => { handlePhoneChange(e.target.value); }}\r\n            placeholder=\"(555) 123-4567\"\r\n            required\r\n            maxLength={14}\r\n            className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Business Email */}\r\n        <div>\r\n          <label htmlFor=\"businessEmail\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n            Business Email *\r\n          </label>\r\n          <Input\r\n            id=\"businessEmail\"\r\n            type=\"email\"\r\n            value={formData.businessEmail}\r\n            onChange={(e) => { handleInputChange('businessEmail', e.target.value); }}\r\n            placeholder=\"business@example.com\"\r\n            required\r\n            className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Business Address */}\r\n        <div className=\"md:col-span-2\">\r\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Business Address</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {/* Street Address */}\r\n            <div className=\"md:col-span-2\">\r\n              <label htmlFor=\"businessAddress\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                Street Address *\r\n              </label>\r\n              <Input\r\n                id=\"businessAddress\"\r\n                type=\"text\"\r\n                value={formData.businessAddress.address}\r\n                onChange={(e) => { handleAddressChange('address', e.target.value); }}\r\n                placeholder=\"123 Main Street\"\r\n                required\r\n                className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n              />\r\n            </div>\r\n\r\n            {/* City */}\r\n            <div>\r\n              <label htmlFor=\"businessCity\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                City *\r\n              </label>\r\n              <Input\r\n                id=\"businessCity\"\r\n                type=\"text\"\r\n                value={formData.businessAddress.city}\r\n                onChange={(e) => { handleAddressChange('city', e.target.value); }}\r\n                placeholder=\"Phoenix\"\r\n                required\r\n                className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n              />\r\n            </div>\r\n\r\n            {/* State */}\r\n            <div>\r\n              <label htmlFor=\"businessState\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                State *\r\n              </label>\r\n              <Input\r\n                id=\"businessState\"\r\n                type=\"text\"\r\n                value={formData.businessAddress.state}\r\n                onChange={(e) => { handleAddressChange('state', e.target.value); }}\r\n                placeholder=\"AZ\"\r\n                required\r\n                className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                maxLength={2}\r\n              />\r\n            </div>\r\n\r\n            {/* ZIP Code */}\r\n            <div>\r\n              <label htmlFor=\"businessZip\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                ZIP Code *\r\n              </label>\r\n              <Input\r\n                id=\"businessZip\"\r\n                type=\"text\"\r\n                value={formData.businessAddress.zip}\r\n                onChange={(e) => { handleAddressChange('zip', e.target.value); }}\r\n                placeholder=\"85001\"\r\n                required\r\n                className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                maxLength={10}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessInformationSection;\r\n","import React from 'react';\r\nimport { User, Zap } from 'lucide-react';\r\n\r\nimport { env } from '@/shared/env';\r\nimport { Input } from '@/shared/ui';\r\nimport { formatPhoneNumber } from '@/shared/utils/phoneFormatter';\r\n\r\ninterface PersonalInformationSectionProps {\r\n  formData: {\r\n    firstName: string;\r\n    lastName: string;\r\n    personalPhone: string;\r\n    personalEmail: string;\r\n  };\r\n  handleInputChange: (field: string, value: string) => void;\r\n  errors?: Record<string, string>;\r\n}\r\n\r\nconst PersonalInformationSection: React.FC<PersonalInformationSectionProps> = ({\r\n  formData,\r\n  handleInputChange,\r\n  errors = {}\r\n}) => {\r\n  const handlePhoneChange = (value: string) => {\r\n    const formatted = formatPhoneNumber(value);\r\n    handleInputChange('personalPhone', formatted);\r\n  };\r\n\r\n  const handleAutoFill = () => {\r\n    handleInputChange('firstName', 'John');\r\n    handleInputChange('lastName', 'Doe');\r\n    handleInputChange('personalPhone', formatPhoneNumber('5551112222'));\r\n    handleInputChange('personalEmail', 'coleman143@hotmail.com');\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-stone-800 border border-stone-700 rounded-lg\">\r\n      <div className=\"p-6 border-b border-stone-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h2 className=\"text-white text-lg font-semibold flex items-center\">\r\n              <User className=\"h-5 w-5 mr-2\" />\r\n              Personal Information\r\n            </h2>\r\n            <p className=\"text-gray-400 text-sm mt-1\">Tell us about yourself</p>\r\n          </div>\r\n          {env.DEV && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleAutoFill}\r\n              className=\"flex items-center gap-2 px-3 py-1.5 bg-orange-600 hover:bg-orange-700 text-white text-sm font-medium rounded-lg transition-colors\"\r\n              title=\"Auto-fill with test data\"\r\n            >\r\n              <Zap className=\"h-4 w-4\" />\r\n              Auto-fill\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"p-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {/* First Name */}\r\n        <div>\r\n          <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n            First Name *\r\n          </label>\r\n          <Input\r\n            id=\"firstName\"\r\n            type=\"text\"\r\n            value={formData.firstName}\r\n            onChange={(e) => { handleInputChange('firstName', e.target.value); }}\r\n            placeholder=\"Enter your first name\"\r\n            required\r\n            className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Last Name */}\r\n        <div>\r\n          <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n            Last Name *\r\n          </label>\r\n          <Input\r\n            id=\"lastName\"\r\n            type=\"text\"\r\n            value={formData.lastName}\r\n            onChange={(e) => { handleInputChange('lastName', e.target.value); }}\r\n            placeholder=\"Enter your last name\"\r\n            required\r\n            className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Personal Phone */}\r\n        <div>\r\n          <label htmlFor=\"personalPhone\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n            Personal Phone *\r\n          </label>\r\n          <Input\r\n            id=\"personalPhone\"\r\n            type=\"tel\"\r\n            value={formData.personalPhone}\r\n            onChange={(e) => { handlePhoneChange(e.target.value); }}\r\n            placeholder=\"(555) 123-4567\"\r\n            required\r\n            maxLength={14}\r\n            className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Personal Email */}\r\n        <div>\r\n          <label htmlFor=\"personalEmail\" className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n            Personal Email *\r\n          </label>\r\n          <Input\r\n            id=\"personalEmail\"\r\n            type=\"email\"\r\n            value={formData.personalEmail}\r\n            onChange={(e) => { handleInputChange('personalEmail', e.target.value); }}\r\n            placeholder=\"your.email@example.com\"\r\n            required\r\n            className=\"w-full bg-stone-700 border border-stone-600 text-white placeholder:text-gray-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n          />\r\n          {errors['personalEmail'] && (\r\n            <p className=\"mt-1 text-sm text-red-400\">{errors['personalEmail']}</p>\r\n          )}\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInformationSection;\r\n","export interface BaseLocation {\r\n  city: string;\r\n  state: string;\r\n  zip: string;\r\n}\r\n\r\nexport interface ServiceArea {\r\n  city: string;\r\n  state: string;\r\n  zip: number | null;\r\n  primary: boolean;\r\n  minimum: number;\r\n  multiplier: number;\r\n}\r\n\r\n\r\n\r\nexport interface UploadFile {\r\n  name: string;\r\n  size: number;\r\n  type: string;\r\n  url: string;\r\n}\r\n\r\n// Address interface for reusability\r\nexport interface Address {\r\n  address: string;\r\n  city: string;\r\n  state: string;\r\n  zip: string;\r\n}\r\n\r\n// Pricing plan interface\r\nexport interface PricingPlan {\r\n  id: 'starter' | 'pro' | 'enterprise';\r\n  name: string;\r\n  price: number;\r\n  interval: string;\r\n  features: string[];\r\n  popular?: boolean;\r\n}\r\n\r\n// Preview state interface\r\nexport interface PreviewState {\r\n  fromPreview?: boolean;\r\n  businessName?: string;\r\n  phone?: string;\r\n  city?: string;\r\n  state?: string;\r\n  industry?: string;\r\n}\r\n\r\n// New simplified tenant application interface\r\nexport interface TenantApplication {\r\n  id?: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  personalPhone: string;\r\n  personalEmail: string;\r\n  businessName: string;\r\n  businessPhone: string;\r\n  businessEmail: string;\r\n  businessAddress: Address;\r\n  selectedPlan: 'starter' | 'pro' | 'enterprise' | '';\r\n  planPrice: number;\r\n  paymentMethod: string;\r\n  cardNumber: string;\r\n  expiryDate: string;\r\n  cvv: string;\r\n  billingAddress: Address;\r\n  useSameAddress: boolean;\r\n  industry?: string;\r\n  step: number;\r\n  status: 'draft' | 'pending' | 'approved' | 'rejected';\r\n}\r\n\r\n// Legacy interface for backward compatibility\r\nexport interface AffiliateApplication {\r\n  legal_name: string;\r\n  primary_contact: string;\r\n  phone: string;\r\n  email: string;\r\n  base_location: BaseLocation;\r\n  categories: string[];\r\n  gbp_url?: string;\r\n  instagram_url?: string;\r\n  tiktok_url?: string;\r\n  facebook_url?: string;\r\n  youtube_url?: string;\r\n  website_url?: string;\r\n  uploads?: UploadFile[];\r\n  has_insurance: boolean;\r\n  accept_terms: boolean;\r\n  consent_notifications: boolean;\r\n  source: string;\r\n  notes?: string;\r\n}\r\n\r\nexport const US_STATES = [\r\n  'AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA',\r\n  'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD',\r\n  'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ',\r\n  'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC',\r\n  'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY'\r\n];\r\n\r\nexport const CATEGORIES = [\r\n  'Auto Detailing',\r\n  'Boat Detailing',\r\n  'RV Detailing',\r\n  'PPF Installation',\r\n  'Ceramic Coating',\r\n  'Paint Correction'\r\n];\r\n\r\nexport const SOURCES = [\r\n  'Google Search',\r\n  'Social Media',\r\n  'Referral',\r\n  'Direct Mail',\r\n  'Other'\r\n];\r\n\r\n// Pricing plans with updated $15/$25/$35 pricing\r\nexport const pricingPlans: PricingPlan[] = [\r\n  {\r\n    id: 'starter',\r\n    name: 'Starter',\r\n    price: 15,\r\n    interval: 'month',\r\n    features: [\r\n      'Single location website',\r\n      '5 custom pages',\r\n      'Mobile responsive design',\r\n      'Contact form integration',\r\n      'Basic SEO optimization',\r\n      'SSL certificate included',\r\n      'Email support',\r\n    ],\r\n  },\r\n  {\r\n    id: 'pro',\r\n    name: 'Pro',\r\n    price: 25,\r\n    interval: 'month',\r\n    popular: true,\r\n    features: [\r\n      'Multi-location support',\r\n      'Unlimited pages',\r\n      'Advanced SEO tools',\r\n      'Online booking system',\r\n      'Google Maps integration',\r\n      'Analytics dashboard',\r\n      'Priority support',\r\n      'Custom domain',\r\n    ],\r\n  },\r\n  {\r\n    id: 'enterprise',\r\n    name: 'Enterprise',\r\n    price: 35,\r\n    interval: 'month',\r\n    features: [\r\n      'Everything in Pro',\r\n      'Custom development',\r\n      'API integrations',\r\n      'Dedicated account manager',\r\n      'White-label options',\r\n      'SLA guarantee',\r\n      '24/7 phone support',\r\n    ],\r\n  },\r\n];\r\n\r\n// Default values for new simplified tenant application\r\nexport const tenantApplicationDefaultValues: TenantApplication = {\r\n  firstName: '',\r\n  lastName: '',\r\n  personalPhone: '',\r\n  personalEmail: '',\r\n  businessName: '',\r\n  businessPhone: '',\r\n  businessEmail: '',\r\n  businessAddress: {\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    zip: ''\r\n  },\r\n  selectedPlan: '',\r\n  planPrice: 0,\r\n  paymentMethod: '',\r\n  cardNumber: '',\r\n  expiryDate: '',\r\n  cvv: '',\r\n  billingAddress: {\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    zip: ''\r\n  },\r\n  useSameAddress: true,\r\n  industry: 'mobile-detailing',\r\n  step: 0,\r\n  status: 'draft'\r\n};\r\n\r\n// Legacy default values for backward compatibility\r\nexport const defaultValues: AffiliateApplication = {\r\n  legal_name: '',\r\n  primary_contact: '',\r\n  phone: '',\r\n  email: '',\r\n  base_location: {\r\n    city: '',\r\n    state: '',\r\n    zip: ''\r\n  },\r\n  categories: [],\r\n  gbp_url: '',\r\n  instagram_url: '',\r\n  tiktok_url: '',\r\n  facebook_url: '',\r\n  youtube_url: '',\r\n  website_url: '',\r\n  uploads: [],\r\n  has_insurance: false,\r\n  accept_terms: false,\r\n  consent_notifications: false,\r\n  source: '',\r\n  notes: ''\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Check, Sparkles } from 'lucide-react';\r\n\r\nimport { type PricingPlan,pricingPlans } from '../types';\r\n\r\ninterface PlanSelectionSectionProps {\r\n  selectedPlan: string;\r\n  onSelectPlan: (planId: 'starter' | 'pro' | 'enterprise', price: number) => void;\r\n}\r\n\r\nexport const PlanSelectionSection: React.FC<PlanSelectionSectionProps> = ({\r\n  selectedPlan,\r\n  onSelectPlan,\r\n}) => {\r\n  const [hoveredPlan, setHoveredPlan] = useState<string | null>(null);\r\n\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto\">\r\n      <div className=\"text-center mb-8 sm:mb-12\">\r\n        <h2 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold text-white mb-3 sm:mb-4\">\r\n          Choose Your Plan\r\n        </h2>\r\n        <p className=\"text-gray-400 text-base sm:text-lg max-w-2xl mx-auto px-4\">\r\n          Select the perfect plan for your business. All plans include a 14-day money-back guarantee.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6 lg:gap-8 px-4 items-stretch\">\r\n        {pricingPlans.map((plan: PricingPlan) => {\r\n          const isSelected = selectedPlan === plan.id;\r\n          const isHovered = hoveredPlan === plan.id;\r\n\r\n          return (\r\n            <div\r\n              key={plan.id}\r\n              className={`\r\n                relative rounded-2xl border-2 transition-all duration-300 flex flex-col h-full\r\n                ${\r\n                  isSelected\r\n                    ? 'border-orange-600 bg-stone-800 shadow-xl shadow-orange-600/20 scale-105'\r\n                    : isHovered\r\n                    ? 'border-orange-500 bg-stone-800/80 scale-102'\r\n                    : 'border-stone-700 bg-stone-800/60'\r\n                }\r\n                ${plan.popular ? 'lg:scale-105 lg:z-10' : ''}\r\n              `}\r\n              onMouseEnter={() => { setHoveredPlan(plan.id); }}\r\n              onMouseLeave={() => { setHoveredPlan(null); }}\r\n            >\r\n              {plan.popular && (\r\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2 z-20\">\r\n                  <div className=\"bg-gradient-to-r from-orange-600 to-orange-500 text-white text-xs sm:text-sm font-bold px-4 py-1.5 rounded-full flex items-center gap-1.5 shadow-lg\">\r\n                    <Sparkles className=\"w-3 h-3 sm:w-4 sm:h-4\" />\r\n                    MOST POPULAR\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"p-6 sm:p-8 flex flex-col h-full\">\r\n                <h3 className=\"text-xl sm:text-2xl font-bold text-white mb-2\">\r\n                  {plan.name}\r\n                </h3>\r\n\r\n                <div className=\"mb-6\">\r\n                  <div className=\"flex items-baseline gap-1\">\r\n                    <span className=\"text-3xl sm:text-4xl lg:text-5xl font-bold text-white\">\r\n                      ${plan.price}\r\n                    </span>\r\n                    <span className=\"text-gray-400 text-base sm:text-lg\">/{plan.interval}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <ul className=\"space-y-3 sm:space-y-4 mb-6 sm:mb-8 flex-grow\">\r\n                  {plan.features.map((feature, index) => (\r\n                    <li key={index} className=\"flex items-start gap-3\">\r\n                      <Check className=\"w-5 h-5 text-orange-600 flex-shrink-0 mt-0.5\" />\r\n                      <span className=\"text-gray-300 text-sm sm:text-base\">{feature}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => { onSelectPlan(plan.id, plan.price * 100); }}\r\n                  className={`\r\n                    w-full py-3 sm:py-3.5 px-6 rounded-lg font-semibold text-base sm:text-lg\r\n                    transition-all duration-200\r\n                    focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-stone-800\r\n                    ${\r\n                      isSelected\r\n                        ? 'bg-orange-600 text-white hover:bg-orange-700 focus:ring-orange-500'\r\n                        : 'bg-stone-700 text-white hover:bg-stone-600 focus:ring-stone-500'\r\n                    }\r\n                  `}\r\n                >\r\n                  {isSelected ? 'Selected' : 'Select Plan'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"mt-8 text-center px-4\">\r\n        <div className=\"flex flex-wrap justify-center items-center gap-4 sm:gap-8 text-sm text-gray-400\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Check className=\"w-4 h-4 text-orange-600\" />\r\n            <span>14-day money-back guarantee</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Check className=\"w-4 h-4 text-orange-600\" />\r\n            <span>Cancel anytime</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Check className=\"w-4 h-4 text-orange-600\" />\r\n            <span>No setup fees</span>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Trust badges */}\r\n        <div className=\"flex flex-wrap justify-center items-center gap-3 sm:gap-6 text-xs text-gray-500 mt-4\">\r\n          <span>Powered by Stripe</span>\r\n          <span className=\"hidden sm:inline\">•</span>\r\n          <span>SSL Secure</span>\r\n          <span className=\"hidden sm:inline\">•</span>\r\n          <span>PCI Compliant</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport { Check } from 'lucide-react';\r\n\r\ninterface StepProgressProps {\r\n  steps: Array<{ id: number; label: string }>;\r\n  currentStep: number;\r\n}\r\n\r\nexport const StepProgress: React.FC<StepProgressProps> = ({ steps, currentStep }) => {\r\n  return (\r\n    <div className=\"w-full py-6 sm:py-8\">\r\n      <div className=\"flex justify-center items-center px-4\">\r\n        {steps.map((step, index) => {\r\n          const isActive = step.id === currentStep;\r\n          const isCompleted = step.id < currentStep;\r\n          const isLast = index === steps.length - 1;\r\n\r\n          return (\r\n            <React.Fragment key={step.id}>\r\n              <div className=\"flex flex-col items-center\">\r\n                <div\r\n                  className={`\r\n                    flex items-center justify-center w-8 h-8 sm:w-10 sm:h-10 rounded-full border-2\r\n                    transition-all duration-300 relative\r\n                    ${\r\n                      isCompleted\r\n                        ? 'bg-orange-600 border-orange-600 text-white scale-100'\r\n                        : isActive\r\n                        ? 'bg-orange-600 border-orange-600 text-white scale-110 shadow-lg shadow-orange-600/50'\r\n                        : 'bg-stone-800 border-stone-600 text-gray-400'\r\n                    }\r\n                  `}\r\n                >\r\n                  {isCompleted ? (\r\n                    <Check className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                  ) : (\r\n                    <span className=\"text-sm sm:text-base font-semibold\">{step.id + 1}</span>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  className={`\r\n                    text-xs sm:text-sm font-medium mt-2 text-center transition-colors\r\n                    ${isActive ? 'text-orange-600' : isCompleted ? 'text-gray-300' : 'text-gray-500'}\r\n                  `}\r\n                >\r\n                  {step.label}\r\n                </div>\r\n              </div>\r\n\r\n              {!isLast && (\r\n                <div\r\n                  className={`\r\n                    h-0.5 w-12 sm:w-20 lg:w-24 mx-2 sm:mx-4 mb-6 transition-all duration-500\r\n                    ${isCompleted ? 'bg-orange-600' : 'bg-stone-700'}\r\n                  `}\r\n                />\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { CheckCircle, Settings,Sparkles } from 'lucide-react';\n\nimport { useAuth } from '@/shared/hooks';\nimport { Button } from '@/shared/ui';\n\n\nconst SuccessPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const [tenantSlug, setTenantSlug] = useState<string | null>(null);\n  const [websiteUrl, setWebsiteUrl] = useState<string | null>(null);\n  const [dashboardUrl, setDashboardUrl] = useState<string | null>(null);\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  useEffect(() => {\n    // Retrieve the tenant info from session storage\n    const slug = sessionStorage.getItem('newTenantSlug');\n    const url = sessionStorage.getItem('newTenantWebsiteUrl');\n    const dashboard = sessionStorage.getItem('newTenantDashboardUrl');\n    \n    if (slug) {\n      setTenantSlug(slug);\n      setWebsiteUrl(url || `/${slug}`);\n      setDashboardUrl(dashboard || `/${slug}/dashboard`);\n      \n      // Clean up session storage after retrieval\n      sessionStorage.removeItem('newTenantSlug');\n      sessionStorage.removeItem('newTenantWebsiteUrl');\n      sessionStorage.removeItem('newTenantDashboardUrl');\n    }\n  }, []);\n\n\n  const handleGoToDashboard = () => {\n    // Simply navigate to dashboard - user will need to login with their email-set password\n    if (dashboardUrl) {\n      void navigate(dashboardUrl);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"min-h-screen bg-stone-900 text-white flex items-center justify-center p-4 pb-32\">\n        <div className=\"bg-stone-800 border border-stone-700 rounded-2xl max-w-2xl w-full p-6 sm:p-8\">\n        <div className=\"text-center\">\n          <div className=\"w-20 h-20 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg shadow-green-600/50\">\n            <CheckCircle className=\"w-10 h-10 text-white\" />\n          </div>\n          <h1 className=\"text-3xl sm:text-4xl text-white font-bold mb-3\">\n            Welcome to ThatSmartSite! 🎉\n          </h1>\n          <p className=\"text-gray-300 text-lg mb-8\">\n            Your website has been created and is ready to view!\n          </p>\n        </div>\n        \n        {tenantSlug && websiteUrl && (\n            <div className=\"bg-gradient-to-br from-green-900/30 to-green-800/20 border border-green-600/50 rounded-lg p-6 mb-6\">\n            <h3 className=\"font-semibold text-white text-lg mb-3 text-center\">\n              🎉 Your Website is Ready!\n            </h3>\n            <p className=\"text-gray-300 text-sm mb-4 text-center\">\n              Your website is live at: <span className=\"text-green-400 font-mono text-xs\">{websiteUrl}</span>\n            </p>\n            <p className=\"text-gray-300 text-sm mb-6 text-center\">\n              Now let&apos;s customize it to make it perfect for your business!\n            </p>\n            <Button \n              onClick={handleGoToDashboard}\n              variant=\"primary\"\n              size=\"lg\"\n              className=\"w-full bg-green-600 hover:bg-green-700 flex items-center justify-center gap-2\"\n            >\n              <Settings className=\"w-5 h-5\" />\n              Go to Dashboard\n            </Button>\n          </div>\n        )}\n\n        <div className=\"bg-gradient-to-br from-orange-900/30 to-orange-800/20 border border-orange-600/50 rounded-lg p-6 mb-6\">\n          <div className=\"flex items-start gap-3 mb-4\">\n            <Sparkles className=\"w-6 h-6 text-orange-400 flex-shrink-0 mt-1\" />\n            <div>\n              <h3 className=\"font-semibold text-white text-lg mb-2\">What&apos;s Next?</h3>\n              <ul className=\"space-y-2 text-gray-300 text-sm\">\n                <li className=\"flex items-start\">\n                  <span className=\"text-orange-400 mr-2\">•</span>\n                  <span>Customize your site content, photos, and business information</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-orange-400 mr-2\">•</span>\n                  <span>Add your services, pricing, and contact information</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-orange-400 mr-2\">•</span>\n                  <span>You&apos;ll receive a welcome email with instructions to set your password</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-orange-400 mr-2\">•</span>\n                  <span>Our team will reach out to help you get started</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-stone-700/50 border border-stone-600 rounded-lg p-4 mb-6\">\n          <p className=\"text-gray-300 text-sm text-center\">\n            Check your email inbox for a confirmation message from{' '}\n            <span className=\"text-orange-400 font-semibold\">hello@thatsmartsite.com</span>\n          </p>\n        </div>\n\n        <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n          <Link to=\"/\" className=\"w-full sm:w-auto\">\n            <Button \n              variant=\"outline\"\n              size=\"lg\"\n              className=\"w-full border border-stone-600 text-gray-300 hover:bg-stone-700 font-semibold\"\n            >\n              Back to Home\n            </Button>\n          </Link>\n          <Button \n            onClick={() => { void navigate('/contact'); }}\n            variant=\"primary\"\n            size=\"lg\"\n            className=\"w-full sm:w-auto bg-orange-600 hover:bg-orange-700\"\n          >\n            Contact Support\n          </Button>\n        </div>\n\n        <div className=\"mt-8 pt-6 border-t border-stone-700 text-center\">\n          <p className=\"text-xs text-gray-500\">\n            Need help? Call us at <span className=\"text-orange-400\">(555) 123-4567</span> or email{' '}\n            <span className=\"text-orange-400\">support@thatsmartsite.com</span>\n          </p>\n        </div>\n        </div>\n      </div>\n\n      {/* PWA Add to Home Screen moved to tenant dashboard */}\n    </>\n  );\n};\n\nexport default SuccessPage;\n","/**\r\n * Load industry defaults for tenant provisioning\r\n * \r\n * These defaults are used ONLY during tenant signup to populate the database.\r\n * At runtime, the site loads content from the database (single source of truth).\r\n */\r\n\r\nexport type IndustrySlug = \r\n  | 'mobile-detailing'\r\n  | 'lawncare'\r\n  | 'maid-service'\r\n  | 'pet-grooming';\r\n\r\nexport interface FAQItem {\r\n  category: string;\r\n  question: string;\r\n  answer: string;\r\n}\r\n\r\nexport interface ContentDefaults {\r\n  hero: {\r\n    h1: string;\r\n    subTitle: string;\r\n  };\r\n  reviews: {\r\n    title: string;\r\n    subtitle: string;\r\n  };\r\n  faq: {\r\n    title: string;\r\n    subtitle: string;\r\n  };\r\n}\r\n\r\nexport interface SEODefaults {\r\n  title: string;\r\n  description: string;\r\n  keywords: string;\r\n  ogImage: string;\r\n  twitterImage: string;\r\n  canonicalPath: string;\r\n  robots: string;\r\n}\r\n\r\nexport interface IndustryDefaults {\r\n  content: ContentDefaults;\r\n  seo: SEODefaults;\r\n  faqItems: FAQItem[];\r\n}\r\n\r\n/**\r\n * Load FAQ items for an industry from all category files\r\n * \r\n * @param industry - Industry identifier\r\n * @returns Array of FAQ items from all categories\r\n */\r\nasync function loadFAQItems(industry: IndustrySlug): Promise<FAQItem[]> {\r\n  const categories = [\r\n    'general',\r\n    'services',\r\n    'pricing',\r\n    'scheduling',\r\n    'locations',\r\n    'preparation',\r\n    'payments',\r\n    'warranty',\r\n    'aftercare',\r\n  ];\r\n  \r\n  const faqArrays = await Promise.all(\r\n    categories.map(async (category) => {\r\n      try {\r\n        const module = await import(`@/data/${industry}/faq/${category}.json`) as { default: FAQItem[] };\r\n        return module.default;\r\n      } catch {\r\n        // Category file might not exist for all industries\r\n        return [];\r\n      }\r\n    })\r\n  );\r\n  \r\n  // Flatten all categories into a single array (no IDs needed for database storage)\r\n  return faqArrays.flat();\r\n}\r\n\r\n/**\r\n * Load all defaults for an industry (content + SEO + FAQ items)\r\n * \r\n * Used ONLY during tenant signup to populate website.content table.\r\n * Not used at runtime - DB is the single source of truth.\r\n * \r\n * @param industry - Industry identifier\r\n * @returns All defaults for database provisioning\r\n */\r\nexport async function loadDefaults(\r\n  industry: IndustrySlug\r\n): Promise<IndustryDefaults> {\r\n  try {\r\n    const [contentModule, seoModule, faqItems] = await Promise.all([\r\n      import(`@/data/${industry}/content-defaults.json`) as Promise<{ default: ContentDefaults }>,\r\n      import(`@/data/${industry}/seo-defaults.json`) as Promise<{ default: SEODefaults }>,\r\n      loadFAQItems(industry)\r\n    ]);\r\n    \r\n    return {\r\n      content: contentModule.default,\r\n      seo: seoModule.default,\r\n      faqItems\r\n    };\r\n  } catch (error) {\r\n    console.error(`Failed to load defaults for ${industry}:`, error);\r\n    throw new Error(`Defaults not found for industry: ${industry}`);\r\n  }\r\n}\r\n\r\n","import { useCallback, useEffect, useRef } from 'react';\r\n\r\nimport type { TenantApplication } from '../types';\r\n\r\ninterface UseAutoSaveOptions {\r\n  formData: TenantApplication;\r\n  enabled?: boolean;\r\n  interval?: number;\r\n}\r\n\r\nconst STORAGE_KEY = 'tenant_application_draft';\r\n\r\nexport const useAutoSave = ({\r\n  formData,\r\n  enabled = true,\r\n  interval = 2000,\r\n}: UseAutoSaveOptions) => {\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const lastSavedRef = useRef<string>('');\r\n\r\n  const saveToLocalStorage = useCallback(() => {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\r\n    } catch (error) {\r\n      console.error('Failed to save to localStorage:', error);\r\n    }\r\n  }, [formData]);\r\n\r\n  const performSave = useCallback(() => {\r\n    const currentData = JSON.stringify(formData);\r\n\r\n    if (currentData === lastSavedRef.current) {\r\n      return;\r\n    }\r\n\r\n    saveToLocalStorage();\r\n    lastSavedRef.current = currentData;\r\n  }, [formData, saveToLocalStorage]);\r\n\r\n  useEffect(() => {\r\n    if (!enabled) return;\r\n\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n\r\n    timeoutRef.current = setTimeout(() => {\r\n      performSave();\r\n    }, interval);\r\n\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, [formData, enabled, interval, performSave]);\r\n\r\n  const loadFromLocalStorage = useCallback((): TenantApplication | null => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      return saved ? (JSON.parse(saved) as TenantApplication) : null;\r\n    } catch (error) {\r\n      console.error('Failed to load from localStorage:', error);\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  const clearSavedData = useCallback(() => {\r\n    try {\r\n      localStorage.removeItem(STORAGE_KEY);\r\n    } catch (error) {\r\n      console.error('Failed to clear saved data:', error);\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    loadFromLocalStorage,\r\n    clearSavedData,\r\n  };\r\n};\r\n\r\n","import { z } from 'zod';\r\n\r\nconst phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\n\r\nexport const addressSchema = z.object({\r\n  address: z.string().min(1, 'Address is required'),\r\n  city: z.string().min(1, 'City is required'),\r\n  state: z.string().length(2, 'State must be 2 characters (e.g., CA)').toUpperCase(),\r\n  zip: z.string().regex(/^\\d{5}(-\\d{4})?$/, 'Invalid ZIP code'),\r\n});\r\n\r\nexport const personalInfoSchema = z.object({\r\n  firstName: z.string().min(1, 'First name is required').max(50),\r\n  lastName: z.string().min(1, 'Last name is required').max(50),\r\n  personalPhone: z.string().regex(phoneRegex, 'Invalid phone number'),\r\n  personalEmail: z.email('Invalid email address'),\r\n});\r\n\r\nexport const businessInfoSchema = z.object({\r\n  businessName: z.string().min(1, 'Business name is required').max(100),\r\n  businessPhone: z.string().regex(phoneRegex, 'Invalid phone number'),\r\n  businessEmail: z.email('Invalid email address'),\r\n  businessAddress: addressSchema,\r\n  industry: z.string().optional(),\r\n});\r\n\r\nexport const planSelectionSchema = z.object({\r\n  selectedPlan: z.enum(['starter', 'pro', 'enterprise'], {\r\n    errorMap: () => ({ message: 'Please select a plan' }),\r\n  }),\r\n  planPrice: z.number().min(0),\r\n});\r\n\r\nexport const paymentSchema = z.object({\r\n  billingAddress: addressSchema,\r\n  useSameAddress: z.boolean(),\r\n});\r\n\r\n/**\r\n * Formats a phone number as user types: (123) 456-7890\r\n */\r\nexport const formatPhoneNumber = (value: string): string => {\r\n  const cleaned = value.replace(/\\D/g, '');\r\n  const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,4})$/);\r\n\r\n  if (!match) return value;\r\n\r\n  const parts = [match[1], match[2], match[3]].filter(Boolean);\r\n\r\n  if (parts.length === 0) return '';\r\n  if (parts.length === 1) return parts[0];\r\n  if (parts.length === 2) return `(${parts[0]}) ${parts[1]}`;\r\n  return `(${parts[0]}) ${parts[1]}-${parts[2]}`;\r\n};\r\n\r\n/**\r\n * Validates an email address using Zod\r\n */\r\nexport const validateEmail = (email: string): boolean => {\r\n  try {\r\n    z.email().parse(email);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Suggests email correction for common typos\r\n */\r\nexport const suggestEmailCorrection = (email: string): string | null => {\r\n  const commonDomains = [\r\n    'gmail.com',\r\n    'yahoo.com',\r\n    'hotmail.com',\r\n    'outlook.com',\r\n    'icloud.com',\r\n  ];\r\n\r\n  const parts = email.split('@');\r\n  if (parts.length !== 2) return null;\r\n\r\n  const domain = parts[1].toLowerCase();\r\n\r\n  for (const commonDomain of commonDomains) {\r\n    if (domain !== commonDomain && isCloseMatch(domain, commonDomain)) {\r\n      return `${parts[0]}@${commonDomain}`;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nfunction isCloseMatch(str1: string, str2: string): boolean {\r\n  if (Math.abs(str1.length - str2.length) > 2) return false;\r\n\r\n  let differences = 0;\r\n  const maxLen = Math.max(str1.length, str2.length);\r\n\r\n  for (let i = 0; i < maxLen; i++) {\r\n    if (str1[i] !== str2[i]) differences++;\r\n    if (differences > 2) return false;\r\n  }\r\n\r\n  return differences > 0 && differences <= 2;\r\n}\r\n\r\n","/**\r\n * Payment API client for tenant onboarding\r\n */\r\n\r\nimport { apiClient } from '@/shared/api';\r\n\r\nexport interface CreatePaymentIntentRequest {\r\n  amount: number;\r\n  customerEmail: string;\r\n  businessName: string;\r\n  planType: string;\r\n  metadata?: Record<string, unknown>;\r\n}\r\n\r\nexport interface CreatePaymentIntentResponse {\r\n  success: boolean;\r\n  clientSecret?: string;\r\n  paymentIntentId?: string;\r\n  error?: string;\r\n}\r\n\r\nexport interface ConfirmPaymentRequest {\r\n  paymentIntentId: string;\r\n  tenantData: Record<string, unknown>;\r\n}\r\n\r\nexport interface ConfirmPaymentResponse {\r\n  success: boolean;\r\n  data?: {\r\n    slug: string;\r\n    websiteUrl: string;\r\n    dashboardUrl: string;\r\n    tenantId: string;\r\n    userId: string;\r\n    paymentIntentId: string;\r\n  };\r\n  error?: string;\r\n}\r\n\r\nexport const createPaymentIntent = async (request: CreatePaymentIntentRequest): Promise<CreatePaymentIntentResponse> => {\r\n  return apiClient.post<CreatePaymentIntentResponse>('/api/payments/create-intent', request);\r\n};\r\n\r\nexport const confirmPayment = async (request: ConfirmPaymentRequest): Promise<ConfirmPaymentResponse> => {\r\n  return apiClient.post<ConfirmPaymentResponse>('/api/payments/confirm', request);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport { AlertCircle, CreditCard, Lock, Shield } from 'lucide-react';\r\n\r\nimport { env } from '@/shared/env';\r\nimport { Input } from '@/shared/ui';\r\n\r\nimport { confirmPayment, createPaymentIntent } from '../api/payments.api';\r\nimport type { Address } from '../types';\r\nimport { addressSchema } from '../utils/validation';\r\n\r\ninterface PaymentSectionProps {\r\n  formData: {\r\n    selectedPlan: string;\r\n    planPrice: number;\r\n    billingAddress: Address;\r\n    useSameAddress: boolean;\r\n    firstName: string;\r\n    lastName: string;\r\n    personalEmail: string;\r\n    personalPhone: string;\r\n    businessName: string;\r\n    businessPhone: string;\r\n    businessEmail: string;\r\n    businessAddress: Address;\r\n    industry: string;\r\n    defaults: unknown;\r\n  };\r\n  businessAddress: Address;\r\n  onAddressChange: (field: keyof Address, value: string) => void;\r\n  onToggleSameAddress: (value: boolean) => void;\r\n  onPaymentSuccess: (data: { slug: string; websiteUrl: string; dashboardUrl: string }) => void;\r\n  errors: Record<string, string>;\r\n  setErrors: (errors: Record<string, string>) => void;\r\n}\r\n\r\nconst PaymentSection: React.FC<PaymentSectionProps> = ({\r\n  formData,\r\n  onAddressChange,\r\n  onToggleSameAddress,\r\n  onPaymentSuccess,\r\n  errors,\r\n  setErrors,\r\n}) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [cardError, setCardError] = useState<string>('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [clientSecret, setClientSecret] = useState<string | null>(null);\r\n\r\n  const validateField = (field: string, value: string) => {\r\n    try {\r\n      const addressField = field.split('.')[1] as keyof Address;\r\n      switch (addressField) {\r\n        case 'address':\r\n          addressSchema.pick({ address: true }).parse({ address: value });\r\n          break;\r\n        case 'city':\r\n          addressSchema.pick({ city: true }).parse({ city: value });\r\n          break;\r\n        case 'state':\r\n          addressSchema.pick({ state: true }).parse({ state: value });\r\n          break;\r\n        case 'zip':\r\n          addressSchema.pick({ zip: true }).parse({ zip: value });\r\n          break;\r\n      }\r\n      setErrors({ ...errors, [field]: '' });\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Invalid input';\r\n      setErrors({ ...errors, [field]: message });\r\n    }\r\n  };\r\n\r\n\r\n  const handleCardChange = (event: { error?: { message: string } | undefined }) => {\r\n    if (event.error) {\r\n      setCardError(event.error.message);\r\n    } else {\r\n      setCardError('');\r\n    }\r\n  };\r\n\r\n  // Create payment intent when component mounts\r\n  React.useEffect(() => {\r\n    const createPaymentIntentAsync = async () => {\r\n      try {\r\n        // Guard against missing required fields\r\n        if (!formData.planPrice || !formData.personalEmail || !formData.businessName || !formData.selectedPlan) {\r\n          console.error('Missing required fields for payment intent:', {\r\n            planPrice: formData.planPrice,\r\n            personalEmail: formData.personalEmail,\r\n            businessName: formData.businessName,\r\n            selectedPlan: formData.selectedPlan\r\n          });\r\n          setCardError('Please complete all required fields before proceeding to payment');\r\n          return;\r\n        }\r\n        \r\n        const result = await createPaymentIntent({\r\n          amount: formData.planPrice,\r\n          customerEmail: formData.personalEmail,\r\n          businessName: formData.businessName,\r\n          planType: formData.selectedPlan,\r\n          metadata: {\r\n            industry: formData.industry,\r\n          }\r\n        });\r\n        \r\n        if (result.success && result.clientSecret) {\r\n          setClientSecret(result.clientSecret);\r\n        } else {\r\n          setCardError(result.error || 'Failed to initialize payment');\r\n        }\r\n      } catch (error) {\r\n        if (error instanceof TypeError && error.message.includes('fetch')) {\r\n          setCardError('Unable to connect to server. Please check your network connection.');\r\n        } else {\r\n          setCardError('Failed to initialize payment');\r\n        }\r\n      }\r\n    };\r\n\r\n    void createPaymentIntentAsync();\r\n  }, [formData.planPrice, formData.personalEmail, formData.businessName, formData.selectedPlan, formData.industry]);\r\n\r\n  const handlePayment = async () => {\r\n    if (!stripe || !elements || !clientSecret) {\r\n      setCardError('Payment system not ready. Please try again.');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    setCardError('');\r\n\r\n    try {\r\n      const cardElement = elements.getElement(CardElement);\r\n      if (!cardElement) {\r\n        throw new Error('Card element not found');\r\n      }\r\n\r\n      // Check payment intent status before confirming\r\n      console.log('Checking payment intent status before confirmation...');\r\n      const { error: retrieveError, paymentIntent: existingIntent } = await stripe.retrievePaymentIntent(clientSecret);\r\n      if (retrieveError) {\r\n        console.error('Error retrieving payment intent:', retrieveError);\r\n      } else {\r\n        console.log('Payment intent status before confirmation:', existingIntent.status);\r\n        \r\n        // If already succeeded, skip confirmation\r\n        if (existingIntent.status === 'succeeded') {\r\n          console.log('Payment already succeeded, proceeding with tenant creation...');\r\n          const confirmResult = await confirmPayment({\r\n            paymentIntentId: existingIntent.id,\r\n            tenantData: formData\r\n          });\r\n          \r\n          if (confirmResult.success && confirmResult.data) {\r\n            onPaymentSuccess(confirmResult.data);\r\n          } else {\r\n            setCardError(confirmResult.error || 'Failed to create your account');\r\n          }\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Confirm payment with Stripe\r\n      console.log('Confirming payment with client secret:', clientSecret);\r\n      const { error: stripeError, paymentIntent } = await stripe.confirmCardPayment(\r\n        clientSecret,\r\n        {\r\n          payment_method: {\r\n            card: cardElement,\r\n            billing_details: {\r\n              name: `${formData.firstName} ${formData.lastName}`,\r\n              email: formData.personalEmail,\r\n              phone: formData.personalPhone,\r\n              address: {\r\n                line1: formData.billingAddress.address,\r\n                city: formData.billingAddress.city,\r\n                state: formData.billingAddress.state,\r\n                postal_code: formData.billingAddress.zip,\r\n                country: 'US',\r\n              },\r\n            },\r\n          },\r\n        }\r\n      );\r\n      \r\n      console.log('Payment confirmation result:', { stripeError, paymentIntent });\r\n\r\n      if (stripeError) {\r\n        console.error('Stripe payment error:', stripeError);\r\n        setCardError(stripeError.message || 'Payment failed');\r\n        return;\r\n      }\r\n\r\n      if (paymentIntent.status === 'succeeded') {\r\n        // Confirm payment and create tenant\r\n        const confirmResult = await confirmPayment({\r\n          paymentIntentId: paymentIntent.id,\r\n          tenantData: formData\r\n        });\r\n        \r\n        if (confirmResult.success && confirmResult.data) {\r\n          // Call success callback\r\n          onPaymentSuccess(confirmResult.data);\r\n        } else {\r\n          setCardError(confirmResult.error || 'Failed to create your account');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Payment processing error:', error);\r\n      if (error instanceof TypeError && error.message.includes('fetch')) {\r\n        setCardError('Unable to connect to server. Please check your network connection.');\r\n      } else {\r\n        setCardError(`Payment failed: ${error instanceof Error ? error.message : 'Please try again.'}`);\r\n      }\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n\r\n  const CARD_ELEMENT_OPTIONS = {\r\n    style: {\r\n      base: {\r\n        color: '#ffffff',\r\n        fontFamily: 'system-ui, -apple-system, sans-serif',\r\n        fontSize: '16px',\r\n        fontSmoothing: 'antialiased',\r\n        '::placeholder': {\r\n          color: '#78716c',\r\n        },\r\n      },\r\n      invalid: {\r\n        color: '#f87171',\r\n        iconColor: '#f87171',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-2xl mx-auto\">\r\n      <div className=\"bg-stone-800 border border-stone-700 rounded-2xl overflow-hidden\">\r\n        <div className=\"p-4 sm:p-6 border-b border-stone-700\">\r\n          <h2 className=\"text-white text-xl sm:text-2xl font-semibold flex items-center gap-2\">\r\n            <CreditCard className=\"h-5 w-5 sm:h-6 sm:w-6 text-orange-600\" />\r\n            Payment Information\r\n          </h2>\r\n          <p className=\"text-gray-400 text-sm sm:text-base mt-2\">\r\n            Secure payment powered by Stripe\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\r\n          <div className=\"bg-stone-700/50 border border-stone-600 rounded-lg p-4\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-400\">Selected Plan</p>\r\n                <p className=\"text-xl font-bold text-white capitalize mt-1\">\r\n                  {formData.selectedPlan}\r\n                </p>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <p className=\"text-sm text-gray-400\">Monthly</p>\r\n                <p className=\"text-2xl font-bold text-orange-600 mt-1\">\r\n                  ${(formData.planPrice / 100).toFixed(2)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4 pt-4 border-t border-stone-600\">\r\n              <p className=\"text-xs text-gray-400\">\r\n                Billed monthly. Cancel anytime. 14-day money-back guarantee.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <div className=\"block text-sm font-medium text-gray-300 mb-3\">\r\n              Card Information <span className=\"text-orange-500\">*</span>\r\n            </div>\r\n            <div className=\"bg-stone-700 border border-stone-600 rounded-lg p-4\">\r\n              <CardElement options={CARD_ELEMENT_OPTIONS} onChange={handleCardChange} />\r\n            </div>\r\n            {cardError && (\r\n              <div className=\"mt-2 flex items-center gap-2 text-sm text-red-400\">\r\n                <AlertCircle className=\"w-4 h-4\" />\r\n                <span>{cardError}</span>\r\n              </div>\r\n            )}\r\n            <div className=\"mt-3 flex items-center gap-2 text-xs text-gray-400\">\r\n              <Lock className=\"w-3 h-3\" />\r\n              <span>Your payment information is encrypted and secure</span>\r\n            </div>\r\n            \r\n            {/* Test Card Information for Development */}\r\n            {env.DEV && (\r\n              <div className=\"mt-4 p-3 bg-yellow-900/20 border border-yellow-700 rounded-lg\">\r\n                <h4 className=\"text-sm font-medium text-yellow-400 mb-2\">🧪 Test Cards (Development)</h4>\r\n                <div className=\"text-xs text-yellow-300 space-y-1\">\r\n                  <p><strong>Success:</strong> 4242 4242 4242 4242</p>\r\n                  <p><strong>Decline:</strong> 4000 0000 0000 0002</p>\r\n                  <p><strong>CVV:</strong> Any 3 digits | <strong>Expiry:</strong> Any future date</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"sameAddress\"\r\n                checked={formData.useSameAddress}\r\n                onChange={(e) => { onToggleSameAddress(e.target.checked); }}\r\n                className=\"w-4 h-4 rounded border-stone-600 text-orange-600 focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 focus:ring-offset-stone-800 bg-stone-700\"\r\n              />\r\n              <label htmlFor=\"sameAddress\" className=\"text-sm text-gray-300 cursor-pointer\">\r\n                Billing address same as business address\r\n              </label>\r\n            </div>\r\n\r\n            {!formData.useSameAddress && (\r\n              <div className=\"space-y-4 pt-2\">\r\n                <h3 className=\"text-white text-base sm:text-lg font-medium\">Billing Address</h3>\r\n\r\n                <Input\r\n                  label=\"Street Address\"\r\n                  type=\"text\"\r\n                  value={formData.billingAddress.address}\r\n                  onChange={(e) => { onAddressChange('address', e.target.value); }}\r\n                  onBlur={() => { validateField('billingAddress.address', formData.billingAddress.address); }}\r\n                  error={errors['billingAddress.address'] || ''}\r\n                  placeholder=\"123 Main Street\"\r\n                  required\r\n                />\r\n\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n                  <div className=\"sm:col-span-2\">\r\n                    <Input\r\n                      label=\"City\"\r\n                      type=\"text\"\r\n                      value={formData.billingAddress.city}\r\n                      onChange={(e) => { onAddressChange('city', e.target.value); }}\r\n                      onBlur={() => { validateField('billingAddress.city', formData.billingAddress.city); }}\r\n                      error={errors['billingAddress.city'] || ''}\r\n                      placeholder=\"San Francisco\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <Input\r\n                    label=\"State\"\r\n                    type=\"text\"\r\n                    value={formData.billingAddress.state}\r\n                    onChange={(e) => { onAddressChange('state', e.target.value.toUpperCase()); }}\r\n                    onBlur={() => { validateField('billingAddress.state', formData.billingAddress.state); }}\r\n                    error={errors['billingAddress.state'] || ''}\r\n                    placeholder=\"CA\"\r\n                    required\r\n                    maxLength={2}\r\n                    helperText=\"2 letters\"\r\n                  />\r\n                </div>\r\n\r\n                <Input\r\n                  label=\"ZIP Code\"\r\n                  type=\"text\"\r\n                  value={formData.billingAddress.zip}\r\n                  onChange={(e) => { onAddressChange('zip', e.target.value); }}\r\n                  onBlur={() => { validateField('billingAddress.zip', formData.billingAddress.zip); }}\r\n                  error={errors['billingAddress.zip'] || ''}\r\n                  placeholder=\"94102\"\r\n                  required\r\n                  maxLength={10}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Payment Button */}\r\n          <div className=\"pt-4 border-t border-stone-700\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { void handlePayment(); }}\r\n              disabled={!stripe || !clientSecret || isProcessing}\r\n              className={`\r\n                w-full py-4 px-6 rounded-lg font-semibold text-lg\r\n                transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-stone-800\r\n                ${\r\n                  !stripe || !clientSecret || isProcessing\r\n                    ? 'bg-gray-600 text-gray-400 cursor-not-allowed'\r\n                    : 'bg-orange-600 text-white hover:bg-orange-700 focus:ring-orange-500'\r\n                }\r\n              `}\r\n            >\r\n              {isProcessing ? (\r\n                <div className=\"flex items-center justify-center gap-2\">\r\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                  Processing Payment...\r\n                </div>\r\n              ) : (\r\n                `Complete Purchase - $${(formData.planPrice / 100).toFixed(2)}`\r\n              )}\r\n            </button>\r\n            \r\n            <p className=\"text-center text-xs text-gray-400 mt-2\">\r\n              You&apos;ll be charged ${(formData.planPrice / 100).toFixed(2)} monthly. Cancel anytime.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 pt-4 border-t border-stone-700\">\r\n            <div className=\"flex items-start gap-3\">\r\n              <Shield className=\"w-5 h-5 text-orange-600 flex-shrink-0 mt-0.5\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium text-white\">PCI Compliant</p>\r\n                <p className=\"text-xs text-gray-400 mt-0.5\">Bank-level security</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-start gap-3\">\r\n              <Lock className=\"w-5 h-5 text-orange-600 flex-shrink-0 mt-0.5\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium text-white\">256-bit SSL</p>\r\n                <p className=\"text-xs text-gray-400 mt-0.5\">Encrypted connection</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-start gap-3\">\r\n              <CreditCard className=\"w-5 h-5 text-orange-600 flex-shrink-0 mt-0.5\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium text-white\">Money-back</p>\r\n                <p className=\"text-xs text-gray-400 mt-0.5\">14-day guarantee</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { ChevronLeft } from 'lucide-react';\r\n\r\nimport { config } from '@/shared/env';\r\nimport { useBrowserTab } from '@/shared/hooks';\r\nimport { Button } from '@/shared/ui';\r\nimport { type IndustrySlug,loadDefaults } from '@/shared/utils/loadDefaults';\r\n\r\nimport { useAutoSave } from '../hooks/useAutoSave';\r\nimport {\r\n  type PreviewState,\r\n  type TenantApplication,\r\n  tenantApplicationDefaultValues,\r\n} from '../types';\r\nimport {\r\n  businessInfoSchema,\r\n  personalInfoSchema,\r\n  planSelectionSchema,\r\n} from '../utils/validation';\r\nimport {\r\n  ApplicationHeader,\r\n  BusinessInformationSection,\r\n  PersonalInformationSection,\r\n  PlanSelectionSection,\r\n  StepProgress,\r\n  SuccessPage,\r\n} from './index';\r\nimport PaymentSection from './PaymentSection';\r\n\r\n// Initialize Stripe\r\nconst stripePromise = loadStripe(config.stripePublishableKey);\r\n\r\nconst STEPS = [\r\n  { id: 0, label: 'Plan' },\r\n  { id: 1, label: 'Personal' },\r\n  { id: 2, label: 'Business' },\r\n  { id: 3, label: 'Payment' },\r\n];\r\n\r\nconst TenantApplicationPage: React.FC = () => {\r\n  const location = useLocation();\r\n  const previewData = location.state as PreviewState | null;\r\n\r\n  const [formData, setFormData] = useState<TenantApplication>(tenantApplicationDefaultValues);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  // Set browser tab title and favicon for onboarding page\r\n  // Automatically uses platform logo (/shared/icons/logo.png) and default title\r\n  useBrowserTab({\r\n    useBusinessName: false, // Platform page, not tenant-specific\r\n  });\r\n\r\n  const { loadFromLocalStorage, clearSavedData } = useAutoSave({\r\n    formData,\r\n    enabled: currentStep > 0,\r\n  });\r\n\r\n  // Load saved draft or preview data on mount\r\n  useEffect(() => {\r\n    const loadSavedData = () => {\r\n      const localData = loadFromLocalStorage();\r\n\r\n      if (localData) {\r\n        // Automatically restore saved draft without confirmation popup\r\n        setFormData(localData);\r\n        setCurrentStep(localData.step);\r\n        return;\r\n      }\r\n\r\n      // Pre-fill from preview data if available\r\n      if (previewData?.fromPreview) {\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          businessName: previewData.businessName || prev.businessName,\r\n          businessPhone: previewData.phone || prev.businessPhone,\r\n          businessAddress: {\r\n            ...prev.businessAddress,\r\n            city: previewData.city || prev.businessAddress.city,\r\n            state: previewData.state || prev.businessAddress.state,\r\n          },\r\n          industry: previewData.industry,\r\n        }));\r\n      }\r\n    };\r\n\r\n    loadSavedData();\r\n  }, [loadFromLocalStorage, previewData, clearSavedData]);\r\n\r\n  // Warn user before leaving if form is in progress\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\r\n      if (currentStep > 0 && currentStep < STEPS.length - 1) {\r\n        e.preventDefault();\r\n        // Modern browsers will show a generic confirmation dialog\r\n        return '';\r\n      }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    return () => { window.removeEventListener('beforeunload', handleBeforeUnload); };\r\n  }, [currentStep]);\r\n\r\n  const handleFieldChange = (field: string, value: unknown) => {\r\n    setFormData((prev) => ({ ...prev, [field]: value }));\r\n    setErrors((prev) => ({ ...prev, [field]: '' }));\r\n  };\r\n\r\n  const handleAddressChange = (\r\n    addressType: 'businessAddress' | 'billingAddress',\r\n    field: string,\r\n    value: string\r\n  ) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [addressType]: { ...prev[addressType], [field]: value },\r\n    }));\r\n  };\r\n\r\n  const handlePlanSelect = (planId: 'starter' | 'pro' | 'enterprise', price: number) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      selectedPlan: planId,\r\n      planPrice: price,\r\n    }));\r\n  };\r\n\r\n  const handleToggleSameAddress = (value: boolean) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      useSameAddress: value,\r\n      billingAddress: value ? prev.businessAddress : prev.billingAddress,\r\n    }));\r\n  };\r\n\r\n  const validateStep = async (step: number): Promise<boolean> => {\r\n    try {\r\n      switch (step) {\r\n        case 0:\r\n          planSelectionSchema.parse({\r\n            selectedPlan: formData.selectedPlan,\r\n            planPrice: formData.planPrice,\r\n          });\r\n          return true;\r\n\r\n        case 1: {\r\n          // First, validate the schema\r\n          personalInfoSchema.parse({\r\n            firstName: formData.firstName,\r\n            lastName: formData.lastName,\r\n            personalPhone: formData.personalPhone,\r\n            personalEmail: formData.personalEmail,\r\n          });\r\n\r\n          // Then check if email already exists\r\n          try {\r\n            // Debug API URL configuration\r\n            // console.log('Check-email API URL config:', {\r\n            //   apiUrl: config.apiUrl,\r\n            //   apiBaseUrl: config.apiBaseUrl,\r\n            //   isDevelopment: config.isDevelopment,\r\n            //   fullUrl: `${config.apiUrl || ''}/api/auth/check-email?email=${encodeURIComponent(formData.personalEmail)}`\r\n            // });\r\n            \r\n            // eslint-disable-next-line no-restricted-globals, no-restricted-syntax -- Isolated onboarding check, API client refactor planned\r\n            const response = await fetch(`${config.apiUrl || ''}/api/auth/check-email?email=${encodeURIComponent(formData.personalEmail)}`);\r\n            \r\n            if (!response.ok) {\r\n              throw new Error(`Email check failed: ${response.status} ${response.statusText}`);\r\n            }\r\n            \r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- Response typing improvement planned\r\n            const result = await response.json();\r\n            \r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access -- Response typing improvement planned\r\n            if (result.exists) {\r\n              setErrors({ personalEmail: 'An account with this email already exists' });\r\n              return false;\r\n            }\r\n          } catch (emailCheckError) {\r\n            console.error('Error checking email:', emailCheckError);\r\n            // Show a warning but allow them to proceed\r\n            setErrors({ personalEmail: 'Unable to verify email availability. You can still proceed - duplicates will be caught during signup.' });\r\n            // Don't block the user, just warn them\r\n          }\r\n          \r\n          return true;\r\n        }\r\n\r\n        case 2:\r\n          businessInfoSchema.parse({\r\n            businessName: formData.businessName,\r\n            businessPhone: formData.businessPhone,\r\n            businessEmail: formData.businessEmail,\r\n            businessAddress: formData.businessAddress,\r\n            industry: formData.industry,\r\n          });\r\n          return true;\r\n\r\n        case 3:\r\n          return true;\r\n\r\n        default:\r\n          return false;\r\n      }\r\n    } catch (error: unknown) {\r\n      const newErrors: Record<string, string> = {};\r\n      if (error && typeof error === 'object' && 'errors' in error) {\r\n        const zodError = error as { errors: Array<{ path: string[]; message: string }> };\r\n        zodError.errors.forEach((err) => {\r\n          const field = err.path.join('.');\r\n          newErrors[field] = err.message;\r\n        });\r\n      }\r\n      setErrors(newErrors);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const goToNextStep = async () => {\r\n    const isValid = await validateStep(currentStep);\r\n    if (isValid) {\r\n      const nextStep = currentStep + 1;\r\n      setFormData((prev) => ({ ...prev, step: nextStep }));\r\n      setCurrentStep(nextStep);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const goToPreviousStep = () => {\r\n    if (currentStep > 0) {\r\n      const prevStep = currentStep - 1;\r\n      setFormData((prev) => ({ ...prev, step: prevStep }));\r\n      setCurrentStep(prevStep);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const handlePaymentSuccess = (data: { slug: string; websiteUrl: string; dashboardUrl: string }) => {\r\n    // Store the new tenant information for the success page\r\n    sessionStorage.setItem('newTenantSlug', data.slug);\r\n    sessionStorage.setItem('newTenantWebsiteUrl', data.websiteUrl);\r\n    sessionStorage.setItem('newTenantDashboardUrl', data.dashboardUrl);\r\n\r\n    clearSavedData();\r\n    setIsSuccess(true);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // For payment step, the payment processing is handled by PaymentSection\r\n    if (currentStep === 3) {\r\n      return; // Payment is handled by the payment component\r\n    }\r\n\r\n    const isValid = await validateStep(currentStep);\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      // Load industry-specific defaults for non-payment steps\r\n      if (currentStep === 2) { // Business info step\r\n        const industry = (formData.industry || 'mobile-detailing') as IndustrySlug;\r\n        const defaults = await loadDefaults(industry);\r\n        setFormData(prev => ({ ...prev, defaults }));\r\n      }\r\n\r\n      // Move to next step\r\n      const nextStep = currentStep + 1;\r\n      setFormData((prev) => ({ ...prev, step: nextStep }));\r\n      setCurrentStep(nextStep);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n\r\n    } catch (error) {\r\n      console.error('Step validation error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to proceed. Please try again.';\r\n      alert(errorMessage);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (isSuccess) {\r\n    return <SuccessPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-stone-900 text-white\">\r\n      <ApplicationHeader />\r\n\r\n      <div className=\"pt-16 sm:pt-20\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <StepProgress steps={STEPS} currentStep={currentStep} />\r\n\r\n          <form onSubmit={(e) => { void handleSubmit(e); }} className=\"pb-6\">\r\n            <div className=\"min-h-[400px] flex items-center justify-center\">\r\n              {currentStep === 0 && (\r\n                <PlanSelectionSection\r\n                  selectedPlan={formData.selectedPlan}\r\n                  onSelectPlan={handlePlanSelect}\r\n                />\r\n              )}\r\n\r\n              {currentStep === 1 && (\r\n                <PersonalInformationSection\r\n                  formData={formData}\r\n                  handleInputChange={handleFieldChange}\r\n                  errors={errors}\r\n                />\r\n              )}\r\n\r\n              {currentStep === 2 && (\r\n                <BusinessInformationSection\r\n                  formData={formData}\r\n                  handleInputChange={handleFieldChange}\r\n                  handleAddressChange={(field, value) => {\r\n                    handleAddressChange('businessAddress', field, value);\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              {currentStep === 3 && (\r\n                <Elements stripe={stripePromise}>\r\n                  <PaymentSection\r\n                    formData={formData}\r\n                    businessAddress={formData.businessAddress}\r\n                    onAddressChange={(field, value) => {\r\n                      handleAddressChange('billingAddress', field, value);\r\n                    }}\r\n                    onToggleSameAddress={handleToggleSameAddress}\r\n                    onPaymentSuccess={handlePaymentSuccess}\r\n                    errors={errors}\r\n                    setErrors={setErrors}\r\n                  />\r\n                </Elements>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"max-w-2xl mx-auto mt-8 px-4\">\r\n              <div className=\"flex flex-col-reverse sm:flex-row justify-center gap-3 sm:gap-4\">\r\n                {currentStep > 0 && (\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={goToPreviousStep}\r\n                    variant=\"outline\"\r\n                    size=\"lg\"\r\n                    className=\"flex items-center justify-center gap-2\"\r\n                  >\r\n                    <ChevronLeft className=\"w-4 h-4\" />\r\n                    Back\r\n                  </Button>\r\n                )}\r\n\r\n                {currentStep < STEPS.length - 1 ? (\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={() => { void goToNextStep(); }}\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    className={currentStep === 0 ? 'w-full' : ''}\r\n                    disabled={currentStep === 0 && !formData.selectedPlan}\r\n                  >\r\n                    {currentStep === 0 ? 'Get Started' : 'Continue'}\r\n                  </Button>\r\n                ) : currentStep !== 3 ? (\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    disabled={isSubmitting}\r\n                    className=\"min-w-[200px]\"\r\n                  >\r\n                    {isSubmitting ? 'Processing...' : 'Complete Purchase'}\r\n                  </Button>\r\n                ) : null}\r\n              </div>\r\n\r\n              {currentStep > 0 && (\r\n                <p className=\"text-center text-xs text-gray-500 mt-4\">\r\n                  Your progress is automatically saved\r\n                </p>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TenantApplicationPage;\r\n","import { useParams } from 'react-router-dom';\r\n\r\nimport { ServiceData } from '@/features/services/types/service.types';\r\n\r\nimport { useServices } from './useServices';\r\n\r\nexport const useServicePage = () => {\r\n  const { serviceType } = useParams<{ serviceType: string }>();\r\n  const { getAutoDetailingData, getMarineDetailingData, getRvDetailingData, getCeramicCoatingData, getPaintCorrectionData, getPpfData } = useServices();\r\n  \r\n  \r\n  // Load the appropriate service data based on serviceType\r\n  const getServiceData = (): ServiceData | null => {\r\n    switch (serviceType) {\r\n      case 'auto-detailing':\r\n        return getAutoDetailingData();\r\n      case 'marine-detailing':\r\n        return getMarineDetailingData();\r\n      case 'rv-detailing':\r\n        return getRvDetailingData();\r\n      case 'ceramic-coating':\r\n        return getCeramicCoatingData();\r\n      case 'paint-correction':\r\n        return getPaintCorrectionData();\r\n      case 'paint-protection-film':\r\n      case 'ppf-installation':\r\n        return getPpfData();\r\n      case 'aircraft-detailing':\r\n        // Aircraft detailing not implemented yet, fallback to auto-detailing\r\n        return getAutoDetailingData();\r\n      // Add other services as you create their JSON files\r\n      default:\r\n        // Fallback to auto-detailing for unknown services\r\n        return getAutoDetailingData();\r\n    }\r\n  };\r\n\r\n  const serviceData = getServiceData();\r\n\r\n  return {\r\n    serviceType,\r\n    serviceData,\r\n    isLoading: false,\r\n    error: null\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport { DataProvider, Header } from '@/features/header';\r\nimport { PreviewCTAButton, PreviewDataProvider, usePreviewParams } from '@/features/preview';\r\nimport { LazyRequestQuoteModal } from '@/features/quotes';\r\nimport { Process, Results, ServiceCTA, ServiceHero, WhatItIs } from '@/features/services';\r\nimport { useServicePage } from '@/features/services/hooks/useServicePage';\r\n\r\ninterface ServicePageProps {\r\n  onRequestQuote?: () => void;\r\n}\r\n\r\nconst ServicePage: React.FC<ServicePageProps> = ({ onRequestQuote }) => {\r\n  const { serviceData } = useServicePage();\r\n  const [searchParams] = useSearchParams();\r\n  const token = searchParams.get('t');\r\n  \r\n  // If token is present, we're in preview mode\r\n  const { payload } = usePreviewParams();\r\n  \r\n  // Quote modal state for preview mode\r\n  const [isQuoteModalOpen, setIsQuoteModalOpen] = useState(false);\r\n\r\n  const handleOpenQuoteModal = () => {\r\n    if (onRequestQuote) {\r\n      onRequestQuote();\r\n    } else {\r\n      setIsQuoteModalOpen(true);\r\n    }\r\n  };\r\n  \r\n  const handleCloseQuoteModal = () => {\r\n    setIsQuoteModalOpen(false);\r\n  };\r\n\r\n\r\n  if (!serviceData) {\r\n    return (\r\n      <main className=\"bg-stone-900 text-white min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-2xl font-bold text-white mb-4\">Service Not Found</h1>\r\n          <p className=\"text-slate-300\">The requested service could not be found.</p>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  // Render with preview context if token is present\r\n  if (token && payload) {\r\n    return (\r\n      <PreviewDataProvider payload={payload}>\r\n        {/* Fixed \"Get This Site\" buttons in both corners */}\r\n        <PreviewCTAButton position=\"left\" />\r\n        <PreviewCTAButton position=\"right\" />\r\n        \r\n        <main className=\"bg-stone-900 text-white\">\r\n          <Header />\r\n          <ServiceHero serviceData={serviceData} onRequestQuote={handleOpenQuoteModal} />\r\n          <WhatItIs serviceData={serviceData} />\r\n          <Process serviceData={serviceData} />\r\n          <Results serviceData={serviceData} />\r\n          <ServiceCTA serviceData={serviceData} onRequestQuote={handleOpenQuoteModal} />\r\n        </main>\r\n        \r\n        {/* Quote Modal */}\r\n        {isQuoteModalOpen && (\r\n          <LazyRequestQuoteModal \r\n            isOpen={isQuoteModalOpen} \r\n            onClose={handleCloseQuoteModal} \r\n          />\r\n        )}\r\n      </PreviewDataProvider>\r\n    );\r\n  }\r\n\r\n  // Regular tenant mode\r\n  return (\r\n    <DataProvider>\r\n      <main className=\"bg-stone-900 text-white\">\r\n        <Header />\r\n        <ServiceHero serviceData={serviceData} {...(onRequestQuote && { onRequestQuote })} />\r\n        <WhatItIs serviceData={serviceData} />\r\n        <Process serviceData={serviceData} />\r\n        <Results serviceData={serviceData} />\r\n        <ServiceCTA serviceData={serviceData} {...(onRequestQuote && { onRequestQuote })} />\r\n      </main>\r\n    </DataProvider>\r\n  );\r\n};\r\n\r\nexport default ServicePage;\r\n","import React, { createContext, useContext } from 'react';\r\n\r\nimport { SiteActions,SiteContextType } from '@/shared/types/site';\r\n\r\n// Simplified context for tenant-based sites\r\n// All sites are now tenant-based, so we don't need complex location detection\r\nconst initialState: SiteContextType = {\r\n  siteState: 'tenant', // Changed from 'mdh' to 'tenant'\r\n  currentLocation: null,\r\n  businessData: null,\r\n  isLoading: false,\r\n  hasError: false,\r\n};\r\n\r\n// Context\r\nconst SiteContext = createContext<(SiteContextType & SiteActions) | null>(null);\r\n\r\n// Provider component\r\nexport const SiteProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  // All routes are now tenant-based, so we're always in tenant mode\r\n  const contextValue: SiteContextType & SiteActions = {\r\n    ...initialState,\r\n    // Legacy actions that are no longer needed but kept for compatibility\r\n    setLocation: () => {},\r\n    clearLocation: () => {},\r\n    setLoading: () => {},\r\n    setError: () => {},\r\n  };\r\n\r\n  return (\r\n    <SiteContext.Provider value={contextValue}>\r\n      {children}\r\n    </SiteContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use the context\r\n// eslint-disable-next-line react-refresh/only-export-components -- Standard context pattern: hook and provider together\r\nexport const useSiteState = () => {\r\n  const context = useContext(SiteContext);\r\n  if (!context) {\r\n    console.error('useSiteState must be used within a SiteProvider');\r\n    // Return a safe fallback instead of throwing\r\n    return {\r\n      siteState: 'mdh' as const,\r\n      currentLocation: null,\r\n      businessData: null,\r\n      isLoading: false,\r\n      hasError: false,\r\n      setLocation: () => {},\r\n      clearLocation: () => {},\r\n      setLoading: () => {},\r\n      setError: () => {},\r\n    };\r\n  }\r\n  return context;\r\n};\r\n","import type { ReactNode } from 'react';\r\nimport React, { createContext, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { fetchTenantBySlug } from '../api/tenantApi';\r\nimport { TenantConfig } from '../types';\r\nimport { affiliateToTenantConfig, tenantConfigToLegacy } from '../utils/tenantConfigMigration';\r\n\r\n// Local type for backward compatibility (avoids importing deprecated type)\r\ninterface LegacyTenantConfig {\r\n  branding?: {\r\n    businessName?: string;\r\n    logo?: string;\r\n  };\r\n  contact?: {\r\n    phone?: string;\r\n    email?: string;\r\n  };\r\n  social?: {\r\n    facebook?: string;\r\n    instagram?: string;\r\n    tiktok?: string;\r\n    youtube?: string;\r\n  };\r\n  serviceAreas?: Array<{\r\n    id: number;\r\n    city: string;\r\n    state_code: string;\r\n    postal_codes: string[];\r\n    is_primary: boolean;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Tenant Config Context Type\r\n * Provides both new (centralized) and legacy formats for backward compatibility\r\n */\r\nexport interface TenantConfigContextType {\r\n  // New centralized format\r\n  tenantConfig: TenantConfig | null;\r\n  \r\n  // Legacy format (for backward compatibility)\r\n  legacyConfig: LegacyTenantConfig | null;\r\n  \r\n  // Status\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  \r\n  // Actions\r\n  refreshTenantConfig: () => Promise<void>;\r\n}\r\n\r\nexport const TenantConfigContext = createContext<TenantConfigContextType | null>(null);\r\n\r\ninterface TenantConfigProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n/**\r\n * Tenant Config Provider\r\n * \r\n * Provides tenant configuration in both:\r\n * - New centralized format (TenantConfig)\r\n * - Legacy format (LegacyTenantConfig) for backward compatibility\r\n * \r\n * Data source: Tenant API (fetchTenantBySlug)\r\n */\r\nexport const TenantConfigProvider: React.FC<TenantConfigProviderProps> = ({ children }) => {\r\n  const [tenantConfigState, setTenantConfigState] = useState<TenantConfig | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { slug } = useParams<{ slug: string }>();\r\n\r\n  // Skip fetching for non-tenant routes (admin, onboarding, login, etc.)\r\n  const currentPath = window.location.pathname;\r\n  const isNonTenantRoute = \r\n    currentPath.startsWith('/admin-dashboard') ||\r\n    currentPath.startsWith('/tenant-dashboard') ||\r\n    currentPath.startsWith('/tenant-onboarding') ||\r\n    currentPath.startsWith('/login') ||\r\n    currentPath.startsWith('/booking') ||\r\n    currentPath.startsWith('/preview-generator') ||\r\n    currentPath.startsWith('/preview');\r\n\r\n  const refreshTenantConfig = useCallback(async () => {\r\n    // Skip if no slug or on non-tenant route\r\n    if (!slug || isNonTenantRoute) {\r\n      setTenantConfigState(null);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const result = await fetchTenantBySlug(slug);\r\n      \r\n      if (result.success && result.data) {\r\n        // Convert tenant data to new centralized format\r\n        const config = affiliateToTenantConfig({\r\n          id: result.data.id,\r\n          slug: result.data.slug,\r\n          business_name: result.data.business_name,\r\n          business_phone: result.data.business_phone,\r\n          business_email: result.data.business_email,\r\n          facebook_url: result.data.facebook_url,\r\n          instagram_url: result.data.instagram_url,\r\n          tiktok_url: result.data.tiktok_url,\r\n          youtube_url: result.data.youtube_url,\r\n          service_areas: result.data.service_areas,\r\n          industry: result.data.industry,\r\n          logo_url: result.data.logo_url\r\n        });\r\n        \r\n        setTenantConfigState(config);\r\n      } else {\r\n        setError(result.error || 'Failed to load tenant data');\r\n        setTenantConfigState(null);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error refreshing tenant config:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to refresh tenant config');\r\n      setTenantConfigState(null);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [slug, isNonTenantRoute]);\r\n\r\n  useEffect(() => {\r\n    void refreshTenantConfig();\r\n  }, [refreshTenantConfig]);\r\n\r\n  // Create legacy format for backward compatibility\r\n  const legacyConfig = tenantConfigState ? tenantConfigToLegacy(tenantConfigState) : null;\r\n\r\n  const value: TenantConfigContextType = {\r\n    tenantConfig: tenantConfigState,\r\n    legacyConfig,\r\n    isLoading,\r\n    error,\r\n    refreshTenantConfig,\r\n  };\r\n\r\n  return (\r\n    <TenantConfigContext.Provider value={value}>\r\n      {children}\r\n    </TenantConfigContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\nimport { AuthProvider, TenantConfigProvider } from '@/shared/contexts';\nimport { WebsiteContentProvider } from '@/shared/contexts/WebsiteContentContext';\nimport { ErrorBoundary } from '@/shared/ui';\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      gcTime: 10 * 60 * 1000, // 10 minutes (formerly cacheTime)\n      retry: 1,\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\ninterface ProvidersProps {\n  children: React.ReactNode;\n}\n\nexport const Providers: React.FC<ProvidersProps> = ({ children }) => {\n  \n  return (\n    <ErrorBoundary>\n      <QueryClientProvider client={queryClient}>\n        <AuthProvider>\n          <TenantConfigProvider>\n            <Router>\n              <WebsiteContentProvider>\n                {children}\n              </WebsiteContentProvider>\n            </Router>\n          </TenantConfigProvider>\n        </AuthProvider>\n      </QueryClientProvider>\n    </ErrorBoundary>\n  );\n};\n\n","import { lazy, Suspense, useState } from 'react';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\n\r\nimport { DashboardPage as AdminDashboard } from '@/features/adminDashboard';\r\nimport { DataProvider, TenantPage } from '@/features/header';\r\nimport { PreviewGeneratorPage, PreviewPage } from '@/features/preview';\r\nimport { LazyRequestQuoteModal } from '@/features/quotes';\r\nimport { DashboardPage } from '@/features/tenantDashboard';\r\nimport { TenantApplicationPage } from '@/features/tenantOnboarding';\r\nimport { env } from '@/shared/env';\r\nimport { LoginPage, ProtectedRoute } from '@/shared/ui';\r\n\r\nimport HomePage from './pages/HomePage';\r\nimport ServicePage from './pages/ServicePage';\r\nimport { Providers } from './providers';\r\n\r\n// Heavy modules are NOT imported here - they stay out of the initial bundle\r\nconst Booking = lazy(() => import('../features/booking/BookingApp'));\r\n\r\nexport default function App() {\r\n  const [isQuoteModalOpen, setIsQuoteModalOpen] = useState(false);\r\n\r\n  const handleOpenQuoteModal = () => {\r\n    setIsQuoteModalOpen(true);\r\n  };\r\n  const handleCloseQuoteModal = () => {\r\n    setIsQuoteModalOpen(false);\r\n  };\r\n\r\n  \r\n  const routes = (\r\n    <Suspense fallback={<div className=\"p-8 text-white\">Loading…</div>}>\r\n      <Routes>\r\n        {/* Only redirect to admin dashboard if on main domain, not tenant subdomains */}\r\n        <Route path=\"/\" element={\r\n          window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1' \r\n            ? <Navigate to=\"/admin-dashboard\" replace />\r\n            : <TenantPage />\r\n        } />\r\n        \r\n        {/* Login route */}\r\n        <Route path=\"/login\" element={<LoginPage />} />\r\n        \r\n        {/* Admin Dashboard - must come before tenant routes */}\r\n        <Route path=\"/admin-dashboard\" element={\r\n          <ProtectedRoute requiredRole=\"admin\" fallbackPath=\"/login\">\r\n            <AdminDashboard />\r\n          </ProtectedRoute>\r\n        } />\r\n        \r\n        {/* Specific routes first */}\r\n        <Route path=\"/locations/:slug\" element={<HomePage onRequestQuote={handleOpenQuoteModal} />} />\r\n        <Route path=\"/service/:slug\" element={<ServicePage onRequestQuote={handleOpenQuoteModal} />} />\r\n        <Route path=\"/services/:slug\" element={<ServicePage onRequestQuote={handleOpenQuoteModal} />} />\r\n        \r\n        {/* Development-only tenant-based service routes */}\r\n        {env.DEV && (\r\n          <Route path=\"/:tenantSlug/services/:serviceType\" element={<ServicePage onRequestQuote={handleOpenQuoteModal} />} />\r\n        )}\r\n        \r\n        {/* Booking routes */}\r\n        <Route path=\"/locations/:slug/book\" element={<Booking />} />\r\n        <Route path=\"/book\" element={<Booking />} />\r\n        <Route path=\"/booking\" element={<Booking />} />\r\n        \r\n        {/* Tenant Onboarding route */}\r\n        <Route path=\"/tenant-onboarding\" element={<TenantApplicationPage />} />\r\n        \r\n        {/* Preview routes - for sales demos */}\r\n        <Route path=\"/preview-generator\" element={<PreviewGeneratorPage />} />\r\n        <Route path=\"/preview\" element={<PreviewPage />} />\r\n        \r\n        {/* Tenant Dashboard route - handle both subdomain and path-based routing */}\r\n        <Route path=\"/dashboard\" element={\r\n          <DataProvider>\r\n            <DashboardPage />\r\n          </DataProvider>\r\n        } />\r\n        \r\n        {/* Tenant routes - now no conflicts! */}\r\n        <Route path=\"/:slug/dashboard\" element={\r\n          <DataProvider>\r\n            <DashboardPage />\r\n          </DataProvider>\r\n        } />\r\n        <Route path=\"/:slug\" element={<TenantPage />} />\r\n        \r\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n      </Routes>\r\n    </Suspense>\r\n  );\r\n  \r\n  return (\r\n    <Providers>\r\n      {routes}\r\n      \r\n      {/* Global Quote Modal - Only render when open */}\r\n      {isQuoteModalOpen && (\r\n        <LazyRequestQuoteModal \r\n          isOpen={isQuoteModalOpen} \r\n          onClose={handleCloseQuoteModal} \r\n        />\r\n      )}\r\n    </Providers>\r\n  );\r\n}","import { createRoot } from 'react-dom/client';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\n\r\nimport { config } from '@/shared/env';\r\n\r\nimport App from './app/App';\r\n\r\nimport './index.css';\r\n\r\n// Register Service Worker for PWA functionality (only in production and when explicitly enabled)\r\nif ('serviceWorker' in navigator && config.serviceWorkerEnabled) {\r\n  window.addEventListener('load', () => {\r\n    navigator.serviceWorker.register('/sw.js').catch((err: unknown) => {\r\n      console.warn('SW registration failed:', err);\r\n    });\r\n  });\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nif (!rootElement) {\r\n  throw new Error('Root element not found');\r\n}\r\n\r\ncreateRoot(rootElement).render(\r\n  <HelmetProvider>\r\n    <App />\r\n  </HelmetProvider>\r\n);\r\n"],"file":"assets/index-Coue8Rrv.js"}